cscope 15 /home/cgardet/Motion/motion-3.2.12-patched-prelude               0001078011
	@alg.c

9 
	~"mŸi⁄.h
"

10 
	~"Æg.h
"

12 #ifde‡
__MMX__


13 
	#HAVE_MMX


	)

14 
	~"mmx.h
"

17 
	#MAX2
(
x
, 
y
Ë((xË> (yË? (xË: (y))

	)

18 
	#MAX3
(
x
, 
y
, 
z
Ë((xË> (yË? ((xË> (zË? (xË: (z)Ë: ((yË> (zË? (yË: (z)))

	)

21 
	$Æg_loˇã_˚¡î_size
(
images
 *
imgs
, 
width
, 
height
, 
co‹d
 *
˚¡
)

23 *
out
 = 
imgs
->out;

24 *
œbñs
 = 
imgs
->labels;

25 
x
, 
y
, 
˚¡c
 = 0, 
xdi°
 = 0, 
ydi°
 = 0;

27 
˚¡
->
x
 = 0;

28 
˚¡
->
y
 = 0;

29 
˚¡
->
maxx
 = 0;

30 
˚¡
->
maxy
 = 0;

31 
˚¡
->
möx
 = 
width
;

32 
˚¡
->
möy
 = 
height
;

35 i‡(
imgs
->
œbñsize_max
) {

37 
y
 = 0; y < 
height
; y++) {

38 
x
 = 0; x < 
width
; x++) {

39 i‡(*(
œbñs
++)&32768) {

40 
˚¡
->
x
 += x;

41 
˚¡
->
y
 += y;

42 
˚¡c
++;

48 
y
 = 0; y < 
height
; y++) {

49 
x
 = 0; x < 
width
; x++) {

50 i‡(*(
out
++)) {

51 
˚¡
->
x
 += x;

52 
˚¡
->
y
 += y;

53 
˚¡c
++;

59 i‡(
˚¡c
) {

60 
˚¡
->
x
 = cít->x / 
˚¡c
;

61 
˚¡
->
y
 = cít->y / 
˚¡c
;

67 
˚¡c
 = 0;

68 
œbñs
 = 
imgs
->labels;

69 
out
 = 
imgs
->out;

72 i‡(
imgs
->
œbñsize_max
) {

73 
y
 = 0; y < 
height
; y++) {

74 
x
 = 0; x < 
width
; x++) {

75 i‡(*(
œbñs
++)&32768) {

76 i‡(
x
 > 
˚¡
->x)

77 
xdi°
 +
x
 - 
˚¡
->x;

78 i‡(
x
 < 
˚¡
->x)

79 
xdi°
 +
˚¡
->
x
 - x;

81 i‡(
y
 > 
˚¡
->y)

82 
ydi°
 +
y
 - 
˚¡
->y;

83 i‡(
y
 < 
˚¡
->y)

84 
ydi°
 +
˚¡
->
y
 - y;

86 
˚¡c
++;

91 
y
 = 0; y < 
height
; y++) {

92 
x
 = 0; x < 
width
; x++) {

93 i‡(*(
out
++)) {

94 i‡(
x
 > 
˚¡
->x)

95 
xdi°
 +
x
 - 
˚¡
->x;

96 i‡(
x
 < 
˚¡
->x)

97 
xdi°
 +
˚¡
->
x
 - x;

99 i‡(
y
 > 
˚¡
->y)

100 
ydi°
 +
y
 - 
˚¡
->y;

101 i‡(
y
 < 
˚¡
->y)

102 
ydi°
 +
˚¡
->
y
 - y;

104 
˚¡c
++;

110 i‡(
˚¡c
) {

111 
˚¡
->
möx
 = cít->
x
 - 
xdi°
 / 
˚¡c
 * 2;

112 
˚¡
->
maxx
 = cít->
x
 + 
xdi°
 / 
˚¡c
 * 2;

116 
˚¡
->
möy
 = cít->
y
 - 
ydi°
 / 
˚¡c
 * 3;

117 
˚¡
->
maxy
 = cít->
y
 + 
ydi°
 / 
˚¡c
 * 2;

120 i‡(
˚¡
->
maxx
 > 
width
 - 1)

121 
˚¡
->
maxx
 = 
width
 - 1;

122 i‡(
˚¡
->
maxx
 < 0)

123 
˚¡
->
maxx
 = 0;

125 i‡(
˚¡
->
maxy
 > 
height
 - 1)

126 
˚¡
->
maxy
 = 
height
 - 1;

127 i‡(
˚¡
->
maxy
 < 0)

128 
˚¡
->
maxy
 = 0;

130 i‡(
˚¡
->
möx
 > 
width
 - 1)

131 
˚¡
->
möx
 = 
width
 - 1;

132 i‡(
˚¡
->
möx
 < 0)

133 
˚¡
->
möx
 = 0;

135 i‡(
˚¡
->
möy
 > 
height
 - 1)

136 
˚¡
->
möy
 = 
height
 - 1;

137 i‡(
˚¡
->
möy
 < 0)

138 
˚¡
->
möy
 = 0;

140 
˚¡
->
width
 = cít->
maxx
 - cít->
möx
;

141 
˚¡
->
height
 = cít->
maxy
 - cít->
möy
;

146 
˚¡
->
y
 = (˚¡->
möy
 + cít->
maxy
) / 2;

148 
	}
}

152 
	$Æg_døw_loˇti⁄
(
co‹d
 *
˚¡
, 
images
 *
imgs
, 
width
, *
√w
, 
mode
)

154 *
out
 = 
imgs
->out;

155 
x
, 
y
;

157 
out
 = 
imgs
->out;

160 i‡(
mode
 =
LOCATE_BOTH
){

161 
width_möy
 = 
width
 * 
˚¡
->
möy
;

162 
width_maxy
 = 
width
 * 
˚¡
->
maxy
;

164 
x
 = 
˚¡
->
möx
; x <˚¡->
maxx
; x++) {

165 
width_möy_x
 = 
x
 + 
width_möy
;

166 
width_maxy_x
 = 
x
 + 
width_maxy
;

167 
√w
[
width_möy_x
]=~new[width_miny_x];

168 
√w
[
width_maxy_x
]=~new[width_maxy_x];

169 
out
[
width_möy_x
]=~out[width_miny_x];

170 
out
[
width_maxy_x
]=~out[width_maxy_x];

173 
y
 = 
˚¡
->
möy
; y <˚¡->
maxy
; y++) {

174 
width_möx_y
 = 
˚¡
->
möx
 + 
y
 * 
width
;

175 
width_maxx_y
 = 
˚¡
->
maxx
 + 
y
 * 
width
;

176 
√w
[
width_möx_y
]=~new[width_minx_y];

177 
√w
[
width_maxx_y
]=~new[width_maxx_y];

178 
out
[
width_möx_y
]=~out[width_minx_y];

179 
out
[
width_maxx_y
]=~out[width_maxx_y];

182 
width_möy
 = 
width
 * 
˚¡
->
möy
;

183 
width_maxy
 = 
width
 * 
˚¡
->
maxy
;

184 
x
 = 
˚¡
->
möx
; x <˚¡->
maxx
; x++) {

185 
width_möy_x
 = 
width_möy
 + 
x
;

186 
width_maxy_x
 = 
width_maxy
 + 
x
;

187 
√w
[
width_möy_x
]=~new[width_miny_x];

188 
√w
[
width_maxy_x
]=~new[width_maxy_x];

191 
y
 = 
˚¡
->
möy
; y <˚¡->
maxy
; y++) {

192 
möx_y
 = 
˚¡
->
möx
 + 
y
 * 
width
;

193 
maxx_y
 = 
˚¡
->
maxx
 + 
y
 * 
width
;

194 
√w
[
möx_y
]=~new[minx_y];

195 
√w
[
maxx_y
]=~new[maxx_y];

198 
	}
}

202 
	#NORM
 100

	)

203 
	#ABS
(
x
Ë((xË< 0 ? -(xË: (x))

	)

204 
	#DIFF
(
x
, 
y
Ë(
	`ABS
((xË- (y)))

	)

205 
	#NDIFF
(
x
, 
y
Ë(
	`ABS
(xË* 
NORM
/(ABS(xË+ 2 * 
	`DIFF
(x,y)))

	)

208 
	$Æg_noi£_tu√
(
c⁄ãxt
 *
˙t
, *
√w
)

210 
images
 *
imgs
 = &
˙t
->imgs;

211 
i
;

212 *
ªf
 = 
imgs
->ref;

213 
diff
, 
sum
 = 0, 
cou¡
 = 0;

214 *
mask
 = 
imgs
->mask;

215 *
sm¨tmask
 = 
imgs
->
sm¨tmask_föÆ
;

217 
i
 = 
imgs
->
mŸi⁄size
;

219 ; 
i
>0; i--) {

220 
diff
 = 
	`ABS
(*
ªf
 - *
√w
);

221 i‡(
mask
)

222 
diff
 = ((dif‡* *
mask
++)/255);

223 i‡(*
sm¨tmask
){

224 
sum
 +
diff
 + 1;

225 
cou¡
++;

227 
ªf
++;

228 
√w
++;

229 
sm¨tmask
++;

232 i‡(
cou¡
 > 3)

233 
sum
 /
cou¡
 / 3;

235 
˙t
->
noi£
 = 4 + (˙t->noi£ + 
sum
) / 2;

236 
	}
}

238 
	$Æg_thªshﬁd_tu√
(
c⁄ãxt
 *
˙t
, 
diffs
, 
mŸi⁄
)

240 
i
;

241 
sum
 = 0, 
t›
 = 
diffs
;

243 i‡(!
diffs
)

246 i‡(
mŸi⁄
)

247 
diffs
 = 
˙t
->
thªshﬁd
 / 4;

249 
i
 = 0; i < 
THRESHOLD_TUNE_LENGTH
 - 1; i++) {

250 
sum
 +
˙t
->
diffs_œ°
[
i
];

251 i‡(
˙t
->
diffs_œ°
[
i
 + 1] && !
mŸi⁄
)

252 
˙t
->
diffs_œ°
[
i
] = cnt->diffs_last[i + 1];

254 
˙t
->
diffs_œ°
[
i
] = c¡->
thªshﬁd
 / 4;

256 i‡(
˙t
->
diffs_œ°
[
i
] > 
t›
)

257 
t›
 = 
˙t
->
diffs_œ°
[
i
];

259 
sum
 +
˙t
->
diffs_œ°
[
i
];

260 
˙t
->
diffs_œ°
[
i
] = 
diffs
;

262 
sum
 /
THRESHOLD_TUNE_LENGTH
 / 4;

263 i‡(
sum
 < 
t›
 * 2)

264 
sum
 = 
t›
 * 2;

266 i‡(
sum
 < 
˙t
->
c⁄f
.
max_ch™ges
)

267 
˙t
->
thªshﬁd
 = (˙t->thªshﬁd + 
sum
) / 2;

268 
	}
}

282 
	#MAXS
 10000

	)

284 
	#PUSH
(
Y
, 
XL
, 
XR
, 
DY
) \

285 i‡(
•
<
°ack
+
MAXS
 && 
Y
+(
DY
Ë>0 && Y+(DYË< 
height
) \

286 {
•
->
y
 = 
Y
; sp->
xl
 = 
XL
; sp->
xr
 = 
XR
; sp->
dy
 = 
DY
; sp++;}

	)

288 
	#POP
(
Y
, 
XL
, 
XR
, 
DY
) \

289 {
•
--; 
Y
 = sp->
y
+(
DY
 = sp->
dy
); 
XL
 = sp->
xl
; 
XR
 = sp->
xr
;}

	)

291 °ru˘ {
	my
, 
	mxl
, 
	mxr
, 
	mdy
;} 
	tSegmít
;

294 
	$iÊood
(
x
, 
y
,

295 
width
, 
height
, *
out
, *
œbñs
, 
√wvÆue
, 
ﬁdvÆue
)

297 
l
, 
x1
, 
x2
, 
dy
;

298 
Segmít
 
°ack
[
MAXS
], *
•
 = stack;

299 
cou¡
 = 0;

301 i‡(
x
 < 0 || x >
width
 || 
y
 < 0 || y >
height
)

304 
	`PUSH
(
y
, 
x
, x, 1);

305 
	`PUSH
(
y
+1, 
x
, x, -1);

307 
•
 > 
°ack
) {

309 
	`POP
(
y
, 
x1
, 
x2
, 
dy
);

314 
x
 = 
x1
; x >0 && 
out
[
y
 * 
width
 + x] !0 && 
œbñs
[y * width + x] =
ﬁdvÆue
; x--) {

315 
œbñs
[
y
 * 
width
 + 
x
] = 
√wvÆue
;

316 
cou¡
++;

319 i‡(
x
 >
x1
)

320 
skù
;

322 
l
 = 
x
 + 1;

324 i‡(
l
 < 
x1
)

325 
	`PUSH
(
y
, 
l
, 
x1
-1, -
dy
);

327 
x
 = 
x1
 + 1;

330 ; 
x
 < 
width
 && 
out
[
y
 * width + x] !0 && 
œbñs
[y * width + x] =
ﬁdvÆue
; x++) {

331 
œbñs
[
y
 * 
width
 + 
x
] = 
√wvÆue
;

332 
cou¡
++;

335 
	`PUSH
(
y
, 
l
, 
x
 - 1, 
dy
);

337 i‡(
x
 > 
x2
 + 1)

338 
	`PUSH
(
y
, 
x2
 + 1, 
x
 - 1, -
dy
);

340 
skù
:

342 
x
++; x <
x2
 && !(
out
[
y
 * 
width
 + x] !0 && 
œbñs
[y * width + x] =
ﬁdvÆue
); x++);

344 
l
 = 
x
;

345 } 
x
 <
x2
);

347  
cou¡
;

348 
	}
}

350 
	$Æg_œbñög
(
c⁄ãxt
 *
˙t
)

352 
images
 *
imgs
 = &
˙t
->imgs;

353 *
out
 = 
imgs
->out;

354 *
œbñs
 = 
imgs
->labels;

355 
ix
, 
iy
, 
pixñpos
;

356 
width
 = 
imgs
->width;

357 
height
 = 
imgs
->height;

358 
œbñsize
 = 0;

359 
cuºít_œbñ
 = 2;

360 
˙t
->
cuºít_image
->
tŸÆ_œbñs
 = 0;

361 
imgs
->
œbñsize_max
 = 0;

363 
imgs
->
œbñgroup_max
 = 0;

364 
imgs
->
œbñs_above
 = 0;

367 
	`mem£t
(
œbñs
, 0, 
width
 * 
height
 * (labels));

368 
pixñpos
 = 0;

369 
iy
 = 0; iy < 
height
 - 1; iy++) {

370 
ix
 = 0; ix < 
width
 - 1; ix++, 
pixñpos
++) {

372 i‡(
out
[
pixñpos
] == 0) {

373 
œbñs
[
pixñpos
] = 1;

378 i‡(
œbñs
[
pixñpos
] > 0)

380 
œbñsize
=
	`iÊood
(
ix
, 
iy
, 
width
, 
height
, 
out
, 
œbñs
, 
cuºít_œbñ
, 0);

382 i‡(
œbñsize
 > 0) {

384 i‡(
œbñsize
 > 
˙t
->
thªshﬁd
) {

385 
œbñsize
=
	`iÊood
(
ix
, 
iy
, 
width
, 
height
, 
out
, 
œbñs
, 
cuºít_œbñ
 + 32768, current_label);

386 
imgs
->
œbñgroup_max
 +
œbñsize
;

387 
imgs
->
œbñs_above
++;

390 i‡(
imgs
->
œbñsize_max
 < 
œbñsize
) {

391 
imgs
->
œbñsize_max
=
œbñsize
;

392 
imgs
->
œrge°_œbñ
=
cuºít_œbñ
;

395 
˙t
->
cuºít_image
->
tŸÆ_œbñs
++;

396 
cuºít_œbñ
++;

399 
pixñpos
++;

402  
imgs
->
œbñgroup_max
;

403 
	}
}

406 
	$dû©e9
(*
img
, 
width
, 
height
, *
buf„r
)

415 
y
, 
i
, 
sum
 = 0, 
widx
;

416 *
row1
, *
row2
, *
row3
, *
rowTemp
,*
yp
;

417 
wödow
[3], 
blob
, 
œã°
;

420 
row1
 = 
buf„r
;

421 
row2
 = 
row1
 + 
width
;

422 
row3
 = 
row2
 + 
width
;

425 
	`mem£t
(
row2
, 0, 
width
);

426 
	`mem˝y
(
row3
, 
img
, 
width
);

429 
yp
 = 
img
;

431 
y
 = 0; y < 
height
; y++) {

433 
rowTemp
 = 
row1
;

434 
row1
 = 
row2
;

435 
row2
 = 
row3
;

436 
row3
 = 
rowTemp
;

439 i‡(
y
 =
height
 - 1)

440 
	`mem£t
(
row3
, 0, 
width
);

442 
	`mem˝y
(
row3
, 
yp
 + 
width
, width);

445 
wödow
[0] = 
	`MAX3
(
row1
[0], 
row2
[0], 
row3
[0]);

446 
wödow
[1] = 
	`MAX3
(
row1
[1], 
row2
[1], 
row3
[1]);

449 
blob
 = 
	`MAX2
(
wödow
[0], window[1]);

450 
widx
 = 2;

455 
i
 = 2; i <
width
 - 1; i++) {

457 
œã°
 = 
wödow
[
widx
] = 
	`MAX3
(
row1
[
i
], 
row2
[i], 
row3
[i]);

462 i‡(
œã°
 >
blob
)

463 
blob
 = 
œã°
;

465 
blob
 = 
	`MAX3
(
wödow
[0], window[1], window[2]);

468 i‡(
blob
 != 0) {

469 *(
yp
 + 
i
 - 1Ë
blob
;

470 
sum
++;

474 i‡(++
widx
 == 3)

475 
widx
 = 0;

479 *
yp
 = *(y∞+ 
width
 - 1) = 0;

480 
yp
 +
width
;

483  
sum
;

484 
	}
}

487 
	$dû©e5
(*
img
, 
width
, 
height
, *
buf„r
)

492 
y
, 
i
, 
sum
 = 0;

493 *
row1
, *
row2
, *
row3
, *
rowTemp
, *
yp
;

494 
blob
, 
mem
, 
œã°
;

497 
row1
 = 
buf„r
;

498 
row2
 = 
row1
 + 
width
;

499 
row3
 = 
row2
 + 
width
;

502 
	`mem£t
(
row2
, 0, 
width
);

503 
	`mem˝y
(
row3
, 
img
, 
width
);

506 
yp
 = 
img
;

508 
y
 = 0; y < 
height
; y++) {

510 
rowTemp
 = 
row1
;

511 
row1
 = 
row2
;

512 
row2
 = 
row3
;

513 
row3
 = 
rowTemp
;

516 i‡(
y
 =
height
 - 1)

517 
	`mem£t
(
row3
, 0, 
width
);

519 
	`mem˝y
(
row3
, 
yp
+
width
, width);

522 
mem
 = 
	`MAX2
(
row2
[0],Ñow2[1]);

523 
blob
 = 1;

525 
i
 = 1; i < 
width
 - 1; i++) {

527 
œã°
 = 
	`MAX3
(
row1
[
i
], 
row2
[ò+ 1], 
row3
[i]);

529 i‡(
blob
 == 0) {

531 
blob
 = 
œã°
;

532 
mem
 = 
row2
[
i
 + 1];

535 
blob
 = 
	`MAX2
(
mem
, 
œã°
);

536 
mem
 = 
	`MAX2
(
row2
[
i
],Ñow2[i + 1]);

540 i‡(
blob
 != 0) {

541 *(
yp
 + 
i
Ë
blob
;

542 
sum
++;

547 *
yp
 = *(y∞+ 
width
 - 1) = 0;

548 
yp
 +
width
;

550  
sum
;

551 
	}
}

554 
	$îode9
(*
img
, 
width
, 
height
, *
buf„r
, 
Êag
)

556 
y
, 
i
, 
sum
 = 0;

557 *
Row1
,*
Row2
,*
Row3
;

558 
Row1
 = 
buf„r
;

559 
Row2
 = 
Row1
 + 
width
;

560 
Row3
 = 
Row1
 + 2*
width
;

561 
	`mem£t
(
Row2
, 
Êag
, 
width
);

562 
	`mem˝y
(
Row3
, 
img
, 
width
);

563 
y
 = 0; y < 
height
; y++) {

564 
	`mem˝y
(
Row1
, 
Row2
, 
width
);

565 
	`mem˝y
(
Row2
, 
Row3
, 
width
);

566 i‡(
y
 =
height
 - 1)

567 
	`mem£t
(
Row3
, 
Êag
, 
width
);

569 
	`mem˝y
(
Row3
, 
img
+(
y
 + 1Ë* 
width
, width);

571 
i
 = 
width
-2; i >= 1; i--) {

572 i‡(
Row1
[
i
-1] == 0 ||

573 
Row1
[
i
] == 0 ||

574 
Row1
[
i
+1] == 0 ||

575 
Row2
[
i
-1] == 0 ||

576 
Row2
[
i
] == 0 ||

577 
Row2
[
i
+1] == 0 ||

578 
Row3
[
i
-1] == 0 ||

579 
Row3
[
i
] == 0 ||

580 
Row3
[
i
+1] == 0)

581 
img
[
y
 * 
width
 + 
i
] = 0;

583 
sum
++;

585 
img
[
y
 * 
width
] = img[y * width + width - 1] = 
Êag
;

587  
sum
;

588 
	}
}

591 
	$îode5
(*
img
, 
width
, 
height
, *
buf„r
, 
Êag
)

593 
y
, 
i
, 
sum
 = 0;

594 *
Row1
,*
Row2
,*
Row3
;

595 
Row1
 = 
buf„r
;

596 
Row2
 = 
Row1
 + 
width
;

597 
Row3
 = 
Row1
 + 2 * 
width
;

598 
	`mem£t
(
Row2
, 
Êag
, 
width
);

599 
	`mem˝y
(
Row3
, 
img
, 
width
);

601 
y
 = 0; y < 
height
; y++) {

602 
	`mem˝y
(
Row1
, 
Row2
, 
width
);

603 
	`mem˝y
(
Row2
, 
Row3
, 
width
);

605 i‡(
y
 =
height
-1)

606 
	`mem£t
(
Row3
, 
Êag
, 
width
);

608 
	`mem˝y
(
Row3
, 
img
 + (
y
 + 1Ë* 
width
, width);

610 
i
 = 
width
-2; i >= 1; i--) {

611 i‡(
Row1
[
i
] == 0 ||

612 
Row2
[
i
-1] == 0 ||

613 
Row2
[
i
] == 0 ||

614 
Row2
[
i
+1] == 0 ||

615 
Row3
[
i
] == 0)

616 
img
[
y
 * 
width
 + 
i
] = 0;

618 
sum
++;

621 
img
[
y
 * 
width
] = img[y * width + width - 1] = 
Êag
;

623  
sum
;

624 
	}
}

629 
	$Æg_de•eckÀ
(
c⁄ãxt
 *
˙t
, 
ﬁddiffs
)

631 
diffs
 = 0;

632 *
out
 = 
˙t
->
imgs
.out;

633 
width
 = 
˙t
->
imgs
.width;

634 
height

˙t
->
imgs
.height;

635 
d⁄e
 = 0, 
i
, 
Àn
 = 
	`°æí
(
˙t
->
c⁄f
.
de•eckÀ
);

636 *
comm⁄_buf„r
 = 
˙t
->
imgs
.common_buffer;

638 
i
 = 0; i < 
Àn
; i++) {

639 
˙t
->
c⁄f
.
de•eckÀ
[
i
]) {

641 i‡((
diffs
 = 
	`îode9
(
out
, 
width
, 
height
, 
comm⁄_buf„r
, 0)) == 0)

642 
i
 = 
Àn
;

643 
d⁄e
 = 1;

646 i‡((
diffs
 = 
	`îode5
(
out
, 
width
, 
height
, 
comm⁄_buf„r
, 0)) == 0)

647 
i
 = 
Àn
;

648 
d⁄e
 = 1;

651 
diffs
 = 
	`dû©e9
(
out
, 
width
, 
height
, 
comm⁄_buf„r
);

652 
d⁄e
 = 1;

655 
diffs
 = 
	`dû©e5
(
out
, 
width
, 
height
, 
comm⁄_buf„r
);

656 
d⁄e
 = 1;

660 
diffs
 = 
	`Æg_œbñög
(
˙t
);

661 
i
 = 
Àn
;

662 
d⁄e
 = 2;

668 i‡(
d⁄e
) {

669 i‡(
d⁄e
 != 2)

670 
˙t
->
imgs
.
œbñsize_max
 = 0;

671  
diffs
;

673 
˙t
->
imgs
.
œbñsize_max
 = 0;

676  
ﬁddiffs
;

677 
	}
}

680 
	$Æg_tu√_sm¨tmask
(
c⁄ãxt
 *
˙t
)

682 
i
, 
diff
;

684 
mŸi⁄size
 = 
˙t
->
imgs
.motionsize;

685 *
sm¨tmask
 = 
˙t
->
imgs
.smartmask;

686 *
sm¨tmask_föÆ
 = 
˙t
->
imgs
.smartmask_final;

687 *
sm¨tmask_buf„r
 = 
˙t
->
imgs
.smartmask_buffer;

688 
£nsôivôy
=
˙t
->
œ°øã
*(11-˙t->
sm¨tmask_•ìd
);

690 
i
 = 0; i < 
mŸi⁄size
; i++) {

693 i‡(
sm¨tmask
[
i
] > 0)

694 
sm¨tmask
[
i
]--;

696 
diff
 = 
sm¨tmask_buf„r
[
i
]/
£nsôivôy
;

697 i‡(
diff
) {

698 i‡(
sm¨tmask
[
i
] <
diff
 + 80)

699 
sm¨tmask
[
i
] +
diff
;

701 
sm¨tmask
[
i
]=80;

702 
sm¨tmask_buf„r
[
i
]%=
£nsôivôy
;

705 i‡(
sm¨tmask
[
i
] > 20)

706 
sm¨tmask_föÆ
[
i
] = 0;

708 
sm¨tmask_föÆ
[
i
] = 255;

711 
diff
 = 
	`îode9
(
sm¨tmask_föÆ
, 
˙t
->
imgs
.
width
, c¡->imgs.
height
, c¡->imgs.
comm⁄_buf„r
, 255);

712 
diff
 = 
	`îode5
(
sm¨tmask_föÆ
, 
˙t
->
imgs
.
width
, c¡->imgs.
height
, c¡->imgs.
comm⁄_buf„r
, 255);

713 
	}
}

716 
	#SMARTMASK_SENSITIVITY_INCR
 5

	)

718 
	$Æg_diff_°™d¨d
 (
c⁄ãxt
 *
˙t
, *
√w
)

720 
images
 *
imgs
 = &
˙t
->imgs;

721 
i
, 
diffs
 = 0;

722 
noi£
 = 
˙t
->noise;

723 
sm¨tmask_•ìd
 = 
˙t
->smartmask_speed;

724 *
ªf
 = 
imgs
->ref;

725 *
out
 = 
imgs
->out;

726 *
mask
 = 
imgs
->mask;

727 *
sm¨tmask_föÆ
=
imgs
->smartmask_final;

728 *
sm¨tmask_buf„r
 = 
imgs
->smartmask_buffer;

729 #ifde‡
HAVE_MMX


730 
mmx_t
 
mmãmp
;

731 
u∆ﬂd
;

734 
i
 = 
imgs
->
mŸi⁄size
;

735 
	`mem£t
(
out
 + 
i
, 128, i / 2);

740 
	`mem£t
(
out
, 0, 
i
);

742 #ifde‡
HAVE_MMX


760 
mmãmp
.
uw
[0] = mmãmp.uw[1] = mmãmp.uw[2] = mmãmp.uw[3] = ()(
noi£
 * 255 + 254);

765 
	`movq_m2r
(
mmãmp
, 
mm7
);

766 
	`pcm≥qb_r2r
(
mm6
, mm6);

768 
	`px‹_r2r
(
mm5
, mm5);

769 
	`p§lw_i2r
(8, 
mm6
);

775 
u∆ﬂd
 = 255;

777 ; 
i
 > 7; i -= 8) {

779 
	`movq_m2r
(*
ªf
, 
mm0
);

780 
	`px‹_r2r
(
mm4
, mm4);

782 
	`movq_m2r
(*
√w
, 
mm1
);

783 
	`movq_r2r
(
mm0
, 
mm2
);

786 
	`psubusb_r2r
(
mm1
, 
mm0
);

787 
	`psubusb_r2r
(
mm2
, 
mm1
);

790 
	`p‹_r2r
(
mm1
, 
mm0
);

793 
	`movq_r2r
(
mm0
, 
mm1
);

794 
	`pu≈cklbw_r2r
(
mm4
, 
mm0
);

796 
	`pu≈ckhbw_r2r
(
mm4
, 
mm1
);

798 i‡(
mask
) {

802 
	`movq_m2r
(*
mask
, 
mm2
);

804 
	`movq_r2r
(
mm2
, 
mm3
);

805 
	`pu≈cklbw_r2r
(
mm4
, 
mm2
);

807 
	`pu≈ckhbw_r2r
(
mm4
, 
mm3
);

808 
	`pmuŒw_r2r
(
mm2
, 
mm0
);

810 
	`pmuŒw_r2r
(
mm3
, 
mm1
);

812 
mask
+=8;

817 
	`movq_r2r
(
mm0
, 
mm2
);

818 
	`p¶lw_i2r
(8, 
mm0
);

820 
	`movq_r2r
(
mm1
, 
mm3
);

821 
	`p¶lw_i2r
(8, 
mm1
);

823 
	`psubusw_r2r
(
mm2
, 
mm0
);

824 
	`psubusw_r2r
(
mm3
, 
mm1
);

838 
	`psubusw_r2r
(
mm7
, 
mm0
);

839 
	`psubusw_r2r
(
mm7
, 
mm1
);

841 
	`pcm≥qw_r2r
(
mm4
, 
mm0
);

842 
	`pcm≥qw_r2r
(
mm4
, 
mm1
);

844 
	`∑nd_r2r
(
mm6
, 
mm0
);

845 
	`∑nd_r2r
(
mm6
, 
mm1
);

847 
	`px‹_r2r
(
mm6
, 
mm0
);

848 
	`px‹_r2r
(
mm6
, 
mm1
);

851 
	`∑ckuswb_r2r
(
mm1
, 
mm0
);

853 i‡(
sm¨tmask_•ìd
) {

857 
	`movq_m2r
(*
sm¨tmask_föÆ
, 
mm3
);

862 
	`movq_r2m
(
mm0
, 
mmãmp
);

863 
	`pcm≥qb_r2r
(
mm4
, 
mm3
);

866 
	`∑ndn_r2r
(
mm0
, 
mm3
);

868 
	`movq_r2r
(
mm3
, 
mm0
);

871 i‡(
˙t
->
evít_ƒ
 !˙t->
¥ev_evít
) {

872 i‡(
mmãmp
.
ub
[0]Ë
sm¨tmask_buf„r
[0]+=
SMARTMASK_SENSITIVITY_INCR
;

873 i‡(
mmãmp
.
ub
[1]Ë
sm¨tmask_buf„r
[1]+=
SMARTMASK_SENSITIVITY_INCR
;

874 i‡(
mmãmp
.
ub
[2]Ë
sm¨tmask_buf„r
[2]+=
SMARTMASK_SENSITIVITY_INCR
;

875 i‡(
mmãmp
.
ub
[3]Ë
sm¨tmask_buf„r
[3]+=
SMARTMASK_SENSITIVITY_INCR
;

876 i‡(
mmãmp
.
ub
[4]Ë
sm¨tmask_buf„r
[4]+=
SMARTMASK_SENSITIVITY_INCR
;

877 i‡(
mmãmp
.
ub
[5]Ë
sm¨tmask_buf„r
[5]+=
SMARTMASK_SENSITIVITY_INCR
;

878 i‡(
mmãmp
.
ub
[6]Ë
sm¨tmask_buf„r
[6]+=
SMARTMASK_SENSITIVITY_INCR
;

879 i‡(
mmãmp
.
ub
[7]Ë
sm¨tmask_buf„r
[7]+=
SMARTMASK_SENSITIVITY_INCR
;

882 
sm¨tmask_buf„r
 += 8;

883 
sm¨tmask_föÆ
 += 8;

886 
	`movq_m2r
(*
√w
, 
mm2
);

891 
	`∑nd_r2r
(
mm0
, 
mm2
);

892 
	`psubb_r2r
(
mm0
, 
mm4
);

897 
	`movq_r2m
(
mm2
, *
out
);

898 
	`∑ddusb_r2r
(
mm4
, 
mm5
);

903 i‡(--
u∆ﬂd
 == 0) {

905 
	`movq_r2m
(
mm5
, 
mmãmp
);

906 
	`px‹_r2r
(
mm5
, mm5);

908 
diffs
 +
mmãmp
.
ub
[0] + mmtemp.ub[1] + mmtemp.ub[2] + mmtemp.ub[3] +

909 
mmãmp
.
ub
[4] + mmtemp.ub[5] + mmtemp.ub[6] + mmtemp.ub[7];

910 
u∆ﬂd
 = 255;

913 
out
+=8;

914 
ªf
+=8;

915 
√w
+=8;

921 i‡(
u∆ﬂd
 < 255) {

922 
	`movq_r2m
(
mm5
, 
mmãmp
);

923 
diffs
 +
mmãmp
.
ub
[0] + mmtemp.ub[1] + mmtemp.ub[2] + mmtemp.ub[3] +

924 
mmãmp
.
ub
[4] + mmtemp.ub[5] + mmtemp.ub[6] + mmtemp.ub[7];

927 
	`emms
();

935 ; 
i
>0; i--) {

936 
curdiff
=()(
	`abs
(*
ªf
 - *
√w
));

938 i‡(
mask
)

939 
curdiff
=(()(curdif‡* *
mask
++) / 255);

941 i‡(
sm¨tmask_•ìd
) {

942 i‡(
curdiff
 > 
noi£
) {

948 i‡(
˙t
->
evít_ƒ
 !˙t->
¥ev_evít
)

949 (*
sm¨tmask_buf„r
Ë+
SMARTMASK_SENSITIVITY_INCR
;

951 i‡(!*
sm¨tmask_föÆ
)

952 
curdiff
 = 0;

954 
sm¨tmask_föÆ
++;

955 
sm¨tmask_buf„r
++;

958 i‡(
curdiff
 > 
noi£
) {

959 *
out
 = *
√w
;

960 
diffs
++;

962 
out
++;

963 
ªf
++;

964 
√w
++;

966  
diffs
;

967 
	}
}

972 
	$Æg_diff_Á°
(
c⁄ãxt
 *
˙t
, 
max_n_ch™ges
, *
√w
)

974 
images
 *
imgs
 = &
˙t
->imgs;

975 
i
, 
diffs
 = 0, 
°ï
 = 
imgs
->
mŸi⁄size
 / 10000;

976 
noi£
=
˙t
->noise;

977 *
ªf
 = 
imgs
->ref;

979 i‡(!
°ï
 % 2)

980 
°ï
++;

982 
max_n_ch™ges
 /
°ï
;

984 
i
 = 
imgs
->
mŸi⁄size
;

986 ; 
i
 > 0; i -
°ï
) {

987 
curdiff
 = ()(
	`abs
(()(*
ªf
-*
√w
)));

988 i‡(
curdiff
 > 
noi£
) {

989 
diffs
++;

990 i‡(
diffs
 > 
max_n_ch™ges
)

993 
ªf
 +
°ï
;

994 
√w
 +
°ï
;

998 
	}
}

1003 
	$Æg_diff
(
c⁄ãxt
 *
˙t
, *
√w
)

1005 
diffs
 = 0;

1007 i‡(
	`Æg_diff_Á°
(
˙t
, c¡->
c⁄f
.
max_ch™ges
 / 2, 
√w
))

1008 
diffs
 = 
	`Æg_diff_°™d¨d
(
˙t
, 
√w
);

1010  
diffs
;

1011 
	}
}

1017 
	$Æg_lightswôch
(
c⁄ãxt
 *
˙t
, 
diffs
)

1019 
images
 *
imgs
 = &
˙t
->imgs;

1021 i‡(
˙t
->
c⁄f
.
lightswôch
 < 0)

1022 
˙t
->
c⁄f
.
lightswôch
 = 0;

1023 i‡(
˙t
->
c⁄f
.
lightswôch
 > 100)

1024 
˙t
->
c⁄f
.
lightswôch
 = 100;

1027 i‡(
diffs
 > (
imgs
->
mŸi⁄size
 * 
˙t
->
c⁄f
.
lightswôch
 / 100))

1031 
	}
}

1033 
	$Æg_swôchfûãr
(
c⁄ãxt
 *
˙t
, 
diffs
, *
√wimg
)

1035 
löediff
 = 
diffs
 / 
˙t
->
imgs
.
height
;

1036 *
out
 = 
˙t
->
imgs
.out;

1037 
y
, 
x
, 
löe
;

1038 
löes
 = 0, 
vîéöes
 = 0;

1040 
y
 = 0; y < 
˙t
->
imgs
.
height
; y++) {

1041 
löe
 = 0;

1042 
x
 = 0; x < 
˙t
->
imgs
.
width
; x++) {

1043 i‡(*(
out
++))

1044 
löe
++;

1048 i‡(
löe
 > 
˙t
->
imgs
.
width
 / 18)

1049 
vîéöes
++;

1051 i‡(
löe
 > 
löediff
 * 2)

1052 
löes
++;

1056 i‡(
vîéöes
 > 
˙t
->
imgs
.
height
 / 10 && 
löes
 < vertlines / 3 &&

1057 (
vîéöes
 > 
˙t
->
imgs
.
height
 / 4 || 
löes
 - vertlines >Üines / 2)) {

1058 i‡(
˙t
->
c⁄f
.
ãxt_ch™ges
) {

1059 
tmp
[80];

1060 
	`•rötf
(
tmp
, "%d %d", 
löes
, 
vîéöes
);

1061 
	`døw_ãxt
(
√wimg
, 
˙t
->
imgs
.
width
-10, 20, c¡->imgs.width, 
tmp
, c¡->
c⁄f
.
ãxt_doubÀ
);

1063  
diffs
;

1066 
	}
}

1082 
	#ACCEPT_STATIC_OBJECT_TIME
 10

	)

1083 
	#EXCLUDE_LEVEL_PERCENT
 20

	)

1084 
	$Æg_upd©e_ª„ªn˚_‰ame
(
c⁄ãxt
 *
˙t
, 
a˘i⁄
)

1086 
ac˚±_timî
 = 
˙t
->
œ°øã
 * 
ACCEPT_STATIC_OBJECT_TIME
;

1087 
i
, 
thªshﬁd_ªf
;

1088 *
ªf_dyn
 = 
˙t
->
imgs
.ref_dyn;

1089 *
image_vúgö
 = 
˙t
->
imgs
.image_virgin;

1090 *
ªf
 = 
˙t
->
imgs
.ref;

1091 *
sm¨tmask
 = 
˙t
->
imgs
.
sm¨tmask_föÆ
;

1092 *
out
 = 
˙t
->
imgs
.out;

1094 i‡(
˙t
->
œ°øã
 > 5)

1095 
ac˚±_timî
 /(
˙t
->
œ°øã
 / 3);

1097 i‡(
a˘i⁄
 =
UPDATE_REF_FRAME
) {

1098 
thªshﬁd_ªf
 = 
˙t
->
noi£
 * 
EXCLUDE_LEVEL_PERCENT
 / 100;

1099 
i
 = 
˙t
->
imgs
.
mŸi⁄size
; i > 0; i--) {

1101 i‡((()(
	`abs
(*
ªf
 - *
image_vúgö
)Ë> 
thªshﬁd_ªf
Ë&& (*
sm¨tmask
)) {

1102 i‡(*
ªf_dyn
 == 0) {

1103 *
ªf_dyn
 = 1;

1104 } i‡(*
ªf_dyn
 > 
ac˚±_timî
) {

1105 *
ªf_dyn
 = 0;

1106 *
ªf
 = *
image_vúgö
;

1107 } i‡(*
out
) {

1108 (*
ªf_dyn
)++;

1110 *
ªf_dyn
 = 0;

1111 *
ªf
 = (*ª‡+ *
image_vúgö
) / 2;

1115 *
ªf_dyn
 = 0;

1116 *
ªf
 = *
image_vúgö
;

1118 
ªf
++;

1119 
image_vúgö
++;

1120 
sm¨tmask
++;

1121 
ªf_dyn
++;

1122 
out
++;

1126 
	`mem˝y
(
˙t
->
imgs
.
ªf
, c¡->imgs.
image_vúgö
, c¡->imgs.
size
);

1128 
	`mem£t
(
˙t
->
imgs
.
ªf_dyn
, 0, c¡->imgs.
mŸi⁄size
 * (cnt->imgs.ref_dyn));

1130 
	}
}

	@alg.h

10 #i‚de‡
_INCLUDE_ALG_H


11 
	#_INCLUDE_ALG_H


	)

13 
	~"mŸi⁄.h
"

15 
	sco‹d
 {

16 
	mx
;

17 
	my
;

18 
	mwidth
;

19 
	mheight
;

20 
	mmöx
;

21 
	mmaxx
;

22 
	mmöy
;

23 
	mmaxy
;

26 
	s£gmít
 {

27 
co‹d
 
	mco‹d
;

28 
	mwidth
;

29 
	mheight
;

30 
	m›í
;

31 
	mcou¡
;

34 
Æg_loˇã_˚¡î_size
(
images
 *, 
width
, 
height
, 
co‹d
 *);

35 
Æg_døw_loˇti⁄
(
co‹d
 *, 
images
 *, 
width
, *, );

36 
Æg_diff
(
c⁄ãxt
 *, *);

37 
Æg_diff_°™d¨d
(
c⁄ãxt
 *, *);

38 
Æg_lightswôch
(
c⁄ãxt
 *, 
diffs
);

39 
Æg_swôchfûãr
(
c⁄ãxt
 *, , *);

40 
Æg_noi£_tu√
(
c⁄ãxt
 *, *);

41 
Æg_thªshﬁd_tu√
(
c⁄ãxt
 *, , );

42 
Æg_de•eckÀ
(
c⁄ãxt
 *, );

43 
Æg_tu√_sm¨tmask
(
c⁄ãxt
 *);

44 
Æg_upd©e_ª„ªn˚_‰ame
(
c⁄ãxt
 *, );

	@conf.c

26 
	~"mŸi⁄.h
"

29 #i‡(
deföed
(
BSD
))

30 
	~"video_‰ìbsd.h
"

32 
	~"video.h
"

35 #i‚de‡
HAVE_GET_CURRENT_DIR_NAME


36 *
	$gë_cuºít_dú_«me
()

38 *
buf
 = 
	`mÆloc
(
MAXPATHLEN
);

39 
	`gëwd
(
buf
);

40  
buf
;

41 
	}
}

45 
	#°rù√wlöe
(
x
Ë{i‡((x)[
	`°æí
(x)-1]=='\n'Ë(x)[°æí(xË- 1] = 0;}

	)

48 
c⁄fig
 
	gc⁄f_ãm∂©e
 = {

49 
width
: 
DEF_WIDTH
,

50 
height
: 
DEF_HEIGHT
,

51 
quÆôy
: 
DEF_QUALITY
,

52 
rŸ©e_deg
: 0,

53 
max_ch™ges
: 
DEF_CHANGES
,

54 
thªshﬁd_tu√
: 0,

55 
ouçut_n‹mÆ
: "on",

56 
mŸi⁄_img
: 0,

57 
ouçut_Æl
: 0,

58 
g≠
: 
DEF_GAP
,

59 
maxm≥gtime
: 
DEF_MAXMPEGTIME
,

60 
¢≠shŸ_öãrvÆ
: 0,

61 
loˇã
: "off",

62 
öput
: 
IN_DEFAULT
,

63 
n‹m
: 0,

64 
‰ame_limô
: 
DEF_MAXFRAMERATE
,

65 
quõt
: 1,

66 
µm
: 0,

67 
noi£
: 
DEF_NOISELEVEL
,

68 
noi£_tu√
: 1,

69 
möimum_‰ame_time
: 0,

70 
lightswôch
: 0,

71 
autobright
: 0,

72 
brighäess
: 0,

73 
c⁄åa°
: 0,

74 
ßtuøti⁄
: 0,

75 
hue
: 0,

76 
roundrobö_‰ames
: 1,

77 
roundrobö_skù
: 1,

78 
¥e_ˇ±uª
: 0,

79 
po°_ˇ±uª
: 0,

80 
swôchfûãr
: 0,

81 
ffm≥g_ˇp_√w
: 0,

82 
ffm≥g_ˇp_mŸi⁄
: 0,

83 
ffm≥g_bps
: 
DEF_FFMPEG_BPS
,

84 
ffm≥g_vbr
: 
DEF_FFMPEG_VBR
,

85 
ffm≥g_video_codec
: 
DEF_FFMPEG_CODEC
,

86 
webˇm_p‹t
: 0,

87 
webˇm_quÆôy
: 50,

88 
webˇm_mŸi⁄
: 0,

89 
webˇm_maxøã
: 1,

90 
webˇm_loˇlho°
: 1,

91 
webˇm_limô
: 0,

92 
c⁄åﬁ_p‹t
: 0,

93 
c⁄åﬁ_loˇlho°
: 1,

94 
c⁄åﬁ_html_ouçut
: 1,

95 
c⁄åﬁ_authítiˇti⁄
: 
NULL
,

96 
‰equícy
: 0,

97 
tu√r_numbî
: 0,

98 
timñ≠£
: 0,

99 
timñ≠£_mode
: 
DEF_TIMELAPSE_MODE
,

100 #i‡(
deföed
(
BSD
))

101 
tu√r_devi˚
: 
NULL
,

103 
video_devi˚
: 
VIDEO_DEVICE
,

104 
v4l2_∑Àâe
: 8,

105 
vidpùe
: 
NULL
,

106 
fûï©h
: 
NULL
,

107 
j≥g∑th
: 
DEF_JPEGPATH
,

108 
m≥g∑th
: 
DEF_MPEGPATH
,

109 
¢≠∑th
: 
DEF_SNAPPATH
,

110 
timï©h
: 
DEF_TIMEPATH
,

111 
⁄_evít_°¨t
: 
NULL
,

112 
⁄_evít_íd
: 
NULL
,

113 
mask_fûe
: 
NULL
,

114 
sm¨t_mask_•ìd
: 0,

115 
sql_log_image
: 1,

116 
sql_log_¢≠shŸ
: 1,

117 
sql_log_m≥g
: 0,

118 
sql_log_timñ≠£
: 0,

119 
sql_quîy
: 
DEF_SQL_QUERY
,

120 
mysql_db
: 
NULL
,

121 
mysql_ho°
: "localhost",

122 
mysql_u£r
: 
NULL
,

123 
mysql_∑ssw‹d
: 
NULL
,

124 
⁄_pi˘uª_ßve
: 
NULL
,

125 
⁄_mŸi⁄_dëe˘ed
: 
NULL
,

126 
⁄_¨ó_dëe˘ed
: 
NULL
,

127 
⁄_movõ_°¨t
: 
NULL
,

128 
⁄_movõ_íd
: 
NULL
,

129 
⁄_ˇmîa_lo°
: 
NULL
,

130 
mŸi⁄vidpùe
: 
NULL
,

131 
√tˇm_uæ
: 
NULL
,

132 
√tˇm_u£Ωass
: 
NULL
,

133 
√tˇm_hâp
: "1.0",

134 
√tˇm_¥oxy
: 
NULL
,

135 
√tˇm_tﬁî™t_check
: 0,

136 
pgsql_db
: 
NULL
,

137 
pgsql_ho°
: "localhost",

138 
pgsql_u£r
: 
NULL
,

139 
pgsql_∑ssw‹d
: 
NULL
,

140 
pgsql_p‹t
: 5432,

141 
ãxt_ch™ges
: 0,

142 
ãxt_À·
: 
NULL
,

143 
ãxt_right
: 
DEF_TIMESTAMP
,

144 
ãxt_evít
: 
DEF_EVENTSTAMP
,

145 
ãxt_doubÀ
: 0,

146 
de•eckÀ
: 
NULL
,

147 
¨ó_dëe˘
: 
NULL
,

148 
möimum_mŸi⁄_‰ames
: 1,

149 
pid_fûe
: 
NULL
,

154 
c⁄ãxt
 ** 
c›y_boﬁ
(context **, const *, );

155 
c⁄ãxt
 ** 
c›y_öt
(context **, const *, );

156 
c⁄ãxt
 ** 
c›y_sh‹t
(context **, const *, );

157 
c⁄ãxt
 ** 
c⁄fig_thªad
(c⁄ãxà**
˙t
, c⁄° *
°r
, 
vÆ
);

159 c⁄° * 
¥öt_boﬁ
(
c⁄ãxt
 **, **, , );

160 c⁄° * 
¥öt_öt
(
c⁄ãxt
 **, **, , );

161 c⁄° * 
¥öt_sh‹t
(
c⁄ãxt
 **, **, , );

162 c⁄° * 
¥öt_°rög
(
c⁄ãxt
 **, **, , );

163 c⁄° * 
¥öt_thªad
(
c⁄ãxt
 **, **, , );

165 
ußge
();

169 
	#CNT_OFFSET
(
v¨«me
Ë(()&((
c⁄ãxt
 *)
NULL
)->v¨«me)

	)

170 
	#CONF_OFFSET
(
v¨«me
Ë(()&((
c⁄ãxt
 *)
NULL
)->
c⁄f
.v¨«me)

	)

171 
	#TRACK_OFFSET
(
v¨«me
Ë(()&((
c⁄ãxt
 *)
NULL
)->
åack
.v¨«me)

	)

173 
c⁄fig_∑øm
 
	gc⁄fig_∑øms
[] = {

181 
CNT_OFFSET
(
d´m⁄
),

182 
c›y_boﬁ
,

183 
¥öt_boﬁ


189 
CONF_OFFSET
(
pid_fûe
),

190 
c›y_°rög
,

191 
¥öt_°rög


200 
CONF_OFFSET
(
£tup_mode
),

201 
c›y_boﬁ
,

202 
¥öt_boﬁ


212 
CONF_OFFSET
(
video_devi˚
),

213 
c›y_°rög
,

214 
¥öt_°rög


236 
CONF_OFFSET
(
v4l2_∑Àâe
),

237 
c›y_sh‹t
,

238 
¥öt_sh‹t


240 #i‡(
deföed
(
BSD
))

246 
CONF_OFFSET
(
tu√r_devi˚
),

247 
c›y_°rög
,

248 
¥öt_°rög


256 
CONF_OFFSET
(
öput
),

257 
c›y_öt
,

258 
¥öt_öt


265 
CONF_OFFSET
(
n‹m
),

266 
c›y_öt
,

267 
¥öt_öt


273 
CONF_OFFSET
(
‰equícy
),

274 
c›y_öt
,

275 
¥öt_öt


282 
CONF_OFFSET
(
rŸ©e_deg
),

283 
c›y_öt
,

284 
¥öt_öt


290 
CONF_OFFSET
(
width
),

291 
c›y_öt
,

292 
¥öt_öt


298 
CONF_OFFSET
(
height
),

299 
c›y_öt
,

300 
¥öt_öt


307 
CONF_OFFSET
(
‰ame_limô
),

308 
c›y_öt
,

309 
¥öt_öt


317 
CONF_OFFSET
(
möimum_‰ame_time
),

318 
c›y_öt
,

319 
¥öt_öt


326 
CONF_OFFSET
(
√tˇm_uæ
),

327 
c›y_°rög
,

328 
¥öt_°rög


335 
CONF_OFFSET
(
√tˇm_u£Ωass
),

336 
c›y_°rög
,

337 
¥öt_°rög


347 
CONF_OFFSET
(
√tˇm_hâp
),

348 
c›y_°rög
,

349 
¥öt_°rög


357 
CONF_OFFSET
(
√tˇm_¥oxy
),

358 
c›y_°rög
,

359 
¥öt_°rög


366 
CONF_OFFSET
(
√tˇm_tﬁî™t_check
),

367 
c›y_boﬁ
,

368 
¥öt_boﬁ


377 
CONF_OFFSET
(
autobright
),

378 
c›y_boﬁ
,

379 
¥öt_boﬁ


388 
CONF_OFFSET
(
brighäess
),

389 
c›y_öt
,

390 
¥öt_öt


397 
CONF_OFFSET
(
c⁄åa°
),

398 
c›y_öt
,

399 
¥öt_öt


406 
CONF_OFFSET
(
ßtuøti⁄
),

407 
c›y_öt
,

408 
¥öt_öt


415 
CONF_OFFSET
(
hue
),

416 
c›y_öt
,

417 
¥öt_öt


426 
CONF_OFFSET
(
roundrobö_‰ames
),

427 
c›y_öt
,

428 
¥öt_öt


434 
CONF_OFFSET
(
roundrobö_skù
),

435 
c›y_öt
,

436 
¥öt_öt


442 
CONF_OFFSET
(
swôchfûãr
),

443 
c›y_boﬁ
,

444 
¥öt_boﬁ


454 
CONF_OFFSET
(
max_ch™ges
),

455 
c›y_öt
,

456 
¥öt_öt


462 
CONF_OFFSET
(
thªshﬁd_tu√
),

463 
c›y_boﬁ
,

464 
¥öt_boﬁ


470 
CONF_OFFSET
(
noi£
),

471 
c›y_öt
,

472 
¥öt_öt


478 
CONF_OFFSET
(
noi£_tu√
),

479 
c›y_boﬁ
,

480 
¥öt_boﬁ


489 
CONF_OFFSET
(
de•eckÀ
),

490 
c›y_°rög
,

491 
¥öt_°rög


500 
CONF_OFFSET
(
¨ó_dëe˘
),

501 
c›y_°rög
,

502 
¥öt_°rög


509 
CONF_OFFSET
(
mask_fûe
),

510 
c›y_°rög
,

511 
¥öt_°rög


518 
CONF_OFFSET
(
sm¨t_mask_•ìd
),

519 
c›y_öt
,

520 
¥öt_öt


527 
CONF_OFFSET
(
lightswôch
),

528 
c›y_öt
,

529 
¥öt_öt


537 
CONF_OFFSET
(
möimum_mŸi⁄_‰ames
),

538 
c›y_öt
,

539 
¥öt_öt


549 
CONF_OFFSET
(
¥e_ˇ±uª
),

550 
c›y_öt
,

551 
¥öt_öt


557 
CONF_OFFSET
(
po°_ˇ±uª
),

558 
c›y_öt
,

559 
¥öt_öt


568 
CONF_OFFSET
(
g≠
),

569 
c›y_öt
,

570 
¥öt_öt


577 
CONF_OFFSET
(
maxm≥gtime
),

578 
c›y_öt
,

579 
¥öt_öt


585 
CONF_OFFSET
(
ouçut_Æl
),

586 
c›y_boﬁ
,

587 
¥öt_boﬁ


601 
CONF_OFFSET
(
ouçut_n‹mÆ
),

602 
c›y_°rög
,

603 
¥öt_°rög


609 
CONF_OFFSET
(
mŸi⁄_img
),

610 
c›y_boﬁ
,

611 
¥öt_boﬁ


617 
CONF_OFFSET
(
quÆôy
),

618 
c›y_öt
,

619 
¥öt_öt


625 
CONF_OFFSET
(
µm
),

626 
c›y_boﬁ
,

627 
¥öt_boﬁ


629 #ifde‡
HAVE_FFMPEG


640 
CONF_OFFSET
(
ffm≥g_ˇp_√w
),

641 
c›y_boﬁ
,

642 
¥öt_boﬁ


649 
CONF_OFFSET
(
ffm≥g_ˇp_mŸi⁄
),

650 
c›y_boﬁ
,

651 
¥öt_boﬁ


658 
CONF_OFFSET
(
timñ≠£
),

659 
c›y_öt
,

660 
¥öt_öt


667 
CONF_OFFSET
(
timñ≠£_mode
),

668 
c›y_°rög
,

669 
¥öt_°rög


676 
CONF_OFFSET
(
ffm≥g_bps
),

677 
c›y_öt
,

678 
¥öt_öt


687 
CONF_OFFSET
(
ffm≥g_vbr
),

688 
c›y_öt
,

689 
¥öt_öt


705 
CONF_OFFSET
(
ffm≥g_video_codec
),

706 
c›y_°rög
,

707 
¥öt_°rög


715 
CONF_OFFSET
(
ffm≥g_deöãæa˚
),

716 
c›y_boﬁ
,

717 
¥öt_boﬁ


727 
CONF_OFFSET
(
¢≠shŸ_öãrvÆ
),

728 
c›y_öt
,

729 
¥öt_öt


749 
CONF_OFFSET
(
loˇã
),

750 
c›y_°rög
,

751 
¥öt_°rög


759 
CONF_OFFSET
(
ãxt_right
),

760 
c›y_°rög
,

761 
¥öt_°rög


769 
CONF_OFFSET
(
ãxt_À·
),

770 
c›y_°rög
,

771 
¥öt_°rög


779 
CONF_OFFSET
(
ãxt_ch™ges
),

780 
c›y_boﬁ
,

781 
¥öt_boﬁ


792 
CONF_OFFSET
(
ãxt_evít
),

793 
c›y_°rög
,

794 
¥öt_°rög


800 
CONF_OFFSET
(
ãxt_doubÀ
),

801 
c›y_boﬁ
,

802 
¥öt_boﬁ


822 
CONF_OFFSET
(
fûï©h
),

823 
c›y_°rög
,

824 
¥öt_°rög


829 "# DeÁu…: "
DEF_SNAPPATH
"\n"

836 
CONF_OFFSET
(
¢≠∑th
),

837 
c›y_°rög
,

838 
¥öt_°rög


843 "# DeÁu…: "
DEF_JPEGPATH
"\n"

850 
CONF_OFFSET
(
j≥g∑th
),

851 
c›y_°rög
,

852 
¥öt_°rög


854 #ifde‡
HAVE_FFMPEG


858 "# DeÁu…: "
DEF_MPEGPATH
"\n"

864 
CONF_OFFSET
(
m≥g∑th
),

865 
c›y_°rög
,

866 
¥öt_°rög


871 "# DeÁu…: "
DEF_TIMEPATH
"\n"

876 
CONF_OFFSET
(
timï©h
),

877 
c›y_°rög
,

878 
¥öt_°rög


888 
CONF_OFFSET
(
webˇm_p‹t
),

889 
c›y_öt
,

890 
¥öt_öt


896 
CONF_OFFSET
(
webˇm_quÆôy
),

897 
c›y_öt
,

898 
¥öt_öt


905 
CONF_OFFSET
(
webˇm_mŸi⁄
),

906 
c›y_boﬁ
,

907 
¥öt_boﬁ


913 
CONF_OFFSET
(
webˇm_maxøã
),

914 
c›y_öt
,

915 
¥öt_öt


921 
CONF_OFFSET
(
webˇm_loˇlho°
),

922 
c›y_boﬁ
,

923 
¥öt_boﬁ


931 
CONF_OFFSET
(
webˇm_limô
),

932 
c›y_öt
,

933 
¥öt_öt


942 
CONF_OFFSET
(
c⁄åﬁ_p‹t
),

943 
c›y_öt
,

944 
¥öt_öt


950 
CONF_OFFSET
(
c⁄åﬁ_loˇlho°
),

951 
c›y_boﬁ
,

952 
¥öt_boﬁ


958 
CONF_OFFSET
(
c⁄åﬁ_html_ouçut
),

959 
c›y_boﬁ
,

960 
¥öt_boﬁ


967 
CONF_OFFSET
(
c⁄åﬁ_authítiˇti⁄
),

968 
c›y_°rög
,

969 
¥öt_°rög


980 
TRACK_OFFSET
(
ty≥
),

981 
c›y_sh‹t
,

982 
¥öt_sh‹t


988 
TRACK_OFFSET
(
a˘ive
),

989 
c›y_boﬁ
,

990 
¥öt_boﬁ


996 
TRACK_OFFSET
(
p‹t
),

997 
c›y_°rög
,

998 
¥öt_°rög


1004 
TRACK_OFFSET
(
mŸ‹x
),

1005 
c›y_sh‹t
,

1006 
¥öt_sh‹t


1012 
TRACK_OFFSET
(
mŸ‹y
),

1013 
c›y_sh‹t
,

1014 
¥öt_sh‹t


1020 
TRACK_OFFSET
(
maxx
),

1021 
c›y_sh‹t
,

1022 
¥öt_sh‹t


1028 
TRACK_OFFSET
(
maxy
),

1029 
c›y_sh‹t
,

1030 
¥öt_sh‹t


1036 
TRACK_OFFSET
(
iomojo_id
),

1037 
c›y_sh‹t
,

1038 
¥öt_sh‹t


1046 
TRACK_OFFSET
(
°ï_™gÀ_x
),

1047 
c›y_sh‹t
,

1048 
¥öt_sh‹t


1056 
TRACK_OFFSET
(
°ï_™gÀ_y
),

1057 
c›y_sh‹t
,

1058 
¥öt_sh‹t


1065 
TRACK_OFFSET
(
move_waô
),

1066 
c›y_sh‹t
,

1067 
¥öt_sh‹t


1073 
TRACK_OFFSET
(
•ìd
),

1074 
c›y_sh‹t
,

1075 
¥öt_sh‹t


1081 
TRACK_OFFSET
(
°ïsize
),

1082 
c›y_sh‹t
,

1083 
¥öt_sh‹t


1106 
CONF_OFFSET
(
quõt
),

1107 
c›y_boﬁ
,

1108 
¥öt_boﬁ


1115 
CONF_OFFSET
(
⁄_evít_°¨t
),

1116 
c›y_°rög
,

1117 
¥öt_°rög


1124 
CONF_OFFSET
(
⁄_evít_íd
),

1125 
c›y_°rög
,

1126 
¥öt_°rög


1133 
CONF_OFFSET
(
⁄_pi˘uª_ßve
),

1134 
c›y_°rög
,

1135 
¥öt_°rög


1141 
CONF_OFFSET
(
⁄_mŸi⁄_dëe˘ed
),

1142 
c›y_°rög
,

1143 
¥öt_°rög


1150 
CONF_OFFSET
(
⁄_¨ó_dëe˘ed
),

1151 
c›y_°rög
,

1152 
¥öt_°rög


1154 #ifde‡
HAVE_FFMPEG


1160 
CONF_OFFSET
(
⁄_movõ_°¨t
),

1161 
c›y_°rög
,

1162 
¥öt_°rög


1169 
CONF_OFFSET
(
⁄_movõ_íd
),

1170 
c›y_°rög
,

1171 
¥öt_°rög


1181 
CONF_OFFSET
(
⁄_ˇmîa_lo°
),

1182 
c›y_°rög
,

1183 
¥öt_°rög


1186 #i‡
deföed
(
HAVE_MYSQL
Ë|| deföed(
HAVE_PGSQL
)

1195 
CONF_OFFSET
(
sql_log_image
),

1196 
c›y_boﬁ
,

1197 
¥öt_boﬁ


1203 
CONF_OFFSET
(
sql_log_¢≠shŸ
),

1204 
c›y_boﬁ
,

1205 
¥öt_boﬁ


1211 
CONF_OFFSET
(
sql_log_m≥g
),

1212 
c›y_boﬁ
,

1213 
¥öt_boﬁ


1219 
CONF_OFFSET
(
sql_log_timñ≠£
),

1220 
c›y_boﬁ
,

1221 
¥öt_boﬁ


1233 
CONF_OFFSET
(
sql_quîy
),

1234 
c›y_°rög
,

1235 
¥öt_°rög


1239 #ifde‡
HAVE_MYSQL


1247 
CONF_OFFSET
(
mysql_db
),

1248 
c›y_°rög
,

1249 
¥öt_°rög


1255 
CONF_OFFSET
(
mysql_ho°
),

1256 
c›y_°rög
,

1257 
¥öt_°rög


1263 
CONF_OFFSET
(
mysql_u£r
),

1264 
c›y_°rög
,

1265 
¥öt_°rög


1271 
CONF_OFFSET
(
mysql_∑ssw‹d
),

1272 
c›y_°rög
,

1273 
¥öt_°rög


1277 #ifde‡
HAVE_PGSQL


1285 
CONF_OFFSET
(
pgsql_db
),

1286 
c›y_°rög
,

1287 
¥öt_°rög


1293 
CONF_OFFSET
(
pgsql_ho°
),

1294 
c›y_°rög
,

1295 
¥öt_°rög


1301 
CONF_OFFSET
(
pgsql_u£r
),

1302 
c›y_°rög
,

1303 
¥öt_°rög


1309 
CONF_OFFSET
(
pgsql_∑ssw‹d
),

1310 
c›y_°rög
,

1311 
¥öt_°rög


1317 
CONF_OFFSET
(
pgsql_p‹t
),

1318 
c›y_öt
,

1319 
¥öt_öt


1330 
CONF_OFFSET
(
vidpùe
),

1331 
c›y_°rög
,

1332 
¥öt_°rög


1339 
CONF_OFFSET
(
mŸi⁄vidpùe
),

1340 
c›y_°rög
,

1341 
¥öt_°rög


1353 
c⁄fig_thªad
,

1354 
¥öt_thªad


1356 { 
NULL
, NULL, 0, 0, NULL, NULL }

1362 
	$c⁄f_cmdlöe
(
c⁄ãxt
 *
˙t
, 
thªad
)

1364 
c⁄fig
 *
c⁄f
 = &
˙t
->conf;

1365 
c
;

1371 (
c
 = 
	`gë›t
(
c⁄f
->
¨gc
, c⁄f->
¨gv
, "c:d:hns?p:")Ë!
EOF
)

1372 
c
) {

1374 i‡(
thªad
 == -1)

1375 
	`°r˝y
(
˙t
->
c⁄f_fûíame
, 
›èrg
);

1378 
˙t
->
d´m⁄
 = 0;

1381 
c⁄f
->
£tup_mode
 = 1;

1385 
debug_Àvñ
 = ()
	`©oi
(
›èrg
);

1388 i‡(
thªad
 == -1)

1389 
	`°r˝y
(
˙t
->
pid_fûe
, 
›èrg
);

1394 
	`ußge
();

1395 
	`exô
(1);

1397 
›töd
 = 1;

1398 
	}
}

1407 
c⁄ãxt
 **
	$c⁄f_cmd∑r£
(
c⁄ãxt
 **
˙t
, c⁄° *
cmd
, c⁄° *
¨g1
)

1409 
i
 = 0;

1411 i‡(!
cmd
)

1412  
˙t
;

1417 
c⁄fig_∑øms
[
i
].
∑øm_«me
 !
NULL
) {

1418 i‡(!
	`°∫ˇ£cmp
(
cmd
, 
c⁄fig_∑øms
[
i
].
∑øm_«me
 , 255 + 50)) {

1421 i‡(
	`°rcmp
(
	`c⁄fig_ty≥
(&
c⁄fig_∑øms
[
i
]),"string")) {

1422 i‡(
c⁄fig_∑øms
[
i
].
c⁄f_vÆue
 && !
¨g1
)

1423  
˙t
;

1438 
˙t
 = 
c⁄fig_∑øms
[
i
].
	`c›y
(˙t, 
¨g1
, c⁄fig_∑øms[i].
c⁄f_vÆue
);

1439  
˙t
;

1441 
i
++;

1445 
	`mŸi⁄_log
(
LOG_ERR
, 0, "Unknow¿c⁄fig o±i⁄ \"%s\"", 
cmd
);

1447  
˙t
;

1448 
	}
}

1460 
c⁄ãxt
 **
	$c⁄f_¥o˚ss
(
c⁄ãxt
 **
˙t
, 
FILE
 *
Â
)

1464 
löe
[
PATH_MAX
], *
cmd
 = 
NULL
, *
¨g1
 = NULL;

1465 *
beg
 = 
NULL
, *
íd
 = NULL;

1467 
	`fgës
(
löe
, 
PATH_MAX
-1, 
Â
)) {

1468 i‡(!(
löe
[0] ='#' ||Üöe[0] =';' || 
	`°æí
(line) < 2)) {

1470 
¨g1
 = 
NULL
;

1473 
íd
 = 
löe
 + 
	`°æí
(line) - 1;

1474 *
íd
 == ' ' || *end == '\t' || *end == '\n' || *end == '\r')

1475 
íd
--;

1477 *(
íd
+1) = '\0';

1480 i‡(
	`°æí
(
löe
) == 0)

1484 
beg
 = 
löe
;

1486 *
beg
 == ' ' || *beg == '\t')

1487 
beg
++;

1489 
cmd
 = 
beg
;

1491 *
beg
 != ' ' && *beg != '\t' && *beg != '=' && *beg != '\0')

1492 
beg
++;

1494 *
beg
 = '\0';

1497 
beg
++;

1499 i‡(
	`°æí
(
beg
) > 0) {

1500 *
beg
 == ' ' || *beg == '\t' || *beg == '=' || *beg == '\n' || *beg == '\r')

1501 
beg
++;

1507 i‡((
beg
[0]=='"' && beg[
	`°æí
(beg)-1]=='"') ||

1508 (
beg
[0]=='\'' && beg[
	`°æí
(beg)-1]=='\'')) {

1509 
beg
[
	`°æí
(beg)-1]='\0';

1510 
beg
++;

1513 
¨g1
 = 
beg
;

1517 
˙t
 = 
	`c⁄f_cmd∑r£
(˙t, 
cmd
, 
¨g1
);

1521  
˙t
;

1522 
	}
}

1528 
	$c⁄f_¥öt
(
c⁄ãxt
 **
˙t
)

1530 c⁄° *
ªtvÆ
;

1531 *
vÆ
;

1532 
i
, 
thªad
;

1533 
FILE
 *
c⁄ffûe
;

1535 
thªad
 = 0; 
˙t
[thread];Åhread++) {

1536 
	`mŸi⁄_log
(
LOG_INFO
, 0, "Wrôög c⁄fig fûêtÿ%s",
˙t
[
thªad
]->
c⁄f_fûíame
);

1537 
c⁄ffûe
=
	`myf›í
(
˙t
[
thªad
]->
c⁄f_fûíame
, "w");

1539 i‡(!
c⁄ffûe
)

1542 
	`Ârötf
(
c⁄ffûe
, "# %s\n", 
˙t
[
thªad
]->
c⁄f_fûíame
);

1543 
	`Ârötf
(
c⁄ffûe
, "#\n# Thi†c⁄fig fûêwa†gíî©ed by mŸi⁄ " 
VERSION
 "\n");

1544 
	`Ârötf
(
c⁄ffûe
, "\n\n");

1546 
i
 = 0; 
c⁄fig_∑øms
[i].
∑øm_«me
; i++) {

1547 
ªtvÆ
=
c⁄fig_∑øms
[
i
].
	`¥öt
(
˙t
, 
NULL
, i, 
thªad
);

1550 i‡(
ªtvÆ
) {

1551 
	`Ârötf
(
c⁄ffûe
, "%s\n", 
c⁄fig_∑øms
[
i
].
∑øm_hñp
);

1554 i‡(
	`°∫cmp
(
c⁄fig_∑øms
[
i
].
∑øm_«me
, "ãxt", 4Ë|| såncmp(
ªtvÆ
, " ", 1))

1555 
	`Ârötf
(
c⁄ffûe
, "%†%s\n\n", 
c⁄fig_∑øms
[
i
].
∑øm_«me
, 
ªtvÆ
);

1557 
	`Ârötf
(
c⁄ffûe
, "%†\"%s\"\n\n", 
c⁄fig_∑øms
[
i
].
∑øm_«me
, 
ªtvÆ
);

1559 
vÆ
 = 
NULL
;

1560 
c⁄fig_∑øms
[
i
].
	`¥öt
(
˙t
, &
vÆ
, i, 
thªad
);

1565 i‡(
vÆ
) {

1566 
	`Ârötf
(
c⁄ffûe
,"%s\n", 
c⁄fig_∑øms
[
i
].
∑øm_hñp
);

1567 
	`Ârötf
(
c⁄ffûe
, "%s\n", 
vÆ
);

1569 i‡(
	`°æí
(
vÆ
) == 0)

1570 
	`Ârötf
(
c⁄ffûe
,";Åhread /usr/local/etc/thread1.conf\n");

1571 
	`‰ì
(
vÆ
);

1572 } i‡(
thªad
 == 0) {

1573 
	`Ârötf
(
c⁄ffûe
,"%s\n", 
c⁄fig_∑øms
[
i
].
∑øm_hñp
);

1574 
	`Ârötf
(
c⁄ffûe
,"; %†vÆue\n\n", 
c⁄fig_∑øms
[
i
].
∑øm_«me
);

1579 
	`Ârötf
(
c⁄ffûe
, "\n");

1580 
	`f˛o£
(
c⁄ffûe
);

1581 
c⁄ffûe
 = 
NULL
;

1583 
	}
}

1603 
c⁄ãxt
 **
	$c⁄f_lﬂd
(
c⁄ãxt
 **
˙t
)

1605 
FILE
 *
Â
 = 
NULL
;

1606 
fûíame
[
PATH_MAX
];

1607 
i
;

1609 **
¨gv
 = 
˙t
[0]->
c⁄f
.argv;

1610 
¨gc
 = 
˙t
[0]->
c⁄f
.argc;

1615 
	`mem˝y
(&
˙t
[0]->
c⁄f
, &
c⁄f_ãm∂©e
, (
c⁄fig
));

1625 
	`mÆloc_°rögs
(
˙t
[0]);

1628 
˙t
[0]->
c⁄f
.
¨gv
 =árgv;

1629 
˙t
[0]->
c⁄f
.
¨gc
 =árgc;

1638 
˙t
[0]->
c⁄f_fûíame
[0] = 0;

1639 
˙t
[0]->
pid_fûe
[0] = 0;

1641 
	`c⁄f_cmdlöe
(
˙t
[0], -1);

1642 i‡(
˙t
[0]->
c⁄f_fûíame
[0]) {

1643 
	`°r˝y
(
fûíame
, 
˙t
[0]->
c⁄f_fûíame
);

1644 
Â
 = 
	`f›í
 (
fûíame
, "r");

1647 i‡(!
Â
) {

1648 *
∑th
 = 
NULL
;

1649 i‡(
˙t
[0]->
c⁄f_fûíame
[0])

1650 
	`mŸi⁄_log
(-1, 1, "C⁄figfûê%†nŸ found -Åryög deÁu…s.", 
fûíame
);

1652 i‡((
∑th
 = 
	`gë_cuºít_dú_«me
()Ë=
NULL
) {

1653 
	`mŸi⁄_log
(
LOG_ERR
, 1, "Error get_current_dir_name");

1654 
	`exô
(-1);

1657 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, "%s/mŸi⁄.c⁄f", 
∑th
);

1658 
Â
 = 
	`f›í
 (
fûíame
, "r");

1659 
	`‰ì
(
∑th
);

1662 i‡(!
Â
) {

1663 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, "%s/.mŸi⁄/mŸi⁄.c⁄f", 
	`gëív
("HOME"));

1664 
Â
 = 
	`f›í
(
fûíame
, "r");

1665 i‡(!
Â
) {

1666 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, "%s/mŸi⁄.c⁄f", 
sysc⁄fdú
);

1667 
Â
 = 
	`f›í
(
fûíame
, "r");

1668 i‡(!
Â
)

1669 
	`mŸi⁄_log
(-1, 1, "couldÇŸ o≥¿c⁄figfûê%s",
fûíame
);

1674 i‡(
Â
) {

1675 
	`°r˝y
(
˙t
[0]->
c⁄f_fûíame
, 
fûíame
);

1676 
	`mŸi⁄_log
(
LOG_INFO
, 0, "Pro˚ssögÅhªad 0 - c⁄fig fûê%s",
fûíame
);

1677 
˙t
 = 
	`c⁄f_¥o˚ss
(˙t, 
Â
);

1678 
	`f˛o£
(
Â
);

1680 
	`mŸi⁄_log
(
LOG_INFO
, 0, "Not config fileÅoÖrocess using default values");

1692 
i
 = -1;

1693 
˙t
[++
i
])

1694 
	`c⁄f_cmdlöe
(
˙t
[
i
], i);

1697 i‡(
˙t
[0]->
pid_fûe
[0])

1698 
˙t
[0]->
c⁄f
.
pid_fûe
 = 
	`my°r˝y
(cnt[0]->conf.pid_file, cnt[0]->pid_file);

1700  
˙t
;

1701 
	}
}

1711 
	$mÆloc_°rögs
(
c⁄ãxt
 * 
˙t
)

1713 
i
 = 0;

1714 **
vÆ
;

1715 
c⁄fig_∑øms
[
i
].
∑øm_«me
 !
NULL
) {

1716 i‡(
c⁄fig_∑øms
[
i
].
c›y
 =
c›y_°rög
) {

1718 
vÆ
 = (**)((*)
˙t
+
c⁄fig_∑øms
[
i
].
c⁄f_vÆue
);

1725 *
vÆ
 = 
	`my°rdup
(*val);

1727 
i
++;

1729 
	}
}

1760 
c⁄ãxt
 **
	$c›y_boﬁ
(
c⁄ãxt
 **
˙t
, c⁄° *
°r
, 
vÆ_±r
)

1762 *
tmp
;

1763 
i
;

1765 
i
 = -1;

1766 
˙t
[++
i
]) {

1767 
tmp
 = (*)
˙t
[
i
] + ()
vÆ_±r
;

1768 i‡(!
	`°rcmp
(
°r
, "1"Ë|| !
	`°rˇ£cmp
(str, "yes") || !strcasecmp(str,"on")) {

1769 *((*)
tmp
) = 1;

1771 *((*)
tmp
) = 0;

1774 i‡(
˙t
[0]->
thªadƒ
)

1775  
˙t
;

1777  
˙t
;

1778 
	}
}

1783 
c⁄ãxt
 **
	$c›y_öt
(
c⁄ãxt
 **
˙t
, c⁄° *
°r
, 
vÆ_±r
)

1785 *
tmp
;

1786 
i
;

1788 
i
 = -1;

1789 
˙t
[++
i
]) {

1790 
tmp
 = (*)
˙t
[
i
] + 
vÆ_±r
;

1791 *((*)
tmp
Ë
	`©oi
(
°r
);

1792 i‡(
˙t
[0]->
thªadƒ
)

1793  
˙t
;

1795  
˙t
;

1796 
	}
}

1801 
c⁄ãxt
 **
	$c›y_sh‹t
(
c⁄ãxt
 **
˙t
, c⁄° *
°r
, 
vÆ_±r
)

1803 *
tmp
;

1804 
i
;

1806 
i
 = -1;

1807 
˙t
[++
i
]) {

1808 
tmp
 = (*)
˙t
[
i
] + 
vÆ_±r
;

1809 *((*)
tmp
Ë
	`©oi
(
°r
);

1810 i‡(
˙t
[0]->
thªadƒ
)

1811  
˙t
;

1813  
˙t
;

1814 
	}
}

1823 
c⁄ãxt
 **
	$c›y_°rög
(
c⁄ãxt
 **
˙t
, c⁄° *
°r
, 
vÆ_±r
)

1825 **
tmp
;

1826 
i
;

1828 
i
 = -1;

1829 
˙t
[++
i
]) {

1830 
tmp
 = (**)((*)
˙t
[
i
] + 
vÆ_±r
);

1835 *
tmp
 = 
	`my°r˝y
(*tmp, 
°r
);

1840 i‡(
˙t
[0]->
thªadƒ
)

1841  
˙t
;

1843  
˙t
;

1844 
	}
}

1862 *
	$my°r˝y
(*
to
, c⁄° *
‰om
)

1869 i‡(
to
 !
NULL
)

1870 
	`‰ì
(
to
);

1872  
	`my°rdup
(
‰om
);

1873 
	}
}

1883 *
	$my°rdup
(c⁄° *
‰om
)

1885 *
tmp
;

1886 
°rögÀngth
;

1888 i‡(
‰om
 =
NULL
 || !
	`°æí
(from)) {

1889 
tmp
 = 
NULL
;

1891 
°rögÀngth
 = 
	`°æí
(
‰om
);

1892 
°rögÀngth
 = (°rögÀngth < 
PATH_MAX
 ? stringlength : PATH_MAX);

1893 
tmp
 = (*)
	`mymÆloc
(
°rögÀngth
 + 1);

1894 
	`°∫˝y
(
tmp
, 
‰om
, 
°rögÀngth
);

1900 
tmp
 +
°rögÀngth
;

1901 *
tmp
 = '\0';

1902 
tmp
 -
°rögÀngth
;

1904  
tmp
;

1905 
	}
}

1907 c⁄° *
	$c⁄fig_ty≥
(
c⁄fig_∑øm
 *
c⁄fig∑øm
)

1909 i‡(
c⁄fig∑øm
->
c›y
 =
c›y_°rög
)

1911 i‡(
c⁄fig∑øm
->
c›y
 =
c›y_öt
)

1913 i‡(
c⁄fig∑øm
->
c›y
 =
c›y_sh‹t
)

1915 i‡(
c⁄fig∑øm
->
c›y
 =
c›y_boﬁ
)

1919 
	}
}

1921 c⁄° *
	$¥öt_boﬁ
(
c⁄ãxt
 **
˙t
, **
°r
 
ATTRIBUTE_UNUSED
,

1922 
∑rm
, 
thªadƒ
)

1924 
vÆ
 = 
c⁄fig_∑øms
[
∑rm
].
c⁄f_vÆue
;

1926 i‡(
thªadƒ
 &&

1927 *(*)((*)
˙t
[
thªadƒ
] + 
vÆ
) == *(*)((*)cnt[0] + val))

1928  
NULL
;

1930 i‡(*(*)((*)
˙t
[
thªadƒ
] + 
vÆ
))

1934 
	}
}

1942 c⁄° *
	$¥öt_°rög
(
c⁄ãxt
 **
˙t
,

1943 **
°r
 
ATTRIBUTE_UNUSED
, 
∑rm
,

1944 
thªadƒ
)

1946 
vÆ
 = 
c⁄fig_∑øms
[
∑rm
].
c⁄f_vÆue
;

1947 c⁄° **
˝å0
, **
˝å1
;

1950 
˝å0
 = (c⁄° **)((*)
˙t
[0] + 
vÆ
);

1951 
˝å1
 = (c⁄° **)((*)
˙t
[
thªadƒ
] + 
vÆ
);

1952 i‡((
thªadƒ
Ë&& (*
˝å0
 !
NULL
Ë&& (*
˝å1
 !NULLË&& (!
	`°rcmp
(*cptr0, *cptr1)))

1953  
NULL
;

1955  *
˝å1
;

1956 
	}
}

1958 c⁄° *
	$¥öt_öt
(
c⁄ãxt
 **
˙t
, **
°r
 
ATTRIBUTE_UNUSED
,

1959 
∑rm
, 
thªadƒ
)

1961 
ªtvÆ
[20];

1962 
vÆ
 = 
c⁄fig_∑øms
[
∑rm
].
c⁄f_vÆue
;

1964 i‡(
thªadƒ
 &&

1965 *(*)((*)
˙t
[
thªadƒ
] + 
vÆ
) == *(*)((*)cnt[0] + val))

1966  
NULL
;

1968 
	`•rötf
(
ªtvÆ
, "%d", *(*)((*)
˙t
[
thªadƒ
] + 
vÆ
));

1970  
ªtvÆ
;

1971 
	}
}

1974 c⁄° *
	$¥öt_sh‹t
(
c⁄ãxt
 **
˙t
, **
°r
 
ATTRIBUTE_UNUSED
,

1975 
∑rm
, 
thªadƒ
)

1977 
ªtvÆ
[20];

1978 
vÆ
 = 
c⁄fig_∑øms
[
∑rm
].
c⁄f_vÆue
;

1980 i‡(
thªadƒ
 &&

1981 *(*)((*)
˙t
[
thªadƒ
] + 
vÆ
) == *(*)((*)cnt[0] + val))

1982  
NULL
;

1984 
	`•rötf
(
ªtvÆ
, "%d", *(*)((*)
˙t
[
thªadƒ
] + 
vÆ
));

1986  
ªtvÆ
;

1987 
	}
}

1989 c⁄° *
	$¥öt_thªad
(
c⁄ãxt
 **
˙t
, **
°r
,

1990 
∑rm
 
ATTRIBUTE_UNUSED
, 
thªadƒ
)

1992 *
ªtvÆ
;

1993 
i
 = 0;

1995 i‡(!
°r
 || 
thªadƒ
)

1996  
NULL
;

1998 
ªtvÆ
 = 
	`mymÆloc
(1);

1999 
ªtvÆ
[0] = 0;

2000 
˙t
[++
i
]) {

2001 
ªtvÆ
 = 
	`myªÆloc
‘ëvÆ, 
	`°æí
‘ëvÆË+ såÀn(
˙t
[
i
]->
c⁄f_fûíame
) + 10, "print_thread");

2002 
	`•rötf
(
ªtvÆ
 + 
	`°æí
‘ëvÆ), "thªad %s\n", 
˙t
[
i
]->
c⁄f_fûíame
);

2004 *
°r
 = 
ªtvÆ
;

2006  
NULL
;

2007 
	}
}

2019 
c⁄ãxt
 **
	$c⁄fig_thªad
(
c⁄ãxt
 **
˙t
, c⁄° *
°r
,

2020 
vÆ
 
ATTRIBUTE_UNUSED
)

2022 
i
;

2023 
FILE
 *
Â
;

2025 i‡(
˙t
[0]->
thªadƒ
)

2026  
˙t
;

2028 
Â
 = 
	`f›í
(
°r
, "r");

2030 i‡(!
Â
) {

2031 
	`mŸi⁄_log
(
LOG_ERR
, 1, "Thªad c⁄fig fûê%†nŸ found",
°r
);

2032  
˙t
;

2036 
i
 = -1;

2037 
˙t
[++
i
]);

2044 
˙t
 = 
	`myªÆloc
(˙t, (
c⁄ãxt
 *Ë* (
i
 + 2), "config_thread");

2047 
˙t
[
i
] = 
	`mymÆloc
((
c⁄ãxt
));

2050 
	`mem˝y
(
˙t
[
i
], c¡[0], (
c⁄ãxt
));

2058 
	`mÆloc_°rögs
(
˙t
[
i
]);

2061 
˙t
[
i
 + 1] = 
NULL
;

2064 
	`°r˝y
(
˙t
[
i
]->
c⁄f_fûíame
, 
°r
);

2065 
	`mŸi⁄_log
(
LOG_INFO
, 0, "Pro˚ssög c⁄fig fûê%s", 
°r
);

2066 
	`c⁄f_¥o˚ss
(
˙t
+
i
, 
Â
);

2069 
	`f˛o£
(
Â
);

2071  
˙t
;

2072 
	}
}

2074 
	$ußge
()

2076 
	`¥ötf
("mŸi⁄ Vîsi⁄ "
VERSION
", Copyright 2000-2005 Jeroen Vreeken/Folkert van Heusden/Kenneth Lavrsen\n");

2077 
	`¥ötf
("\nusage:\tmotion [options]\n");

2078 
	`¥ötf
("\n\n");

2079 
	`¥ötf
("Possible options:\n\n");

2080 
	`¥ötf
("-n\t\t\tRun inÇon-daemon mode.\n");

2081 
	`¥ötf
("-s\t\t\tRun in setup mode.\n");

2082 
	`¥ötf
("-c config\t\tFullÖathánd filename of config file.\n");

2083 
	`¥ötf
("-dÜevel\t\tDebug mode.\n");

2084 
	`¥ötf
("-pÖrocess_id_file\tFullÖathánd filename ofÖrocess id file (pid file).\n");

2085 
	`¥ötf
("-h\t\t\tShowÅhis screen.\n");

2086 
	`¥ötf
("\n");

2087 
	`¥ötf
("Motion is configured usingá config file only. IfÇone is supplied,\n");

2088 
	`¥ötf
("ô wû»ªad mŸi⁄.c⁄‡‰om cuºíàdúe˘‹y, ~/.mŸi⁄ o∏%s.\n", 
sysc⁄fdú
);

2089 
	`¥ötf
("\n");

2090 
	}
}

	@conf.h

15 #i‚de‡
_INCLUDE_CONF_H


16 
	#_INCLUDE_CONF_H


	)

21 
	sc⁄fig
 {

22 
	m£tup_mode
;

23 
	mwidth
;

24 
	mheight
;

25 
	mquÆôy
;

26 
	mrŸ©e_deg
;

27 
	mmax_ch™ges
;

28 
	mthªshﬁd_tu√
;

29 c⁄° *
	mouçut_n‹mÆ
;

30 
	mmŸi⁄_img
;

31 
	mouçut_Æl
;

32 
	mg≠
;

33 
	mmaxm≥gtime
;

34 
	m¢≠shŸ_öãrvÆ
;

35 c⁄° *
	mloˇã
;

36 
	möput
;

37 
	mn‹m
;

38 
	m‰ame_limô
;

39 
	mquõt
;

40 
	mµm
;

41 
	mnoi£
;

42 
	mnoi£_tu√
;

43 
	mmöimum_‰ame_time
;

44 
	mlightswôch
;

45 
	mautobright
;

46 
	mbrighäess
;

47 
	mc⁄åa°
;

48 
	mßtuøti⁄
;

49 
	mhue
;

50 
	mroundrobö_‰ames
;

51 
	mroundrobö_skù
;

52 
	m¥e_ˇ±uª
;

53 
	mpo°_ˇ±uª
;

54 
	mswôchfûãr
;

55 
	mffm≥g_ˇp_√w
;

56 
	mffm≥g_ˇp_mŸi⁄
;

57 
	mffm≥g_bps
;

58 
	mffm≥g_vbr
;

59 
	mffm≥g_deöãæa˚
;

60 c⁄° *
	mffm≥g_video_codec
;

61 
	mwebˇm_p‹t
;

62 
	mwebˇm_quÆôy
;

63 
	mwebˇm_mŸi⁄
;

64 
	mwebˇm_maxøã
;

65 
	mwebˇm_loˇlho°
;

66 
	mwebˇm_limô
;

67 
	mc⁄åﬁ_p‹t
;

68 
	mc⁄åﬁ_loˇlho°
;

69 
	mc⁄åﬁ_html_ouçut
;

70 c⁄° *
	mc⁄åﬁ_authítiˇti⁄
;

71 
	m‰equícy
;

72 
	mtu√r_numbî
;

73 
	mtimñ≠£
;

74 c⁄° *
	mtimñ≠£_mode
;

75 #i‡(
deföed
(
BSD
))

76 c⁄° *
	mtu√r_devi˚
;

78 c⁄° *
	mvideo_devi˚
;

79 
	mv4l2_∑Àâe
;

80 c⁄° *
	mvidpùe
;

81 c⁄° *
	mfûï©h
;

82 c⁄° *
	mj≥g∑th
;

83 c⁄° *
	mm≥g∑th
;

84 c⁄° *
	m¢≠∑th
;

85 c⁄° *
	mtimï©h
;

86 *
	m⁄_evít_°¨t
;

87 *
	m⁄_evít_íd
;

88 c⁄° *
	mmask_fûe
;

89 
	msm¨t_mask_•ìd
;

90 
	msql_log_image
;

91 
	msql_log_¢≠shŸ
;

92 
	msql_log_m≥g
;

93 
	msql_log_timñ≠£
;

94 c⁄° *
	msql_quîy
;

95 c⁄° *
	mmysql_db
;

96 c⁄° *
	mmysql_ho°
;

97 c⁄° *
	mmysql_u£r
;

98 c⁄° *
	mmysql_∑ssw‹d
;

99 *
	m⁄_pi˘uª_ßve
;

100 *
	m⁄_¨ó_dëe˘ed
;

101 *
	m⁄_mŸi⁄_dëe˘ed
;

102 *
	m⁄_movõ_°¨t
;

103 *
	m⁄_movõ_íd
;

104 *
	m⁄_ˇmîa_lo°
;

105 c⁄° *
	mmŸi⁄vidpùe
;

106 c⁄° *
	m√tˇm_uæ
;

107 c⁄° *
	m√tˇm_u£Ωass
;

108 c⁄° *
	m√tˇm_hâp
;

109 c⁄° *
	m√tˇm_¥oxy
;

110 
	m√tˇm_tﬁî™t_check
;

111 c⁄° *
	mpgsql_db
;

112 c⁄° *
	mpgsql_ho°
;

113 c⁄° *
	mpgsql_u£r
;

114 c⁄° *
	mpgsql_∑ssw‹d
;

115 
	mpgsql_p‹t
;

116 
	mãxt_ch™ges
;

117 c⁄° *
	mãxt_À·
;

118 c⁄° *
	mãxt_right
;

119 c⁄° *
	mãxt_evít
;

120 
	mãxt_doubÀ
;

121 c⁄° *
	mde•eckÀ
;

122 c⁄° *
	m¨ó_dëe˘
;

123 
	mmöimum_mŸi⁄_‰ames
;

124 *
	mpid_fûe
;

125 
	m¨gc
;

126 **
	m¨gv
;

132 
	gc⁄ãxt
 ** (* 
	tc⁄f_c›y_func
)(
	tc⁄ãxt
 **, const *, );

133 c⁄° *(* 
	tc⁄f_¥öt_func
)(
	tc⁄ãxt
 **, **, , );

139 c⁄° * 
	m∑øm_«me
;

140 c⁄° * 
	m∑øm_hñp
;

141 
	mmaö_thªad
;

142 
	mc⁄f_vÆue
;

143 
c⁄f_c›y_func
 
	mc›y
;

144 
c⁄f_¥öt_func
 
	m¥öt
;

145 } 
	tc⁄fig_∑øm
;

148 
c⁄fig_∑øm
 
c⁄fig_∑øms
[];

150 
c⁄ãxt
 **
c⁄f_lﬂd
(context **);

151 
c⁄ãxt
 **
c⁄f_cmd∑r£
(context **, const *, const *);

152 c⁄° *
c⁄fig_ty≥
(
c⁄fig_∑øm
 *);

153 
c⁄f_¥öt
(
c⁄ãxt
 **);

154 
mÆloc_°rögs
 (
c⁄ãxt
 *);

155 *
my°rdup
(const *);

156 *
my°r˝y
(*, const *);

157 
c⁄ãxt
 **
c›y_°rög
(context **, const *, );

159 #i‚de‡
HAVE_GET_CURRENT_DIR_NAME


160 *
gë_cuºít_dú_«me
();

	@draw.c

12 
	~<˘y≥.h
>

13 
	~"mŸi⁄.h
"

16 
	#ASCII_MAX
 127

	)

18 *
	gsmÆl_ch¨_¨r_±r
[
ASCII_MAX
];

20 *
	gbig_ch¨_¨r_±r
[
ASCII_MAX
];

22 
	sdøw_ch¨
 {

23 
	mascii
;

24 
	mpix
[8][7];

27 
	sbig_ch¨
 {

28 
	mascii
;

29 
	mpix
[16][14];

32 
døw_ch¨
 
	gdøw_èbÀ
[]= {

1075 
big_ch¨
 
	gbig_èbÀ
[(
døw_èbÀ
Ë/ (
døw_ch¨
)];

1077 
	#NEWLINE
 "\\n"

	)

1079 
	$døw_ãxä
 (*
image
, 
°¨tx
, 
°¨ty
, 
width
, c⁄° *
ãxt
, 
Àn
, 
Á˘‹
)

1081 
pos
, 
x
, 
y
, 
löe_off£t
, 
√xt_ch¨_offs
;

1082 *
image_±r
, *
ch¨_±r
, **
ch¨_¨r_±r
;

1084 i‡(
°¨tx
 > 
width
 / 2)

1085 
°¨tx
 -
Àn
 * (6 * (
Á˘‹
 + 1));

1087 i‡(
°¨tx
 < 0)

1088 
°¨tx
 = 0;

1090 i‡(
°¨tx
 + 
Àn
 * 6 * (
Á˘‹
 + 1Ë>
width
)

1091 
Àn
 = (
width
-
°¨tx
-1)/(6*(
Á˘‹
+1));

1093 
löe_off£t
 = 
width
 - 7 * (
Á˘‹
 + 1);

1094 
√xt_ch¨_offs
 = 
width
 * 8 * (
Á˘‹
 + 1) - 6 * (factor + 1);

1096 
image_±r
 = 
image
 + 
°¨tx
 + 
°¨ty
 * 
width
;

1098 
ch¨_¨r_±r
 = 
Á˘‹
 ? 
big_ch¨_¨r_±r
 : 
smÆl_ch¨_¨r_±r
;

1100 
pos
 = 0;Öo†< 
Àn
;Öos++) {

1101 
ch¨_±r
 = 
ch¨_¨r_±r
[()
ãxt
[
pos
]];

1103 
y
 = 8 * (
Á˘‹
 + 1); y--;) {

1104 
x
 = 7 * (
Á˘‹
 + 1); x--;) {

1105 *
ch¨_±r
) {

1107 *
image_±r
 = 0;

1110 *
image_±r
 = 255;

1116 
image_±r
++;

1117 
ch¨_±r
++;

1119 
image_±r
 +
löe_off£t
;

1121 
image_±r
 -
√xt_ch¨_offs
;

1125 
	}
}

1127 
	$døw_ãxt
 (*
image
, 
°¨tx
, 
°¨ty
, 
width
, c⁄° *
ãxt
, 
Á˘‹
)

1129 
num_∆
 = 0;

1130 c⁄° *
íd
, *
begö
;

1131 c⁄° 
löe_•a˚
 = (
Á˘‹
 + 1) * 9;

1134 
íd
 = 
ãxt
;

1136 (
íd
 = 
	`°r°r
”nd, 
NEWLINE
))) {

1137 
num_∆
++;

1138 
íd
 +(
NEWLINE
)-1;

1141 
°¨ty
 -
löe_•a˚
 * 
num_∆
;

1142 
begö
 = 
íd
 = 
ãxt
;

1144 (
íd
 = 
	`°r°r
”nd, 
NEWLINE
))) {

1145 
Àn
 = 
íd
-
begö
;

1147 
	`døw_ãxä
(
image
, 
°¨tx
, 
°¨ty
, 
width
, 
begö
, 
Àn
, 
Á˘‹
);

1148 
íd
 +(
NEWLINE
)-1;

1149 
begö
 = 
íd
;

1150 
°¨ty
 +
löe_•a˚
;

1153 
	`døw_ãxä
(
image
, 
°¨tx
, 
°¨ty
, 
width
, 
begö
, 
	`°æí
(begö), 
Á˘‹
);

1156 
	}
}

1158 
	$öôülize_ch¨s
()

1160 
i
, 
x
, 
y
;

1161 
size_t
 
døw_èbÀ_size
;

1163 
døw_èbÀ_size
 = (
døw_èbÀ
Ë/ (
døw_ch¨
);

1166 
i
 = 0; i < 
døw_èbÀ_size
; i++) {

1167 
big_èbÀ
[
i
].
ascii
 = 
døw_èbÀ
[i].ascii;

1169 
x
 = 0; x < 14; x++) {

1170 
y
 = 0; y < 16; y++)

1171 
big_èbÀ
[
i
].
pix
[
y
][
x
] = 
døw_èbÀ
[i].pix[y / 2][x / 2];

1177 
i
 = 0; i < 
ASCII_MAX
; i++) {

1178 
smÆl_ch¨_¨r_±r
[
i
] = &
døw_èbÀ
[0].
pix
[0][0];

1179 
big_ch¨_¨r_±r
[
i
] = &
big_èbÀ
[0].
pix
[0][0];

1183 
i
 = 0; i < 
døw_èbÀ_size
; i++) {

1184 
smÆl_ch¨_¨r_±r
[()
døw_èbÀ
[
i
].
ascii
] = &døw_èbÀ[i].
pix
[0][0];

1185 
big_ch¨_¨r_±r
[()
døw_èbÀ
[
i
].
ascii
] = &
big_èbÀ
[i].
pix
[0][0];

1189 
	}
}

	@event.c

12 
	~"ffm≥g.h
"

13 
	~"pi˘uª.h
"

14 
	~"evít.h
"

15 #i‡!
deföed
(
BSD
)

16 
	~"video.h
"

29 
	$exec_comm™d
(
c⁄ãxt
 *
˙t
, *
comm™d
, *
fûíame
, 
fûëy≥
)

31 
°amp
[
PATH_MAX
];

32 
	`my°r·ime
(
˙t
, 
°amp
, (°amp), 
comm™d
, &˙t->
cuºít_image
->
time°amp_tm
, 
fûíame
, 
fûëy≥
);

34 i‡(!
	`f‹k
()) {

35 
i
;

38 
	`£tsid
();

44 
i
 = 
	`gëdèbÀsize
(); i > 2; --i)

45 
	`˛o£
(
i
);

47 
	`exe˛
("/bö/sh", "sh", "-c", 
°amp
, " &", 
NULL
);

50 
	`mŸi⁄_log
(
LOG_ERR
, 1, "U«bÀÅÿ°¨àexã∫Æ comm™d '%s'", 
°amp
);

52 
	`exô
(1);

53 } i‡(
˙t
->
c⁄f
.
£tup_mode
) {

54 
	`mŸi⁄_log
(-1, 0, "ExecutögÉxã∫Æ comm™d '%s'", 
°amp
);

56 
	}
}

62 
	$evít_√wfûe
(
c⁄ãxt
 *
˙t
 
ATTRIBUTE_UNUSED
,

63 
ty≥
 
ATTRIBUTE_UNUSED
, *
dummy
 ATTRIBUTE_UNUSED,

64 *
fûíame
, *
·y≥
, 
tm
 *tm 
ATTRIBUTE_UNUSED
)

66 
	`mŸi⁄_log
(-1, 0, "Fûêo‡ty≥ %ld savedÅo: %s", ()
·y≥
, 
fûíame
);

67 
	}
}

70 
	$evít_bìp
(
c⁄ãxt
 *
˙t
, 
ty≥
 
ATTRIBUTE_UNUSED
,

71 *
dummy
 
ATTRIBUTE_UNUSED
,

72 *
fûíame
 
ATTRIBUTE_UNUSED
,

73 *
·y≥
 
ATTRIBUTE_UNUSED
,

74 
tm
 *tm 
ATTRIBUTE_UNUSED
)

76 i‡(!
˙t
->
c⁄f
.
quõt
)

77 
	`¥ötf
("\a");

78 
	}
}

86 
	$⁄_pi˘uª_ßve_comm™d
(
c⁄ãxt
 *
˙t
,

87 
ty≥
 
ATTRIBUTE_UNUSED
, *
dummy
 ATTRIBUTE_UNUSED,

88 *
fûíame
, *
¨g
, 
tm
 *tm 
ATTRIBUTE_UNUSED
)

90 
fûëy≥
 = ()
¨g
;

92 i‡((
fûëy≥
 & 
FTYPE_IMAGE_ANY
Ë!0 && 
˙t
->
c⁄f
.
⁄_pi˘uª_ßve
)

93 
	`exec_comm™d
(
˙t
, c¡->
c⁄f
.
⁄_pi˘uª_ßve
, 
fûíame
, 
fûëy≥
);

95 i‡((
fûëy≥
 & 
FTYPE_MPEG_ANY
Ë!0 && 
˙t
->
c⁄f
.
⁄_movõ_°¨t
)

96 
	`exec_comm™d
(
˙t
, c¡->
c⁄f
.
⁄_movõ_°¨t
, 
fûíame
, 
fûëy≥
);

97 
	}
}

99 
	$⁄_mŸi⁄_dëe˘ed_comm™d
(
c⁄ãxt
 *
˙t
,

100 
ty≥
 
ATTRIBUTE_UNUSED
, *
dummy1
 ATTRIBUTE_UNUSED,

101 *
dummy2
 
ATTRIBUTE_UNUSED
, *
dummy3
 ATTRIBUTE_UNUSED,

102 
tm
 *tm 
ATTRIBUTE_UNUSED
)

104 i‡(
˙t
->
c⁄f
.
⁄_mŸi⁄_dëe˘ed
)

105 
	`exec_comm™d
(
˙t
, c¡->
c⁄f
.
⁄_mŸi⁄_dëe˘ed
, 
NULL
, 0);

106 
	}
}

108 #i‡
deföed
(
HAVE_MYSQL
Ë|| deföed(
HAVE_PGSQL
)

110 
	$evít_sq ewfûe
(
c⁄ãxt
 *
˙t
, 
ty≥
 
ATTRIBUTE_UNUSED
,

111 *
dummy
 
ATTRIBUTE_UNUSED
,

112 *
fûíame
, *
¨g
, 
tm
 *tm 
ATTRIBUTE_UNUSED
)

114 
sq…y≥
 = ()
¨g
;

117 i‡(!(
˙t
->
c⁄f
.
mysql_db
 || c¡->c⁄f.
pgsql_db
Ë|| (
sq…y≥
 & c¡->
sql_mask
) == 0)

124 
sqlquîy
[
PATH_MAX
];

126 
	`my°r·ime
(
˙t
, 
sqlquîy
, (sqlquîy), c¡->
c⁄f
.
sql_quîy
,

127 &
˙t
->
cuºít_image
->
time°amp_tm
, 
fûíame
, 
sq…y≥
);

129 #ifde‡
HAVE_MYSQL


130 i‡(
˙t
->
c⁄f
.
mysql_db
) {

131 
ªt
;

133 
ªt
 = 
	`mysql_quîy
(
˙t
->
d©aba£
, 
sqlquîy
);

135 i‡(
ªt
 != 0) {

136 
îr‹_code
 = 
	`mysql_î∫o
(
˙t
->
d©aba£
);

138 
	`mŸi⁄_log
(
LOG_ERR
, 1, "Mysql query failed %sÉrror code %d",

139 
	`mysql_îr‹
(
˙t
->
d©aba£
), 
îr‹_code
);

141 i‡(
îr‹_code
 >= 2000) {

142 
˙t
->
d©aba£
 = (
MYSQL
 *Ë
	`mymÆloc
((MYSQL));

143 
	`mysql_öô
(
˙t
->
d©aba£
);

145 i‡(!
	`mysql_ªÆ_c⁄√˘
(
˙t
->
d©aba£
, c¡->
c⁄f
.
mysql_ho°
,

146 
˙t
->
c⁄f
.
mysql_u£r
, c¡->c⁄f.
mysql_∑ssw‹d
,

147 
˙t
->
c⁄f
.
mysql_db
, 0, 
NULL
, 0)) {

148 
	`mŸi⁄_log
(
LOG_ERR
, 0, "CannotÑeconnectÅo MySQL database %s on host %s with user %s",

149 
˙t
->
c⁄f
.
mysql_db
, c¡->c⁄f.
mysql_ho°
, c¡->c⁄f.
mysql_u£r
);

150 
	`mŸi⁄_log
(
LOG_ERR
, 0, "MySQLÉº‹ wa†%s", 
	`mysql_îr‹
(
˙t
->
d©aba£
));

152 
	`mysql_quîy
(
˙t
->
d©aba£
, 
sqlquîy
);

160 #ifde‡
HAVE_PGSQL


161 i‡(
˙t
->
c⁄f
.
pgsql_db
) {

162 
PGªsu…
 *
ªs
;

164 
ªs
 = 
	`PQexec
(
˙t
->
d©aba£_pg
, 
sqlquîy
);

166 i‡(
	`PQªsu…Sètus
(
ªs
Ë!
PGRES_COMMAND_OK
) {

167 
	`mŸi⁄_log
(
LOG_ERR
, 1, "PGSQL query failed");

168 
	`PQ˛ór
(
ªs
);

174 
	}
}

178 
	$⁄_¨ó_comm™d
(
c⁄ãxt
 *
˙t
, 
ty≥
 
ATTRIBUTE_UNUSED
,

179 *
dummy1
 
ATTRIBUTE_UNUSED
,

180 *
dummy2
 
ATTRIBUTE_UNUSED
, *
dummy3
 ATTRIBUTE_UNUSED,

181 
tm
 *tm 
ATTRIBUTE_UNUSED
)

183 i‡(
˙t
->
c⁄f
.
⁄_¨ó_dëe˘ed
)

184 
	`exec_comm™d
(
˙t
, c¡->
c⁄f
.
⁄_¨ó_dëe˘ed
, 
NULL
, 0);

185 
	}
}

187 
	$⁄_evít_°¨t_comm™d
(
c⁄ãxt
 *
˙t
, 
ty≥
 
ATTRIBUTE_UNUSED
,

188 *
dummy1
 
ATTRIBUTE_UNUSED
,

189 *
dummy2
 
ATTRIBUTE_UNUSED
, *
dummy3
 ATTRIBUTE_UNUSED,

190 
tm
 *tm 
ATTRIBUTE_UNUSED
)

192 i‡(
˙t
->
c⁄f
.
⁄_evít_°¨t
)

193 
	`exec_comm™d
(
˙t
, c¡->
c⁄f
.
⁄_evít_°¨t
, 
NULL
, 0);

194 
	}
}

196 
	$⁄_evít_íd_comm™d
(
c⁄ãxt
 *
˙t
, 
ty≥
 
ATTRIBUTE_UNUSED
,

197 *
dummy1
 
ATTRIBUTE_UNUSED
,

198 *
dummy2
 
ATTRIBUTE_UNUSED
, *
dummy3
 ATTRIBUTE_UNUSED,

199 
tm
 *tm 
ATTRIBUTE_UNUSED
)

201 i‡(
˙t
->
c⁄f
.
⁄_evít_íd
)

202 
	`exec_comm™d
(
˙t
, c¡->
c⁄f
.
⁄_evít_íd
, 
NULL
, 0);

203 
	}
}

205 
	$evít_°›_webˇm
(
c⁄ãxt
 *
˙t
, 
ty≥
 
ATTRIBUTE_UNUSED
,

206 *
dummy1
 
ATTRIBUTE_UNUSED
,

207 *
dummy2
 
ATTRIBUTE_UNUSED
, *
dummy3
 ATTRIBUTE_UNUSED,

208 
tm
 *tm 
ATTRIBUTE_UNUSED
)

210 i‡((
˙t
->
c⁄f
.
webˇm_p‹t
Ë&& (˙t->
webˇm
.
sockë
 != -1))

211 
	`webˇm_°›
(
˙t
);

213 
	}
}

215 
	$evít_webˇm_put
(
c⁄ãxt
 *
˙t
, 
ty≥
 
ATTRIBUTE_UNUSED
,

216 *
img
, *
dummy1
 
ATTRIBUTE_UNUSED
,

217 *
dummy2
 
ATTRIBUTE_UNUSED
, 
tm
 *tm ATTRIBUTE_UNUSED)

219 i‡(
˙t
->
c⁄f
.
webˇm_p‹t
)

220 
	`webˇm_put
(
˙t
, 
img
);

221 
	}
}

223 #i‡!
deföed
(
WITHOUT_V4L
Ë&& !deföed(
BSD
)

224 
	$evít_vid_puçùe
(
c⁄ãxt
 *
˙t
, 
ty≥
 
ATTRIBUTE_UNUSED
,

225 *
img
, *
dummy
 
ATTRIBUTE_UNUSED
, *
devpùe
,

226 
tm
 *tm 
ATTRIBUTE_UNUSED
)

228 i‡(*(*)
devpùe
 >= 0) {

229 i‡(
	`vid_puçùe
(*(*)
devpùe
, 
img
, 
˙t
->
imgs
.
size
) == -1)

230 
	`mŸi⁄_log
(
LOG_ERR
, 1, "FailedÅoÖut image into videoÖipe");

232 
	}
}

236 c⁄° *
	$imagìxt
(
c⁄ãxt
 *
˙t
)

238 i‡(
˙t
->
c⁄f
.
µm
)

241 
	}
}

243 
	$evít_image_dëe˘
(
c⁄ãxt
 *
˙t
, 
ty≥
 
ATTRIBUTE_UNUSED
,

244 *
√wimg
, *
dummy1
 
ATTRIBUTE_UNUSED
,

245 *
dummy2
 
ATTRIBUTE_UNUSED
, 
tm
 *
cuºíâime_tm
)

247 
fuŒfûíame
[
PATH_MAX
];

248 
fûíame
[
PATH_MAX
];

250 i‡(
˙t
->
√w_img
 & 
NEWIMG_ON
) {

251 c⁄° *
j≥g∑th
;

255 i‡(
˙t
->
c⁄f
.
j≥g∑th
)

256 
j≥g∑th
 = 
˙t
->
c⁄f
.jpegpath;

258 
j≥g∑th
 = 
DEF_JPEGPATH
;

260 
	`my°r·ime
(
˙t
, 
fûíame
, (fûíame), 
j≥g∑th
, 
cuºíâime_tm
, 
NULL
, 0);

261 
	`¢¥ötf
(
fuŒfûíame
, 
PATH_MAX
, "%s/%s.%s", 
˙t
->
c⁄f
.
fûï©h
, 
fûíame
, 
	`imagìxt
(cnt));

262 
	`put_pi˘uª
(
˙t
, 
fuŒfûíame
, 
√wimg
, 
FTYPE_IMAGE
);

264 
	}
}

266 
	$evít_imagem_dëe˘
(
c⁄ãxt
 *
˙t
, 
ty≥
 
ATTRIBUTE_UNUSED
,

267 *
√wimg
 
ATTRIBUTE_UNUSED
, *
dummy1
 ATTRIBUTE_UNUSED,

268 *
dummy2
 
ATTRIBUTE_UNUSED
, 
tm
 *
cuºíâime_tm
)

270 
c⁄fig
 *
c⁄f
=&
˙t
->conf;

271 
fuŒfûíamem
[
PATH_MAX
];

272 
fûíame
[
PATH_MAX
];

273 
fûíamem
[
PATH_MAX
];

275 i‡(
c⁄f
->
mŸi⁄_img
) {

276 c⁄° *
j≥g∑th
;

280 i‡(
˙t
->
c⁄f
.
j≥g∑th
)

281 
j≥g∑th
 = 
˙t
->
c⁄f
.jpegpath;

283 
j≥g∑th
 = 
DEF_JPEGPATH
;

285 
	`my°r·ime
(
˙t
, 
fûíame
, (fûíame), 
j≥g∑th
, 
cuºíâime_tm
, 
NULL
, 0);

287 
	`¢¥ötf
(
fûíamem
, 
PATH_MAX
, "%sm", 
fûíame
);

288 
	`¢¥ötf
(
fuŒfûíamem
, 
PATH_MAX
, "%s/%s.%s", 
˙t
->
c⁄f
.
fûï©h
, 
fûíamem
, 
	`imagìxt
(cnt));

290 
	`put_pi˘uª
(
˙t
, 
fuŒfûíamem
, c¡->
imgs
.
out
, 
FTYPE_IMAGE_MOTION
);

292 
	}
}

294 
	$evít_image_¢≠shŸ
(
c⁄ãxt
 *
˙t
, 
ty≥
 
ATTRIBUTE_UNUSED
,

295 *
img
, *
dummy1
 
ATTRIBUTE_UNUSED
,

296 *
dummy2
 
ATTRIBUTE_UNUSED
, 
tm
 *
cuºíâime_tm
)

298 
fuŒfûíame
[
PATH_MAX
];

300 i‡(
	`°rcmp
(
˙t
->
c⁄f
.
¢≠∑th
, "lastsnap")) {

301 
fûíame
[
PATH_MAX
];

302 
fûï©h
[
PATH_MAX
];

303 
lök∑th
[
PATH_MAX
];

304 c⁄° *
¢≠∑th
;

307 i‡(
˙t
->
c⁄f
.
¢≠∑th
)

308 
¢≠∑th
 = 
˙t
->
c⁄f
.snappath;

310 
¢≠∑th
 = 
DEF_SNAPPATH
;

312 
	`my°r·ime
(
˙t
, 
fûï©h
, (fûï©h), 
¢≠∑th
, 
cuºíâime_tm
, 
NULL
, 0);

313 
	`¢¥ötf
(
fûíame
, 
PATH_MAX
, "%s.%s", 
fûï©h
, 
	`imagìxt
(
˙t
));

314 
	`¢¥ötf
(
fuŒfûíame
, 
PATH_MAX
, "%s/%s", 
˙t
->
c⁄f
.
fûï©h
, 
fûíame
);

315 
	`put_pi˘uª
(
˙t
, 
fuŒfûíame
, 
img
, 
FTYPE_IMAGE_SNAPSHOT
);

319 
	`¢¥ötf
(
lök∑th
, 
PATH_MAX
, "%s/œ°¢≠.%s", 
˙t
->
c⁄f
.
fûï©h
, 
	`imagìxt
(cnt));

320 
	`ªmove
(
lök∑th
);

322 i‡(
	`symlök
(
fûíame
, 
lök∑th
)) {

323 
	`mŸi⁄_log
(
LOG_ERR
, 1, "CouldÇŸ cª©êsymbﬁi¯lök [%s]", 
fûíame
);

327 
	`¢¥ötf
(
fuŒfûíame
, 
PATH_MAX
, "%s/œ°¢≠.%s", 
˙t
->
c⁄f
.
fûï©h
, 
	`imagìxt
(cnt));

328 
	`ªmove
(
fuŒfûíame
);

329 
	`put_pi˘uª
(
˙t
, 
fuŒfûíame
, 
img
, 
FTYPE_IMAGE_SNAPSHOT
);

332 
˙t
->
¢≠shŸ
 = 0;

333 
	}
}

335 
	$evít_ˇmîa_lo°
(
c⁄ãxt
 *
˙t
, 
ty≥
 
ATTRIBUTE_UNUSED
,

336 *
img
 
ATTRIBUTE_UNUSED
, *
dummy1
 ATTRIBUTE_UNUSED,

337 *
dummy2
 
ATTRIBUTE_UNUSED
, 
tm
 *
cuºíâime_tm
 ATTRIBUTE_UNUSED)

339 i‡(
˙t
->
c⁄f
.
⁄_ˇmîa_lo°
)

340 
	`exec_comm™d
(
˙t
, c¡->
c⁄f
.
⁄_ˇmîa_lo°
, 
NULL
, 0);

341 
	}
}

343 #ifde‡
HAVE_FFMPEG


344 
	$gªy2yuv420p
(*
u
, *
v
, 
width
, 
height
)

346 
	`mem£t
(
u
, 128, 
width
 * 
height
 / 4);

347 
	`mem£t
(
v
, 128, 
width
 * 
height
 / 4);

348 
	}
}

350 
	$⁄_movõ_íd_comm™d
(
c⁄ãxt
 *
˙t
, 
ty≥
 
ATTRIBUTE_UNUSED
,

351 *
dummy
 
ATTRIBUTE_UNUSED
, *
fûíame
,

352 *
¨g
, 
tm
 *tm 
ATTRIBUTE_UNUSED
)

354 
fûëy≥
 = (Ë
¨g
;

356 i‡((
fûëy≥
 & 
FTYPE_MPEG_ANY
Ë&& 
˙t
->
c⁄f
.
⁄_movõ_íd
)

357 
	`exec_comm™d
(
˙t
, c¡->
c⁄f
.
⁄_movõ_íd
, 
fûíame
, 
fûëy≥
);

358 
	}
}

360 
	$evít_ffm≥g_√wfûe
(
c⁄ãxt
 *
˙t
, 
ty≥
 
ATTRIBUTE_UNUSED
,

361 *
img
, *
dummy1
 
ATTRIBUTE_UNUSED
,

362 *
dummy2
 
ATTRIBUTE_UNUSED
, 
tm
 *
cuºíâime_tm
)

364 
width
 = 
˙t
->
imgs
.width;

365 
height
 = 
˙t
->
imgs
.height;

366 *
c⁄vbuf
, *
y
, *
u
, *
v
;

367 
Âs
 = 0;

368 
°amp
[
PATH_MAX
];

369 c⁄° *
m≥g∑th
;

371 i‡(!
˙t
->
c⁄f
.
ffm≥g_ˇp_√w
 && !˙t->c⁄f.
ffm≥g_ˇp_mŸi⁄
)

376 i‡(
˙t
->
c⁄f
.
m≥g∑th
)

377 
m≥g∑th
 = 
˙t
->
c⁄f
.mpegpath;

379 
m≥g∑th
 = 
DEF_MPEGPATH
;

381 
	`my°r·ime
(
˙t
, 
°amp
, (°amp), 
m≥g∑th
, 
cuºíâime_tm
, 
NULL
, 0);

385 
	`¢¥ötf
(
˙t
->
mŸi⁄fûíame
, 
PATH_MAX
 - 4, "%s/%sm", c¡->
c⁄f
.
fûï©h
, 
°amp
);

386 
	`¢¥ötf
(
˙t
->
√wfûíame
, 
PATH_MAX
 - 4, "%s/%s", c¡->
c⁄f
.
fûï©h
, 
°amp
);

388 i‡(
˙t
->
c⁄f
.
ffm≥g_ˇp_√w
) {

389 i‡(
˙t
->
imgs
.
ty≥
 =
VIDEO_PALETTE_GREY
) {

390 
c⁄vbuf
=
	`mymÆloc
((
width
 * 
height
) / 2);

391 
y
 = 
img
;

392 
u
 = 
c⁄vbuf
;

393 
v
 = 
c⁄vbuf
 + (
width
 * 
height
) / 4;

394 
	`gªy2yuv420p
(
u
, 
v
, 
width
, 
height
);

396 
c⁄vbuf
 = 
NULL
;

397 
y
 = 
img
;

398 
u
 = 
img
 + 
width
 * 
height
;

399 
v
 = 
u
 + (
width
 * 
height
) / 4;

402 
Âs
 = 
˙t
->
œ°øã
;

404 i‡(
debug_Àvñ
 >
CAMERA_DEBUG
)

405 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "%†FPS %d",
__FUNCTION__
, 
Âs
);

407 i‡(
Âs
 > 30)

408 
Âs
 = 30;

409 i‡(
Âs
 < 2)

410 
Âs
 = 2;

412 i‡((
˙t
->
ffm≥g_√w
 =

413 
	`ffm≥g_›í
((*)
˙t
->
c⁄f
.
ffm≥g_video_codec
, c¡->
√wfûíame
, 
y
, 
u
, 
v
,

414 
˙t
->
imgs
.
width
, c¡->imgs.
height
, 
Âs
, c¡->
c⁄f
.
ffm≥g_bps
,

415 
˙t
->
c⁄f
.
ffm≥g_vbr
)Ë=
NULL
) {

416 
	`mŸi⁄_log
(
LOG_ERR
, 1, "ff›í_›íÉº‹ cª©ög (√wËfûê[%s]",
˙t
->
√wfûíame
);

417 
˙t
->
föish
 = 1;

420 ((
ffm≥g
 *)
˙t
->
ffm≥g_√w
)->
ud©a
=
c⁄vbuf
;

421 
	`evít
(
˙t
, 
EVENT_FILECREATE
, 
NULL
, c¡->
√wfûíame
, (*)
FTYPE_MPEG
, NULL);

424 i‡(
˙t
->
c⁄f
.
ffm≥g_ˇp_mŸi⁄
) {

425 i‡(
˙t
->
imgs
.
ty≥
 =
VIDEO_PALETTE_GREY
) {

426 
c⁄vbuf
 = 
	`mymÆloc
((
width
 * 
height
) / 2);

427 
y
 = 
˙t
->
imgs
.
out
;

428 
u
 = 
c⁄vbuf
;

429 
v
 = 
c⁄vbuf
 + (
width
 * 
height
) / 4;

430 
	`gªy2yuv420p
(
u
, 
v
, 
width
, 
height
);

432 
y
 = 
˙t
->
imgs
.
out
;

433 
u
 = 
˙t
->
imgs
.
out
 + 
width
 * 
height
;

434 
v
 = 
u
 + (
width
 * 
height
) / 4;

435 
c⁄vbuf
 = 
NULL
;

438 i‡(
debug_Àvñ
 >
CAMERA_DEBUG
)

439 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "%†FPS %d", 
__FUNCTION__
, 
Âs
);

441 
Âs
 = 
˙t
->
œ°øã
;

443 i‡(
Âs
 > 30)

444 
Âs
 = 30;

445 i‡(
Âs
 < 2)

446 
Âs
 = 2;

448 i‡((
˙t
->
ffm≥g_mŸi⁄
 =

449 
	`ffm≥g_›í
((*)
˙t
->
c⁄f
.
ffm≥g_video_codec
, c¡->
mŸi⁄fûíame
, 
y
, 
u
, 
v
,

450 
˙t
->
imgs
.
width
, c¡->imgs.
height
, 
Âs
, c¡->
c⁄f
.
ffm≥g_bps
,

451 
˙t
->
c⁄f
.
ffm≥g_vbr
)Ë=
NULL
) {

452 
	`mŸi⁄_log
(
LOG_ERR
, 1, "ff›í_›íÉº‹ cª©ög (mŸi⁄Ëfûê[%s]", 
˙t
->
mŸi⁄fûíame
);

453 
˙t
->
föish
 = 1;

456 
˙t
->
ffm≥g_mŸi⁄
->
ud©a
 = 
c⁄vbuf
;

457 
	`evít
(
˙t
, 
EVENT_FILECREATE
, 
NULL
, c¡->
mŸi⁄fûíame
, (*)
FTYPE_MPEG_MOTION
, NULL);

459 
	}
}

461 
	$evít_ffm≥g_timñ≠£
(
c⁄ãxt
 *
˙t
,

462 
ty≥
 
ATTRIBUTE_UNUSED
, *
img
,

463 *
dummy1
 
ATTRIBUTE_UNUSED
, *
dummy2
 ATTRIBUTE_UNUSED,

464 
tm
 *
cuºíâime_tm
)

466 
width
 = 
˙t
->
imgs
.width;

467 
height
 = 
˙t
->
imgs
.height;

468 *
c⁄vbuf
, *
y
, *
u
, *
v
;

470 i‡(!
˙t
->
ffm≥g_timñ≠£
) {

471 
tmp
[
PATH_MAX
];

472 c⁄° *
timï©h
;

476 i‡(
˙t
->
c⁄f
.
timï©h
)

477 
timï©h
 = 
˙t
->
c⁄f
.timepath;

479 
timï©h
 = 
DEF_TIMEPATH
;

481 
	`my°r·ime
(
˙t
, 
tmp
, —mp), 
timï©h
, 
cuºíâime_tm
, 
NULL
, 0);

484 
	`¢¥ötf
(
˙t
->
timñ≠£fûíame
, 
PATH_MAX
 - 4, "%s/%s", c¡->
c⁄f
.
fûï©h
, 
tmp
);

486 i‡(
˙t
->
imgs
.
ty≥
 =
VIDEO_PALETTE_GREY
) {

487 
c⁄vbuf
 = 
	`mymÆloc
((
width
 * 
height
) / 2);

488 
y
 = 
img
;

489 
u
 = 
c⁄vbuf
;

490 
v
 = 
c⁄vbuf
+(
width
 * 
height
) / 4;

491 
	`gªy2yuv420p
(
u
, 
v
, 
width
, 
height
);

493 
c⁄vbuf
 = 
NULL
;

494 
y
 = 
img
;

495 
u
 = 
img
 + 
width
 * 
height
;

496 
v
 = 
u
 + (
width
 * 
height
) / 4;

499 i‡((
˙t
->
ffm≥g_timñ≠£
 =

500 
	`ffm≥g_›í
((*)
TIMELAPSE_CODEC
, 
˙t
->
timñ≠£fûíame
, 
y
, 
u
, 
v
,

501 
˙t
->
imgs
.
width
, c¡->imgs.
height
, 24, c¡->
c⁄f
.
ffm≥g_bps
,

502 
˙t
->
c⁄f
.
ffm≥g_vbr
)Ë=
NULL
) {

503 
	`mŸi⁄_log
(
LOG_ERR
, 1, "ff›í_›íÉº‹ cª©ög (timñ≠£Ëfûê[%s]", 
˙t
->
timñ≠£fûíame
);

504 
˙t
->
föish
 = 1;

508 
˙t
->
ffm≥g_timñ≠£
->
ud©a
 = 
c⁄vbuf
;

509 
	`evít
(
˙t
, 
EVENT_FILECREATE
, 
NULL
, c¡->
timñ≠£fûíame
, (*)
FTYPE_MPEG_TIMELAPSE
, NULL);

512 
y
 = 
img
;

514 i‡(
˙t
->
imgs
.
ty≥
 =
VIDEO_PALETTE_GREY
)

515 
u
 = 
˙t
->
ffm≥g_timñ≠£
->
ud©a
;

517 
u
 = 
img
 + 
width
 * 
height
;

519 
v
 = 
u
 + (
width
 * 
height
) / 4;

520 
	`ffm≥g_put_Ÿhî_image
(
˙t
->
ffm≥g_timñ≠£
, 
y
, 
u
, 
v
);

522 
	}
}

524 
	$evít_ffm≥g_put
(
c⁄ãxt
 *
˙t
, 
ty≥
 
ATTRIBUTE_UNUSED
,

525 *
img
, *
dummy1
 
ATTRIBUTE_UNUSED
,

526 *
dummy2
 
ATTRIBUTE_UNUSED
, 
tm
 *tm ATTRIBUTE_UNUSED)

528 i‡(
˙t
->
ffm≥g_√w
) {

529 
width
=
˙t
->
imgs
.width;

530 
height
=
˙t
->
imgs
.height;

531 *
y
 = 
img
;

532 *
u
, *
v
;

534 i‡(
˙t
->
imgs
.
ty≥
 =
VIDEO_PALETTE_GREY
)

535 
u
 = 
˙t
->
ffm≥g_timñ≠£
->
ud©a
;

537 
u
 = 
y
 + (
width
 * 
height
);

539 
v
 = 
u
 + (
width
 * 
height
) / 4;

540 
	`ffm≥g_put_Ÿhî_image
(
˙t
->
ffm≥g_√w
, 
y
, 
u
, 
v
);

543 i‡(
˙t
->
ffm≥g_mŸi⁄
)

544 
	`ffm≥g_put_image
(
˙t
->
ffm≥g_mŸi⁄
);

546 
	}
}

548 
	$evít_ffm≥g_˛o£fûe
(
c⁄ãxt
 *
˙t
,

549 
ty≥
 
ATTRIBUTE_UNUSED
, *
dummy1
 ATTRIBUTE_UNUSED,

550 *
dummy2
 
ATTRIBUTE_UNUSED
, *
dummy3
 ATTRIBUTE_UNUSED,

551 
tm
 *tm 
ATTRIBUTE_UNUSED
)

554 i‡(
˙t
->
ffm≥g_√w
) {

555 i‡(
˙t
->
ffm≥g_√w
->
ud©a
)

556 
	`‰ì
(
˙t
->
ffm≥g_√w
->
ud©a
);

557 
	`ffm≥g_˛o£
(
˙t
->
ffm≥g_√w
);

558 
˙t
->
ffm≥g_√w
 = 
NULL
;

560 
	`evít
(
˙t
, 
EVENT_FILECLOSE
, 
NULL
, c¡->
√wfûíame
, (*)
FTYPE_MPEG
, NULL);

563 i‡(
˙t
->
ffm≥g_mŸi⁄
) {

564 i‡(
˙t
->
ffm≥g_mŸi⁄
->
ud©a
)

565 
	`‰ì
(
˙t
->
ffm≥g_mŸi⁄
->
ud©a
);

567 
	`ffm≥g_˛o£
(
˙t
->
ffm≥g_mŸi⁄
);

568 
˙t
->
ffm≥g_mŸi⁄
 = 
NULL
;

570 
	`evít
(
˙t
, 
EVENT_FILECLOSE
, 
NULL
, c¡->
mŸi⁄fûíame
, (*)
FTYPE_MPEG_MOTION
, NULL);

572 
	}
}

574 
	$evít_ffm≥g_timñ≠£íd
(
c⁄ãxt
 *
˙t
,

575 
ty≥
 
ATTRIBUTE_UNUSED
, *
dummy1
 ATTRIBUTE_UNUSED,

576 *
dummy2
 
ATTRIBUTE_UNUSED
, *
dummy3
 ATTRIBUTE_UNUSED,

577 
tm
 *tm 
ATTRIBUTE_UNUSED
)

579 i‡(
˙t
->
ffm≥g_timñ≠£
) {

580 i‡(
˙t
->
ffm≥g_timñ≠£
->
ud©a
)

581 
	`‰ì
(
˙t
->
ffm≥g_timñ≠£
->
ud©a
);

583 
	`ffm≥g_˛o£
(
˙t
->
ffm≥g_timñ≠£
);

584 
˙t
->
ffm≥g_timñ≠£
 = 
NULL
;

586 
	`evít
(
˙t
, 
EVENT_FILECLOSE
, 
NULL
, c¡->
timñ≠£fûíame
, (*)
FTYPE_MPEG_TIMELAPSE
, NULL);

588 
	}
}

597 
	sevít_h™dÀrs
 {

598 
	mty≥
;

599 
evít_h™dÀr
 
	mh™dÀr
;

602 
evít_h™dÀrs
 
	gevít_h™dÀrs
[] = {

603 #i‡
deföed
(
HAVE_MYSQL
Ë|| deföed(
HAVE_PGSQL
)

605 
EVENT_FILECREATE
,

606 
evít_sq ewfûe


610 
EVENT_FILECREATE
,

611 
⁄_pi˘uª_ßve_comm™d


614 
EVENT_FILECREATE
,

615 
evít_√wfûe


618 
EVENT_MOTION
,

619 
evít_bìp


622 
EVENT_MOTION
,

623 
⁄_mŸi⁄_dëe˘ed_comm™d


626 
EVENT_AREA_DETECTED
,

627 
⁄_¨ó_comm™d


630 
EVENT_FIRSTMOTION
,

631 
⁄_evít_°¨t_comm™d


634 
EVENT_ENDMOTION
,

635 
⁄_evít_íd_comm™d


638 
EVENT_IMAGE_DETECTED
,

639 
evít_image_dëe˘


642 
EVENT_IMAGEM_DETECTED
,

643 
evít_imagem_dëe˘


646 
EVENT_IMAGE_SNAPSHOT
,

647 
evít_image_¢≠shŸ


649 #i‡!
deföed
(
WITHOUT_V4L
Ë&& !deföed(
BSD
)

651 
EVENT_IMAGE
 | 
EVENT_IMAGEM
,

652 
evít_vid_puçùe


656 
EVENT_WEBCAM
,

657 
evít_webˇm_put


659 #ifde‡
HAVE_FFMPEG


661 
EVENT_FIRSTMOTION
,

662 
evít_ffm≥g_√wfûe


665 
EVENT_IMAGE_DETECTED
,

666 
evít_ffm≥g_put


669 
EVENT_ENDMOTION
,

670 
evít_ffm≥g_˛o£fûe


673 
EVENT_TIMELAPSE
,

674 
evít_ffm≥g_timñ≠£


677 
EVENT_TIMELAPSEEND
,

678 
evít_ffm≥g_timñ≠£íd


681 
EVENT_FILECLOSE
,

682 
⁄_movõ_íd_comm™d


686 
EVENT_CAMERA_LOST
,

687 
evít_ˇmîa_lo°


690 
EVENT_STOP
,

691 
evít_°›_webˇm


693 {0, 
NULL
}

707 
	$evít
(
c⁄ãxt
 *
˙t
, 
ty≥
, *
image
, *
fûíame
, *
evítd©a
, 
tm
 *tm)

709 
i
 = -1;

711 
evít_h™dÀrs
[++
i
].
h™dÀr
) {

712 i‡(
ty≥
 & 
evít_h™dÀrs
[
i
].type)

713 
evít_h™dÀrs
[
i
].
	`h™dÀr
(
˙t
, 
ty≥
, 
image
, 
fûíame
, 
evítd©a
, 
tm
);

715 
	}
}

	@event.h

11 #i‚de‡
_INCLUDE_EVENT_H_


12 
	#_INCLUDE_EVENT_H_


	)

14 
	#EVENT_FILECREATE
 1

	)

15 
	#EVENT_MOTION
 2

	)

16 
	#EVENT_FIRSTMOTION
 4

	)

17 
	#EVENT_ENDMOTION
 8

	)

18 
	#EVENT_STOP
 16

	)

19 
	#EVENT_TIMELAPSE
 32

	)

20 
	#EVENT_TIMELAPSEEND
 64

	)

21 
	#EVENT_WEBCAM
 128

	)

22 
	#EVENT_IMAGE_DETECTED
 256

	)

23 
	#EVENT_IMAGEM_DETECTED
 512

	)

24 
	#EVENT_IMAGE_SNAPSHOT
 1024

	)

25 
	#EVENT_IMAGE
 2048

	)

26 
	#EVENT_IMAGEM
 8192

	)

27 
	#EVENT_FILECLOSE
 16384

	)

28 
	#EVENT_DEBUG
 65536

	)

29 
	#EVENT_CRITICAL
 131072

	)

30 
	#EVENT_AREA_DETECTED
 262144

	)

31 
	#EVENT_CAMERA_LOST
 524288

	)

33 (* 
	tevít_h™dÀr
)(
	tc⁄ãxt
 *, , *, *, *, 
	ttm
 *);

35 
	`evít
(
c⁄ãxt
 *, , *, *, *, 
tm
 *);

36 c⁄° * 
	`imagìxt
(
c⁄ãxt
 *);

	@ffmpeg.c

13 #ifde‡
HAVE_FFMPEG


15 
	~"ffm≥g.h
"

16 
	~"mŸi⁄.h
"

18 #i‡
LIBAVCODEC_BUILD
 > 4680

23 
	#FFMPEG_NO_NONSTD_MPEG1


	)

24 #ifde‡
__GNUC__


27 #w¨nög 
Your
 
vîsi⁄
 
of
 
FFm≥g
 
is
 
√wî
 
th™
 version 0.4.8

28 #w¨nög 
Newî
 
vîsi⁄s
 
of
 
ffm≥g
 dÿ
nŸ
 
suµ‹t
 
MPEG1
 
wôh


29 #w¨nög 
n⁄
-
°™d¨d
 
‰amî©e
. 
MPEG1
 
wûl
 
be
 
dißbÀd
 

30 #w¨nög 
n‹mÆ
 
video
 
ouçut
. 
You
 
ˇn
 
°ûl
 
u£
 
m≥g4
 
™d


31 #w¨nög 
™d
 
m≥g4ms
 
which
 
¨e
 
bŸh
 
bëãr
 
ö
 
ãrms
 
of
 
size


32 #w¨nög 
™d
 
quÆôy
. 
MPEG1
 
is
 
Æways
 
u£d
 
timñ≠£
.

33 #w¨nög 
PÀa£
 
ªad
 
the
 
MŸi⁄
 
Guide
 
m‹e
 
öf‹m©i⁄
.

34 #w¨nög 
NŸe
 
th©
 
this
 
is
 
nŸ
 
™
 
îr‹
 
mesßge
!

40 #i‡
LIBAVFORMAT_BUILD
 >= 4616

45 
	#FFMPEG_AVWRITEFRAME_NEWAPI


	)

48 #i‡
LIBAVFORMAT_BUILD
 >= 4629

53 
	#AVSTREAM_CODEC_PTR
(
avs_±r
Ë◊vs_±r->
codec
)

	)

55 
	#AVSTREAM_CODEC_PTR
(
avs_±r
Ë(&avs_±r->
codec
)

	)

61 
	#APPEND_PROTO
 "≠pfûe"

	)

64 
ffm≥g_put_‰ame
(
ffm≥g
 *, 
AVFøme
 *);

65 
ffm≥g_˛ónups
(
ffm≥g
 *);

66 
AVFøme
 *
ffm≥g_¥ï¨e_‰ame
(
ffm≥g
 *, *,

70 
	gm≥g1_åaûî
[] = {0x00, 0x00, 0x01, 0xb7};

76 
	$fûe_›í_≠≥nd
(
URLC⁄ãxt
 *
h
, c⁄° *
fûíame
, 
Êags
)

78 c⁄° *
cﬁ⁄
;

79 
ac˚ss_Êags
, 
fd
;

82 
cﬁ⁄
 = 
	`°rchr
(
fûíame
, ':');

83 i‡(
cﬁ⁄
)

84 
fûíame
 = 
cﬁ⁄
 + 1;

87 i‡(
Êags
 & 
URL_RDWR
) {

88 
ac˚ss_Êags
 = 
O_CREAT
 | 
O_APPEND
 | 
O_RDWR
;

89 } i‡(
Êags
 & 
URL_WRONLY
) {

90 
ac˚ss_Êags
 = 
O_CREAT
 | 
O_APPEND
 | 
O_WRONLY
;

92 
ac˚ss_Êags
 = 
O_RDONLY
;

95 
fd
 = 
	`›í
(
fûíame
, 
ac˚ss_Êags
, 0666);

96 i‡(
fd
 < 0)

97  
	`AVERROR
(
ENOENT
);

99 
h
->
¥iv_d©a
 = (*)(
size_t
)
fd
;

101 
	}
}

112 
URLPrŸocﬁ
 
	gm≥g1_fûe_¥Ÿocﬁ
 = {

113 .
«me
 = 
APPEND_PROTO
,

114 .
	guæ_›í
 = 
fûe_›í_≠≥nd


118 #ifde‡
HAVE_FFMPEG_NEW


125 #ifde‡
FFMPEG_NEW_INCLUDES


126 
	~<libavutû/av°rög.h
>

128 
	~"av°rög.h
"

131 
	$fûe_›í
(
URLC⁄ãxt
 *
h
, c⁄° *
fûíame
, 
Êags
)

133 
ac˚ss_Êags
, 
fd
;

135 
	`av_°r°¨t
(
fûíame
, "file:", &filename);

137 i‡(
Êags
 & 
URL_RDWR
) {

138 
ac˚ss_Êags
 = 
O_CREAT
 | 
O_TRUNC
 | 
O_RDWR
;

139 } i‡(
Êags
 & 
URL_WRONLY
) {

140 
ac˚ss_Êags
 = 
O_CREAT
 | 
O_TRUNC
 | 
O_WRONLY
;

142 
ac˚ss_Êags
 = 
O_RDONLY
;

144 #ifde‡
O_BINARY


145 
ac˚ss_Êags
 |
O_BINARY
;

147 
fd
 = 
	`›í
(
fûíame
, 
ac˚ss_Êags
, 0666);

148 i‡(
fd
 < 0)

149  
	`AVERROR
(
ENOENT
);

151 
h
->
¥iv_d©a
 = (*)(
size_t
)
fd
;

153 
	}
}

155 
	$fûe_ªad
(
URLC⁄ãxt
 *
h
, *
buf
, 
size
)

157 
fd
 = (
size_t
)
h
->
¥iv_d©a
;

158  
	`ªad
(
fd
, 
buf
, 
size
);

159 
	}
}

161 
	$fûe_wrôe
(
URLC⁄ãxt
 *
h
, *
buf
, 
size
)

163 
fd
 = (
size_t
)
h
->
¥iv_d©a
;

164  
	`wrôe
(
fd
, 
buf
, 
size
);

165 
	}
}

167 
öt64_t
 
	$fûe_£ek
(
URLC⁄ãxt
 *
h
, 
öt64_t
 
pos
, 
whí˚
)

169 
fd
 = (
size_t
)
h
->
¥iv_d©a
;

170  
	`l£ek
(
fd
, 
pos
, 
whí˚
);

171 
	}
}

173 
	$fûe_˛o£
(
URLC⁄ãxt
 *
h
)

175 
fd
 = (
size_t
)
h
->
¥iv_d©a
;

176  
	`˛o£
(
fd
);

177 
	}
}

179 
URLPrŸocﬁ
 
	gfûe_¥Ÿocﬁ
 = {

181 
fûe_›í
,

182 
fûe_ªad
,

183 
fûe_wrôe
,

184 
fûe_£ek
,

185 
fûe_˛o£
,

186 #i‡
LIBAVFORMAT_BUILD
 >= (52<<16 | 31<<8)

187 
NULL
,

188 
NULL
,

189 
NULL
,

199 
	$m≥g1_wrôe_åaûî
(
AVF‹m©C⁄ãxt
 *
s
)

201 #i‡
LIBAVFORMAT_BUILD
 >= (52<<16)

202 
	`put_buf„r
(
s
->
pb
, 
m≥g1_åaûî
, 4);

203 
	`put_Êush_∑ckë
(
s
->
pb
);

205 
	`put_buf„r
(&
s
->
pb
, 
m≥g1_åaûî
, 4);

206 
	`put_Êush_∑ckë
(&
s
->
pb
);

210 
	}
}

213 
	$ffm≥g_öô
()

215 
	`mŸi⁄_log
(
LOG_INFO
, 0, "ffm≥g LIBAVCODEC_BUILD %d LIBAVFORMAT_BUILD %d", 
LIBAVCODEC_BUILD
, 
LIBAVFORMAT_BUILD
);

216 
	`av_ªgi°î_Æl
();

218 #i‡
LIBAVCODEC_BUILD
 > 4680

219 
	`av_log_£t_ˇŒback
–(*)
ffm≥g_avcodec_log
 );

225 
m≥g1_fûe_¥Ÿocﬁ
.
uæ_ªad
 = 
fûe_¥Ÿocﬁ
.url_read;

226 
m≥g1_fûe_¥Ÿocﬁ
.
uæ_wrôe
 = 
fûe_¥Ÿocﬁ
.url_write;

227 
m≥g1_fûe_¥Ÿocﬁ
.
uæ_£ek
 = 
fûe_¥Ÿocﬁ
.url_seek;

228 
m≥g1_fûe_¥Ÿocﬁ
.
uæ_˛o£
 = 
fûe_¥Ÿocﬁ
.url_close;

236 
	}
}

242 
AVOuçutF‹m©
 *
	$gë_of‹m©
(c⁄° *
codec
, *
fûíame
)

244 c⁄° *
ext
;

245 
AVOuçutF‹m©
 *
of
 = 
NULL
;

252 i‡((
	`°rcmp
(
codec
, 
TIMELAPSE_CODEC
) == 0)

253 #i‚de‡
FFMPEG_NO_NONSTD_MPEG1


254 || (
	`°rcmp
(
codec
, "mpeg1") == 0)

257 
ext
 = ".mpg";

261 
of
 = 
	`av_guess_f‹m©
("m≥g1video", 
NULL
, NULL);

262 i‡(
of
) {

264 
of
->
wrôe_åaûî
 = 
m≥g1_wrôe_åaûî
;

266 #ifde‡
FFMPEG_NO_NONSTD_MPEG1


267 } i‡(
	`°rcmp
(
codec
, "mpeg1") == 0) {

268 
	`mŸi⁄_log
(
LOG_ERR
, 0, "*** mpeg1 support forÇormal videos has been disabled ***");

269  
NULL
;

271 } i‡(
	`°rcmp
(
codec
, "mpeg4") == 0) {

272 
ext
 = ".avi";

273 
of
 = 
	`av_guess_f‹m©
("avi", 
NULL
, NULL);

274 } i‡(
	`°rcmp
(
codec
, "msmpeg4") == 0) {

275 
ext
 = ".avi";

276 
of
 = 
	`av_guess_f‹m©
("avi", 
NULL
, NULL);

277 i‡(
of
) {

279 
of
->
video_codec
 = 
CODEC_ID_MSMPEG4V2
;

281 } i‡(
	`°rcmp
(
codec
, "swf") == 0) {

282 
ext
 = ".swf";

283 
of
 = 
	`av_guess_f‹m©
("swf", 
NULL
, NULL);

284 } i‡(
	`°rcmp
(
codec
, "flv") == 0) {

285 
ext
 = ".flv";

286 
of
 = 
	`av_guess_f‹m©
("Êv", 
NULL
, NULL);

287 
of
->
video_codec
 = 
CODEC_ID_FLV1
;

288 } i‡(
	`°rcmp
(
codec
, "ffv1") == 0) {

289 
ext
 = ".avi";

290 
of
 = 
	`av_guess_f‹m©
("avi", 
NULL
, NULL);

291 i‡(
of
) {

294 
of
->
video_codec
 = 
CODEC_ID_FFV1
;

296 } i‡(
	`°rcmp
(
codec
, "mov") == 0) {

297 
ext
 = ".mov";

298 
of
 = 
	`av_guess_f‹m©
("mov", 
NULL
, NULL);

300 
	`mŸi⁄_log
(
LOG_ERR
, 0, "ffm≥g_video_code¯›ti⁄ vÆuê%†i†nŸ suµ‹ãd", 
codec
);

301  
NULL
;

304 i‡(!
of
) {

305 
	`mŸi⁄_log
(
LOG_ERR
, 0, "CouldÇŸ gues†f‹m© f‹ %s", 
codec
);

306  
NULL
;

310 
	`°∫ˇt
(
fûíame
, 
ext
, 4);

312  
of
;

313 
	}
}

320 
ffm≥g
 *
	$ffm≥g_›í
(*
ffm≥g_video_codec
, *
fûíame
,

321 *
y
, *
u
, *
v
,

322 
width
, 
height
, 
øã
, 
bps
, 
vbr
)

324 
AVCodecC⁄ãxt
 *
c
;

325 
AVCodec
 *
codec
;

326 
ffm≥g
 *ffmpeg;

327 
is_m≥g1
;

334 
ffm≥g
 = 
	`mymÆloc
((ffmpeg));

335 
	`mem£t
(
ffm≥g
, 0, (ffmpeg));

337 
ffm≥g
->
vbr
 = vbr;

340 
	`¢¥ötf
(
ffm≥g
->
codec
, (ffm≥g->codec), "%s", 
ffm≥g_video_codec
);

343 
ffm≥g
->
oc
 = 
	`av_mÆlocz
((
AVF‹m©C⁄ãxt
));

345 i‡(!
ffm≥g
->
oc
) {

346 
	`mŸi⁄_log
(
LOG_ERR
, 1, "MemoryÉrror whileállocating output media context");

347 
	`ffm≥g_˛ónups
(
ffm≥g
);

348  
NULL
;

352 
ffm≥g
->
oc
->
of‹m©
 = 
	`gë_of‹m©
(
ffm≥g_video_codec
, 
fûíame
);

354 i‡(!
ffm≥g
->
oc
->
of‹m©
) {

355 
	`ffm≥g_˛ónups
(
ffm≥g
);

356  
NULL
;

359 
	`¢¥ötf
(
ffm≥g
->
oc
->
fûíame
, (ffmpeg->oc->filename), "%s", filename);

362 
ffm≥g
->
video_°
 = 
NULL
;

364 i‡(
ffm≥g
->
oc
->
of‹m©
->
video_codec
 !
CODEC_ID_NONE
) {

365 
ffm≥g
->
video_°
 = 
	`av_√w_°ªam
(ffm≥g->
oc
, 0);

366 i‡(!
ffm≥g
->
video_°
) {

367 
	`mŸi⁄_log
(
LOG_ERR
, 1, "av_new_stream - couldÇotálloc stream");

368 
	`ffm≥g_˛ónups
(
ffm≥g
);

369  
NULL
;

373 
	`mŸi⁄_log
(
LOG_ERR
, 0, "FailedÅo obtaináÖroper video codec");

374 
	`ffm≥g_˛ónups
(
ffm≥g
);

375  
NULL
;

378 
ffm≥g
->
c
 = c = 
	`AVSTREAM_CODEC_PTR
(ffm≥g->
video_°
);

379 
c
->
codec_id
 = 
ffm≥g
->
oc
->
of‹m©
->
video_codec
;

380 
c
->
codec_ty≥
 = 
AVMEDIA_TYPE_VIDEO
;

381 
is_m≥g1
 = 
c
->
codec_id
 =
CODEC_ID_MPEG1VIDEO
;

383 i‡(
	`°rcmp
(
ffm≥g_video_codec
, "ffv1") == 0)

384 
c
->
°ri˘_°d_com∂ün˚
 = -2;

390 
c
->
bô_øã
 = 
bps
;

391 
c
->
width
 = width;

392 
c
->
height
 = height;

393 #i‡
LIBAVCODEC_BUILD
 >= 4754

395 
c
->
time_ba£
.
num
 = 1;

396 
c
->
time_ba£
.
dí
 = 
øã
;

398 
c
->
‰ame_øã
 = 
øã
;

399 
c
->
‰ame_øã_ba£
 = 1;

402 i‡(
debug_Àvñ
 >
CAMERA_DEBUG
)

403 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "%†FPS %d",
__FUNCTION__
,
øã
);

405 i‡(
vbr
)

406 
c
->
Êags
 |
CODEC_FLAG_QSCALE
;

410 
c
->
g›_size
 = 
is_m≥g1
 ? 10 : 12;

413 i‡(!
	`°rcmp
(
ffm≥g
->
oc
->
of‹m©
->
«me
, "mp4") ||

414 !
	`°rcmp
(
ffm≥g
->
oc
->
of‹m©
->
«me
, "mov") ||

415 !
	`°rcmp
(
ffm≥g
->
oc
->
of‹m©
->
«me
, "3gp")) {

416 
c
->
Êags
 |
CODEC_FLAG_GLOBAL_HEADER
;

420 i‡(
	`av_£t_∑ømëîs
(
ffm≥g
->
oc
, 
NULL
) < 0) {

421 
	`mŸi⁄_log
(
LOG_ERR
, 0, "ffmpegáv_set_parametersÉrror: Invalid output formatÖarameters");

422 
	`ffm≥g_˛ónups
(
ffm≥g
);

423  
NULL
;

431 
codec
 = 
	`avcodec_föd_ícodî
(
c
->
codec_id
);

433 i‡(!
codec
) {

434 
	`mŸi⁄_log
(
LOG_ERR
, 1, "CodecÇot found");

435 
	`ffm≥g_˛ónups
(
ffm≥g
);

436  
NULL
;

440 
c
->
pix_fmt
 = 
PIX_FMT_YUV420P
;

443 
	`±hªad_muãx_lock
(&
globÆ_lock
);

446 i‡(
	`avcodec_›í
(
c
, 
codec
) < 0) {

448 
	`±hªad_muãx_u∆ock
(&
globÆ_lock
);

449 
	`mŸi⁄_log
(
LOG_ERR
, 1, "avcodec_open - couldÇot open codec");

450 
	`ffm≥g_˛ónups
(
ffm≥g
);

451  
NULL
;

455 
	`±hªad_muãx_u∆ock
(&
globÆ_lock
);

458 
ffm≥g
->
video_outbuf
 = 
NULL
;

459 i‡(!(
ffm≥g
->
oc
->
of‹m©
->
Êags
 & 
AVFMT_RAWPICTURE
)) {

463 
ffm≥g
->
video_outbuf_size
 = ffm≥g->
c
->
width
 * 256;

464 
ffm≥g
->
video_outbuf
 = 
	`mymÆloc
(ffm≥g->
video_outbuf_size
);

468 
ffm≥g
->
pi˘uª
 = 
	`avcodec_Æloc_‰ame
();

469 i‡(!
ffm≥g
->
pi˘uª
) {

470 
	`mŸi⁄_log
(
LOG_ERR
, 1, "avcodec_alloc_frame - couldÇotálloc frame");

471 
	`ffm≥g_˛ónups
(
ffm≥g
);

472  
NULL
;

476 i‡(
ffm≥g
->
vbr
)

477 
ffm≥g
->
pi˘uª
->
quÆôy
 = ffm≥g->
vbr
;

481 
ffm≥g
->
pi˘uª
->
d©a
[0] = 
y
;

482 
ffm≥g
->
pi˘uª
->
d©a
[1] = 
u
;

483 
ffm≥g
->
pi˘uª
->
d©a
[2] = 
v
;

484 
ffm≥g
->
pi˘uª
->
löesize
[0] = ffm≥g->
c
->
width
;

485 
ffm≥g
->
pi˘uª
->
löesize
[1] = ffm≥g->
c
->
width
 / 2;

486 
ffm≥g
->
pi˘uª
->
löesize
[2] = ffm≥g->
c
->
width
 / 2;

489 i‡(!(
ffm≥g
->
oc
->
of‹m©
->
Êags
 & 
AVFMT_NOFILE
)) {

490 
fûe_¥Ÿo
[256];

495 i‡(
is_m≥g1
)

496 
	`¢¥ötf
(
fûe_¥Ÿo
, (fûe_¥Ÿo), 
APPEND_PROTO
 ":%s", 
fûíame
);

498 
	`¢¥ötf
(
fûe_¥Ÿo
, (fûe_¥Ÿo), "%s", 
fûíame
);

501 i‡(
	`uæ_f›í
(&
ffm≥g
->
oc
->
pb
, 
fûe_¥Ÿo
, 
URL_WRONLY
) < 0) {

503 i‡(
î∫o
 =
ENOENT
) {

505 i‡(
	`¸óã_∑th
(
fûíame
) == -1) {

506 
	`ffm≥g_˛ónups
(
ffm≥g
);

507  
NULL
;

511 i‡(
	`uæ_f›í
(&
ffm≥g
->
oc
->
pb
, 
fûe_¥Ÿo
, 
URL_WRONLY
) < 0) {

512 
	`mŸi⁄_log
(
LOG_ERR
, 1, "uæ_f›í -Éº‹ o≥nög fûê%s",
fûíame
);

513 
	`ffm≥g_˛ónups
(
ffm≥g
);

514  
NULL
;

517 } i‡(
î∫o
 =
EACCES
) {

518 
	`mŸi⁄_log
(
LOG_ERR
, 1,

520 " ... checkác˚s†right†tÿèrgë dúe˘‹y", 
fûíame
);

521 
	`ffm≥g_˛ónups
(
ffm≥g
);

522  
NULL
;

524 
	`mŸi⁄_log
(
LOG_ERR
, 1, "Eº‹ o≥nög fûê%s", 
fûíame
);

525 
	`ffm≥g_˛ónups
(
ffm≥g
);

526  
NULL
;

532 
	`av_wrôe_hódî
(
ffm≥g
->
oc
);

534  
ffm≥g
;

535 
	}
}

540 
	$ffm≥g_˛ónups
(
ffm≥g
 *ffmpeg)

542 
i
;

545 i‡(
ffm≥g
->
video_°
) {

546 
	`±hªad_muãx_lock
(&
globÆ_lock
);

547 #i‡
LIBAVCODEC_BUILD
 > 4680

548 i‡(
ffm≥g
->
video_°
->
codec
->
¥iv_d©a
 !
NULL
)

550 
	`avcodec_˛o£
(
	`AVSTREAM_CODEC_PTR
(
ffm≥g
->
video_°
));

551 
	`±hªad_muãx_u∆ock
(&
globÆ_lock
);

552 
	`av_‰ìp
(&
ffm≥g
->
pi˘uª
);

553 
	`‰ì
(
ffm≥g
->
video_outbuf
);

557 
i
 = 0; i < 
ffm≥g
->
oc
->
nb_°ªams
; i++)

558 
	`av_‰ìp
(&
ffm≥g
->
oc
->
°ªams
[
i
]);

567 
	`av_‰ì
(
ffm≥g
->
oc
);

568 #i‡
LIBAVFORMAT_BUILD
 >= 4629

569 
	`av_‰ì
(
ffm≥g
->
c
);

571 
	`‰ì
(
ffm≥g
);

572 
	}
}

575 
	$ffm≥g_˛o£
(
ffm≥g
 *ffmpeg)

577 
i
;

580 i‡(
ffm≥g
->
video_°
) {

581 
	`±hªad_muãx_lock
(&
globÆ_lock
);

582 
	`avcodec_˛o£
(
	`AVSTREAM_CODEC_PTR
(
ffm≥g
->
video_°
));

583 
	`±hªad_muãx_u∆ock
(&
globÆ_lock
);

584 
	`av_‰ìp
(&
ffm≥g
->
pi˘uª
);

585 
	`‰ì
(
ffm≥g
->
video_outbuf
);

589 
	`av_wrôe_åaûî
(
ffm≥g
->
oc
);

592 
i
 = 0; i < 
ffm≥g
->
oc
->
nb_°ªams
; i++)

593 
	`av_‰ìp
(&
ffm≥g
->
oc
->
°ªams
[
i
]);

596 i‡(!(
ffm≥g
->
oc
->
of‹m©
->
Êags
 & 
AVFMT_NOFILE
)) {

598 #i‡
LIBAVFORMAT_BUILD
 >= (52<<16)

599 
	`uæ_f˛o£
(
ffm≥g
->
oc
->
pb
);

601 
	`uæ_f˛o£
(&
ffm≥g
->
oc
->
pb
);

606 
	`av_‰ì
(
ffm≥g
->
oc
);

607 #i‡
LIBAVFORMAT_BUILD
 >= 4629

608 
	`av_‰ì
(
ffm≥g
->
c
);

610 
	`‰ì
(
ffm≥g
);

611 
	}
}

614 
	$ffm≥g_put_image
(
ffm≥g
 *ffmpeg)

616 
	`ffm≥g_put_‰ame
(
ffm≥g
, ffm≥g->
pi˘uª
);

617 
	}
}

620 
	$ffm≥g_put_Ÿhî_image
(
ffm≥g
 *ffm≥g, *
y
,

621 *
u
, *
v
)

623 
AVFøme
 *
pi˘uª
;

625 
pi˘uª
 = 
	`ffm≥g_¥ï¨e_‰ame
(
ffm≥g
, 
y
, 
u
, 
v
);

627 i‡(
pi˘uª
) {

628 
	`ffm≥g_put_‰ame
(
ffm≥g
, 
pi˘uª
);

629 
	`av_‰ì
(
pi˘uª
);

631 
	}
}

636 
	$ffm≥g_put_‰ame
(
ffm≥g
 *ffm≥g, 
AVFøme
 *
pic
)

638 
out_size
, 
ªt
;

639 #ifde‡
FFMPEG_AVWRITEFRAME_NEWAPI


640 
AVPackë
 
pkt
;

642 
	`av_öô_∑ckë
(&
pkt
);

643 
pkt
.
°ªam_ödex
 = 
ffm≥g
->
video_°
->
ödex
;

646 i‡(
ffm≥g
->
oc
->
of‹m©
->
Êags
 & 
AVFMT_RAWPICTURE
) {

648 #ifde‡
FFMPEG_AVWRITEFRAME_NEWAPI


649 
pkt
.
Êags
 |
AV_PKT_FLAG_KEY
;

650 
pkt
.
d©a
 = (
uöt8_t
 *)
pic
;

651 
pkt
.
size
 = (
AVPi˘uª
);

652 
ªt
 = 
	`av_wrôe_‰ame
(
ffm≥g
->
oc
, &
pkt
);

654 
ªt
 = 
	`av_wrôe_‰ame
(
ffm≥g
->
oc
, ffm≥g->
video_°
->
ödex
,

655 (
uöt8_t
 *)
pic
, (
AVPi˘uª
));

659 
out_size
 = 
	`avcodec_ícode_video
(
	`AVSTREAM_CODEC_PTR
(
ffm≥g
->
video_°
),

660 
ffm≥g
->
video_outbuf
,

661 
ffm≥g
->
video_outbuf_size
, 
pic
);

664 i‡(
out_size
 != 0) {

667 #ifde‡
FFMPEG_AVWRITEFRAME_NEWAPI


668 
pkt
.
±s
 = 
	`AVSTREAM_CODEC_PTR
(
ffm≥g
->
video_°
)->
coded_‰ame
->pts;

669 i‡(
	`AVSTREAM_CODEC_PTR
(
ffm≥g
->
video_°
)->
coded_‰ame
->
key_‰ame
) {

670 
pkt
.
Êags
 |
AV_PKT_FLAG_KEY
;

672 
pkt
.
d©a
 = 
ffm≥g
->
video_outbuf
;

673 
pkt
.
size
 = 
out_size
;

674 
ªt
 = 
	`av_wrôe_‰ame
(
ffm≥g
->
oc
, &
pkt
);

676 
ªt
 = 
	`av_wrôe_‰ame
(
ffm≥g
->
oc
, ffm≥g->
video_°
->
ödex
,

677 
ffm≥g
->
video_outbuf
, 
out_size
);

680 
ªt
 = 0;

684 i‡(
ªt
 != 0) {

685 
	`mŸi⁄_log
(
LOG_ERR
, 1, "Error while writing video frame");

688 
	}
}

697 
AVFøme
 *
	$ffm≥g_¥ï¨e_‰ame
(
ffm≥g
 *ffm≥g, *
y
,

698 *
u
, *
v
)

700 
AVFøme
 *
pi˘uª
;

702 
pi˘uª
 = 
	`avcodec_Æloc_‰ame
();

703 i‡(!
pi˘uª
) {

704 
	`mŸi⁄_log
(
LOG_ERR
, 1, "CouldÇotálloc frame");

705  
NULL
;

709 i‡(
ffm≥g
->
vbr
)

710 
pi˘uª
->
quÆôy
 = 
ffm≥g
->
vbr
;

714 
pi˘uª
->
d©a
[0] = 
y
;

715 
pi˘uª
->
d©a
[1] = 
u
;

716 
pi˘uª
->
d©a
[2] = 
v
;

717 
pi˘uª
->
löesize
[0] = 
ffm≥g
->
c
->
width
;

718 
pi˘uª
->
löesize
[1] = 
ffm≥g
->
c
->
width
 / 2;

719 
pi˘uª
->
löesize
[2] = 
ffm≥g
->
c
->
width
 / 2;

721  
pi˘uª
;

722 
	}
}

737 
	$ffm≥g_deöãæa˚
(*
img
, 
width
, 
height
)

739 
AVFøme
 *
pi˘uª
;

740 
width2
 = 
width
 / 2;

742 
pi˘uª
 = 
	`avcodec_Æloc_‰ame
();

743 i‡(!
pi˘uª
) {

744 
	`mŸi⁄_log
(
LOG_ERR
, 1, "CouldÇotálloc frame");

748 
pi˘uª
->
d©a
[0] = 
img
;

749 
pi˘uª
->
d©a
[1] = 
img
+
width
*
height
;

750 
pi˘uª
->
d©a
[2] =Öi˘uª->d©a[1]+(
width
*
height
)/4;

751 
pi˘uª
->
löesize
[0] = 
width
;

752 
pi˘uª
->
löesize
[1] = 
width2
;

753 
pi˘uª
->
löesize
[2] = 
width2
;

756 
	`avpi˘uª_deöãæa˚
((
AVPi˘uª
 *)
pi˘uª
, (AVPi˘uª *Ìi˘uª, 
PIX_FMT_YUV420P
, 
width
, 
height
);

758 
	`av_‰ì
(
pi˘uª
);

761 
	}
}

775 
	$ffm≥g_avcodec_log
(*
ign‹eme
 
ATTRIBUTE_UNUSED
, 
î∫o_Êag
, c⁄° *
fmt
, 
va_li°
 
vl
)

777 
buf
[1024];

780 i‡(
debug_Àvñ
) {

783 
	`v¢¥ötf
(
buf
, (buf), 
fmt
, 
vl
);

786 
	`mŸi⁄_log
(
LOG_ERR
, 0, "ffm≥g_avcodec_log: %†- fœg %d", 
buf
, 
î∫o_Êag
);

788 
	}
}

	@ffmpeg.h

1 #i‚de‡
_INCLUDE_FFMPEG_H_


2 
	#_INCLUDE_FFMPEG_H_


	)

4 #ifde‡
HAVE_FFMPEG


5 
	~<î∫o.h
>

7 #ifde‡
FFMPEG_NEW_INCLUDES


8 
	~<libavf‹m©/avf‹m©.h
>

10 
	~<avf‹m©.h
>

13 #i‚de‡
AVERROR


15 #i‡
EINVAL
 > 0

16 
	#AVERROR
(
e
Ë(-”))

	)

17 
	#AVUNERROR
(
e
Ë(-”))

	)

20 
	#AVERROR
(
e
Ë”)

	)

21 
	#AVUNERROR
(
e
Ë”)

	)

29 
	~<°dio.h
>

30 
	~<°d¨g.h
>

35 
	#TIMELAPSE_CODEC
 "m≥g1_é"

	)

37 
	sffm≥g
 {

38 #ifde‡
HAVE_FFMPEG


39 
AVF‹m©C⁄ãxt
 *
	moc
;

40 
AVSåóm
 *
	mvideo_°
;

41 
AVCodecC⁄ãxt
 *
	mc
;

43 
AVFøme
 *
	mpi˘uª
;

44 
uöt8_t
 *
	mvideo_outbuf
;

45 
	mvideo_outbuf_size
;

47 *
	mud©a
;

48 
	mvbr
;

49 
	mcodec
[20];

51 
	mdummy
;

56 
ffm≥g_öô
();

63 
ffm≥g
 *
ffm≥g_›í
(

64 *
ffm≥g_video_codec
,

65 *
fûíame
,

66 *
y
,

67 *
u
,

68 *
v
,

69 
width
,

70 
height
,

71 
øã
,

72 
bps
,

73 
vbr


77 
ffm≥g_put_image
(
ffm≥g
 *);

80 
ffm≥g_put_Ÿhî_image
(

81 
ffm≥g
 *ffmpeg,

82 *
y
,

83 *
u
,

84 *
v


88 
ffm≥g_˛o£
(
ffm≥g
 *);

91 
ffm≥g_deöãæa˚
(*, , );

94 
ffm≥g_avcodec_log
(*, , c⁄° *, 
va_li°
);

	@jpegutils.c

27 #ifde‡
HAVE_CONFIG_H


28 
	~"c⁄fig.h
"

31 
	~"mŸi⁄.h
"

32 
	~"j≥gutûs.h
"

33 
	~<£tjmp.h
>

34 
	~<j≥glib.h
>

35 
	~<jîr‹.h
>

36 
	~<as£π.h
>

54 
j≥g_buf„r_§c
(
j_decom¥ess_±r
 
cöfo
, *
buf„r
,

55 
num
);

56 
j≥g_buf„r_de°
(
j_com¥ess_±r
 
cöfo
, *
buf„r
,

57 
Àn
);

58 
j≥g_skù_ff
(
j_decom¥ess_±r
 
cöfo
);

74 
	$öô_sour˚
(
j_decom¥ess_±r
 
cöfo
 
ATTRIBUTE_UNUSED
)

77 
	}
}

89 
uöt8_t
 
	gEOI_d©a
[2] = { 0xFF, 0xD9 };

91 
boﬁón
 
	$fûl_öput_buf„r
(
j_decom¥ess_±r
 
cöfo
)

93 
cöfo
->
§c
->
√xt_öput_byã
 = 
EOI_d©a
;

94 
cöfo
->
§c
->
byãs_ö_buf„r
 = 2;

95  
TRUE
;

96 
	}
}

105 
	$skù_öput_d©a
(
j_decom¥ess_±r
 
cöfo
, 
num_byãs
)

107 i‡(
num_byãs
 > 0) {

108 i‡(
num_byãs
 > (Ë
cöfo
->
§c
->
byãs_ö_buf„r
)

109 
num_byãs
 = (Ë
cöfo
->
§c
->
byãs_ö_buf„r
;

110 
cöfo
->
§c
->
√xt_öput_byã
 +(
size_t
Ë
num_byãs
;

111 
cöfo
->
§c
->
byãs_ö_buf„r
 -(
size_t
Ë
num_byãs
;

113 
	}
}

121 
	$ãrm_sour˚
(
j_decom¥ess_±r
 
cöfo
 
ATTRIBUTE_UNUSED
)

124 
	}
}

131 
	$j≥g_buf„r_§c
(
j_decom¥ess_±r
 
cöfo
, *
buf„r
, 
num
)

140 i‡(
cöfo
->
§c
 =
NULL
) {

141 
cöfo
->
§c
 = (
j≥g_sour˚_mgr
 *)

142 (*
cöfo
->
mem
->
Æloc_smÆl
Ë((
j_comm⁄_±r
Ëcöfo, 
JPOOL_PERMANENT
,

143  (
j≥g_sour˚_mgr
));

146 
cöfo
->
§c
->
öô_sour˚
 = init_source;

147 
cöfo
->
§c
->
fûl_öput_buf„r
 = fill_input_buffer;

148 
cöfo
->
§c
->
skù_öput_d©a
 = skip_input_data;

149 
cöfo
->
§c
->
ªsync_to_ª°¨t
 = 
j≥g_ªsync_to_ª°¨t
;

150 
cöfo
->
§c
->
ãrm_sour˚
 =Åerm_source;

151 
cöfo
->
§c
->
byãs_ö_buf„r
 = 
num
;

152 
cöfo
->
§c
->
√xt_öput_byã
 = (
JOCTET
 *Ë
buf„r
;

153 
	}
}

162 
	$j≥g_skù_ff
(
j_decom¥ess_±r
 
cöfo
)

164 
cöfo
->
§c
->
byãs_ö_buf„r
 > 1

165 && 
cöfo
->
§c
->
√xt_öput_byã
[0] == 0xff

166 && 
cöfo
->
§c
->
√xt_öput_byã
[1] == 0xff) {

167 
cöfo
->
§c
->
byãs_ö_buf„r
--;

168 
cöfo
->
§c
->
√xt_öput_byã
++;

170 
	}
}

187 
	$öô_de°ö©i⁄
(
j_com¥ess_±r
 
cöfo
 
ATTRIBUTE_UNUSED
)

190 
	}
}

201 
boﬁón
 
	$em±y_ouçut_buf„r
(
j_com¥ess_±r
 
cöfo
)

204 
	`mŸi⁄_log
(
LOG_ERR
, 0, "%s: Giví j≥g buf„∏wa†toÿsmÆl", 
__FUNCTION__
);

205 
	`ERREXIT
 (
cöfo
, 
JERR_BUFFER_SIZE
);

206  
TRUE
;

207 
	}
}

219 
	$ãrm_de°ö©i⁄
(
j_com¥ess_±r
 
cöfo
 
ATTRIBUTE_UNUSED
)

222 
	}
}

231 
	$j≥g_buf„r_de°
(
j_com¥ess_±r
 
cöfo
, *
buf
, 
Àn
)

240 i‡(
cöfo
->
de°
 =
NULL
) {

241 
cöfo
->
de°
 = (
j≥g_de°ö©i⁄_mgr
 *)

242 (*
cöfo
->
mem
->
Æloc_smÆl
Ë((
j_comm⁄_±r
Ëcöfo, 
JPOOL_PERMANENT
,

243  (
j≥g_de°ö©i⁄_mgr
));

246 
cöfo
->
de°
->
öô_de°ö©i⁄
 = init_destination;

247 
cöfo
->
de°
->
em±y_ouçut_buf„r
 =Émpty_output_buffer;

248 
cöfo
->
de°
->
ãrm_de°ö©i⁄
 =Åerm_destination;

249 
cöfo
->
de°
->
‰ì_ö_buf„r
 = 
Àn
;

250 
cöfo
->
de°
->
√xt_ouçut_byã
 = (
JOCTET
 *Ë
buf
;

251 
	}
}

268 
	smy_îr‹_mgr
 {

269 
j≥g_îr‹_mgr
 
	mpub
;

270 
jmp_buf
 
	m£tjmp_buf„r
;

273 
JMETHOD
(, 
‹igöÆ_emô_mesßge
, (
j_comm⁄_±r
 
cöfo
, 
msg_Àvñ
));

275 
	mw¨nög_£í
;

278 
	$my_îr‹_exô
(
j_comm⁄_±r
 
cöfo
)

281 
my_îr‹_mgr
 *
myîr
 = (my_îr‹_mg∏*Ë
cöfo
->
îr
;

285 (*
cöfo
->
îr
->
ouçut_mesßge
) (cinfo);

288 
	`l⁄gjmp
 (
myîr
->
£tjmp_buf„r
, 1);

289 
	}
}

291 
	$my_emô_mesßge
(
j_comm⁄_±r
 
cöfo
, 
msg_Àvñ
)

294 
my_îr‹_mgr
 *
myîr
 = (my_îr‹_mg∏*Ë
cöfo
->
îr
;

296 if(
msg_Àvñ
 < 0)

297 
myîr
->
w¨nög_£í
 = 1;

300 (
myîr
->
‹igöÆ_emô_mesßge
)(
cöfo
, 
msg_Àvñ
);

301 
	}
}

303 
	#MAX_LUMA_WIDTH
 4096

	)

304 
	#MAX_CHROMA_WIDTH
 2048

	)

306 
	gbuf0
[16][
MAX_LUMA_WIDTH
];

307 
	gbuf1
[8][
MAX_CHROMA_WIDTH
];

308 
	gbuf2
[8][
MAX_CHROMA_WIDTH
];

309 
	gchr1
[8][
MAX_CHROMA_WIDTH
];

310 
	gchr2
[8][
MAX_CHROMA_WIDTH
];

316 
	$add_huff_èbÀ
(
j_decom¥ess_±r
 
döfo
, 
JHUFF_TBL
 **
htbÕå
,

317 c⁄° 
UINT8
 *
bôs
, c⁄° UINT8 *
vÆ
)

320 
nsymbﬁs
, 
Àn
;

322 i‡(*
htbÕå
 =
NULL
)

323 *
htbÕå
 = 
	`j≥g_Æloc_huff_èbÀ
((
j_comm⁄_±r
Ë
döfo
);

326 
	`mem˝y
((*
htbÕå
)->
bôs
, bits, ((*htblptr)->bits));

332 
nsymbﬁs
 = 0;

334 
Àn
 = 1;Üen <= 16;Üen++)

335 
nsymbﬁs
 +
bôs
[
Àn
];

337 i‡(
nsymbﬁs
 < 1 ||Çsymbols > 256)

338 
	`mŸi⁄_log
(
LOG_ERR
, 0, "%s: Given jpeg buffer wasÅoo small",

339 
__FUNCTION__
);

341 
	`mem˝y
((*
htbÕå
)->
huffvÆ
, 
vÆ
, 
nsymbﬁs
 * (
UINT8
));

342 
	}
}

346 
	$°d_huff_èbÀs
 (
j_decom¥ess_±r
 
döfo
)

350 c⁄° 
UINT8
 
bôs_dc_lumö™˚
[17] =

352 c⁄° 
UINT8
 
vÆ_dc_lumö™˚
[] =

355 c⁄° 
UINT8
 
bôs_dc_chromö™˚
[17] =

357 c⁄° 
UINT8
 
vÆ_dc_chromö™˚
[] =

360 c⁄° 
UINT8
 
bôs_ac_lumö™˚
[17] =

362 c⁄° 
UINT8
 
vÆ_ac_lumö™˚
[] =

385 c⁄° 
UINT8
 
bôs_ac_chromö™˚
[17] =

387 c⁄° 
UINT8
 
vÆ_ac_chromö™˚
[] =

410 
	`add_huff_èbÀ
(
döfo
, &döfo->
dc_huff_tbl_±rs
[0],

411 
bôs_dc_lumö™˚
, 
vÆ_dc_lumö™˚
);

412 
	`add_huff_èbÀ
(
döfo
, &döfo->
ac_huff_tbl_±rs
[0],

413 
bôs_ac_lumö™˚
, 
vÆ_ac_lumö™˚
);

414 
	`add_huff_èbÀ
(
döfo
, &döfo->
dc_huff_tbl_±rs
[1],

415 
bôs_dc_chromö™˚
, 
vÆ_dc_chromö™˚
);

416 
	`add_huff_èbÀ
(
döfo
, &döfo->
ac_huff_tbl_±rs
[1],

417 
bôs_ac_chromö™˚
, 
vÆ_ac_chromö™˚
);

418 
	}
}

422 
	$gu¨™ãe_huff_èbÀs
(
j_decom¥ess_±r
 
döfo
)

424 i‡((
döfo
->
dc_huff_tbl_±rs
[0] =
NULL
) &&

425 (
döfo
->
dc_huff_tbl_±rs
[1] =
NULL
) &&

426 (
döfo
->
ac_huff_tbl_±rs
[0] =
NULL
) &&

427 (
döfo
->
ac_huff_tbl_±rs
[1] =
NULL
)) {

428 
	`°d_huff_èbÀs
(
döfo
);

430 
	}
}

453 
	$decode_j≥g_øw
 (*
j≥g_d©a
, 
Àn
,

454 
ôy≥
, 
˘y≥
, 
width
,

455 
height
, *
øw0
,

456 *
øw1
, *
øw2
)

458 
numfõlds
, 
hsf
[3], 
fõld
, 
yl
, 
yc
;

459 
i
, 
x¶
, 
xsc
, 
xs
, 
hdown
;

460 
x
, 
y
 = 0, 
vsf
[3], 
xd
;

462 
JSAMPROW
 
row0
[16] = { 
buf0
[0], buf0[1], buf0[2], buf0[3],

463 
buf0
[4], buf0[5], buf0[6], buf0[7],

464 
buf0
[8], buf0[9], buf0[10], buf0[11],

465 
buf0
[12], buf0[13], buf0[14], buf0[15]};

467 
JSAMPROW
 
row1
[8] = { 
buf1
[0], buf1[1], buf1[2], buf1[3],

468 
buf1
[4], buf1[5], buf1[6], buf1[7]};

470 
JSAMPROW
 
row2
[16] = { 
buf2
[0], buf2[1], buf2[2], buf2[3],

471 
buf2
[4], buf2[5], buf2[6], buf2[7]};

473 
JSAMPROW
 
row1_444
[16], 
row2_444
[16];

475 
JSAMPARRAY
 
sˇ«ºay
[3] = { 
row0
, 
row1
, 
row2
};

477 
j≥g_decom¥ess_°ru˘
 
döfo
;

478 
my_îr‹_mgr
 
jîr
;

481 
döfo
.
îr
 = 
	`j≥g_°d_îr‹
 (&
jîr
.
pub
);

482 
jîr
.
pub
.
îr‹_exô
 = 
my_îr‹_exô
;

484 
jîr
.
‹igöÆ_emô_mesßge
 = jîr.
pub
.
emô_mesßge
;

485 
jîr
.
pub
.
emô_mesßge
 = 
my_emô_mesßge
;

486 
jîr
.
w¨nög_£í
 = 0;

489 i‡(
	`£tjmp
 (
jîr
.
£tjmp_buf„r
)) {

491 
	`j≥g_de°roy_decom¥ess
 (&
döfo
);

495 
	`j≥g_¸óã_decom¥ess
 (&
döfo
);

497 
	`j≥g_buf„r_§c
 (&
döfo
, 
j≥g_d©a
, 
Àn
);

502 
	`j≥g_ªad_hódî
 (&
döfo
, 
TRUE
);

503 
döfo
.
øw_d©a_out
 = 
TRUE
;

504 
döfo
.
out_cﬁ‹_•a˚
 = 
JCS_YCbCr
;

505 
döfo
.
d˘_mëhod
 = 
JDCT_IFAST
;

506 
	`gu¨™ãe_huff_èbÀs
(&
döfo
);

507 
	`j≥g_°¨t_decom¥ess
 (&
döfo
);

509 i‡(
döfo
.
ouçut_comp⁄íts
 != 3) {

510 
	`mŸi⁄_log
(
LOG_ERR
, 0, "%s: Output components of JPEG image = %d, must be 3",

511 
__FUNCTION__
, 
döfo
.
ouçut_comp⁄íts
);

512 
ERR_EXIT
;

515 
i
 = 0; i < 3; i++) {

516 
hsf
[
i
] = 
döfo
.
comp_öfo
[i].
h_ßmp_Á˘‹
;

517 
vsf
[
i
] = 
döfo
.
comp_öfo
[i].
v_ßmp_Á˘‹
;

520 i‡((
hsf
[0] != 2 && hsf[0] != 1) || hsf[1] != 1 || hsf[2] != 1 ||

521 (
vsf
[0] != 1 && vsf[0] != 2) || vsf[1] != 1 || vsf[2] != 1) {

522 
	`mŸi⁄_log
(
LOG_ERR
, 0, "%s: Unsupported sampling factors, hsf=(%d, %d, %d) "

523 "vsf=(%d, %d, %dË!", 
__FUNCTION__
, 
hsf
[0], hsf[1], hsf[2], 
vsf
[0], vsf[1], vsf[2]);

524 
ERR_EXIT
;

527 i‡(
hsf
[0] == 1) {

528 i‡(
height
 % 8 != 0) {

529 
	`mŸi⁄_log
(
LOG_ERR
, 0, "%s: YUV 4:4:4 sampling, but image height %d "

530 "nŸ dividabÀ by 8 !", 
__FUNCTION__
, 
height
);

531 
ERR_EXIT
;

534 
y
 = 0; y < 16; y++) {

535 
row1_444
[
y
] = (*)
	`mÆloc
(
döfo
.
ouçut_width
 * ());

536 
row2_444
[
y
] = (*)
	`mÆloc
(
döfo
.
ouçut_width
 * ());

538 
sˇ«ºay
[1] = 
row1_444
;

539 
sˇ«ºay
[2] = 
row2_444
;

544 i‡(
döfo
.
ouçut_height
 =
height
) {

545 
numfõlds
 = 1;

546 } i‡(2 * 
döfo
.
ouçut_height
 =
height
) {

547 
numfõlds
 = 2;

549 
	`mŸi⁄_log
(
LOG_ERR
, 0, "%s: Read JPEG:Ñequested height = %d, "

550 "heighào‡imagê%d", 
__FUNCTION__
, 
height
, 
döfo
.
ouçut_height
);

551 
ERR_EXIT
;

556 i‡(
döfo
.
ouçut_width
 > 
MAX_LUMA_WIDTH
) {

557 
	`mŸi⁄_log
(
LOG_ERR
, 0, "%s: Image width of %dÉxceeds max",

558 
__FUNCTION__
, 
döfo
.
ouçut_width
);

559 
ERR_EXIT
;

562 i‡(
width
 < 2 * 
döfo
.
ouçut_width
 / 3) {

564 
hdown
 = 1;

565 i‡(2 * 
width
 < 
döfo
.
ouçut_width
)

566 
x¶
 = (
döfo
.
ouçut_width
 - 2 * 
width
) / 2;

568 
x¶
 = 0;

569 } i‡(
width
 =2 * 
döfo
.
ouçut_width
 / 3) {

571 
hdown
 = 2;

572 
x¶
 = 0;

575 
hdown
 = 0;

576 i‡(
width
 < 
döfo
.
ouçut_width
)

577 
x¶
 = (
döfo
.
ouçut_width
 - 
width
) / 2;

579 
x¶
 = 0;

584 
x¶
 = xsl & ~1;

585 
xsc
 = 
x¶
 / 2;

587 
yl
 = 
yc
 = 0;

589 
fõld
 = 0; fõld < 
numfõlds
; field++) {

590 i‡(
fõld
 > 0) {

591 
	`j≥g_ªad_hódî
 (&
döfo
, 
TRUE
);

592 
döfo
.
øw_d©a_out
 = 
TRUE
;

593 
döfo
.
out_cﬁ‹_•a˚
 = 
JCS_YCbCr
;

594 
döfo
.
d˘_mëhod
 = 
JDCT_IFAST
;

595 
	`j≥g_°¨t_decom¥ess
 (&
döfo
);

598 i‡(
numfõlds
 == 2) {

599 
ôy≥
) {

600 
Y4M_ILACE_TOP_FIRST
:

601 
yl
 = 
yc
 = 
fõld
;

603 
Y4M_ILACE_BOTTOM_FIRST
:

604 
yl
 = 
yc
 = (1 - 
fõld
);

607 
	`mŸi⁄_log
(
LOG_ERR
, 0, "%s: Input is interlaced butÇo interlacing set",

608 
__FUNCTION__
);

609 
ERR_EXIT
;

612 
yl
 = 
yc
 = 0;

615 
döfo
.
ouçut_sˇ∆öe
 < döfo.
ouçut_height
) {

617 
	`j≥g_ªad_øw_d©a
 (&
döfo
, 
sˇ«ºay
, 8 * 
vsf
[0]);

619 
y
 = 0; y < 8 * 
vsf
[0]; 
yl
 +
numfõlds
, y++) {

620 
xd
 = 
yl
 * 
width
;

621 
xs
 = 
x¶
;

623 i‡(
hdown
 == 0) {

624 
x
 = 0; x < 
width
; x++)

625 
øw0
[
xd
++] = 
row0
[
y
][
xs
++];

626 } i‡(
hdown
 == 1) {

627 
x
 = 0; x < 
width
; x++, 
xs
 += 2)

628 
øw0
[
xd
++] = (
row0
[
y
][
xs
] +Ñow0[y][xs + 1]) >> 1;

630 
x
 = 0; x < 
width
 / 2; x++, 
xd
 +2, 
xs
 += 3) {

631 
øw0
[
xd
] = (2 * 
row0
[
y
][
xs
] +Ñow0[y][xs + 1]) / 3;

632 
øw0
[
xd
 + 1] = (2 * 
row0
[
y
][
xs
 + 2] +Ñow0[y][xs + 1]) / 3;

639 
y
 = 0; y < 8; y++) {

640 
xs
 = 
xsc
;

642 i‡(
hsf
[0] == 1)

643 
x
 = 0; x < 
width
 / 2; x++, 
xs
++) {

644 
row1
[
y
][
xs
] = (
row1_444
[y][2*
x
] +Ñow1_444[y][2*x + 1]) >> 1;

645 
row2
[
y
][
xs
] = (
row2_444
[y][2*
x
] +Ñow2_444[y][2*x + 1]) >> 1;

648 
xs
 = 
xsc
;

649 i‡(
hdown
 == 0) {

650 
x
 = 0; x < 
width
 / 2; x++, 
xs
++) {

651 
chr1
[
y
][
x
] = 
row1
[y][
xs
];

652 
chr2
[
y
][
x
] = 
row2
[y][
xs
];

654 } i‡(
hdown
 == 1) {

655 
x
 = 0; x < 
width
 / 2; x++, 
xs
 += 2) {

656 
chr1
[
y
][
x
] = (
row1
[y][
xs
] +Ñow1[y][xs + 1]) >> 1;

657 
chr2
[
y
][
x
] = (
row2
[y][
xs
] +Ñow2[y][xs + 1]) >> 1;

660 
x
 = 0; x < 
width
 / 2; x +2, 
xs
 += 3) {

661 
chr1
[
y
][
x
] = (2 * 
row1
[y][
xs
] +Ñow1[y][xs + 1]) / 3;

662 
chr1
[
y
][
x
 + 1] = (2 * 
row1
[y][
xs
 + 2] +Ñow1[y][xs + 1]) / 3;

663 
chr2
[
y
][
x
] = (2 * 
row2
[y][
xs
] +Ñow2[y][xs + 1]) / 3;

664 
chr2
[
y
][
x
 + 1] = (2 * 
row2
[y][
xs
 + 2] +Ñow2[y][xs + 1]) / 3;

671 
˘y≥
) {

672 
Y4M_CHROMA_422
:

673 i‡(
vsf
[0] == 1) {

675 
y
 = 0; y < 8 ; y++, 
yc
 +
numfõlds
) {

676 
xd
 = 
yc
 * 
width
 / 2;

678 
x
 = 0; x < 
width
 / 2; x++, 
xd
++) {

679 
øw1
[
xd
] = 
chr1
[
y
][
x
];

680 
øw2
[
xd
] = 
chr2
[
y
][
x
];

685 
y
 = 0; y < 8 ; y++) {

686 
xd
 = 
yc
 * 
width
 / 2;

688 
x
 = 0; x < 
width
 / 2; x++, 
xd
++) {

689 
øw1
[
xd
] = 
chr1
[
y
][
x
];

690 
øw2
[
xd
] = 
chr2
[
y
][
x
];

693 
yc
 +
numfõlds
;

694 
xd
 = 
yc
 * 
width
 / 2;

696 
x
 = 0; x < 
width
 / 2; x++, 
xd
++) {

697 
øw1
[
xd
] = 
chr1
[
y
][
x
];

698 
øw2
[
xd
] = 
chr2
[
y
][
x
];

701 
yc
 +
numfõlds
;

711 i‡(
vsf
[0] == 1) {

713 
y
 = 0; y < 8 ; y +2, 
yc
 +
numfõlds
) {

714 
xd
 = 
yc
 * 
width
 / 2;

716 
x
 = 0; x < 
width
 / 2; x++, 
xd
++) {

717 
	`as£π
(
xd
 < (
width
 * 
height
 / 4));

718 
øw1
[
xd
] = (
chr1
[
y
][
x
] + chr1[y + 1][x]) >> 1;

719 
øw2
[
xd
] = (
chr2
[
y
][
x
] + chr2[y + 1][x]) >> 1;

725 
y
 = 0; y < 8 ; y++, 
yc
 +
numfõlds
) {

726 
xd
 = 
yc
 * 
width
 / 2;

728 
x
 = 0; x < 
width
 / 2; x++, 
xd
++) {

729 
øw1
[
xd
] = 
chr1
[
y
][
x
];

730 
øw2
[
xd
] = 
chr2
[
y
][
x
];

738 (Ë
	`j≥g_föish_decom¥ess
 (&
döfo
);

739 i‡(
fõld
 =0 && 
numfõlds
 > 1)

740 
	`j≥g_skù_ff
 (&
döfo
);

743 i‡(
hsf
[0] == 1) {

744 
y
 = 0; y < 16; y++) {

745 
	`‰ì
(
row1_444
[
y
]);

746 
	`‰ì
(
row2_444
[
y
]);

750 
	`j≥g_de°roy_decom¥ess
 (&
döfo
);

752 i‡(
jîr
.
w¨nög_£í
)

757 
ERR_EXIT
:

758 
	`j≥g_de°roy_decom¥ess
 (&
döfo
);

760 
	}
}

772 
	$decode_j≥g_gøy_øw
(*
j≥g_d©a
, 
Àn
,

773 
ôy≥
, 
˘y≥
, 
width
,

774 
height
, *
øw0
,

775 *
øw1
, *
øw2
)

777 
numfõlds
, 
hsf
[3], 
fõld
, 
yl
, 
yc
, 
x¶
, 
xsc
, 
xs
, 
xd
, 
hdown
;

778 
x
, 
y
, 
vsf
[3];

780 
JSAMPROW
 
row0
[16] = { 
buf0
[0], buf0[1], buf0[2], buf0[3],

781 
buf0
[4], buf0[5], buf0[6], buf0[7],

782 
buf0
[8], buf0[9], buf0[10], buf0[11],

783 
buf0
[12], buf0[13], buf0[14], buf0[15]};

785 
JSAMPARRAY
 
sˇ«ºay
[3] = { 
row0
 };

786 
j≥g_decom¥ess_°ru˘
 
döfo
;

787 
my_îr‹_mgr
 
jîr
;

790 
döfo
.
îr
 = 
	`j≥g_°d_îr‹
 (&
jîr
.
pub
);

791 
jîr
.
pub
.
îr‹_exô
 = 
my_îr‹_exô
;

794 i‡(
	`£tjmp
 (
jîr
.
£tjmp_buf„r
)) {

796 
	`j≥g_de°roy_decom¥ess
 (&
döfo
);

800 
	`j≥g_¸óã_decom¥ess
 (&
döfo
);

802 
	`j≥g_buf„r_§c
 (&
döfo
, 
j≥g_d©a
, 
Àn
);

807 
	`j≥g_ªad_hódî
 (&
döfo
, 
TRUE
);

808 
döfo
.
øw_d©a_out
 = 
TRUE
;

809 
döfo
.
out_cﬁ‹_•a˚
 = 
JCS_GRAYSCALE
;

810 
döfo
.
d˘_mëhod
 = 
JDCT_IFAST
;

812 i‡(
döfo
.
j≥g_cﬁ‹_•a˚
 !
JCS_GRAYSCALE
) {

813 
	`mŸi⁄_log
(
LOG_ERR
, 0, "%s: Expected grayscale colorspace for JPEGÑaw decoding",

814 
__FUNCTION__
);

815 
ERR_EXIT
;

818 
	`gu¨™ãe_huff_èbÀs
(&
döfo
);

819 
	`j≥g_°¨t_decom¥ess
 (&
döfo
);

821 
hsf
[0] = 1; hsf[1] = 1; hsf[2] = 1;

822 
vsf
[0]= 1; vsf[1] = 1; vsf[2] = 1;

826 i‡(
döfo
.
ouçut_height
 =
height
) {

827 
numfõlds
 = 1;

828 } i‡(2 * 
döfo
.
ouçut_height
 =
height
) {

829 
numfõlds
 = 2;

831 
	`mŸi⁄_log
(
LOG_ERR
, 0, "%s: Read JPEG:Ñequested height = %d, "

832 "heighào‡imagê%d", 
__FUNCTION__
, 
height
, 
döfo
.
ouçut_height
);

833 
ERR_EXIT
;

838 i‡(
döfo
.
ouçut_width
 > 
MAX_LUMA_WIDTH
) {

839 
	`mŸi⁄_log
(
LOG_ERR
, 0, "%s: Image width of %dÉxceeds max",

840 
__FUNCTION__
, 
döfo
.
ouçut_width
);

841 
ERR_EXIT
;

844 i‡(
width
 < 2 * 
döfo
.
ouçut_width
 / 3) {

846 
hdown
 = 1;

847 i‡(2 * 
width
 < 
döfo
.
ouçut_width
)

848 
x¶
 = (
döfo
.
ouçut_width
 - 2 * 
width
) / 2;

850 
x¶
 = 0;

851 } i‡(
width
 =2 * 
döfo
.
ouçut_width
 / 3) {

853 
hdown
 = 2;

854 
x¶
 = 0;

857 
hdown
 = 0;

858 i‡(
width
 < 
döfo
.
ouçut_width
)

859 
x¶
 = (
döfo
.
ouçut_width
 - 
width
) / 2;

861 
x¶
 = 0;

866 
x¶
 = xsl & ~1;

867 
xsc
 = 
x¶
 / 2;

869 
yl
 = 
yc
 = 0;

871 
fõld
 = 0; fõld < 
numfõlds
; field++) {

872 i‡(
fõld
 > 0) {

873 
	`j≥g_ªad_hódî
 (&
döfo
, 
TRUE
);

874 
döfo
.
øw_d©a_out
 = 
TRUE
;

875 
döfo
.
out_cﬁ‹_•a˚
 = 
JCS_GRAYSCALE
;

876 
döfo
.
d˘_mëhod
 = 
JDCT_IFAST
;

877 
	`j≥g_°¨t_decom¥ess
 (&
döfo
);

880 i‡(
numfõlds
 == 2) {

881 
ôy≥
) {

882 
Y4M_ILACE_TOP_FIRST
:

883 
yl
 = 
yc
 = 
fõld
;

885 
Y4M_ILACE_BOTTOM_FIRST
:

886 
yl
 = 
yc
 = (1 - 
fõld
);

889 
	`mŸi⁄_log
(
LOG_ERR
, 0, "%s: Input is interlaced butÇo interlacing set",

890 
__FUNCTION__
);

891 
ERR_EXIT
;

894 
yl
 = 
yc
 = 0;

897 
döfo
.
ouçut_sˇ∆öe
 < döfo.
ouçut_height
) {

898 
	`j≥g_ªad_øw_d©a
 (&
döfo
, 
sˇ«ºay
, 16);

900 
y
 = 0; y < 8 * 
vsf
[0]; 
yl
 +
numfõlds
, y++) {

901 
xd
 = 
yl
 * 
width
;

902 
xs
 = 
x¶
;

904 i‡(
hdown
 == 0) {

905 
x
 = 0; x < 
width
; x++)

906 
øw0
[
xd
++] = 
row0
[
y
][
xs
++];

907 } i‡(
hdown
 == 1) {

908 
x
 = 0; x < 
width
; x++, 
xs
 += 2)

909 
øw0
[
xd
++] = (
row0
[
y
][
xs
] +Ñow0[y][xs + 1]) >> 1;

911 
x
 = 0; x < 
width
 / 2; x++, 
xd
 +2, 
xs
 += 3) {

912 
øw0
[
xd
] = (2 * 
row0
[
y
][
xs
] +Ñow0[y][xs + 1]) / 3;

913 
øw0
[
xd
 + 1] = (2 * 
row0
[
y
][
xs
 + 2] +Ñow0[y][xs + 1]) / 3;

919 
y
 = 0; y < 8; y++) {

920 
xs
 = 
xsc
;

922 i‡(
hdown
 == 0) {

923 
x
 = 0; x < 
width
 / 2; x++, 
xs
++) {

924 
chr1
[
y
][
x
] = 0;

925 
chr2
[
y
][
x
] = 0;

927 } i‡(
hdown
 == 1) {

928 
x
 = 0; x < 
width
 / 2; x++, 
xs
 += 2) {

929 
chr1
[
y
][
x
] = 0;

930 
chr2
[
y
][
x
] = 0;

933 
x
 = 0; x < 
width
 / 2; x +2, 
xs
 += 3) {

934 
chr1
[
y
][
x
] = 0;

935 
chr1
[
y
][
x
 + 1] = 0;

937 
chr2
[
y
][
x
] = 0;

938 
chr2
[
y
][
x
 + 1] = 0;

944 
˘y≥
) {

945 
Y4M_CHROMA_422
:

946 i‡(
vsf
[0] == 1) {

948 
y
 = 0; y < 8 ; y++, 
yc
 +
numfõlds
) {

949 
xd
 = 
yc
 * 
width
 / 2;

951 
x
 = 0; x < 
width
 / 2; x++, 
xd
++) {

952 
øw1
[
xd
] = 127;

953 
øw2
[
xd
] = 127;

958 
y
 = 0; y < 8 ; y++) {

959 
xd
 = 
yc
 * 
width
 / 2;

961 
x
 = 0; x < 
width
 / 2; x++, 
xd
++) {

962 
øw1
[
xd
] = 127;

963 
øw2
[
xd
] = 127;

966 
yc
 +
numfõlds
;

967 
xd
 = 
yc
 * 
width
 / 2;

969 
x
 = 0; x < 
width
 / 2; x++, 
xd
++) {

970 
øw1
[
xd
] = 127;

971 
øw2
[
xd
] = 127;

974 
yc
 +
numfõlds
;

984 i‡(
vsf
[0] == 1) {

986 
y
 = 0; y < 8; y +2, 
yc
 +
numfõlds
) {

987 
xd
 = 
yc
 * 
width
 / 2;

989 
x
 = 0; x < 
width
 / 2; x++, 
xd
++) {

990 
øw1
[
xd
] = 127;

991 
øw2
[
xd
] = 127;

997 
y
 = 0; y < 8; y++, 
yc
 +
numfõlds
) {

998 
xd
 = 
yc
 * 
width
 / 2;

1000 
x
 = 0; x < 
width
 / 2; x++, 
xd
++) {

1001 
øw1
[
xd
] = 127;

1002 
øw2
[
xd
] = 127;

1010 (Ë
	`j≥g_föish_decom¥ess
 (&
döfo
);

1012 i‡(
fõld
 =0 && 
numfõlds
 > 1)

1013 
	`j≥g_skù_ff
 (&
döfo
);

1016 
	`j≥g_de°roy_decom¥ess
 (&
döfo
);

1019 
ERR_EXIT
:

1020 
	`j≥g_de°roy_decom¥ess
 (&
döfo
);

1022 
	}
}

1042 
	$ícode_j≥g_øw
(*
j≥g_d©a
, 
Àn
, 
quÆôy
,

1043 
ôy≥
, 
˘y≥
, 
width
,

1044 
height
, *
øw0
,

1045 *
øw1
, *
øw2
)

1047 
numfõlds
, 
fõld
, 
yl
, 
yc
, 
y
, 
i
;

1049 
JSAMPROW
 
row0
[16] = { 
buf0
[0], buf0[1], buf0[2], buf0[3],

1050 
buf0
[4], buf0[5], buf0[6], buf0[7],

1051 
buf0
[8], buf0[9], buf0[10], buf0[11],

1052 
buf0
[12], buf0[13], buf0[14], buf0[15]};

1054 
JSAMPROW
 
row1
[8] = { 
buf1
[0], buf1[1], buf1[2], buf1[3],

1055 
buf1
[4], buf1[5], buf1[6], buf1[7]};

1057 
JSAMPROW
 
row2
[8] = { 
buf2
[0], buf2[1], buf2[2], buf2[3],

1058 
buf2
[4], buf2[5], buf2[6], buf2[7]};

1060 
JSAMPARRAY
 
sˇ«ºay
[3] = { 
row0
, 
row1
, 
row2
};

1062 
j≥g_com¥ess_°ru˘
 
cöfo
;

1063 
my_îr‹_mgr
 
jîr
;

1066 
cöfo
.
îr
 = 
	`j≥g_°d_îr‹
 (&
jîr
.
pub
);

1067 
jîr
.
pub
.
îr‹_exô
 = 
my_îr‹_exô
;

1070 i‡(
	`£tjmp
 (
jîr
.
£tjmp_buf„r
)) {

1072 
	`j≥g_de°roy_com¥ess
 (&
cöfo
);

1076 
	`j≥g_¸óã_com¥ess
 (&
cöfo
);

1078 
	`j≥g_buf„r_de°
(&
cöfo
, 
j≥g_d©a
, 
Àn
);

1082 
cöfo
.
öput_comp⁄íts
 = 3;

1083 
	`j≥g_£t_deÁu…s
 (&
cöfo
);

1084 
	`j≥g_£t_quÆôy
 (&
cöfo
, 
quÆôy
, 
FALSE
);

1086 
cöfo
.
øw_d©a_ö
 = 
TRUE
;

1087 
cöfo
.
ö_cﬁ‹_•a˚
 = 
JCS_YCbCr
;

1088 
cöfo
.
d˘_mëhod
 = 
JDCT_IFAST
;

1090 
cöfo
.
öput_gamma
 = 1.0;

1092 
cöfo
.
comp_öfo
[0].
h_ßmp_Á˘‹
 = 2;

1093 
cöfo
.
comp_öfo
[0].
v_ßmp_Á˘‹
 = 1;

1094 
cöfo
.
comp_öfo
[1].
h_ßmp_Á˘‹
 = 1;

1095 
cöfo
.
comp_öfo
[1].
v_ßmp_Á˘‹
 = 1;

1096 
cöfo
.
comp_öfo
[2].
h_ßmp_Á˘‹
 = 1;

1097 
cöfo
.
comp_öfo
[2].
v_ßmp_Á˘‹
 = 1;

1100 i‡((
width
 > 4096Ë|| (
height
 > 4096)) {

1101 
	`mŸi⁄_log
(
LOG_ERR
, 0, "%s: Image dimensions (%dx%d)ÉxceedÜavtools' max "

1102 "(4096x4096)", 
__FUNCTION__
, 
width
, 
height
);

1103 
ERR_EXIT
;

1106 i‡((
width
 % 16Ë|| (
height
 % 16)) {

1107 
	`mŸi⁄_log
(
LOG_ERR
, 0, "%s: Image dimensions (%dx%d)Çot multiples of 16",

1108 
__FUNCTION__
, 
width
, 
height
);

1109 
ERR_EXIT
;

1112 
cöfo
.
image_width
 = 
width
;

1114 
ôy≥
) {

1115 
Y4M_ILACE_TOP_FIRST
:

1116 
Y4M_ILACE_BOTTOM_FIRST
:

1117 
numfõlds
 = 2;

1120 
numfõlds
 = 1;

1121 i‡(
height
 > 2048) {

1122 
	`mŸi⁄_log
(
LOG_ERR
, 0, "%s: Image height (%d)ÉxceedsÜavtools max "

1123 "f‹Ç⁄-öãæa˚d fømes", 
__FUNCTION__
, 
height
);

1124 
ERR_EXIT
;

1128 
cöfo
.
image_height
 = 
height
 / 
numfõlds
;

1130 
yl
 = 
yc
 = 0;

1132 
fõld
 = 0; fõld < 
numfõlds
; field++) {

1133 
	`j≥g_°¨t_com¥ess
 (&
cöfo
, 
FALSE
);

1135 i‡(
numfõlds
 == 2) {

1136 c⁄° 
JOCTET
 
m¨kî0
[40];

1138 
	`j≥g_wrôe_m¨kî
(&
cöfo
, 
JPEG_APP0
, 
m¨kî0
, 14);

1139 
	`j≥g_wrôe_m¨kî
(&
cöfo
, 
JPEG_APP0
 + 1, 
m¨kî0
, 40);

1141 
ôy≥
) {

1142 
Y4M_ILACE_TOP_FIRST
:

1143 
yl
 = 
yc
 = 
fõld
;

1145 
Y4M_ILACE_BOTTOM_FIRST
:

1146 
yl
 = 
yc
 = (1 - 
fõld
);

1149 
	`mŸi⁄_log
(
LOG_ERR
, 0, "%s: Input is interlaced butÇo interlacing set",

1150 
__FUNCTION__
);

1151 
ERR_EXIT
;

1155 
yl
 = 
yc
 = 0;

1158 
cöfo
.
√xt_sˇ∆öe
 < cöfo.
image_height
) {

1160 
y
 = 0; y < 8 * 
cöfo
.
comp_öfo
[0].
v_ßmp_Á˘‹
;

1161 
yl
 +
numfõlds
, 
y
++) {

1162 
row0
[
y
] = &
øw0
[
yl
 * 
width
];

1165 
y
 = 0; y < 8; y++) {

1166 
row1
[
y
] = &
øw1
[
yc
 * 
width
 / 2];

1167 
row2
[
y
] = &
øw2
[
yc
 * 
width
 / 2];

1169 i‡((
˘y≥
 =
Y4M_CHROMA_422
Ë|| (
y
 % 2))

1170 
yc
 +
numfõlds
;

1173 
	`j≥g_wrôe_øw_d©a
 (&
cöfo
, 
sˇ«ºay
,

1174 8 * 
cöfo
.
comp_öfo
[0].
v_ßmp_Á˘‹
);

1178 (Ë
	`j≥g_föish_com¥ess
 (&
cöfo
);

1182 
i
 = 
Àn
 - 
cöfo
.
de°
->
‰ì_ö_buf„r
;

1184 
	`j≥g_de°roy_com¥ess
 (&
cöfo
);

1185  
i
;

1187 
ERR_EXIT
:

1188 
	`j≥g_de°roy_com¥ess
 (&
cöfo
);

1190 
	}
}

	@jpegutils.h

11 #i‚de‡
__JPEGUTILS_H__


12 
	#__JPEGUTILS_H__


	)

30 
	#Y4M_ILACE_NONE
 0

	)

31 
	#Y4M_ILACE_TOP_FIRST
 1

	)

32 
	#Y4M_ILACE_BOTTOM_FIRST
 2

	)

33 
	#Y4M_ILACE_MIXED
 3

	)

35 
	#Y4M_CHROMA_420JPEG
 0

	)

36 
	#Y4M_CHROMA_420MPEG2
 1

	)

37 
	#Y4M_CHROMA_420PALDV
 2

	)

38 
	#Y4M_CHROMA_444
 3

	)

39 
	#Y4M_CHROMA_422
 4

	)

40 
	#Y4M_CHROMA_411
 5

	)

41 
	#Y4M_CHROMA_MONO
 6

	)

42 
	#Y4M_CHROMA_444ALPHA
 7

	)

46 
decode_j≥g_øw
(*
j≥g_d©a
, 
Àn
,

47 
ôy≥
, 
˘y≥
, 
width
,

48 
height
, *
øw0
,

49 *
øw1
, *
øw2
);

51 
decode_j≥g_gøy_øw
(*
j≥g_d©a
, 
Àn
,

52 
ôy≥
, 
˘y≥
, 
width
,

53 
height
, *
øw0
,

54 *
øw1
, *
øw2
);

56 
ícode_j≥g_øw
(*
j≥g_d©a
, 
Àn
, 
quÆôy
,

57 
ôy≥
, 
˘y≥
, 
width
,

58 
height
, *
øw0
,

59 *
øw1
, *
øw2
);

	@mmx.h

5 #i‚de‡
I386MMX_H


6 
	#I386MMX_H


	)

15 
	mq
;

16 
	muq
;

17 
	md
[2];

18 
	mud
[2];

19 
	mw
[4];

20 
	muw
[4];

21 
	mb
[8];

22 
	mub
[8];

23 
	ms
[2];

24 } 
	tmmx_t
;

27 
	#mmx_i2r
(
›
,
imm
,
ªg
) \

28 
__asm__
 
	`__vﬁ©ûe__
 (#op " %0, %%" #reg \

30 : "i" (
imm
Ë)

	)

32 
	#mmx_m2r
(
›
,
mem
,
ªg
) \

33 
__asm__
 
	`__vﬁ©ûe__
 (#op " %0, %%" #reg \

35 : "m" (
mem
))

	)

37 
	#mmx_r2m
(
›
,
ªg
,
mem
) \

38 
__asm__
 
	`__vﬁ©ûe__
 (#op " %%" #reg ", %0" \

39 : "=m" (
mem
) \

40 : )

	)

42 
	#mmx_r2r
(
›
,
ªgs
,
ªgd
) \

43 
__asm__
 
	`__vﬁ©ûe__
 (#› " %" #ªg†", %" #ªgd)

	)

46 
	#emms
(Ë
__asm__
 
	`__vﬁ©ûe__
 ("emms")

	)

48 
	#movd_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
movd
, v¨,Ñeg)

	)

49 
	#movd_r2m
(
ªg
,
v¨
Ë
	`mmx_r2m
 (
movd
,Ñeg, v¨)

	)

50 
	#movd_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
movd
,Ñegs,Ñegd)

	)

52 
	#movq_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
movq
, v¨,Ñeg)

	)

53 
	#movq_r2m
(
ªg
,
v¨
Ë
	`mmx_r2m
 (
movq
,Ñeg, v¨)

	)

54 
	#movq_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
movq
,Ñegs,Ñegd)

	)

56 
	#∑ckssdw_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
∑ckssdw
, v¨,Ñeg)

	)

57 
	#∑ckssdw_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
∑ckssdw
,Ñegs,Ñegd)

	)

58 
	#∑cksswb_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
∑cksswb
, v¨,Ñeg)

	)

59 
	#∑cksswb_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
∑cksswb
,Ñegs,Ñegd)

	)

61 
	#∑ckuswb_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
∑ckuswb
, v¨,Ñeg)

	)

62 
	#∑ckuswb_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
∑ckuswb
,Ñegs,Ñegd)

	)

64 
	#∑ddb_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
∑ddb
, v¨,Ñeg)

	)

65 
	#∑ddb_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
∑ddb
,Ñegs,Ñegd)

	)

66 
	#∑ddd_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
∑ddd
, v¨,Ñeg)

	)

67 
	#∑ddd_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
∑ddd
,Ñegs,Ñegd)

	)

68 
	#∑ddw_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
∑ddw
, v¨,Ñeg)

	)

69 
	#∑ddw_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
∑ddw
,Ñegs,Ñegd)

	)

71 
	#∑ddsb_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
∑ddsb
, v¨,Ñeg)

	)

72 
	#∑ddsb_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
∑ddsb
,Ñegs,Ñegd)

	)

73 
	#∑ddsw_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
∑ddsw
, v¨,Ñeg)

	)

74 
	#∑ddsw_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
∑ddsw
,Ñegs,Ñegd)

	)

76 
	#∑ddusb_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
∑ddusb
, v¨,Ñeg)

	)

77 
	#∑ddusb_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
∑ddusb
,Ñegs,Ñegd)

	)

78 
	#∑ddusw_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
∑ddusw
, v¨,Ñeg)

	)

79 
	#∑ddusw_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
∑ddusw
,Ñegs,Ñegd)

	)

81 
	#∑nd_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
∑nd
, v¨,Ñeg)

	)

82 
	#∑nd_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
∑nd
,Ñegs,Ñegd)

	)

84 
	#∑ndn_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
∑ndn
, v¨,Ñeg)

	)

85 
	#∑ndn_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
∑ndn
,Ñegs,Ñegd)

	)

87 
	#pcm≥qb_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
pcm≥qb
, v¨,Ñeg)

	)

88 
	#pcm≥qb_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
pcm≥qb
,Ñegs,Ñegd)

	)

89 
	#pcm≥qd_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
pcm≥qd
, v¨,Ñeg)

	)

90 
	#pcm≥qd_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
pcm≥qd
,Ñegs,Ñegd)

	)

91 
	#pcm≥qw_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
pcm≥qw
, v¨,Ñeg)

	)

92 
	#pcm≥qw_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
pcm≥qw
,Ñegs,Ñegd)

	)

94 
	#pcmpgtb_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
pcmpgtb
, v¨,Ñeg)

	)

95 
	#pcmpgtb_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
pcmpgtb
,Ñegs,Ñegd)

	)

96 
	#pcmpgtd_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
pcmpgtd
, v¨,Ñeg)

	)

97 
	#pcmpgtd_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
pcmpgtd
,Ñegs,Ñegd)

	)

98 
	#pcmpgtw_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
pcmpgtw
, v¨,Ñeg)

	)

99 
	#pcmpgtw_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
pcmpgtw
,Ñegs,Ñegd)

	)

101 
	#pmaddwd_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
pmaddwd
, v¨,Ñeg)

	)

102 
	#pmaddwd_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
pmaddwd
,Ñegs,Ñegd)

	)

104 
	#pmulhw_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
pmulhw
, v¨,Ñeg)

	)

105 
	#pmulhw_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
pmulhw
,Ñegs,Ñegd)

	)

107 
	#pmuŒw_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
pmuŒw
, v¨,Ñeg)

	)

108 
	#pmuŒw_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
pmuŒw
,Ñegs,Ñegd)

	)

110 
	#p‹_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
p‹
, v¨,Ñeg)

	)

111 
	#p‹_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
p‹
,Ñegs,Ñegd)

	)

113 
	#p¶ld_i2r
(
imm
,
ªg
Ë
	`mmx_i2r
 (
p¶ld
, imm,Ñeg)

	)

114 
	#p¶ld_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
p¶ld
, v¨,Ñeg)

	)

115 
	#p¶ld_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
p¶ld
,Ñegs,Ñegd)

	)

116 
	#p¶lq_i2r
(
imm
,
ªg
Ë
	`mmx_i2r
 (
p¶lq
, imm,Ñeg)

	)

117 
	#p¶lq_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
p¶lq
, v¨,Ñeg)

	)

118 
	#p¶lq_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
p¶lq
,Ñegs,Ñegd)

	)

119 
	#p¶lw_i2r
(
imm
,
ªg
Ë
	`mmx_i2r
 (
p¶lw
, imm,Ñeg)

	)

120 
	#p¶lw_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
p¶lw
, v¨,Ñeg)

	)

121 
	#p¶lw_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
p¶lw
,Ñegs,Ñegd)

	)

123 
	#p§ad_i2r
(
imm
,
ªg
Ë
	`mmx_i2r
 (
p§ad
, imm,Ñeg)

	)

124 
	#p§ad_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
p§ad
, v¨,Ñeg)

	)

125 
	#p§ad_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
p§ad
,Ñegs,Ñegd)

	)

126 
	#p§aw_i2r
(
imm
,
ªg
Ë
	`mmx_i2r
 (
p§aw
, imm,Ñeg)

	)

127 
	#p§aw_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
p§aw
, v¨,Ñeg)

	)

128 
	#p§aw_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
p§aw
,Ñegs,Ñegd)

	)

130 
	#p§ld_i2r
(
imm
,
ªg
Ë
	`mmx_i2r
 (
p§ld
, imm,Ñeg)

	)

131 
	#p§ld_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
p§ld
, v¨,Ñeg)

	)

132 
	#p§ld_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
p§ld
,Ñegs,Ñegd)

	)

133 
	#p§lq_i2r
(
imm
,
ªg
Ë
	`mmx_i2r
 (
p§lq
, imm,Ñeg)

	)

134 
	#p§lq_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
p§lq
, v¨,Ñeg)

	)

135 
	#p§lq_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
p§lq
,Ñegs,Ñegd)

	)

136 
	#p§lw_i2r
(
imm
,
ªg
Ë
	`mmx_i2r
 (
p§lw
, imm,Ñeg)

	)

137 
	#p§lw_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
p§lw
, v¨,Ñeg)

	)

138 
	#p§lw_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
p§lw
,Ñegs,Ñegd)

	)

140 
	#psubb_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
psubb
, v¨,Ñeg)

	)

141 
	#psubb_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
psubb
,Ñegs,Ñegd)

	)

142 
	#psubd_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
psubd
, v¨,Ñeg)

	)

143 
	#psubd_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
psubd
,Ñegs,Ñegd)

	)

144 
	#psubw_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
psubw
, v¨,Ñeg)

	)

145 
	#psubw_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
psubw
,Ñegs,Ñegd)

	)

147 
	#psubsb_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
psubsb
, v¨,Ñeg)

	)

148 
	#psubsb_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
psubsb
,Ñegs,Ñegd)

	)

149 
	#psubsw_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
psubsw
, v¨,Ñeg)

	)

150 
	#psubsw_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
psubsw
,Ñegs,Ñegd)

	)

152 
	#psubusb_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
psubusb
, v¨,Ñeg)

	)

153 
	#psubusb_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
psubusb
,Ñegs,Ñegd)

	)

154 
	#psubusw_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
psubusw
, v¨,Ñeg)

	)

155 
	#psubusw_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
psubusw
,Ñegs,Ñegd)

	)

157 
	#pu≈ckhbw_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
pu≈ckhbw
, v¨,Ñeg)

	)

158 
	#pu≈ckhbw_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
pu≈ckhbw
,Ñegs,Ñegd)

	)

159 
	#pu≈ckhdq_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
pu≈ckhdq
, v¨,Ñeg)

	)

160 
	#pu≈ckhdq_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
pu≈ckhdq
,Ñegs,Ñegd)

	)

161 
	#pu≈ckhwd_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
pu≈ckhwd
, v¨,Ñeg)

	)

162 
	#pu≈ckhwd_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
pu≈ckhwd
,Ñegs,Ñegd)

	)

164 
	#pu≈cklbw_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
pu≈cklbw
, v¨,Ñeg)

	)

165 
	#pu≈cklbw_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
pu≈cklbw
,Ñegs,Ñegd)

	)

166 
	#pu≈ckldq_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
pu≈ckldq
, v¨,Ñeg)

	)

167 
	#pu≈ckldq_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
pu≈ckldq
,Ñegs,Ñegd)

	)

168 
	#pu≈cklwd_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
pu≈cklwd
, v¨,Ñeg)

	)

169 
	#pu≈cklwd_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
pu≈cklwd
,Ñegs,Ñegd)

	)

171 
	#px‹_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
px‹
, v¨,Ñeg)

	)

172 
	#px‹_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
px‹
,Ñegs,Ñegd)

	)

177 
	#∑vgusb_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
∑vgusb
, v¨,Ñeg)

	)

178 
	#∑vgusb_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
∑vgusb
,Ñegs,Ñegd)

	)

184 
	#mmx_m2ri
(
›
,
mem
,
ªg
,
imm
) \

185 
__asm__
 
	`__vﬁ©ûe__
 (#op " %1, %0, %%" #reg \

187 : "X" (
mem
), "X" (
imm
))

	)

188 
	#mmx_r2ri
(
›
,
ªgs
,
ªgd
,
imm
) \

189 
__asm__
 
	`__vﬁ©ûe__
 (#op " %0, %%" #regs ", %%" #regd \

191 : "X" (
imm
Ë)

	)

193 
	#mmx_„tch
(
mem
,
höt
) \

194 
__asm__
 
	`__vﬁ©ûe__
 ("prefetch" #hint " %0" \

196 : "X" (
mem
))

	)

199 
	#maskmovq
(
ªgs
,
maskªg
Ë
	`mmx_r2ri
 (
maskmovq
,Ñegs, maskªg)

	)

201 
	#mov¡q_r2m
(
mmªg
,
v¨
Ë
	`mmx_r2m
 (
mov¡q
, mmªg, v¨)

	)

203 
	#∑vgb_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
∑vgb
, v¨,Ñeg)

	)

204 
	#∑vgb_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
∑vgb
,Ñegs,Ñegd)

	)

205 
	#∑vgw_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
∑vgw
, v¨,Ñeg)

	)

206 
	#∑vgw_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
∑vgw
,Ñegs,Ñegd)

	)

208 
	#≥xåw_r2r
(
mmªg
,
ªg
,
imm
Ë
	`mmx_r2ri
 (
≥xåw
, mmªg,Ñeg, imm)

	)

210 
	#pö§w_r2r
(
ªg
,
mmªg
,
imm
Ë
	`mmx_r2ri
 (
pö§w
,Ñeg, mmªg, imm)

	)

212 
	#pmaxsw_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
pmaxsw
, v¨,Ñeg)

	)

213 
	#pmaxsw_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
pmaxsw
,Ñegs,Ñegd)

	)

215 
	#pmaxub_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
pmaxub
, v¨,Ñeg)

	)

216 
	#pmaxub_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
pmaxub
,Ñegs,Ñegd)

	)

218 
	#pmösw_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
pmösw
, v¨,Ñeg)

	)

219 
	#pmösw_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
pmösw
,Ñegs,Ñegd)

	)

221 
	#pmöub_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
pmöub
, v¨,Ñeg)

	)

222 
	#pmöub_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
pmöub
,Ñegs,Ñegd)

	)

224 
	#pmovmskb
(
mmªg
,
ªg
) \

225 
__asm__
 
	`__vﬁ©ûe__
 ("movmskp†%" #mmªg ", %" #ªg)

	)

227 
	#pmulhuw_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
pmulhuw
, v¨,Ñeg)

	)

228 
	#pmulhuw_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
pmulhuw
,Ñegs,Ñegd)

	)

230 
	#¥e„tcht0
(
mem
Ë
	`mmx_„tch
 (mem, 
t0
)

	)

231 
	#¥e„tcht1
(
mem
Ë
	`mmx_„tch
 (mem, 
t1
)

	)

232 
	#¥e„tcht2
(
mem
Ë
	`mmx_„tch
 (mem, 
t2
)

	)

233 
	#¥e„tch¡a
(
mem
Ë
	`mmx_„tch
 (mem, 
¡a
)

	)

235 
	#pßdbw_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
pßdbw
, v¨,Ñeg)

	)

236 
	#pßdbw_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
pßdbw
,Ñegs,Ñegd)

	)

238 
	#pshufw_m2r
(
v¨
,
ªg
,
imm
Ë
	`mmx_m2ri
(
pshufw
, v¨,Ñeg, imm)

	)

239 
	#pshufw_r2r
(
ªgs
,
ªgd
,
imm
Ë
	`mmx_r2ri
(
pshufw
,Ñegs,Ñegd, imm)

	)

241 
	#s„n˚
(Ë
__asm__
 
	`__vﬁ©ûe__
 ("s„n˚\n\t")

	)

244 
	#pshufhw_m2r
(
v¨
,
ªg
,
imm
Ë
	`mmx_m2ri
(
pshufhw
, v¨,Ñeg, imm)

	)

245 
	#pshufhw_r2r
(
ªgs
,
ªgd
,
imm
Ë
	`mmx_r2ri
(
pshufhw
,Ñegs,Ñegd, imm)

	)

246 
	#pshuÊw_m2r
(
v¨
,
ªg
,
imm
Ë
	`mmx_m2ri
(
pshuÊw
, v¨,Ñeg, imm)

	)

247 
	#pshuÊw_r2r
(
ªgs
,
ªgd
,
imm
Ë
	`mmx_r2ri
(
pshuÊw
,Ñegs,Ñegd, imm)

	)

249 
	#pshufd_r2r
(
ªgs
,
ªgd
,
imm
Ë
	`mmx_r2ri
(
pshufd
,Ñegs,Ñegd, imm)

	)

251 
	#movdqa_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
movdqa
, v¨,Ñeg)

	)

252 
	#movdqa_r2m
(
ªg
,
v¨
Ë
	`mmx_r2m
 (
movdqa
,Ñeg, v¨)

	)

253 
	#movdqa_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
movdqa
,Ñegs,Ñegd)

	)

254 
	#movdqu_m2r
(
v¨
,
ªg
Ë
	`mmx_m2r
 (
movdqu
, v¨,Ñeg)

	)

255 
	#movdqu_r2m
(
ªg
,
v¨
Ë
	`mmx_r2m
 (
movdqu
,Ñeg, v¨)

	)

256 
	#movdqu_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
movdqu
,Ñegs,Ñegd)

	)

258 
	#pmuŒw_r2m
(
ªg
,
v¨
Ë
	`mmx_r2m
 (
pmuŒw
,Ñeg, v¨)

	)

260 
	#p¶ldq_i2r
(
imm
,
ªg
Ë
	`mmx_i2r
 (
p¶ldq
, imm,Ñeg)

	)

261 
	#p§ldq_i2r
(
imm
,
ªg
Ë
	`mmx_i2r
 (
p§ldq
, imm,Ñeg)

	)

263 
	#pu≈cklqdq_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
pu≈cklqdq
,Ñegs,Ñegd)

	)

264 
	#pu≈ckhqdq_r2r
(
ªgs
,
ªgd
Ë
	`mmx_r2r
 (
pu≈ckhqdq
,Ñegs,Ñegd)

	)

	@motion.c

9 
	~"ffm≥g.h
"

10 
	~"mŸi⁄.h
"

12 #i‡(
deföed
(
BSD
Ë&& !deföed(
PWCBSD
))

13 
	~"video_‰ìbsd.h
"

15 
	~"video.h
"

18 
	~"c⁄f.h
"

19 
	~"Æg.h
"

20 
	~"åack.h
"

21 
	~"evít.h
"

22 
	~"pi˘uª.h
"

23 
	~"rŸ©e.h
"

26 
mŸi⁄_öô
(
c⁄ãxt
 *
˙t
);

27 
mŸi⁄_˛ónup
(
c⁄ãxt
 *
˙t
);

35 
±hªad_key_t
 
	gés_key_thªadƒ
;

44 
±hªad_muãx_t
 
	gglobÆ_lock
;

51 
c⁄ãxt
 **
	g˙t_li°
 = 
NULL
;

59 vﬁ©ûê
	gthªads_ru¬ög
 = 0;

65 
	gdebug_Àvñ
;

69 vﬁ©ûê
	gföish
 = 0;

78 
	gª°¨t
 = 0;

93 
	$image_rög_ªsize
(
c⁄ãxt
 *
˙t
, 
√w_size
)

100 i‡(
˙t
->
evít_ƒ
 !˙t->
¥ev_evít
) {

101 
smÆÀ°
;

103 i‡(
√w_size
 < 
˙t
->
imgs
.
image_rög_size
) {

104 
smÆÀ°
 = 
√w_size
;

106 
smÆÀ°
 = 
˙t
->
imgs
.
image_rög_size
;

109 i‡(
˙t
->
imgs
.
image_rög_ö
 =
smÆÀ°
 - 1 || smallest == 0) {

110 
	`mŸi⁄_log
(
LOG_INFO
, 0, "ResizögÖª_ˇ±uª buf„∏tÿ%d iãms", 
√w_size
);

113 
image_d©a
 *
tmp
;

114 
tmp
 = 
	`mymÆloc
(
√w_size
 * (
image_d©a
));

118 i‡(
smÆÀ°
 > 0)

119 
	`mem˝y
(
tmp
, 
˙t
->
imgs
.
image_rög
, (
image_d©a
Ë* 
smÆÀ°
);

124 
i
;

125 
i
 = 
smÆÀ°
; i < 
√w_size
; i++) {

126 
tmp
[
i
].
image
 = 
	`mymÆloc
(
˙t
->
imgs
.
size
);

127 
	`mem£t
(
tmp
[
i
].
image
, 0x80, 
˙t
->
imgs
.
size
);

132 
	`‰ì
(
˙t
->
imgs
.
image_rög
);

135 
˙t
->
imgs
.
image_rög
 = 
tmp
;

137 
˙t
->
imgs
.
image_rög_size
 = 
√w_size
;

140 
	}
}

153 
	$image_rög_de°roy
(
c⁄ãxt
 *
˙t
)

155 
i
;

158 i‡(
˙t
->
imgs
.
image_rög
 =
NULL
)

162 
i
 = 0; i < 
˙t
->
imgs
.
image_rög_size
; i++)

163 
	`‰ì
(
˙t
->
imgs
.
image_rög
[
i
].
image
);

167 
	`‰ì
(
˙t
->
imgs
.
image_rög
);

169 
˙t
->
imgs
.
image_rög
 = 
NULL
;

170 
˙t
->
imgs
.
image_rög_size
 = 0;

171 
	}
}

185 
	$image_ßve_as_¥evõw
(
c⁄ãxt
 *
˙t
, 
image_d©a
 *
img
)

187 * 
image
;

189 
image
 = 
˙t
->
imgs
.
¥evõw_image
.image;

191 
	`mem˝y
(&
˙t
->
imgs
.
¥evõw_image
.
image
, 
img
, (
image_d©a
));

193 
˙t
->
imgs
.
¥evõw_image
.
image
 = image;

196 
	`mem˝y
(
˙t
->
imgs
.
¥evõw_image
.
image
, 
img
->image, c¡->imgs.
size
);

200 i‡(
˙t
->
imgs
.
¥evõw_image
.
diffs
 == 0)

201 
˙t
->
imgs
.
¥evõw_image
.
diffs
 = 1;

204 i‡(
˙t
->
loˇã
 =
LOCATE_PREVIEW
)

205 
	`Æg_døw_loˇti⁄
(&
img
->
loˇti⁄
, &
˙t
->
imgs
, c¡->imgs.
width
,

206 
˙t
->
imgs
.
¥evõw_image
.
image
, 
LOCATE_NORMAL
);

208 
	}
}

222 
	$c⁄ãxt_öô
 (
c⁄ãxt
 *
˙t
)

234 
	`mem£t
(
˙t
, 0, (
c⁄ãxt
));

235 
˙t
->
noi£
 = 255;

236 
˙t
->
œ°øã
 = 25;

238 
	`mem˝y
(&
˙t
->
åack
, &
åack_ãm∂©e
, (
åack›ti⁄s
));

239 
˙t
->
pùe
 = -1;

240 
˙t
->
mpùe
 = -1;

242 
	}
}

256 
	$c⁄ãxt_de°roy
(
c⁄ãxt
 *
˙t
)

258 
j
;

261 
j
 = 0; 
c⁄fig_∑øms
[j].
∑øm_«me
 !
NULL
; j++) {

262 i‡(
c⁄fig_∑øms
[
j
].
c›y
 =
c›y_°rög
) {

263 **
vÆ
;

264 
vÆ
 = (*)((*)
˙t
+()
c⁄fig_∑øms
[
j
].
c⁄f_vÆue
);

265 i‡(*
vÆ
) {

266 
	`‰ì
(*
vÆ
);

267 *
vÆ
 = 
NULL
;

272 
	`‰ì
(
˙t
);

273 
	}
}

280 
	$sig_h™dÀr
(
signo
)

282 
i
;

284 
signo
) {

285 
SIGALRM
:

290 i‡(
˙t_li°
) {

291 
i
 = -1;

292 
˙t_li°
[++
i
]) {

293 i‡(
˙t_li°
[
i
]->
c⁄f
.
¢≠shŸ_öãrvÆ
)

294 
˙t_li°
[
i
]->
¢≠shŸ
 = 1;

299 
SIGUSR1
:

302 i‡(
˙t_li°
) {

303 
i
 = -1;

304 
˙t_li°
[++
i
])

305 
˙t_li°
[
i
]->
makemovõ
 = 1;

308 
SIGHUP
:

309 
ª°¨t
 = 1;

313 
SIGINT
:

314 
SIGQUIT
:

315 
SIGTERM
:

318 i‡(
˙t_li°
) {

319 
i
 = -1;

320 
˙t_li°
[++
i
]) {

321 
˙t_li°
[
i
]->
makemovõ
 = 1;

322 
˙t_li°
[
i
]->
föish
 = 1;

326 
˙t_li°
[
i
]->
ª°¨t
 = 0;

331 
föish
 = 1;

333 
SIGSEGV
:

334 
	`exô
(0);

336 
	}
}

344 
	$sigchûd_h™dÀr
(
signo
 
ATTRIBUTE_UNUSED
)

346 #ifde‡
WNOHANG


347 
	`waôpid
(-1, 
NULL
, 
WNOHANG
) > 0) {};

350 
	}
}

358 
	$mŸi⁄_ªmove_pid
()

360 i‡((
˙t_li°
[0]->
d´m⁄
Ë&& (˙t_li°[0]->
c⁄f
.
pid_fûe
Ë&& (
ª°¨t
 == 0)) {

361 i‡(!
	`u∆ök
(
˙t_li°
[0]->
c⁄f
.
pid_fûe
))

362 
	`mŸi⁄_log
(
LOG_INFO
, 0, "RemovedÖrocess id file (pid file).");

364 
	`mŸi⁄_log
(
LOG_INFO
, 1, "ErrorÑemovingÖid file");

366 
	}
}

380 
	$mŸi⁄_dëe˘ed
(
c⁄ãxt
 *
˙t
, 
dev
, 
image_d©a
 *
img
)

382 
c⁄fig
 *
c⁄f
 = &
˙t
->conf;

383 
images
 *
imgs
 = &
˙t
->imgs;

384 
co‹d
 *
loˇti⁄
 = &
img
->location;

387 i‡(
˙t
->
loˇã
 =
LOCATE_ON
)

388 
	`Æg_døw_loˇti⁄
(
loˇti⁄
, 
imgs
, imgs->
width
, 
img
->
image
, 
LOCATE_BOTH
);

391 i‡(
˙t
->
√w_img
 & 
NEWIMG_CENTER
) {

392 
di°X
 = 
	`abs
((
imgs
->
width
/2Ë- 
loˇti⁄
->
x
);

393 
di°Y
 = 
	`abs
((
imgs
->
height
/2Ë- 
loˇti⁄
->
y
);

394 
img
->
˚¡_di°
 = 
di°X
*di°X + 
di°Y
*distY;

399 i‡(
img
->
Êags
 & 
IMAGE_TRIGGER
) {

401 i‡(
˙t
->
evít_ƒ
 !˙t->
¥ev_evít
) {

405 
˙t
->
¥ev_evít
 = c¡->
evít_ƒ
;

406 
˙t
->
evíâime
 = 
img
->
time°amp
;

407 
	`loˇ…ime_r
(&
˙t
->
evíâime
, c¡->
evíâime_tm
);

413 
	`my°r·ime
(
˙t
, c¡->
ãxt_evít_°rög
, (cnt->text_event_string),

414 
˙t
->
c⁄f
.
ãxt_evít
, c¡->
evíâime_tm
, 
NULL
, 0);

417 
	`evít
(
˙t
, 
EVENT_FIRSTMOTION
, 
img
->
image
, 
NULL
, NULL, &img->
time°amp_tm
);

419 i‡(
˙t
->
c⁄f
.
£tup_mode
)

420 
	`mŸi⁄_log
(-1, 0, "MŸi⁄ dëe˘ed - sèπögÉvíà%d", 
˙t
->
evít_ƒ
);

423 i‡(
˙t
->
√w_img
 & (
NEWIMG_FIRST
 | 
NEWIMG_BEST
 | 
NEWIMG_CENTER
))

424 
	`image_ßve_as_¥evõw
(
˙t
, 
img
);

429 
	`evít
(
˙t
, 
EVENT_MOTION
, 
NULL
, NULL, NULL, &
img
->
time°amp_tm
);

433 i‡(
img
->
shŸ
 < 
c⁄f
->
‰ame_limô
) {

439 i‡(
c⁄f
->
webˇm_mŸi⁄
 && !c⁄f->
£tup_mode
 && 
img
->
shŸ
 != 1)

440 
	`evít
(
˙t
, 
EVENT_WEBCAM
, 
img
->
image
, 
NULL
, NULL, &img->
time°amp_tm
);

445 i‡(
c⁄f
->
mŸi⁄_img
)

446 
	`evít
(
˙t
, 
EVENT_IMAGEM_DETECTED
, 
NULL
, NULL, NULL, &
img
->
time°amp_tm
);

450 i‡(
˙t
->
åack
.
ty≥
)

451 
˙t
->
moved
 = 
	`åack_move
(˙t, 
dev
, 
loˇti⁄
, 
imgs
, 0);

453 
	}
}

466 
	#IMAGE_BUFFER_FLUSH
 (()-1)

	)

467 
	$¥o˚ss_image_rög
(
c⁄ãxt
 *
˙t
, 
max_images
)

472 
image_d©a
 *
ßved_cuºít_image
 = 
˙t
->
cuºít_image
;

477 i‡((
˙t
->
imgs
.
image_rög
[˙t->imgs.
image_rög_out
].
Êags
 &

478 (
IMAGE_SAVE
 | 
IMAGE_SAVED
)) != IMAGE_SAVE)

482 
˙t
->
cuºít_image
 = &˙t->
imgs
.
image_rög
[˙t->imgs.
image_rög_out
];

484 i‡(
˙t
->
imgs
.
image_rög
[˙t->imgs.
image_rög_out
].
shŸ
 < c¡->
c⁄f
.
‰ame_limô
) {

486 
	`evít
(
˙t
, 
EVENT_IMAGE_DETECTED
,

487 
˙t
->
imgs
.
image_rög
[˙t->imgs.
image_rög_out
].
image
, 
NULL
, NULL,

488 &
˙t
->
imgs
.
image_rög
[˙t->imgs.
image_rög_out
].
time°amp_tm
);

492 
˙t
->
imgs
.
image_rög
[˙t->imgs.
image_rög_out
].
Êags
 |
IMAGE_SAVED
;

495 i‡(
˙t
->
imgs
.
image_rög
[˙t->imgs.
image_rög_out
].
Êags
 & 
IMAGE_MOTION
) {

498 i‡(
˙t
->
√w_img
 & 
NEWIMG_BEST
) {

499 i‡(
˙t
->
imgs
.
image_rög
[˙t->imgs.
image_rög_out
].
diffs
 > c¡->imgs.
¥evõw_image
.diffs)

500 
	`image_ßve_as_¥evõw
(
˙t
, &˙t->
imgs
.
image_rög
[˙t->imgs.
image_rög_out
]);

504 i‡(
˙t
->
√w_img
 & 
NEWIMG_CENTER
) {

505 i‡(
˙t
->
imgs
.
image_rög
[˙t->imgs.
image_rög_out
].
˚¡_di°
 < c¡->imgs.
¥evõw_image
.cent_dist)

506 
	`image_ßve_as_¥evõw
(
˙t
, &˙t->
imgs
.
image_rög
[˙t->imgs.
image_rög_out
]);

511 i‡(++
˙t
->
imgs
.
image_rög_out
 >˙t->imgs.
image_rög_size
)

512 
˙t
->
imgs
.
image_rög_out
 = 0;

514 i‡(
max_images
 !
IMAGE_BUFFER_FLUSH
) {

515 
max_images
--;

517 i‡(
max_images
 == 0)

522 } 
˙t
->
imgs
.
image_rög_out
 !˙t->imgs.
image_rög_ö
);

525 
˙t
->
cuºít_image
 = 
ßved_cuºít_image
;

526 
	}
}

542 
	$mŸi⁄_öô
(
c⁄ãxt
 *
˙t
)

544 
i
;

545 
FILE
 *
pi˘uª
;

548 
	`±hªad_£t•ecific
(
és_key_thªadƒ
, (*)(()
˙t
->
thªadƒ
));

550 
˙t
->
cuºíâime_tm
 = 
	`mymÆloc
((
tm
));

551 
˙t
->
evíâime_tm
 = 
	`mymÆloc
((
tm
));

553 
˙t
->
cuºíâime
 = 
	`time
(
NULL
);

554 
	`loˇ…ime_r
(&
˙t
->
cuºíâime
, c¡->
cuºíâime_tm
);

556 
˙t
->
sm¨tmask_•ìd
 = 0;

560 
˙t
->
evít_ƒ
 = 1;

561 
˙t
->
¥ev_evít
 = 0;

562 
˙t
->
lightswôch_‰amecou¡î
 = 0;

563 
˙t
->
dëe˘ög_mŸi⁄
 = 0;

564 
˙t
->
makemovõ
 = 0;

566 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "Thªad %d sèπed", ()
	`±hªad_gë•ecific
(
és_key_thªadƒ
));

568 i‡(!
˙t
->
c⁄f
.
fûï©h
)

569 
˙t
->
c⁄f
.
fûï©h
 = 
	`°rdup
(".");

572 
˙t
->
video_dev
 = 
	`vid_°¨t
(cnt);

578 i‡(
˙t
->
video_dev
 < 0) {

579 
	`mŸi⁄_log
(
LOG_ERR
, 0, "CouldÇot fetch initial image from camera");

580 
	`mŸi⁄_log
(
LOG_ERR
, 0, "Motion continues using widthánd height from config file(s)");

581 
˙t
->
imgs
.
width
 = c¡->
c⁄f
.width;

582 
˙t
->
imgs
.
height
 = c¡->
c⁄f
.height;

583 
˙t
->
imgs
.
size
 = c¡->
c⁄f
.
width
 * c¡->c⁄f.
height
 * 3 / 2;

584 
˙t
->
imgs
.
mŸi⁄size
 = c¡->
c⁄f
.
width
 * c¡->c⁄f.
height
;

585 
˙t
->
imgs
.
ty≥
 = 
VIDEO_PALETTE_YUV420P
;

588 
	`image_rög_ªsize
(
˙t
, 1);

590 
˙t
->
imgs
.
ªf
 = 
	`mymÆloc
(˙t->imgs.
size
);

591 
˙t
->
imgs
.
out
 = 
	`mymÆloc
(˙t->imgs.
size
);

592 
	`mem£t
(
˙t
->
imgs
.
out
, 0, c¡->imgs.
size
);

594 
˙t
->
imgs
.
ªf_dyn
 = 
	`mymÆloc
(˙t->imgs.
mŸi⁄size
 * (cnt->imgs.ref_dyn));

595 
˙t
->
imgs
.
image_vúgö
 = 
	`mymÆloc
(˙t->imgs.
size
);

596 
˙t
->
imgs
.
sm¨tmask
 = 
	`mymÆloc
(˙t->imgs.
mŸi⁄size
);

597 
˙t
->
imgs
.
sm¨tmask_föÆ
 = 
	`mymÆloc
(˙t->imgs.
mŸi⁄size
);

598 
˙t
->
imgs
.
sm¨tmask_buf„r
 = 
	`mymÆloc
(˙t->imgs.
mŸi⁄size
 * (cnt->imgs.smartmask_buffer));

599 
˙t
->
imgs
.
œbñs
 = 
	`mymÆloc
(˙t->imgs.
mŸi⁄size
 * (cnt->imgs.labels));

600 
˙t
->
imgs
.
œbñsize
 = 
	`mymÆloc
((˙t->imgs.
mŸi⁄size
/2+1) * (cnt->imgs.labelsize));

603 
˙t
->
imgs
.
¥evõw_image
.
image
 = 
	`mymÆloc
(˙t->imgs.
size
);

607 
˙t
->
imgs
.
comm⁄_buf„r
 = 
	`mymÆloc
(3 * c¡->imgs.
width
 * c¡->imgs.
height
);

617 
	`rŸ©e_öô
(
˙t
);

620 i‡(
˙t
->
video_dev
 > 0) {

621 
i
 = 0; i < 5; i++) {

622 i‡(
	`vid_√xt
(
˙t
, c¡->
imgs
.
image_vúgö
) == 0)

624 
	`SLEEP
(2,0);

626 i‡(
i
 >= 5) {

627 
	`mem£t
(
˙t
->
imgs
.
image_vúgö
, 0x80, c¡->imgs.
size
);

628 
	`døw_ãxt
(
˙t
->
imgs
.
image_vúgö
, 10, 20, c¡->imgs.
width
,

629 "Eº‹ c≠turög fú° image", 
˙t
->
c⁄f
.
ãxt_doubÀ
);

630 
	`mŸi⁄_log
(
LOG_ERR
, 0, "Error capturing first image");

635 
	`Æg_upd©e_ª„ªn˚_‰ame
(
˙t
, 
RESET_REF_FRAME
);

637 #i‡!
	`deföed
(
WITHOUT_V4L
Ë&& !deföed(
BSD
)

639 i‡(
˙t
->
c⁄f
.
vidpùe
) {

640 i‡(
˙t
->
c⁄f
.
£tup_mode
)

641 
	`mŸi⁄_log
(-1, 0, "Opening videoÜoopback device forÇormalÖictures");

644 
˙t
->
pùe
 = 
	`vid_°¨çùe
(˙t->
c⁄f
.
vidpùe
, c¡->
imgs
.
width
, c¡->imgs.
height
, c¡->imgs.
ty≥
);

646 i‡(
˙t
->
pùe
 < 0) {

647 
	`mŸi⁄_log
(
LOG_ERR
, 0, "FailedÅo open videoÜoopback");

651 i‡(
˙t
->
c⁄f
.
mŸi⁄vidpùe
) {

652 i‡(
˙t
->
c⁄f
.
£tup_mode
)

653 
	`mŸi⁄_log
(-1, 0, "Opening videoÜoopback device for motionÖictures");

656 
˙t
->
mpùe
 = 
	`vid_°¨çùe
(˙t->
c⁄f
.
mŸi⁄vidpùe
, c¡->
imgs
.
width
, c¡->imgs.
height
, c¡->imgs.
ty≥
);

658 i‡(
˙t
->
mpùe
 < 0) {

659 
	`mŸi⁄_log
(
LOG_ERR
, 0, "FailedÅo open videoÜoopback");

665 #ifde‡
HAVE_MYSQL


666 i‡(
˙t
->
c⁄f
.
mysql_db
) {

667 
˙t
->
d©aba£
 = (
MYSQL
 *Ë
	`mymÆloc
((MYSQL));

668 
	`mysql_öô
(
˙t
->
d©aba£
);

670 i‡(!
	`mysql_ªÆ_c⁄√˘
(
˙t
->
d©aba£
, c¡->
c⁄f
.
mysql_ho°
, c¡->c⁄f.
mysql_u£r
,

671 
˙t
->
c⁄f
.
mysql_∑ssw‹d
, c¡->c⁄f.
mysql_db
, 0, 
NULL
, 0)) {

672 
	`mŸi⁄_log
(
LOG_ERR
, 0, "Cannot connectÅo MySQL database %s on host %s with user %s",

673 
˙t
->
c⁄f
.
mysql_db
, c¡->c⁄f.
mysql_ho°
, c¡->c⁄f.
mysql_u£r
);

674 
	`mŸi⁄_log
(
LOG_ERR
, 0, "MySQLÉº‹ wa†%s", 
	`mysql_îr‹
(
˙t
->
d©aba£
));

677 #i‡(
	`deföed
(
MYSQL_VERSION_ID
)) && (MYSQL_VERSION_ID > 50012)

678 
my_boﬁ
 
my_åue
 = 
TRUE
;

679 
	`mysql_›ti⁄s
(
˙t
->
d©aba£
,
MYSQL_OPT_RECONNECT
,&
my_åue
);

684 #ifde‡
HAVE_PGSQL


685 i‡(
˙t
->
c⁄f
.
pgsql_db
) {

686 
c⁄n°rög
[255];

690 
	`¢¥ötf
(
c⁄n°rög
, 255,

692 
˙t
->
c⁄f
.
pgsql_db
,

693 (
˙t
->
c⁄f
.
pgsql_ho°
 ? cnt->conf.pgsql_host : ""),

694 (
˙t
->
c⁄f
.
pgsql_u£r
 ? cnt->conf.pgsql_user : ""),

695 (
˙t
->
c⁄f
.
pgsql_∑ssw‹d
 ? cnt->conf.pgsql_password : ""),

696 
˙t
->
c⁄f
.
pgsql_p‹t


699 
˙t
->
d©aba£_pg
 = 
	`PQc⁄√˘db
(
c⁄n°rög
);

701 i‡(
	`PQ°©us
(
˙t
->
d©aba£_pg
Ë=
CONNECTION_BAD
) {

702 
	`mŸi⁄_log
(
LOG_ERR
, 0, "ConnectionÅo PostgreSQL database '%s' failed: %s",

703 
˙t
->
c⁄f
.
pgsql_db
, 
	`PQîr‹Mesßge
(˙t->
d©aba£_pg
));

710 #i‡
	`deföed
(
HAVE_MYSQL
Ë|| deföed(
HAVE_PGSQL
)

713 
˙t
->
sql_mask
 = c¡->
c⁄f
.
sql_log_image
 * (
FTYPE_IMAGE
 + 
FTYPE_IMAGE_MOTION
) +

714 
˙t
->
c⁄f
.
sql_log_¢≠shŸ
 * 
FTYPE_IMAGE_SNAPSHOT
 +

715 
˙t
->
c⁄f
.
sql_log_m≥g
 * (
FTYPE_MPEG
 + 
FTYPE_MPEG_MOTION
) +

716 
˙t
->
c⁄f
.
sql_log_timñ≠£
 * 
FTYPE_MPEG_TIMELAPSE
;

720 i‡(
˙t
->
c⁄f
.
mask_fûe
) {

721 i‡((
pi˘uª
 = 
	`f›í
(
˙t
->
c⁄f
.
mask_fûe
, "r"))) {

726 
˙t
->
imgs
.
mask
 = 
	`gë_pgm
(
pi˘uª
, c¡->imgs.
width
, c¡->imgs.
height
);

727 
	`f˛o£
(
pi˘uª
);

729 
	`mŸi⁄_log
(
LOG_ERR
, 1, "Eº‹ o≥nög mask fûê%s", 
˙t
->
c⁄f
.
mask_fûe
);

732 
	`put_fixed_mask
(
˙t
, c¡->
c⁄f
.
mask_fûe
);

735 i‡(!
˙t
->
imgs
.
mask
) {

736 
	`mŸi⁄_log
(
LOG_ERR
, 0, "FailedÅoÑead mask image. Mask feature disabled.");

738 i‡(
˙t
->
c⁄f
.
£tup_mode
)

739 
	`mŸi⁄_log
(-1, 0, "Maskfûê\"%s\"Üﬂded.",
˙t
->
c⁄f
.
mask_fûe
);

743 
˙t
->
imgs
.
mask
 = 
NULL
;

747 
	`mem£t
(
˙t
->
imgs
.
sm¨tmask
, 0, c¡->imgs.
mŸi⁄size
);

748 
	`mem£t
(
˙t
->
imgs
.
sm¨tmask_föÆ
, 255, c¡->imgs.
mŸi⁄size
);

749 
	`mem£t
(
˙t
->
imgs
.
sm¨tmask_buf„r
, 0, c¡->imgs.
mŸi⁄size
*(cnt->imgs.smartmask_buffer));

752 
˙t
->
noi£
 = c¡->
c⁄f
.noise;

755 
˙t
->
thªshﬁd
 = c¡->
c⁄f
.
max_ch™ges
;

758 i‡(
˙t
->
c⁄f
.
webˇm_p‹t
) {

759 i‡(
	`webˇm_öô
(
˙t
) == -1) {

760 
	`mŸi⁄_log
(
LOG_ERR
, 1, "ProbÀmÉ«blög såóm sîvî i¿p‹à%d", 
˙t
->
c⁄f
.
webˇm_p‹t
);

761 
˙t
->
föish
 = 1;

763 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "Sèπed såóm webˇm sîvî i¿p‹à%d", 
˙t
->
c⁄f
.
webˇm_p‹t
);

768 
˙t
->
moved
 = 8;

770 
˙t
->
°¨tup_‰ames
 = c¡->
c⁄f
.
‰ame_limô
 * 2;

773 
	}
}

787 
	$mŸi⁄_˛ónup
(
c⁄ãxt
 *
˙t
)

790 
	`evít
(
˙t
, 
EVENT_STOP
, 
NULL
, NULL, NULL, NULL);

792 i‡(
˙t
->
video_dev
 >= 0) {

793 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "Calling vid_close() from motion_cleanup");

794 
	`vid_˛o£
(
˙t
);

797 i‡(
˙t
->
imgs
.
out
) {

798 
	`‰ì
(
˙t
->
imgs
.
out
);

799 
˙t
->
imgs
.
out
 = 
NULL
;

802 i‡(
˙t
->
imgs
.
ªf
) {

803 
	`‰ì
(
˙t
->
imgs
.
ªf
);

804 
˙t
->
imgs
.
ªf
 = 
NULL
;

807 i‡(
˙t
->
imgs
.
ªf_dyn
) {

808 
	`‰ì
(
˙t
->
imgs
.
ªf_dyn
);

809 
˙t
->
imgs
.
ªf_dyn
 = 
NULL
;

812 i‡(
˙t
->
imgs
.
image_vúgö
) {

813 
	`‰ì
(
˙t
->
imgs
.
image_vúgö
);

814 
˙t
->
imgs
.
image_vúgö
 = 
NULL
;

817 i‡(
˙t
->
imgs
.
œbñs
) {

818 
	`‰ì
(
˙t
->
imgs
.
œbñs
);

819 
˙t
->
imgs
.
œbñs
 = 
NULL
;

822 i‡(
˙t
->
imgs
.
œbñsize
) {

823 
	`‰ì
(
˙t
->
imgs
.
œbñsize
);

824 
˙t
->
imgs
.
œbñsize
 = 
NULL
;

827 i‡(
˙t
->
imgs
.
sm¨tmask
) {

828 
	`‰ì
(
˙t
->
imgs
.
sm¨tmask
);

829 
˙t
->
imgs
.
sm¨tmask
 = 
NULL
;

832 i‡(
˙t
->
imgs
.
sm¨tmask_föÆ
) {

833 
	`‰ì
(
˙t
->
imgs
.
sm¨tmask_föÆ
);

834 
˙t
->
imgs
.
sm¨tmask_föÆ
 = 
NULL
;

837 i‡(
˙t
->
imgs
.
sm¨tmask_buf„r
) {

838 
	`‰ì
(
˙t
->
imgs
.
sm¨tmask_buf„r
);

839 
˙t
->
imgs
.
sm¨tmask_buf„r
 = 
NULL
;

842 i‡(
˙t
->
imgs
.
comm⁄_buf„r
) {

843 
	`‰ì
(
˙t
->
imgs
.
comm⁄_buf„r
);

844 
˙t
->
imgs
.
comm⁄_buf„r
 = 
NULL
;

847 i‡(
˙t
->
imgs
.
¥evõw_image
.
image
) {

848 
	`‰ì
(
˙t
->
imgs
.
¥evõw_image
.
image
);

849 
˙t
->
imgs
.
¥evõw_image
.
image
 = 
NULL
;

852 
	`image_rög_de°roy
(
˙t
);

854 
	`rŸ©e_deöô
(
˙t
);

856 i‡(
˙t
->
pùe
 != -1) {

857 
	`˛o£
(
˙t
->
pùe
);

858 
˙t
->
pùe
 = -1;

861 i‡(
˙t
->
mpùe
 != -1) {

862 
	`˛o£
(
˙t
->
mpùe
);

863 
˙t
->
mpùe
 = -1;

867 i‡(
˙t
->
cuºíâime_tm
) {

868 
	`‰ì
(
˙t
->
cuºíâime_tm
);

869 
˙t
->
cuºíâime_tm
 = 
NULL
;

873 i‡(
˙t
->
evíâime_tm
) {

874 
	`‰ì
(
˙t
->
evíâime_tm
);

875 
˙t
->
evíâime_tm
 = 
NULL
;

877 
	}
}

885 *
	$mŸi⁄_lo›
(*
¨g
)

887 
c⁄ãxt
 *
˙t
 = 
¨g
;

888 
i
, 
j
, 
z
 = 0;

889 
time_t
 
œ°‰amëime
 = 0;

890 
‰ame_buf„r_size
;

891 
ªf_‰ame_limô
 = 0;

892 
¨ó_⁄˚
 = 0;

893 
¨ó_möx
[9], 
¨ó_möy
[9], 
¨ó_maxx
[9], 
¨ó_maxy
[9];

894 
sm¨tmask_øtio
 = 0;

895 
sm¨tmask_cou¡
 = 20;

896 
sm¨tmask_œ°øã
 = 0;

897 
ﬁddiffs
 = 0;

898 
¥evious_diffs
 = 0, 
¥evious_loˇti⁄_x
 = 0, 
¥evious_loˇti⁄_y
 = 0;

899 
ãxt_size_Á˘‹
;

900 
∑ssÊag
 = 0;

901 *
rﬁlög_avîage_d©a
 = 
NULL
;

902 
rﬁlög_avîage_limô
, 
ªquúed_‰ame_time
, 
‰ame_dñay
, 
dñay_time_n£c
;

903 
rﬁlög_‰ame
 = 0;

904 
timevÆ
 
tv1
, 
tv2
;

905 
rﬁlög_avîage
, 
ñ≠£dtime
;

906 
timíow
 = 0, 
timebef‹e
 = 0;

908 
vid_ªtu∫_code
 = 0;

910 
möimum_‰ame_time_downcou¡î
 = 
˙t
->
c⁄f
.
möimum_‰ame_time
;

912 
gë_image
 = 1;

918 
time_œ°_‰ame
=1, 
time_cuºít_‰ame
;

920 
˙t
->
ru¬ög
 = 1;

922 i‡(
	`mŸi⁄_öô
(
˙t
) < 0)

923 
îr
;

927 i‡(
˙t
->
c⁄f
.
ãxt_doubÀ
)

928 
ãxt_size_Á˘‹
 = 2;

930 
ãxt_size_Á˘‹
 = 1;

933 
¨ó_möx
[0] =área_minx[3] =área_minx[6] = 0;

934 
¨ó_möy
[0] =área_miny[1] =área_miny[2] = 0;

936 
¨ó_möx
[1] =áªa_möx[4] =áªa_möx[7] = 
˙t
->
imgs
.
width
 / 3;

937 
¨ó_maxx
[0] =áªa_maxx[3] =áªa_maxx[6] = 
˙t
->
imgs
.
width
 / 3;

939 
¨ó_möx
[2] =áªa_möx[5] =áªa_möx[8] = 
˙t
->
imgs
.
width
 / 3 * 2;

940 
¨ó_maxx
[1] =áªa_maxx[4] =áªa_maxx[7] = 
˙t
->
imgs
.
width
 / 3 * 2;

942 
¨ó_möy
[3] =áªa_möy[4] =áªa_möy[5] = 
˙t
->
imgs
.
height
 / 3;

943 
¨ó_maxy
[0] =áªa_maxy[1] =áªa_maxy[2] = 
˙t
->
imgs
.
height
 / 3;

945 
¨ó_möy
[6] =áªa_möy[7] =áªa_möy[8] = 
˙t
->
imgs
.
height
 / 3 * 2;

946 
¨ó_maxy
[3] =áªa_maxy[4] =áªa_maxy[5] = 
˙t
->
imgs
.
height
 / 3 * 2;

948 
¨ó_maxx
[2] =áªa_maxx[5] =áªa_maxx[8] = 
˙t
->
imgs
.
width
;

949 
¨ó_maxy
[6] =áªa_maxy[7] =áªa_maxy[8] = 
˙t
->
imgs
.
height
;

952 i‡(
˙t
->
c⁄f
.
‰ame_limô
 < 2)

953 
˙t
->
c⁄f
.
‰ame_limô
 = 2;

955 
ªquúed_‰ame_time
 = 1000000L / 
˙t
->
c⁄f
.
‰ame_limô
;

957 
‰ame_dñay
 = 
ªquúed_‰ame_time
;

963 
rﬁlög_avîage_limô
 = 10 * 
˙t
->
c⁄f
.
‰ame_limô
;

964 
rﬁlög_avîage_d©a
 = 
	`mymÆloc
(‘ﬁlög_avîage_d©aË* 
rﬁlög_avîage_limô
);

967 
j
 = 0; j < 
rﬁlög_avîage_limô
; j++)

968 
rﬁlög_avîage_d©a
[
j
] = 
ªquúed_‰ame_time
;

970 #ifde‡
__O≥nBSD__


975 
siga˘i⁄
 
sig_h™dÀr_a˘i⁄
;

976 
siga˘i⁄
 
sigchûd_a˘i⁄
;

977 
	`£tup_sig«ls
(&
sig_h™dÀr_a˘i⁄
, &
sigchûd_a˘i⁄
);

983 !
˙t
->
föish
 || c¡->
makemovõ
) {

986 
˙t
->
w©chdog
 = 
WATCHDOG_TMO
;

989 
timebef‹e
 = 
timíow
;

990 
	`gëtimeofday
(&
tv1
, 
NULL
);

991 
timíow
 = 
tv1
.
tv_u£c
 + 1000000L *Åv1.
tv_£c
;

996 i‡(
˙t
->
c⁄f
.
möimum_mŸi⁄_‰ames
 < 1)

997 
˙t
->
c⁄f
.
möimum_mŸi⁄_‰ames
 = 1;

999 i‡(
˙t
->
c⁄f
.
¥e_ˇ±uª
 < 0)

1000 
˙t
->
c⁄f
.
¥e_ˇ±uª
 = 0;

1006 
‰ame_buf„r_size
 = 
˙t
->
c⁄f
.
¥e_ˇ±uª
 + c¡->c⁄f.
möimum_mŸi⁄_‰ames
;

1008 i‡(
˙t
->
imgs
.
image_rög_size
 !
‰ame_buf„r_size
)

1009 
	`image_rög_ªsize
(
˙t
, 
‰ame_buf„r_size
);

1013 
˙t
->
cuºíâime
 = 
	`time
(
NULL
);

1018 
	`loˇ…ime_r
(&
˙t
->
cuºíâime
, c¡->
cuºíâime_tm
);

1024 i‡(
œ°‰amëime
 !
˙t
->
cuºíâime
) {

1025 
˙t
->
œ°øã
 = c¡->
shŸs
 + 1;

1026 
˙t
->
shŸs
 = -1;

1027 
œ°‰amëime
 = 
˙t
->
cuºíâime
;

1028 i‡(
˙t
->
c⁄f
.
möimum_‰ame_time
) {

1029 
möimum_‰ame_time_downcou¡î
--;

1030 i‡(
möimum_‰ame_time_downcou¡î
 == 0)

1031 
gë_image
 = 1;

1033 
gë_image
 = 1;

1039 
˙t
->
shŸs
++;

1041 i‡(
˙t
->
°¨tup_‰ames
 > 0)

1042 
˙t
->
°¨tup_‰ames
--;

1044 i‡(
gë_image
){

1045 i‡(
˙t
->
c⁄f
.
möimum_‰ame_time
) {

1046 
möimum_‰ame_time_downcou¡î
 = 
˙t
->
c⁄f
.
möimum_‰ame_time
;

1047 
gë_image
 = 0;

1051 i‡(++
˙t
->
imgs
.
image_rög_ö
 >˙t->imgs.
image_rög_size
)

1052 
˙t
->
imgs
.
image_rög_ö
 = 0;

1055 i‡(
˙t
->
imgs
.
image_rög_ö
 =˙t->imgs.
image_rög_out
) {

1056 i‡(++
˙t
->
imgs
.
image_rög_out
 >˙t->imgs.
image_rög_size
)

1057 
˙t
->
imgs
.
image_rög_out
 = 0;

1061 
˙t
->
cuºít_image
 = &˙t->
imgs
.
image_rög
[˙t->imgs.
image_rög_ö
];

1066 
˙t
->
cuºít_image
->
time°amp
 = c¡->
cuºíâime
;

1067 
	`loˇ…ime_r
(&
˙t
->
cuºít_image
->
time°amp
, &˙t->cuºít_image->
time°amp_tm
);

1070 
˙t
->
cuºít_image
->
shŸ
 = c¡->
shŸs
;

1073 
˙t
->
cuºít_image
->
diffs
 = 0;

1076 
˙t
->
cuºít_image
->
Êags
 = 0;

1077 
˙t
->
cuºít_image
->
˚¡_di°
 = 0;

1080 
	`mem£t
(&
˙t
->
cuºít_image
->
loˇti⁄
, 0, (cnt->current_image->location));

1081 
˙t
->
cuºít_image
->
tŸÆ_œbñs
 = 0;

1088 i‡(
˙t
->
video_dev
 < 0 &&

1089 
˙t
->
cuºíâime
 % 10 =0 && c¡->
shŸs
 == 0) {

1090 
	`mŸi⁄_log
(
LOG_ERR
, 0,

1092 
˙t
->
video_dev
 = 
	`vid_°¨t
(cnt);

1097 i‡(
˙t
->
imgs
.
width
 !˙t->
c⁄f
.width || c¡->imgs.
height
 != cnt->conf.height) {

1098 
	`mŸi⁄_log
(
LOG_ERR
, 0, "Camera has finally becomeávailable");

1099 
	`mŸi⁄_log
(
LOG_ERR
, 0, "Camera image has different widthánd height "

1101 
	`mŸi⁄_log
(
LOG_ERR
, 0, "Restarting MotionÅhreadÅoÑeinitializeáll "

1103 
˙t
->
c⁄f
.
width
 = c¡->
imgs
.width;

1104 
˙t
->
c⁄f
.
height
 = c¡->
imgs
.height;

1121 i‡(
˙t
->
video_dev
 >= 0)

1122 
vid_ªtu∫_code
 = 
	`vid_√xt
(
˙t
, c¡->
cuºít_image
->
image
);

1124 
vid_ªtu∫_code
 = 1;

1127 i‡(
vid_ªtu∫_code
 == 0) {

1128 
˙t
->
lo°_c⁄√˘i⁄
 = 0;

1129 
˙t
->
c⁄√˘i⁄lo°time
 = 0;

1132 i‡(
˙t
->
missög_‰ame_cou¡î
 >
MISSING_FRAMES_TIMEOUT
 * c¡->
c⁄f
.
‰ame_limô
)

1134 
	`mŸi⁄_log
(
LOG_ERR
, 0, "Video signalÑe-acquired");

1138 
˙t
->
missög_‰ame_cou¡î
 = 0;

1140 #ifde‡
HAVE_FFMPEG


1142 i‡(
˙t
->
c⁄f
.
ffm≥g_deöãæa˚
)

1143 
	`ffm≥g_deöãæa˚
(
˙t
->
cuºít_image
->
image
, c¡->
imgs
.
width
, c¡->imgs.
height
);

1150 
	`mem˝y
(
˙t
->
imgs
.
image_vúgö
, c¡->
cuºít_image
->
image
, c¡->imgs.
size
);

1157 i‡(
˙t
->
c⁄f
.
√tˇm_uæ
) {

1158 
	`gëtimeofday
(&
tv1
, 
NULL
);

1159 
timíow
 = 
tv1
.
tv_u£c
 + 1000000L *Åv1.
tv_£c
;

1162 } i‡(
vid_ªtu∫_code
 < 0) {

1164 
	`mŸi⁄_log
(
LOG_ERR
, 0, "Video device fatalÉrror - Closing video device");

1165 
	`vid_˛o£
(
˙t
);

1170 
	`mem˝y
(
˙t
->
cuºít_image
->
image
, c¡->
imgs
.
image_vúgö
, c¡->imgs.
size
);

1171 
˙t
->
lo°_c⁄√˘i⁄
 = 1;

1181 i‡(
debug_Àvñ
 >
CAMERA_VERBOSE
)

1182 
	`mŸi⁄_log
(-1, 0, "vid_ªtu∫_codê%d", 
vid_ªtu∫_code
);

1189 i‡(
vid_ªtu∫_code
 =
NETCAM_RESTART_ERROR
) {

1190 
	`mŸi⁄_log
(
LOG_ERR
, 0, "Restarting MotionÅhreadÅoÑeinitializeáll "

1196 
˙t
->
lo°_c⁄√˘i⁄
 = 1;

1202 i‡(
˙t
->
c⁄√˘i⁄lo°time
 == 0)

1203 
˙t
->
c⁄√˘i⁄lo°time
 = c¡->
cuºíâime
;

1211 ++
˙t
->
missög_‰ame_cou¡î
;

1212 i‡(
˙t
->
video_dev
 >= 0 &&

1213 
˙t
->
missög_‰ame_cou¡î
 < (
MISSING_FRAMES_TIMEOUT
 * c¡->
c⁄f
.
‰ame_limô
)) {

1214 
	`mem˝y
(
˙t
->
cuºít_image
->
image
, c¡->
imgs
.
image_vúgö
, c¡->imgs.
size
);

1216 c⁄° *
tmpö
;

1217 
tmpout
[80];

1218 
tm
 
tm±ime
;

1219 
˙t
->
lo°_c⁄√˘i⁄
 = 1;

1221 i‡(
˙t
->
video_dev
 >= 0)

1222 
tmpö
 = "CONNECTION TO CAMERA LOST\\nSINCE %Y-%m-%d %T";

1224 
tmpö
 = "UNABLE TO OPEN VIDEO DEVICE\\nSINCE %Y-%m-%d %T";

1226 
	`loˇ…ime_r
(&
˙t
->
c⁄√˘i⁄lo°time
, &
tm±ime
);

1227 
	`mem£t
(
˙t
->
cuºít_image
->
image
, 0x80, c¡->
imgs
.
size
);

1228 
	`my°r·ime
(
˙t
, 
tmpout
, —mpout), 
tmpö
, &
tm±ime
, 
NULL
, 0);

1229 
	`døw_ãxt
(
˙t
->
cuºít_image
->
image
, 10, 20 * 
ãxt_size_Á˘‹
, c¡->
imgs
.
width
,

1230 
tmpout
, 
˙t
->
c⁄f
.
ãxt_doubÀ
);

1233 i‡(
˙t
->
missög_‰ame_cou¡î
 =
MISSING_FRAMES_TIMEOUT
 * c¡->
c⁄f
.
‰ame_limô
) {

1234 
	`mŸi⁄_log
(
LOG_ERR
, 0, "Video signalÜost - Adding grey image");

1236 
	`evít
(
˙t
, 
EVENT_CAMERA_LOST
, 
NULL
, NULL,

1237 
NULL
, 
˙t
->
cuºíâime_tm
);

1242 i‡((
˙t
->
video_dev
 > 0) &&

1243 (
˙t
->
missög_‰ame_cou¡î
 =(
MISSING_FRAMES_TIMEOUT
 * 4Ë* c¡->
c⁄f
.
‰ame_limô
)) {

1244 
	`mŸi⁄_log
(
LOG_ERR
, 0, "Video signal stillÜost - TryingÅo close video device");

1245 
	`vid_˛o£
(
˙t
);

1261 i‡(
˙t
->
thªshﬁd
 && !˙t->
∑u£
) {

1267 i‡(
˙t
->
dëe˘ög_mŸi⁄
 || c¡->
c⁄f
.
£tup_mode
)

1268 
˙t
->
cuºít_image
->
diffs
 = 
	`Æg_diff_°™d¨d
(˙t, c¡->
imgs
.
image_vúgö
);

1270 
˙t
->
cuºít_image
->
diffs
 = 
	`Æg_diff
(˙t, c¡->
imgs
.
image_vúgö
);

1278 i‡(
˙t
->
c⁄f
.
lightswôch
 && !˙t->
lo°_c⁄√˘i⁄
) {

1279 i‡(
	`Æg_lightswôch
(
˙t
, c¡->
cuºít_image
->
diffs
)) {

1280 i‡(
˙t
->
c⁄f
.
£tup_mode
)

1281 
	`mŸi⁄_log
(-1, 0, "Lightswitch detected");

1283 i‡(
˙t
->
moved
 < 5)

1284 
˙t
->
moved
 = 5;

1286 
˙t
->
cuºít_image
->
diffs
 = 0;

1287 
	`Æg_upd©e_ª„ªn˚_‰ame
(
˙t
, 
RESET_REF_FRAME
);

1299 i‡(
˙t
->
c⁄f
.
swôchfûãr
 && c¡->
cuºít_image
->
diffs
 > c¡->
thªshﬁd
) {

1300 
˙t
->
cuºít_image
->
diffs
 = 
	`Æg_swôchfûãr
(cnt, cnt->current_image->diffs,

1301 
˙t
->
cuºít_image
->
image
);

1303 i‡(
˙t
->
cuºít_image
->
diffs
 <˙t->
thªshﬁd
) {

1304 
˙t
->
cuºít_image
->
diffs
 = 0;

1306 i‡(
˙t
->
c⁄f
.
£tup_mode
)

1307 
	`mŸi⁄_log
(-1, 0, "Switchfilter detected");

1317 
˙t
->
cuºít_image
->
tŸÆ_œbñs
 = 0;

1318 
˙t
->
imgs
.
œrge°_œbñ
 = 0;

1319 
ﬁddiffs
 = 0;

1321 i‡(
˙t
->
c⁄f
.
de•eckÀ
 && c¡->
cuºít_image
->
diffs
 > 0) {

1322 
ﬁddiffs
 = 
˙t
->
cuºít_image
->
diffs
;

1323 
˙t
->
cuºít_image
->
diffs
 = 
	`Æg_de•eckÀ
(˙t, 
ﬁddiffs
);

1324 } i‡(
˙t
->
imgs
.
œbñsize_max
) {

1325 
˙t
->
imgs
.
œbñsize_max
 = 0;

1328 } i‡(!
˙t
->
c⁄f
.
£tup_mode
) {

1329 
˙t
->
cuºít_image
->
diffs
 = 0;

1333 i‡(
˙t
->
sm¨tmask_•ìd
 && (˙t->
evít_ƒ
 !˙t->
¥ev_evít
)) {

1334 i‡(!--
sm¨tmask_cou¡
) {

1335 
	`Æg_tu√_sm¨tmask
(
˙t
);

1336 
sm¨tmask_cou¡
 = 
sm¨tmask_øtio
;

1348 i‡(
˙t
->
moved
) {

1349 
˙t
->
moved
--;

1350 
˙t
->
cuºít_image
->
diffs
 = 0;

1358 i‡(
˙t
->
c⁄f
.
noi£_tu√
 && c¡->
shŸs
 == 0) {

1359 i‡(!
˙t
->
dëe˘ög_mŸi⁄
 && (˙t->
cuºít_image
->
diffs
 <˙t->
thªshﬁd
))

1360 
	`Æg_noi£_tu√
(
˙t
, c¡->
imgs
.
image_vúgö
);

1366 i‡(!
˙t
->
c⁄f
.
noi£_tu√
)

1367 
˙t
->
noi£
 = c¡->
c⁄f
.noise;

1373 i‡(
˙t
->
c⁄f
.
thªshﬁd_tu√
)

1374 
	`Æg_thªshﬁd_tu√
(
˙t
, c¡->
cuºít_image
->
diffs
, c¡->
dëe˘ög_mŸi⁄
);

1376 
˙t
->
thªshﬁd
 = c¡->
c⁄f
.
max_ch™ges
;

1381 i‡(
˙t
->
cuºít_image
->
diffs
 > c¡->
thªshﬁd
)

1382 
	`Æg_loˇã_˚¡î_size
(&
˙t
->
imgs
, c¡->imgs.
width
, c¡->imgs.
height
,

1383 &
˙t
->
cuºít_image
->
loˇti⁄
);

1391 
ªf_‰ame_limô
++;

1392 i‡(
ªf_‰ame_limô
 >(
˙t
->
œ°øã
 / 3)) {

1393 
ªf_‰ame_limô
 = 0;

1395 i‡((
˙t
->
cuºít_image
->
diffs
 > c¡->
thªshﬁd
) &&

1396 (
˙t
->
lightswôch_‰amecou¡î
 < (˙t->
œ°øã
 * 2)) &&

1397 ((
	`abs
(
¥evious_diffs
 - 
˙t
->
cuºít_image
->
diffs
)) < (previous_diffs / 15)) &&

1398 ((
	`abs
(
˙t
->
cuºít_image
->
loˇti⁄
.
x
 - 
¥evious_loˇti⁄_x
)Ë<(˙t->
imgs
.
width
 / 150)) &&

1399 ((
	`abs
(
˙t
->
cuºít_image
->
loˇti⁄
.
y
 - 
¥evious_loˇti⁄_y
)Ë<(˙t->
imgs
.
height
 / 150))) {

1400 
	`Æg_upd©e_ª„ªn˚_‰ame
(
˙t
, 
RESET_REF_FRAME
);

1401 
˙t
->
cuºít_image
->
diffs
 = 0;

1402 
˙t
->
lightswôch_‰amecou¡î
 = 0;

1403 i‡(
˙t
->
c⁄f
.
£tup_mode
)

1404 
	`mŸi⁄_log
(-1, 0, "micro-lightswitch!");

1407 
	`Æg_upd©e_ª„ªn˚_‰ame
(
˙t
, 
UPDATE_REF_FRAME
);

1410 
¥evious_diffs
 = 
˙t
->
cuºít_image
->
diffs
;

1411 
¥evious_loˇti⁄_x
 = 
˙t
->
cuºít_image
->
loˇti⁄
.
x
;

1412 
¥evious_loˇti⁄_y
 = 
˙t
->
cuºít_image
->
loˇti⁄
.
y
;

1424 i‡(
˙t
->
sm¨tmask_•ìd
 && (˙t->
c⁄f
.
mŸi⁄_img
 || c¡->c⁄f.
ffm≥g_ˇp_mŸi⁄
 || c¡->c⁄f.
£tup_mode
))

1425 
	`ovîœy_sm¨tmask
(
˙t
, c¡->
imgs
.
out
);

1428 i‡(
˙t
->
imgs
.
œrge°_œbñ
 && (˙t->
c⁄f
.
mŸi⁄_img
 || c¡->c⁄f.
ffm≥g_ˇp_mŸi⁄
 || c¡->c⁄f.
£tup_mode
))

1429 
	`ovîœy_œrge°_œbñ
(
˙t
, c¡->
imgs
.
out
);

1433 i‡(
˙t
->
imgs
.
mask
 && (˙t->
c⁄f
.
mŸi⁄_img
 || c¡->c⁄f.
ffm≥g_ˇp_mŸi⁄
 || c¡->c⁄f.
£tup_mode
))

1434 
	`ovîœy_fixed_mask
(
˙t
, c¡->
imgs
.
out
);

1437 i‡(
˙t
->
c⁄f
.
ãxt_doubÀ
 && 
ãxt_size_Á˘‹
 == 1) {

1438 
ãxt_size_Á˘‹
 = 2;

1440 } i‡(!
˙t
->
c⁄f
.
ãxt_doubÀ
 && 
ãxt_size_Á˘‹
 == 2) {

1441 
ãxt_size_Á˘‹
 = 1;

1445 i‡(
˙t
->
c⁄f
.
ãxt_ch™ges
) {

1446 
tmp
[15];

1448 i‡(!
˙t
->
∑u£
)

1449 
	`•rötf
(
tmp
, "%d", 
˙t
->
cuºít_image
->
diffs
);

1451 
	`•rötf
(
tmp
, "-");

1453 
	`døw_ãxt
(
˙t
->
cuºít_image
->
image
, c¡->
imgs
.
width
 - 10, 10, cnt->imgs.width,

1454 
tmp
, 
˙t
->
c⁄f
.
ãxt_doubÀ
);

1459 i‡(
˙t
->
c⁄f
.
£tup_mode
) {

1460 
tmp
[
PATH_MAX
];

1461 
	`•rötf
(
tmp
, "D:%5d L:%3d N:%3d", 
˙t
->
cuºít_image
->
diffs
, c¡->cuºít_image->
tŸÆ_œbñs
, c¡->
noi£
);

1462 
	`døw_ãxt
(
˙t
->
imgs
.
out
, c¡->imgs.
width
 - 10, c¡->imgs.
height
 - 30 * 
ãxt_size_Á˘‹
,

1463 
˙t
->
imgs
.
width
, 
tmp
, c¡->
c⁄f
.
ãxt_doubÀ
);

1464 
	`•rötf
(
tmp
, "THREAD %d SETUP", 
˙t
->
thªadƒ
);

1465 
	`døw_ãxt
(
˙t
->
imgs
.
out
, c¡->imgs.
width
 - 10, c¡->imgs.
height
 - 10 * 
ãxt_size_Á˘‹
,

1466 
˙t
->
imgs
.
width
, 
tmp
, c¡->
c⁄f
.
ãxt_doubÀ
);

1470 i‡(
˙t
->
c⁄f
.
ãxt_À·
) {

1471 
tmp
[
PATH_MAX
];

1472 
	`my°r·ime
(
˙t
, 
tmp
, —mp), c¡->
c⁄f
.
ãxt_À·
, &˙t->
cuºít_image
->
time°amp_tm
, 
NULL
, 0);

1473 
	`døw_ãxt
(
˙t
->
cuºít_image
->
image
, 10, c¡->
imgs
.
height
 - 10 * 
ãxt_size_Á˘‹
, c¡->imgs.
width
,

1474 
tmp
, 
˙t
->
c⁄f
.
ãxt_doubÀ
);

1478 i‡(
˙t
->
c⁄f
.
ãxt_right
) {

1479 
tmp
[
PATH_MAX
];

1480 
	`my°r·ime
(
˙t
, 
tmp
, —mp), c¡->
c⁄f
.
ãxt_right
, &˙t->
cuºít_image
->
time°amp_tm
, 
NULL
, 0);

1481 
	`døw_ãxt
(
˙t
->
cuºít_image
->
image
, c¡->
imgs
.
width
 - 10, c¡->imgs.
height
 - 10 * 
ãxt_size_Á˘‹
,

1482 
˙t
->
imgs
.
width
, 
tmp
, c¡->
c⁄f
.
ãxt_doubÀ
);

1488 i‡(
˙t
->
cuºít_image
->
diffs
 > c¡->
thªshﬁd
) {

1490 
˙t
->
cuºít_image
->
Êags
 |
IMAGE_MOTION
;

1491 
˙t
->
lightswôch_‰amecou¡î
++;

1493 
˙t
->
lightswôch_‰amecou¡î
 = 0;

1502 i‡(
˙t
->
c⁄f
.
ouçut_Æl
 && (˙t->
°¨tup_‰ames
 == 0)) {

1503 
˙t
->
dëe˘ög_mŸi⁄
 = 1;

1505 
˙t
->
po°ˇp
 = c¡->
c⁄f
.
po°_ˇ±uª
;

1506 
˙t
->
cuºít_image
->
Êags
 |(
IMAGE_TRIGGER
 | 
IMAGE_SAVE
);

1507 
	`mŸi⁄_dëe˘ed
(
˙t
, c¡->
video_dev
, c¡->
cuºít_image
);

1508 } i‡((
˙t
->
cuºít_image
->
Êags
 & 
IMAGE_MOTION
Ë&& (˙t->
°¨tup_‰ames
 == 0)) {

1514 
ªt
;

1515 
ªt
 = 
	`¥ñude_öô
(&
¨gc
, 
¨gv
);

1516 i‡–
ªt
 < 0 )

1518 
	`¥ñude_≥º‹
(
ªt
, "unableÅo initializeÅheÖreludeÜibrary");

1523 
‰ame_cou¡
 = 0;

1524 
pos
 = 
˙t
->
imgs
.
image_rög_ö
;

1526 
i
 = 0; i < 
˙t
->
c⁄f
.
möimum_mŸi⁄_‰ames
; i++) {

1527 i‡(
˙t
->
imgs
.
image_rög
[
pos
].
Êags
 & 
IMAGE_MOTION
)

1528 
‰ame_cou¡
++;

1530 i‡(
pos
 == 0)

1531 
pos
 = 
˙t
->
imgs
.
image_rög_size
-1;

1533 
pos
--;

1537 i‡(
‰ame_cou¡
 >
˙t
->
c⁄f
.
möimum_mŸi⁄_‰ames
) {

1538 
˙t
->
cuºít_image
->
Êags
 |(
IMAGE_TRIGGER
 | 
IMAGE_SAVE
);

1539 
˙t
->
dëe˘ög_mŸi⁄
 = 1;

1541 
˙t
->
po°ˇp
 = c¡->
c⁄f
.
po°_ˇ±uª
;

1543 
i
 = 0; i < 
˙t
->
imgs
.
image_rög_size
; i++)

1544 
˙t
->
imgs
.
image_rög
[
i
].
Êags
 |
IMAGE_SAVE
;

1546 } i‡(
˙t
->
po°ˇp
) {

1547 
˙t
->
cuºít_image
->
Êags
 |(
IMAGE_POSTCAP
 | 
IMAGE_SAVE
);

1548 
˙t
->
po°ˇp
--;

1550 
˙t
->
cuºít_image
->
Êags
 |
IMAGE_PRECAP
;

1554 
	`mŸi⁄_dëe˘ed
(
˙t
, c¡->
video_dev
, c¡->
cuºít_image
);

1555 } i‡(
˙t
->
po°ˇp
) {

1557 
˙t
->
cuºít_image
->
Êags
 |(
IMAGE_POSTCAP
 | 
IMAGE_SAVE
);

1558 
˙t
->
po°ˇp
--;

1561 
˙t
->
cuºít_image
->
Êags
 |
IMAGE_PRECAP
;

1562 
˙t
->
dëe˘ög_mŸi⁄
 = 0;

1566 i‡(
˙t
->
cuºít_image
->
Êags
 & 
IMAGE_SAVE
)

1567 
˙t
->
œ°time
 = c¡->
cuºít_image
->
time°amp
;

1572 i‡((
˙t
->
c⁄f
.
¨ó_dëe˘
Ë&& (˙t->
evít_ƒ
 !
¨ó_⁄˚
) &&

1573 (
˙t
->
cuºít_image
->
Êags
 & 
IMAGE_TRIGGER
)) {

1575 
j
 = 
	`°æí
(
˙t
->
c⁄f
.
¨ó_dëe˘
);

1577 
i
 = 0; i < 
j
; i++) {

1578 
z
 = 
˙t
->
c⁄f
.
¨ó_dëe˘
[
i
] - 49;

1580 i‡((
z
 >= 0) && (z < 9)) {

1581 i‡(
˙t
->
cuºít_image
->
loˇti⁄
.
x
 > 
¨ó_möx
[
z
] &&

1582 
˙t
->
cuºít_image
->
loˇti⁄
.
x
 < 
¨ó_maxx
[
z
] &&

1583 
˙t
->
cuºít_image
->
loˇti⁄
.
y
 > 
¨ó_möy
[
z
] &&

1584 
˙t
->
cuºít_image
->
loˇti⁄
.
y
 < 
¨ó_maxy
[
z
]) {

1585 
	`evít
(
˙t
, 
EVENT_AREA_DETECTED
, 
NULL
, NULL,

1586 
NULL
, 
˙t
->
cuºíâime_tm
);

1587 
¨ó_⁄˚
 = 
˙t
->
evít_ƒ
;

1589 i‡(
˙t
->
c⁄f
.
£tup_mode
)

1590 
	`mŸi⁄_log
(-1, 0, "MŸi⁄ i¿¨ó %d dëe˘ed.\n", 
z
+1);

1601 i‡(
˙t
->
c⁄f
.
maxm≥gtime
 && c¡->
evít_ƒ
 =˙t->
¥ev_evít
)

1602 i‡(
˙t
->
cuºíâime
 - c¡->
evíâime
 >˙t->
c⁄f
.
maxm≥gtime
)

1603 
˙t
->
makemovõ
 = 1;

1608 i‡(((
˙t
->
cuºíâime
 - c¡->
œ°time
 >˙t->
c⁄f
.
g≠
Ë&& c¡->c⁄f.g≠ > 0Ë|| c¡->
makemovõ
) {

1609 i‡(
˙t
->
evít_ƒ
 =˙t->
¥ev_evít
 || c¡->
makemovõ
) {

1612 
	`¥o˚ss_image_rög
(
˙t
, 
IMAGE_BUFFER_FLUSH
);

1615 i‡(
˙t
->
imgs
.
¥evõw_image
.
diffs
) {

1616 
	`¥evõw_ßve
(
˙t
);

1617 
˙t
->
imgs
.
¥evõw_image
.
diffs
 = 0;

1620 
	`evít
(
˙t
, 
EVENT_ENDMOTION
, 
NULL
, NULL, NULL, c¡->
cuºíâime_tm
);

1625 i‡(
˙t
->
åack
.
ty≥
)

1626 
˙t
->
moved
 = 
	`åack_˚¡î
(˙t, c¡->
video_dev
, 0, 0, 0);

1628 i‡(
˙t
->
c⁄f
.
£tup_mode
)

1629 
	`mŸi⁄_log
(-1, 0, "End o‡evíà%d", 
˙t
->
evít_ƒ
);

1631 
˙t
->
makemovõ
 = 0;

1633 
˙t
->
po°ˇp
 = 0;

1636 
˙t
->
evít_ƒ
++;

1637 
˙t
->
lightswôch_‰amecou¡î
 = 0;

1642 
˙t
->
ãxt_evít_°rög
[0] = '\0';

1647 
	`¥o˚ss_image_rög
(
˙t
, 2);

1652 i‡(
˙t
->
c⁄f
.
£tup_mode
) {

1653 
msg
[1024] = "\0";

1654 
∑π
[100];

1656 i‡(
˙t
->
c⁄f
.
de•eckÀ
) {

1657 
	`¢¥ötf
(
∑π
, 99, "Raw changes: %5d - changesáfter '%s': %5d",

1658 
ﬁddiffs
, 
˙t
->
c⁄f
.
de•eckÀ
, c¡->
cuºít_image
->
diffs
);

1659 
	`°rˇt
(
msg
, 
∑π
);

1661 i‡(
	`°rchr
(
˙t
->
c⁄f
.
de•eckÀ
, 'l')){

1662 
	`•rötf
(
∑π
, " -Üabñs: %3d", 
˙t
->
cuºít_image
->
tŸÆ_œbñs
);

1663 
	`°rˇt
(
msg
, 
∑π
);

1666 
	`•rötf
(
∑π
, "Ch™ges: %5d", 
˙t
->
cuºít_image
->
diffs
);

1667 
	`°rˇt
(
msg
, 
∑π
);

1670 i‡(
˙t
->
c⁄f
.
noi£_tu√
) {

1671 
	`•rötf
(
∑π
, " -Çoi£Üevñ: %2d", 
˙t
->
noi£
);

1672 
	`°rˇt
(
msg
, 
∑π
);

1675 i‡(
˙t
->
c⁄f
.
thªshﬁd_tu√
) {

1676 
	`•rötf
(
∑π
, " -Åhªshﬁd: %d", 
˙t
->
thªshﬁd
);

1677 
	`°rˇt
(
msg
, 
∑π
);

1680 
	`mŸi⁄_log
(-1, 0, "%s", 
msg
);

1696 
time_cuºít_‰ame
 = 
˙t
->
cuºíâime
;

1698 i‡((
˙t
->
c⁄f
.
¢≠shŸ_öãrvÆ
 > 0 && c¡->
shŸs
 == 0 &&

1699 
time_cuºít_‰ame
 % 
˙t
->
c⁄f
.
¢≠shŸ_öãrvÆ
 <
time_œ°_‰ame
 % cnt->conf.snapshot_interval) ||

1700 
˙t
->
¢≠shŸ
) {

1701 
	`evít
(
˙t
, 
EVENT_IMAGE_SNAPSHOT
, c¡->
cuºít_image
->
image
, 
NULL
, NULL,

1702 &
˙t
->
cuºít_image
->
time°amp_tm
);

1703 
˙t
->
¢≠shŸ
 = 0;

1709 #ifde‡
HAVE_FFMPEG


1713 i‡(
˙t
->
c⁄f
.
timñ≠£
) {

1719 i‡(
˙t
->
cuºít_image
->
time°amp_tm
.
tm_mö
 == 0 &&

1720 (
time_cuºít_‰ame
 % 60 < 
time_œ°_‰ame
 % 60) &&

1721 
˙t
->
shŸs
 == 0) {

1723 i‡(
	`°rˇ£cmp
(
˙t
->
c⁄f
.
timñ≠£_mode
,"manual") == 0) {

1727 } i‡(
	`°rˇ£cmp
(
˙t
->
c⁄f
.
timñ≠£_mode
, "daily") == 0) {

1728 i‡(
˙t
->
cuºít_image
->
time°amp_tm
.
tm_hour
 == 0)

1729 
	`evít
(
˙t
, 
EVENT_TIMELAPSEEND
, 
NULL
, NULL, NULL,

1730 &
˙t
->
cuºít_image
->
time°amp_tm
);

1733 } i‡(
	`°rˇ£cmp
(
˙t
->
c⁄f
.
timñ≠£_mode
, "hourly") == 0) {

1734 
	`evít
(
˙t
, 
EVENT_TIMELAPSEEND
, 
NULL
, NULL, NULL,

1735 &
˙t
->
cuºít_image
->
time°amp_tm
);

1738 } i‡(
	`°rˇ£cmp
(
˙t
->
c⁄f
.
timñ≠£_mode
, "weekly-sunday") == 0) {

1739 i‡(
˙t
->
cuºít_image
->
time°amp_tm
.
tm_wday
 =0 && c¡->cuºít_image->time°amp_tm.
tm_hour
 == 0)

1740 
	`evít
(
˙t
, 
EVENT_TIMELAPSEEND
, 
NULL
, NULL, NULL, &˙t->
cuºít_image
->
time°amp_tm
);

1743 } i‡(
	`°rˇ£cmp
(
˙t
->
c⁄f
.
timñ≠£_mode
, "weekly-monday") == 0) {

1744 i‡(
˙t
->
cuºít_image
->
time°amp_tm
.
tm_wday
 =1 && c¡->cuºít_image->time°amp_tm.
tm_hour
 == 0)

1745 
	`evít
(
˙t
, 
EVENT_TIMELAPSEEND
, 
NULL
, NULL, NULL, &˙t->
cuºít_image
->
time°amp_tm
);

1748 } i‡(
	`°rˇ£cmp
(
˙t
->
c⁄f
.
timñ≠£_mode
, "monthly") == 0) {

1749 i‡(
˙t
->
cuºít_image
->
time°amp_tm
.
tm_mday
 =1 && c¡->cuºít_image->time°amp_tm.
tm_hour
 == 0)

1750 
	`evít
(
˙t
, 
EVENT_TIMELAPSEEND
, 
NULL
, NULL, NULL, &˙t->
cuºít_image
->
time°amp_tm
);

1754 
	`mŸi⁄_log
(
LOG_ERR
, 0, "InvalidÅimelapse_modeárgument '%s'",

1755 
˙t
->
c⁄f
.
timñ≠£_mode
);

1756 
	`mŸi⁄_log
(
LOG_ERR
, 0, "DefaultingÅo manualÅimelapse mode");

1757 
	`c⁄f_cmd∑r£
(&
˙t
, (*)"ffmpeg_timelapse_mode",(*)"manual");

1764 i‡(
˙t
->
shŸs
 == 0 &&

1765 
time_cuºít_‰ame
 % 
˙t
->
c⁄f
.
timñ≠£
 <
time_œ°_‰ame
 % cnt->conf.timelapse)

1766 
	`evít
(
˙t
, 
EVENT_TIMELAPSE
, c¡->
cuºít_image
->
image
, 
NULL
, NULL,

1767 &
˙t
->
cuºít_image
->
time°amp_tm
);

1768 } i‡(
˙t
->
ffm≥g_timñ≠£
) {

1773 
	`evít
(
˙t
, 
EVENT_TIMELAPSEEND
, 
NULL
, NULL, NULL, c¡->
cuºíâime_tm
);

1778 
time_œ°_‰ame
 = 
time_cuºít_‰ame
;

1792 i‡(
˙t
->
c⁄f
.
£tup_mode
) {

1793 
	`evít
(
˙t
, 
EVENT_IMAGE
, c¡->
imgs
.
out
, 
NULL
, &˙t->
pùe
, c¡->
cuºíâime_tm
);

1794 
	`evít
(
˙t
, 
EVENT_WEBCAM
, c¡->
imgs
.
out
, 
NULL
, NULL, c¡->
cuºíâime_tm
);

1796 
	`evít
(
˙t
, 
EVENT_IMAGE
, c¡->
cuºít_image
->
image
, 
NULL
, &˙t->
pùe
,

1797 &
˙t
->
cuºít_image
->
time°amp_tm
);

1799 i‡(!
˙t
->
c⁄f
.
webˇm_mŸi⁄
 || c¡->
shŸs
 == 1)

1800 
	`evít
(
˙t
, 
EVENT_WEBCAM
, c¡->
cuºít_image
->
image
, 
NULL
, NULL,

1801 &
˙t
->
cuºít_image
->
time°amp_tm
);

1804 
	`evít
(
˙t
, 
EVENT_IMAGEM
, c¡->
imgs
.
out
, 
NULL
, &˙t->
mpùe
, c¡->
cuºíâime_tm
);

1810 i‡(
˙t
->
shŸs
 == 0){

1811 i‡(
	`°rˇ£cmp
(
˙t
->
c⁄f
.
ouçut_n‹mÆ
, "on") == 0)

1812 
˙t
->
√w_img
 = 
NEWIMG_ON
;

1813 i‡(
	`°rˇ£cmp
(
˙t
->
c⁄f
.
ouçut_n‹mÆ
, "first") == 0)

1814 
˙t
->
√w_img
 = 
NEWIMG_FIRST
;

1815 i‡(
	`°rˇ£cmp
(
˙t
->
c⁄f
.
ouçut_n‹mÆ
, "best") == 0)

1816 
˙t
->
√w_img
 = 
NEWIMG_BEST
;

1817 i‡(
	`°rˇ£cmp
(
˙t
->
c⁄f
.
ouçut_n‹mÆ
, "center") == 0)

1818 
˙t
->
√w_img
 = 
NEWIMG_CENTER
;

1820 
˙t
->
√w_img
 = 
NEWIMG_OFF
;

1822 i‡(
	`°rˇ£cmp
(
˙t
->
c⁄f
.
loˇã
, "on") == 0)

1823 
˙t
->
loˇã
 = 
LOCATE_ON
;

1824 i‡(
	`°rˇ£cmp
(
˙t
->
c⁄f
.
loˇã
, "preview") == 0)

1825 
˙t
->
loˇã
 = 
LOCATE_PREVIEW
;

1827 
˙t
->
loˇã
 = 
LOCATE_OFF
;

1830 i‡(
˙t
->
c⁄f
.
sm¨t_mask_•ìd
 < 0 || cnt->conf.smart_mask_speed > 10)

1831 
˙t
->
c⁄f
.
sm¨t_mask_•ìd
 = 0;

1834 i‡(
˙t
->
c⁄f
.
sm¨t_mask_•ìd
 !˙t->
sm¨tmask_•ìd
 || 
sm¨tmask_œ°øã
 !˙t->
œ°øã
){

1835 i‡(
˙t
->
c⁄f
.
sm¨t_mask_•ìd
 == 0){

1836 
	`mem£t
(
˙t
->
imgs
.
sm¨tmask
, 0, c¡->imgs.
mŸi⁄size
);

1837 
	`mem£t
(
˙t
->
imgs
.
sm¨tmask_föÆ
, 255, c¡->imgs.
mŸi⁄size
);

1839 
sm¨tmask_œ°øã
 = 
˙t
->
œ°øã
;

1840 
˙t
->
sm¨tmask_•ìd
 = c¡->
c⁄f
.
sm¨t_mask_•ìd
;

1843 
sm¨tmask_øtio
 = 5 * 
˙t
->
œ°øã
 * (11 - c¡->
sm¨tmask_•ìd
);

1846 #i‡
	`deföed
(
HAVE_MYSQL
Ë|| deföed(
HAVE_PGSQL
)

1851 
˙t
->
sql_mask
 = c¡->
c⁄f
.
sql_log_image
 * (
FTYPE_IMAGE
 + 
FTYPE_IMAGE_MOTION
) +

1852 
˙t
->
c⁄f
.
sql_log_¢≠shŸ
 * 
FTYPE_IMAGE_SNAPSHOT
 +

1853 
˙t
->
c⁄f
.
sql_log_m≥g
 * (
FTYPE_MPEG
 + 
FTYPE_MPEG_MOTION
) +

1854 
˙t
->
c⁄f
.
sql_log_timñ≠£
 * 
FTYPE_MPEG_TIMELAPSE
;

1865 i‡(
˙t
->
c⁄f
.
‰ame_limô
)

1866 
ªquúed_‰ame_time
 = 1000000L / 
˙t
->
c⁄f
.
‰ame_limô
;

1868 
ªquúed_‰ame_time
 = 0;

1871 
	`gëtimeofday
(&
tv2
, 
NULL
);

1872 
ñ≠£dtime
 = (
tv2
.
tv_u£c
 + 1000000L *Åv2.
tv_£c
Ë- 
timíow
;

1877 i‡(
∑ssÊag
)

1878 
rﬁlög_avîage_d©a
[
rﬁlög_‰ame
] = 
timíow
-
timebef‹e
;

1880 
∑ssÊag
 = 1;

1882 
rﬁlög_‰ame
++;

1883 i‡(
rﬁlög_‰ame
 >
rﬁlög_avîage_limô
)

1884 
rﬁlög_‰ame
 = 0;

1887 
rﬁlög_avîage
 = 0L;

1889 
j
 = 0; j < 
rﬁlög_avîage_limô
; j++)

1890 
rﬁlög_avîage
 +
rﬁlög_avîage_d©a
[
j
];

1892 
rﬁlög_avîage
 /
rﬁlög_avîage_limô
;

1893 
‰ame_dñay
 = 
ªquúed_‰ame_time
-
ñ≠£dtime
 - (
rﬁlög_avîage
 -Ñequired_frame_time);

1895 i‡(
‰ame_dñay
 > 0) {

1897 i‡(
‰ame_dñay
 > 
ªquúed_‰ame_time
)

1898 
‰ame_dñay
 = 
ªquúed_‰ame_time
;

1901 
dñay_time_n£c
 = 
‰ame_dñay
 * 1000;

1903 i‡(
dñay_time_n£c
 > 999999999)

1904 
dñay_time_n£c
 = 999999999;

1907 
	`SLEEP
(0, 
dñay_time_n£c
);

1914 
îr
:

1915 i‡(
rﬁlög_avîage_d©a
)

1916 
	`‰ì
(
rﬁlög_avîage_d©a
);

1918 
˙t
->
lo°_c⁄√˘i⁄
 = 1;

1919 
	`mŸi⁄_log
(-1, 0, "ThreadÉxiting");

1921 
	`mŸi⁄_˛ónup
(
˙t
);

1923 
	`±hªad_muãx_lock
(&
globÆ_lock
);

1924 
thªads_ru¬ög
--;

1925 
	`±hªad_muãx_u∆ock
(&
globÆ_lock
);

1927 i‡(!
˙t
->
ª°¨t
)

1928 
˙t
->
w©chdog
=
WATCHDOG_OFF
;

1930 
˙t
->
ru¬ög
 = 0;

1931 
˙t
->
föish
 = 0;

1933 
	`±hªad_exô
(
NULL
);

1934 
	}
}

1951 
	$become_d´m⁄
()

1953 
i
;

1954 
FILE
 *
pidf
 = 
NULL
;

1955 
siga˘i⁄
 
sig_ign_a˘i⁄
;

1958 #ifde‡
SA_RESTART


1959 
sig_ign_a˘i⁄
.
ß_Êags
 = 
SA_RESTART
;

1961 
sig_ign_a˘i⁄
.
ß_Êags
 = 0;

1963 
sig_ign_a˘i⁄
.
ß_h™dÀr
 = 
SIG_IGN
;

1964 
	`sigem±y£t
(&
sig_ign_a˘i⁄
.
ß_mask
);

1967 i‡(
	`f‹k
()) {

1968 
	`mŸi⁄_log
(-1, 0, "Motion goingÅo daemon mode");

1969 
	`exô
(0);

1977 i‡(
˙t_li°
[0]->
c⁄f
.
pid_fûe
) {

1978 
pidf
 = 
	`f›í
(
˙t_li°
[0]->
c⁄f
.
pid_fûe
, "w+");

1980 i‡(
pidf
 ) {

1981 ()
	`Ârötf
(
pidf
, "%d\n", 
	`gëpid
());

1982 
	`f˛o£
(
pidf
);

1984 
	`mŸi⁄_log
(
LOG_ERR
, 1, "Exit motion, cannot createÖrocess id file (pid file) %s",

1985 
˙t_li°
[0]->
c⁄f
.
pid_fûe
);

1986 
	`exô
(0);

1992 i‡(
	`chdú
("/")) {

1993 
	`mŸi⁄_log
(
LOG_ERR
, 1, "CouldÇot change directory");

1996 #i‡(
	`deföed
(
BSD
))

1997 
	`£çgΩ
(0, 
	`gëpid
());

1999 
	`£çgΩ
();

2003 i‡((
i
 = 
	`›í
("/dev/ây", 
O_RDWR
)) >= 0) {

2004 
	`io˘l
(
i
, 
TIOCNOTTY
, 
NULL
);

2005 
	`˛o£
(
i
);

2008 
	`£tsid
();

2009 
i
 = 
	`›í
("/dev/nuŒ", 
O_RDONLY
);

2011 i‡(
i
 != -1) {

2012 
	`dup2
(
i
, 
STDIN_FILENO
);

2013 
	`˛o£
(
i
);

2016 
i
 = 
	`›í
("/dev/nuŒ", 
O_WRONLY
);

2018 i‡(
i
 != -1) {

2019 
	`dup2
(
i
, 
STDOUT_FILENO
);

2020 
	`dup2
(
i
, 
STDERR_FILENO
);

2021 
	`˛o£
(
i
);

2025 i‡(
pidf
 )

2026 
	`mŸi⁄_log
(
LOG_INFO
, 0, "CreatedÖrocess id file %s. Process ID is %d",

2027 
˙t_li°
[0]->
c⁄f
.
pid_fûe
, 
	`gëpid
());

2029 
	`siga˘i⁄
(
SIGTTOU
, &
sig_ign_a˘i⁄
, 
NULL
);

2030 
	`siga˘i⁄
(
SIGTTIN
, &
sig_ign_a˘i⁄
, 
NULL
);

2031 
	`siga˘i⁄
(
SIGTSTP
, &
sig_ign_a˘i⁄
, 
NULL
);

2032 
	}
}

2047 
	$˙éi°_¸óã
(
¨gc
, *
¨gv
[])

2054 
˙t_li°
 = 
	`mymÆloc
((
c⁄ãxt
 *) * 2);

2057 
˙t_li°
[0] = 
	`mymÆloc
((
c⁄ãxt
));

2060 
	`c⁄ãxt_öô
(
˙t_li°
[0]);

2063 
˙t_li°
[1] = 
NULL
;

2068 
˙t_li°
[0]->
c⁄f
.
¨gv
 =árgv;

2069 
˙t_li°
[0]->
c⁄f
.
¨gc
 =árgc;

2070 
˙t_li°
 = 
	`c⁄f_lﬂd
(cnt_list);

2071 
	}
}

2085 
	$mŸi⁄_shutdown
()

2087 
i
 = -1;

2089 
	`mŸi⁄_ªmove_pid
();

2091 
˙t_li°
[++
i
])

2092 
	`c⁄ãxt_de°roy
(
˙t_li°
[
i
]);

2094 
	`‰ì
(
˙t_li°
);

2095 
˙t_li°
 = 
NULL
;

2096 #i‚de‡
WITHOUT_V4L


2097 
	`vid_˛ónup
();

2099 
	}
}

2116 
	$mŸi⁄_°¨tup
(
d´m⁄ize
, 
¨gc
, *
¨gv
[])

2119 
	`±hªad_muãx_öô
(&
globÆ_lock
, 
NULL
);

2124 
	`˙éi°_¸óã
(
¨gc
, 
¨gv
);

2126 
	`mŸi⁄_log
(
LOG_INFO
, 0, "MŸi⁄ "
VERSION
" Started");

2128 
	`öôülize_ch¨s
();

2130 i‡(
d´m⁄ize
) {

2134 i‡(
˙t_li°
[0]->
d´m⁄
 && c¡_li°[0]->
c⁄f
.
£tup_mode
 == 0) {

2135 
	`become_d´m⁄
();

2136 
	`mŸi⁄_log
(
LOG_INFO
, 0, "MotionÑunningás daemonÖrocess");

2140 #i‚de‡
WITHOUT_V4L


2141 
	`vid_öô
();

2143 
	}
}

2154 
	$£tup_sig«ls
(
siga˘i⁄
 *
sig_h™dÀr_a˘i⁄
, siga˘i⁄ *
sigchûd_a˘i⁄
)

2156 #ifde‡
SA_NOCLDWAIT


2157 
sigchûd_a˘i⁄
->
ß_Êags
 = 
SA_NOCLDWAIT
;

2159 
sigchûd_a˘i⁄
->
ß_Êags
 = 0;

2161 
sigchûd_a˘i⁄
->
ß_h™dÀr
 = 
sigchûd_h™dÀr
;

2162 
	`sigem±y£t
(&
sigchûd_a˘i⁄
->
ß_mask
);

2163 #ifde‡
SA_RESTART


2164 
sig_h™dÀr_a˘i⁄
->
ß_Êags
 = 
SA_RESTART
;

2166 
sig_h™dÀr_a˘i⁄
->
ß_Êags
 = 0;

2168 
sig_h™dÀr_a˘i⁄
->
ß_h™dÀr
 = 
sig_h™dÀr
;

2169 
	`sigem±y£t
(&
sig_h™dÀr_a˘i⁄
->
ß_mask
);

2172 
	`siga˘i⁄
(
SIGCHLD
, 
sigchûd_a˘i⁄
, 
NULL
);

2173 
	`siga˘i⁄
(
SIGPIPE
, 
sigchûd_a˘i⁄
, 
NULL
);

2174 
	`siga˘i⁄
(
SIGALRM
, 
sig_h™dÀr_a˘i⁄
, 
NULL
);

2175 
	`siga˘i⁄
(
SIGHUP
, 
sig_h™dÀr_a˘i⁄
, 
NULL
);

2176 
	`siga˘i⁄
(
SIGINT
, 
sig_h™dÀr_a˘i⁄
, 
NULL
);

2177 
	`siga˘i⁄
(
SIGQUIT
, 
sig_h™dÀr_a˘i⁄
, 
NULL
);

2178 
	`siga˘i⁄
(
SIGTERM
, 
sig_h™dÀr_a˘i⁄
, 
NULL
);

2179 
	`siga˘i⁄
(
SIGUSR1
, 
sig_h™dÀr_a˘i⁄
, 
NULL
);

2180 
	}
}

2194 
	$°¨t_mŸi⁄_thªad
(
c⁄ãxt
 *
˙t
, 
±hªad_©å_t
 *
thªad_©å
)

2196 
i
;

2205 i‡(
˙t
->
c⁄f
.
webˇm_p‹t
 != 0) {

2207 i‡(
˙t_li°
[0]->
c⁄f
.
c⁄åﬁ_p‹t
 =
˙t
->c⁄f.
webˇm_p‹t
) {

2208 
	`mŸi⁄_log
(
LOG_ERR
, 0,

2210 
˙t
->
c⁄f
.
webˇm_p‹t
, c¡->
thªadƒ
);

2211 
	`mŸi⁄_log
(
LOG_ERR
, 0, "Webˇm fótuª f‹Åhªad %d i†dißbÀd.", 
˙t
->
thªadƒ
);

2212 
˙t
->
c⁄f
.
webˇm_p‹t
 = 0;

2216 
i
 = 1; 
˙t_li°
[i]; i++) {

2217 i‡(
˙t_li°
[
i
] =
˙t
)

2220 i‡(
˙t_li°
[
i
]->
c⁄f
.
webˇm_p‹t
 =
˙t
->conf.webcam_port) {

2221 
	`mŸi⁄_log
(
LOG_ERR
, 0,

2223 
˙t
->
c⁄f
.
webˇm_p‹t
, c¡->
thªadƒ
, 
˙t_li°
[
i
]->threadnr);

2224 
	`mŸi⁄_log
(
LOG_ERR
, 0,

2225 "Webˇm fótuª f‹Åhªad %d i†dißbÀd.", 
˙t
->
thªadƒ
);

2226 
˙t
->
c⁄f
.
webˇm_p‹t
 = 0;

2235 
	`±hªad_muãx_lock
(&
globÆ_lock
);

2236 
thªads_ru¬ög
++;

2237 
	`±hªad_muãx_u∆ock
(&
globÆ_lock
);

2240 
˙t
->
ª°¨t
 = 1;

2243 
˙t
->
w©chdog
 = 
WATCHDOG_TMO
;

2248 
	`±hªad_¸óã
(&
˙t
->
thªad_id
, 
thªad_©å
, &
mŸi⁄_lo›
, cnt);

2249 
	}
}

2264 
	$maö
 (
¨gc
, **
¨gv
)

2266 
i
;

2267 
±hªad_©å_t
 
thªad_©å
;

2268 
±hªad_t
 
thªad_id
;

2273 i‡–
	`¥ñude_öô
(&
¨gc
, 
¨gv
) < 0 )

2275 
	`¥ñude_≥º‹
(
ªt
, "unableÅo initializeÅheÖreludeÜibrary");

2282 
¥ñude_˛õ¡_t
 *
˛õ¡
;

2283 i‡–! 
	`¥ñude_˛õ¡_√w
(&
˛õ¡
, "motion") )

2285 
	`¥ñude_≥º‹
(
ªt
, "UnableÅo createáÖrelude client object");

2289 i‡–
	`¥ñude_˛õ¡_£t_Êags
(
˛õ¡
, 
PRELUDE_CLIENT_FLAGS_ASYNC_SEND
|
PRELUDE_CLIENT_FLAGS_ASYNC_TIMER
) < 0 )

2291 
	`Ârötf
(
°dîr
, "UnableÅo setásynchronous sendándÅimer.\n");

2295 i‡–
	`¥ñude_˛õ¡_°¨t
(
˛õ¡
) < 0 )

2297 
	`¥ñude_log
(
ªt
, "UnableÅo startÖrelude client");

2306 
siga˘i⁄
 
sig_h™dÀr_a˘i⁄
;

2307 
siga˘i⁄
 
sigchûd_a˘i⁄
;

2308 
	`£tup_sig«ls
(&
sig_h™dÀr_a˘i⁄
, &
sigchûd_a˘i⁄
);

2310 
	`mŸi⁄_°¨tup
(1, 
¨gc
, 
¨gv
);

2312 #ifde‡
HAVE_FFMPEG


2316 
	`ffm≥g_öô
();

2323 i‡(
˙t_li°
[0]->
c⁄f
.
£tup_mode
)

2324 
	`mŸi⁄_log
(-1, 0, "MotionÑunning in setup mode.");

2330 
	`±hªad_©å_öô
(&
thªad_©å
);

2331 
	`±hªad_©å_£tdëach°©e
(&
thªad_©å
, 
PTHREAD_CREATE_DETACHED
);

2334 
	`±hªad_key_¸óã
(&
és_key_thªadƒ
, 
NULL
);

2337 i‡(
ª°¨t
) {

2342 
	`mŸi⁄_shutdown
();

2343 
ª°¨t
 = 0;

2344 
	`mŸi⁄_log
(
LOG_INFO
,0,"motionÑestarted");

2345 #i‚de‡
WITHOUT_V4L


2346 
	`SLEEP
(5,0);

2348 
	`mŸi⁄_°¨tup
(0, 
¨gc
, 
¨gv
);

2355 
i
 = 
˙t_li°
[1] !
NULL
 ? 1 : 0; cnt_list[i]; i++) {

2357 
˙t_li°
[
i
]->
thªadƒ
 = i ? i : 1;

2359 i‡(
	`°rcmp
(
˙t_li°
[
i
]->
c⁄f_fûíame
,"") )

2360 
	`mŸi⁄_log
(
LOG_INFO
, 0, "Thªad %d i†‰om %s", 
˙t_li°
[
i
]->
thªadƒ
, c¡_li°[i]->
c⁄f_fûíame
 );

2362 i‡(
˙t_li°
[0]->
c⁄f
.
£tup_mode
) {

2363 
	`mŸi⁄_log
(-1, 0, "Thªad %d i†devi˚: %†öpuà%d", 
˙t_li°
[
i
]->
thªadƒ
,

2364 
˙t_li°
[
i
]->
c⁄f
.
√tˇm_uæ
 ? c¡_li°[i]->c⁄f.√tˇm_uæ : c¡_li°[i]->c⁄f.
video_devi˚
,

2365 
˙t_li°
[
i
]->
c⁄f
.
√tˇm_uæ
 ? -1 : c¡_li°[i]->c⁄f.
öput


2369 i‡(
˙t_li°
[0]->
c⁄f
.
£tup_mode
)

2370 
	`mŸi⁄_log
(
LOG_ERR
, 0, "WebˇmÖ‹à%d", 
˙t_li°
[
i
]->
c⁄f
.
webˇm_p‹t
);

2372 
	`°¨t_mŸi⁄_thªad
(
˙t_li°
[
i
], &
thªad_©å
);

2378 i‡(
˙t_li°
[0]->
c⁄f
.
c⁄åﬁ_p‹t
)

2379 
	`±hªad_¸óã
(&
thªad_id
, &
thªad_©å
, &
mŸi⁄_web_c⁄åﬁ
, 
˙t_li°
);

2381 i‡(
˙t_li°
[0]->
c⁄f
.
£tup_mode
)

2382 
	`mŸi⁄_log
(-1, 0,"Waôög f‹Åhªad†tÿföish,Öid: %d", 
	`gëpid
());

2388 
	`SLEEP
(1,0);

2393 
mŸi⁄_thªads_ru¬ög
 = 0;

2394 
i
 = (
˙t_li°
[1] !
NULL
 ? 1 : 0); cnt_list[i]; i++) {

2395 i‡(
˙t_li°
[
i
]->
ru¬ög
 || c¡_li°[i]->
ª°¨t
)

2396 
mŸi⁄_thªads_ru¬ög
++;

2399 i‡(((
mŸi⁄_thªads_ru¬ög
 =0 ) && 
föish
 ) ||

2400 ((
mŸi⁄_thªads_ru¬ög
 =0 ) && (
thªads_ru¬ög
 == 0)) ){

2401 i‡(
debug_Àvñ
 >
CAMERA_DEBUG
){

2402 
	`mŸi⁄_log
(
LOG_INFO
, 0, "DEBUG-1Åhreads_running %d motion_threads_running %d , finish %d",

2403 
thªads_ru¬ög
, 
mŸi⁄_thªads_ru¬ög
, 
föish
);

2408 
i
 = (
˙t_li°
[1] !
NULL
 ? 1 : 0); cnt_list[i]; i++) {

2410 i‡((!
˙t_li°
[
i
]->
ru¬ög
Ë&& (˙t_li°[i]->
ª°¨t
) ) {

2411 
	`mŸi⁄_log
(
LOG_INFO
, 0, "MŸi⁄Åhªad %dÑe°¨t", 
˙t_li°
[
i
]->
thªadƒ
);

2412 
	`°¨t_mŸi⁄_thªad
(
˙t_li°
[
i
], &
thªad_©å
);

2414 i‡(
˙t_li°
[
i
]->
w©chdog
 > 
WATCHDOG_OFF
) {

2415 
˙t_li°
[
i
]->
w©chdog
--;

2416 i‡(
˙t_li°
[
i
]->
w©chdog
 == 0) {

2417 
	`mŸi⁄_log
(
LOG_ERR
, 0, "Thread %d - WatchdogÅimeout,ÅryingÅo doá gracefulÑestart",

2418 
˙t_li°
[
i
]->
thªadƒ
);

2419 
˙t_li°
[
i
]->
föish
 = 1;

2421 i‡(
˙t_li°
[
i
]->
w©chdog
 == -60) {

2422 
	`mŸi⁄_log
(
LOG_ERR
, 0, "Thread %d - WatchdogÅimeout, did NOTÑestart graceful,"

2423 "kûlög it!", 
˙t_li°
[
i
]->
thªadƒ
);

2424 
	`±hªad_ˇn˚l
(
˙t_li°
[
i
]->
thªad_id
);

2425 
	`±hªad_muãx_lock
(&
globÆ_lock
);

2426 
thªads_ru¬ög
--;

2427 
	`±hªad_muãx_u∆ock
(&
globÆ_lock
);

2428 
	`mŸi⁄_˛ónup
(
˙t_li°
[
i
]);

2429 
˙t_li°
[
i
]->
ru¬ög
 = 0;

2430 
˙t_li°
[
i
]->
föish
 = 0;

2435 i‡(
debug_Àvñ
 >
CAMERA_DEBUG
){

2436 
	`mŸi⁄_log
(
LOG_INFO
, 0, "DEBUG-2Åhreads_running %d motion_threads_running %d , finish %d",

2437 
thªads_ru¬ög
, 
mŸi⁄_thªads_ru¬ög
, 
föish
);

2441 
föish
 = 0;

2443 i‡(
˙t_li°
[0]->
c⁄f
.
£tup_mode
)

2444 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "Threads finished");

2447 i‡(
ª°¨t
)

2448 
	`SLEEP
(2,0);

2450 } 
ª°¨t
);

2453 
˙t_li°
[0]->
föish
 = 1;

2454 
	`SLEEP
(1,0);

2455 
	`mŸi⁄_log
(
LOG_INFO
, 0, "MotionÅerminating");

2458 
	`±hªad_key_dñëe
(
és_key_thªadƒ
);

2459 
	`±hªad_©å_de°roy
(&
thªad_©å
);

2460 
	`±hªad_muãx_de°roy
(&
globÆ_lock
);

2461 
	`mŸi⁄_shutdown
();

2464 
	`¥ñude_deöô
();

2467 
	}
}

2488 * 
	$mymÆloc
(
size_t
 
nbyãs
)

2490 *
dummy
 = 
	`mÆloc
(
nbyãs
);

2491 i‡(!
dummy
) {

2492 
	`mŸi⁄_log
(
LOG_EMERG
, 1, "CouldÇŸáŒoˇã %Œu byã†o‡mem‹y!", ()
nbyãs
);

2493 
	`mŸi⁄_ªmove_pid
();

2494 
	`exô
(1);

2497  
dummy
;

2498 
	}
}

2516 *
	$myªÆloc
(*
±r
, 
size_t
 
size
, c⁄° *
desc
)

2518 *
dummy
 = 
NULL
;

2520 i‡(
size
 == 0) {

2521 
	`‰ì
(
±r
);

2522 
	`mŸi⁄_log
(
LOG_WARNING
, 0,

2524 
desc
, 
±r
);

2526 
dummy
 = 
	`ªÆloc
(
±r
, 
size
);

2527 i‡(!
dummy
) {

2528 
	`mŸi⁄_log
(
LOG_EMERG
, 0,

2530 
±r
, ()
size
, 
desc
);

2531 
	`mŸi⁄_ªmove_pid
();

2532 
	`exô
(1);

2536  
dummy
;

2537 
	}
}

2554 
	$¸óã_∑th
(c⁄° *
∑th
)

2556 *
°¨t
;

2557 
mode_t
 
mode
 = 
S_IRWXU
 | 
S_IRGRP
 | 
S_IXGRP
 | 
S_IROTH
 | 
S_IXOTH
;

2559 i‡(
∑th
[0] == '/')

2560 
°¨t
 = 
	`°rchr
(
∑th
 + 1, '/');

2562 
°¨t
 = 
	`°rchr
(
∑th
, '/');

2564 
°¨t
) {

2565 *
buf„r
 = 
	`°rdup
(
∑th
);

2566 
buf„r
[
°¨t
-
∑th
] = 0x00;

2568 i‡(
	`mkdú
(
buf„r
, 
mode
Ë=-1 && 
î∫o
 !
EEXIST
) {

2569 
	`mŸi⁄_log
(
LOG_ERR
, 1, "ProbÀm cª©ög dúe˘‹y %s", 
buf„r
);

2570 
	`‰ì
(
buf„r
);

2574 
	`‰ì
(
buf„r
);

2576 
°¨t
 = 
	`°rchr
(start + 1, '/');

2580 
	}
}

2598 
FILE
 * 
	$myf›í
(c⁄° *
∑th
, c⁄° *
mode
)

2601 
FILE
 *
dummy
 = 
	`f›í
(
∑th
, 
mode
);

2604 i‡(!
dummy
) {

2606 i‡(
î∫o
 =
ENOENT
) {

2609 i‡(
	`¸óã_∑th
(
∑th
) == -1)

2610  
NULL
;

2613 
dummy
 = 
	`f›í
(
∑th
, 
mode
);

2614 i‡(
dummy
)

2615  
dummy
;

2622 
	`mŸi⁄_log
(
LOG_ERR
, 1, "Eº‹ o≥nög fûê%†wôh modê%s", 
∑th
, 
mode
);

2624  
NULL
;

2627  
dummy
;

2628 
	}
}

2649 
size_t
 
	$my°r·ime
(
c⁄ãxt
 *
˙t
, *
s
, 
size_t
 
max
, c⁄° *
u£rf‹m©
,

2650 c⁄° 
tm
 *tm, c⁄° *
fûíame
, 
sq…y≥
)

2652 
f‹m©°rög
[
PATH_MAX
] = "";

2653 
ãmp°rög
[
PATH_MAX
] = "";

2654 *
f‹m©
, *
ãmp°r
;

2655 c⁄° *
pos_u£rf‹m©
;

2657 
f‹m©
 = 
f‹m©°rög
;

2660 i‡(
u£rf‹m©
 =
NULL
) {

2661 *
s
 = '\0';

2665 
pos_u£rf‹m©
 = 
u£rf‹m©
; *pos_userformat; ++pos_userformat) {

2667 i‡(*
pos_u£rf‹m©
 == '%') {

2672 
ãmp°r
 = 
ãmp°rög
;

2673 
ãmp°r
[0] = '\0';

2674 *++
pos_u£rf‹m©
) {

2676 --
pos_u£rf‹m©
;

2680 
	`•rötf
(
ãmp°r
, "%02d", 
˙t
->
evít_ƒ
);

2684 
	`•rötf
(
ãmp°r
, "%02d", 
˙t
->
cuºít_image
->
shŸ
);

2688 
	`•rötf
(
ãmp°r
, "%d", 
˙t
->
cuºít_image
->
diffs
);

2692 
	`•rötf
(
ãmp°r
, "%d", 
˙t
->
noi£
);

2696 
	`•rötf
(
ãmp°r
, "%d", 
˙t
->
cuºít_image
->
loˇti⁄
.
width
);

2700 
	`•rötf
(
ãmp°r
, "%d", 
˙t
->
cuºít_image
->
loˇti⁄
.
height
);

2704 
	`•rötf
(
ãmp°r
, "%d", 
˙t
->
cuºít_image
->
loˇti⁄
.
x
);

2708 
	`•rötf
(
ãmp°r
, "%d", 
˙t
->
cuºít_image
->
loˇti⁄
.
y
);

2712 
	`•rötf
(
ãmp°r
, "%d", 
˙t
->
thªshﬁd
);

2716 
	`•rötf
(
ãmp°r
, "%d", 
˙t
->
cuºít_image
->
tŸÆ_œbñs
);

2719 
	`•rötf
(
ãmp°r
, "%d",()()

2720 
	`±hªad_gë•ecific
(
és_key_thªadƒ
));

2723 i‡(
˙t
->
ãxt_evít_°rög
 && cnt->text_event_string[0])

2724 
	`¢¥ötf
(
ãmp°r
, 
PATH_MAX
, "%s", 
˙t
->
ãxt_evít_°rög
);

2726 ++
pos_u£rf‹m©
;

2729 i‡(
fûíame
)

2730 
	`¢¥ötf
(
ãmp°r
, 
PATH_MAX
, "%s", 
fûíame
);

2732 ++
pos_u£rf‹m©
;

2735 i‡(
sq…y≥
)

2736 
	`•rötf
(
ãmp°r
, "%d", 
sq…y≥
);

2738 ++
pos_u£rf‹m©
;

2741 *
f‹m©
++ = '%';

2742 *
f‹m©
++ = *
pos_u£rf‹m©
;

2749 i‡(
ãmp°r
[0]) {

2750 (*
f‹m©
 = *
ãmp°r
++) != '\0')

2751 ++
f‹m©
;

2757 *
f‹m©
++ = *
pos_u£rf‹m©
;

2760 *
f‹m©
 = '\0';

2761 
f‹m©
 = 
f‹m©°rög
;

2763  
	`°r·ime
(
s
, 
max
, 
f‹m©
, 
tm
);

2764 
	}
}

2787 
	$mŸi⁄_log
(
Àvñ
, 
î∫o_Êag
, c⁄° *
fmt
, ...)

2789 
î∫o_ßve
, 
n
;

2790 
buf
[1024];

2791 #i‡(!
	`deföed
(
BSD
)Ë&& (!(
_POSIX_C_SOURCE
 >200112L || 
_XOPEN_SOURCE
 >600Ë&& ! 
_GNU_SOURCE
)

2792 
msg_buf
[100];

2794 
va_li°
 
≠
;

2795 
thªadƒ
;

2801 
thªadƒ
 = ()
	`±hªad_gë•ecific
(
és_key_thªadƒ
);

2807 
î∫o_ßve
 = 
î∫o
;

2810 
n
 = 
	`¢¥ötf
(
buf
, (buf), "[%d] ", 
thªadƒ
);

2813 
	`va_°¨t
(
≠
, 
fmt
);

2814 
n
 +
	`v¢¥ötf
(
buf
 +Ç, (bufË-Ç, 
fmt
, 
≠
);

2817 i‡(
î∫o_Êag
) {

2818 
	`°∫ˇt
(
buf
, ": ", 1024 - 
	`°æí
(buf));

2819 
n
 += 2;

2826 #i‡(
	`deföed
(
BSD
))

2827 
	`°ªº‹_r
(
î∫o_ßve
, 
buf
 + 
n
, (buf) -Ç);

2828 #ñi‡(
_POSIX_C_SOURCE
 >200112L || 
_XOPEN_SOURCE
 >600Ë&& ! 
_GNU_SOURCE


2829 
	`°ªº‹_r
(
î∫o_ßve
, 
buf
 + 
n
, (buf) -Ç);

2831 
	`°∫ˇt
(
buf
, 
	`°ªº‹_r
(
î∫o_ßve
, 
msg_buf
, (msg_buf)), 1024 - 
	`°æí
(buf));

2835 i‡(
Àvñ
 >= 0)

2836 
	`sy¶og
(
Àvñ
, "%s", 
buf
);

2839 
	`°rˇt
(
buf
, "\n");

2840 
	`Âuts
(
buf
, 
°dîr
);

2841 
	`fÊush
(
°dîr
);

2844 
	`va_íd
(
≠
);

2845 
	}
}

	@motion.h

10 #i‚de‡
_INCLUDE_MOTION_H


11 
	#_INCLUDE_MOTION_H


	)

13 
	~"c⁄fig.h
"

16 #ifde‡
HAVE_MYSQL


17 
	~<mysql.h
>

20 
	~<°dio.h
>

21 
	~<°dlib.h
>

22 #i‚de‡
__USE_GNU


23 
	#__USE_GNU


	)

25 
	~<°rög.h
>

26 
	~<uni°d.h
>

27 
	~<f˙é.h
>

28 
	~<time.h
>

29 
	~<sig«l.h
>

30 
	~<sy¶og.h
>

31 
	~<limôs.h
>

32 
	~<î∫o.h
>

33 
	~<sys/time.h
>

34 
	~<sys/°©.h
>

35 
	~<sys/ty≥s.h
>

36 
	~<sys/waô.h
>

37 
	~<sys/io˘l.h
>

38 
	~<sys/∑øm.h
>

39 
	~<°döt.h
>

41 
	#_LINUX_TIME_H
 1

	)

42 #i‡!
deföed
(
WITHOUT_V4L
Ë&& !deföed(
BSD
)

43 
	~<löux/videodev.h
>

46 
	~<±hªad.h
>

48 #ifde‡
HAVE_PGSQL


49 
	~<libpq-„.h
>

52 
	~"c⁄f.h
"

53 
	~"webˇm.h
"

54 
	~"webhâpd.h
"

61 #ifde‡
__GNUC__


62 #ifde‡
HAVE_ANSIDECL_H


63 
	~<™side˛.h
>

65 #i‚de‡
ATTRIBUTE_UNUSED


66 
	#ATTRIBUTE_UNUSED
 
	`__©åibuã__
((
unu£d
))

	)

69 
	#ATTRIBUTE_UNUSED


	)

75 
	#SLEEP
(
£c⁄ds
, 
«no£c⁄ds
) { \

76 
time•ec
 
tv
; \

77 
tv
.
tv_£c
 = (
£c⁄ds
); \

78 
tv
.
tv_n£c
 = (
«no£c⁄ds
); \

79 
	`«no¶ìp
(&
tv
, &tv) == -1); \

80 }

	)

83 #i‡
deföed
(
WITHOUT_V4L
Ë|| deföed(
BSD
)

85 
	#VIDEO_PALETTE_GREY
 1

	)

86 
	#VIDEO_PALETTE_HI240
 2

	)

87 
	#VIDEO_PALETTE_RGB565
 3

	)

88 
	#VIDEO_PALETTE_RGB24
 4

	)

89 
	#VIDEO_PALETTE_RGB32
 5

	)

90 
	#VIDEO_PALETTE_RGB555
 6

	)

91 
	#VIDEO_PALETTE_YUV422
 7

	)

92 
	#VIDEO_PALETTE_YUYV
 8

	)

93 
	#VIDEO_PALETTE_UYVY
 9

	)

94 
	#VIDEO_PALETTE_YUV420
 10

	)

95 
	#VIDEO_PALETTE_YUV411
 11

	)

96 
	#VIDEO_PALETTE_RAW
 12

	)

97 
	#VIDEO_PALETTE_YUV422P
 13

	)

98 
	#VIDEO_PALETTE_YUV411P
 14

	)

99 
	#VIDEO_PALETTE_YUV420P
 15

	)

100 
	#VIDEO_PALETTE_YUV410P
 16

	)

101 
	#VIDEO_PALETTE_PLANAR
 13

	)

102 
	#VIDEO_PALETTE_COMPONENT
 7

	)

107 
	#CAMERA_WARNINGS
 3

	)

108 
	#CAMERA_INFO
 5

	)

109 
	#CAMERA_VIDEO
 6

	)

110 
	#CAMERA_DEBUG
 7

	)

111 
	#CAMERA_VERBOSE
 8

	)

112 
	#CAMERA_ALL
 9

	)

116 
	#DEF_WIDTH
 352

	)

117 
	#DEF_HEIGHT
 288

	)

118 
	#DEF_QUALITY
 75

	)

119 
	#DEF_CHANGES
 1500

	)

121 
	#DEF_MAXFRAMERATE
 100

	)

122 
	#DEF_NOISELEVEL
 32

	)

125 
	#DEF_GAP
 60

	)

126 
	#DEF_MAXMPEGTIME
 3600

	)

128 
	#DEF_FFMPEG_BPS
 400000

	)

129 
	#DEF_FFMPEG_VBR
 0

	)

130 
	#DEF_FFMPEG_CODEC
 "m≥g4"

	)

132 
	#THRESHOLD_TUNE_LENGTH
 256

	)

134 
	#MISSING_FRAMES_TIMEOUT
 30

	)

140 
	#WATCHDOG_TMO
 30

	)

141 
	#WATCHDOG_OFF
 -127

	)

143 
	#CONNECTION_KO
 "Lo° c⁄√˘i⁄"

	)

144 
	#CONNECTION_OK
 "C⁄√˘i⁄ OK"

	)

146 
	#DEF_MAXSTREAMS
 10

	)

147 
	#DEF_MAXWEBQUEUE
 10

	)

149 
	#DEF_TIMESTAMP
 "%Y-%m-%d\\n%T"

	)

150 
	#DEF_EVENTSTAMP
 "%Y%m%d%H%M%S"

	)

152 
	#DEF_SNAPPATH
 "%v-%Y%m%d%H%M%S-¢≠shŸ"

	)

153 
	#DEF_JPEGPATH
 "%v-%Y%m%d%H%M%S-%q"

	)

154 
	#DEF_MPEGPATH
 "%v-%Y%m%d%H%M%S"

	)

155 
	#DEF_TIMEPATH
 "%Y%m%d-timñ≠£"

	)

157 
	#DEF_TIMELAPSE_MODE
 "daûy"

	)

160 
	#DEF_SQL_QUERY
 "sql_quîy in£π i¡ÿ£curôy(ˇmîa, fûíame, føme, fûe_ty≥,Åime_°amp,Évít_time_°ampËvÆues('%t', '%f', '%q', '%n', '%Y-%m-%d %T', '%C')"

	)

163 
	#FTYPE_IMAGE
 1

	)

164 
	#FTYPE_IMAGE_SNAPSHOT
 2

	)

165 
	#FTYPE_IMAGE_MOTION
 4

	)

166 
	#FTYPE_MPEG
 8

	)

167 
	#FTYPE_MPEG_MOTION
 16

	)

168 
	#FTYPE_MPEG_TIMELAPSE
 32

	)

170 
	#FTYPE_MPEG_ANY
 (
FTYPE_MPEG
 | 
FTYPE_MPEG_MOTION
 | 
FTYPE_MPEG_TIMELAPSE
)

	)

171 
	#FTYPE_IMAGE_ANY
 (
FTYPE_IMAGE
 | 
FTYPE_IMAGE_SNAPSHOT
 | 
FTYPE_IMAGE_MOTION
)

	)

174 
	#NEWIMG_OFF
 0

	)

175 
	#NEWIMG_ON
 1

	)

176 
	#NEWIMG_FIRST
 2

	)

177 
	#NEWIMG_BEST
 4

	)

178 
	#NEWIMG_CENTER
 8

	)

180 
	#LOCATE_OFF
 0

	)

181 
	#LOCATE_ON
 1

	)

182 
	#LOCATE_PREVIEW
 2

	)

184 
	#LOCATE_NORMAL
 0

	)

185 
	#LOCATE_BOTH
 1

	)

187 
	#UPDATE_REF_FRAME
 1

	)

188 
	#RESET_REF_FRAME
 2

	)

191 
	gimages
;

193 
	~"åack.h
"

194 
	~"√tˇm.h
"

203 
	#IMAGE_MOTION
 1

	)

204 
	#IMAGE_TRIGGER
 2

	)

205 
	#IMAGE_SAVE
 4

	)

206 
	#IMAGE_SAVED
 8

	)

207 
	#IMAGE_PRECAP
 16

	)

208 
	#IMAGE_POSTCAP
 32

	)

210 
	simage_d©a
 {

211 *
	mimage
;

212 
	mdiffs
;

213 
time_t
 
	mtime°amp
;

214 
tm
 
	mtime°amp_tm
;

215 
	mshŸ
;

219 
	m˚¡_di°
;

221 
	mÊags
;

223 
co‹d
 
	mloˇti⁄
;

225 
	mtŸÆ_œbñs
;

254 
døw_ãxt
 (*
image
, 
°¨tx
, 
°¨ty
, 
width
, c⁄° *
ãxt
, 
Á˘‹
);

255 
öôülize_ch¨s
();

257 
	simages
 {

258 
image_d©a
 *
	mimage_rög
;

259 
	mimage_rög_size
;

260 
	mimage_rög_ö
;

261 
	mimage_rög_out
;

263 *
	mªf
;

264 *
	mout
;

265 *
	mªf_dyn
;

266 *
	mimage_vúgö
;

267 
image_d©a
 
	m¥evõw_image
;

268 *
	mmask
;

269 *
	msm¨tmask
;

270 *
	msm¨tmask_föÆ
;

271 *
	mcomm⁄_buf„r
;

272 *
	msm¨tmask_buf„r
;

273 *
	mœbñs
;

274 *
	mœbñsize
;

275 
	mwidth
;

276 
	mheight
;

277 
	mty≥
;

278 
	msize
;

279 
	mmŸi⁄size
;

280 
	mœbñgroup_max
;

281 
	mœbñs_above
;

282 
	mœbñsize_max
;

283 
	mœrge°_œbñ
;

287 
	srŸd©a
 {

289 *
	mãmp_buf
;

295 
	mdegªes
;

298 
	mˇp_width
;

299 
	mˇp_height
;

306 
	sc⁄ãxt
 {

307 
	mc⁄f_fûíame
[
PATH_MAX
];

308 
	mthªadƒ
;

309 
	md´m⁄
;

310 
	mpid_fûe
[
PATH_MAX
];

312 
c⁄fig
 
	mc⁄f
;

313 
images
 
	mimgs
;

314 
åack›ti⁄s
 
	måack
;

315 
√tˇm_c⁄ãxt
 *
	m√tˇm
;

316 
image_d©a
 *
	mcuºít_image
;

317 
	m√w_img
;

319 
	mloˇã
;

320 
rŸd©a
 
	mrŸ©e_d©a
;

322 
	mnoi£
;

323 
	mthªshﬁd
;

324 
	mdiffs_œ°
[
THRESHOLD_TUNE_LENGTH
];

325 
	msm¨tmask_•ìd
;

328 vﬁ©ûê
	m¢≠shŸ
;

329 vﬁ©ûê
	mmakemovõ
;

330 vﬁ©ûê
	mföish
;

331 vﬁ©ûê
	mª°¨t
;

333 vﬁ©ûê
	mru¬ög
;

334 vﬁ©ûê
	mw©chdog
;

336 
±hªad_t
 
	mthªad_id
;

338 
	mevít_ƒ
;

339 
	m¥ev_evít
;

340 
	mlightswôch_‰amecou¡î
;

341 
	mãxt_evít_°rög
[
PATH_MAX
];

343 
	mpo°ˇp
;

345 
	mshŸs
;

346 
	mdëe˘ög_mŸi⁄
;

347 
tm
 *
	mcuºíâime_tm
;

348 
tm
 *
	mevíâime_tm
;

350 
time_t
 
	mcuºíâime
;

351 
time_t
 
	mœ°time
;

352 
time_t
 
	mevíâime
;

353 
time_t
 
	mc⁄√˘i⁄lo°time
;

355 
	mœ°øã
;

356 
	m°¨tup_‰ames
;

357 
	mmoved
;

358 
	m∑u£
;

359 
	mmissög_‰ame_cou¡î
;

360 
	mlo°_c⁄√˘i⁄
;

362 #i‡(
deföed
(
BSD
))

363 
	mtu√r_dev
;

365 
	mvideo_dev
;

366 
	mpùe
;

367 
	mmpùe
;

369 
webˇm
 
	mwebˇm
;

370 
	m°ªam_cou¡
;

372 #i‡
deföed
(
HAVE_MYSQL
Ë|| deföed(
HAVE_PGSQL
)

373 
	msql_mask
;

376 #ifde‡
HAVE_MYSQL


377 
MYSQL
 *
	md©aba£
;

380 #ifde‡
HAVE_PGSQL


381 
PGc⁄n
 *
	md©aba£_pg
;

384 #ifde‡
HAVE_FFMPEG


385 
ffm≥g
 *
	mffm≥g_√w
;

386 
ffm≥g
 *
	mffm≥g_mŸi⁄
;

387 
ffm≥g
 *
	mffm≥g_timñ≠£
;

388 
ffm≥g
 *
	mffm≥g_sm¨tmask
;

389 
	m√wfûíame
[
PATH_MAX
];

390 
	mmŸi⁄fûíame
[
PATH_MAX
];

391 
	mtimñ≠£fûíame
[
PATH_MAX
];

395 
±hªad_muãx_t
 
globÆ_lock
;

396 vﬁ©ûê
thªads_ru¬ög
;

397 
debug_Àvñ
;

400 
±hªad_key_t
 
és_key_thªadƒ
;

402 
hâp_bödsock
(, );

403 * 
mymÆloc
(
size_t
);

404 * 
myªÆloc
(*, 
size_t
, const *);

405 
FILE
 * 
myf›í
(const *, const *);

406 
size_t
 
my°r·ime
(
c⁄ãxt
 *, *, size_t, c⁄° *, c⁄° 
tm
 *, const *, );

407 
¸óã_∑th
(const *);

408 
mŸi⁄_log
(, , const *, ...);

	@netcam.c

40 
	~"mŸi⁄.h
"

42 
	~<√tdb.h
>

43 
	~<√töë/ö.h
>

44 
	~<ªgex.h
>

45 
	~<sys/sockë.h
>

47 
	~"√tˇm_·p.h
"

49 
	#CONNECT_TIMEOUT
 10

	)

50 
	#READ_TIMEOUT
 5

	)

51 
	#POLLING_TIMEOUT
 
READ_TIMEOUT


	)

52 
	#POLLING_TIME
 500*1000*1000

	)

53 
	#MAX_HEADER_RETRIES
 5

	)

54 
	#MINVAL
(
x
, 
y
Ë((xË< (yË? (xË: (y))

	)

62 
	#SETUP
 ((
˙t
->
c⁄f
.
£tup_mode
Ë|| (
debug_Àvñ
 >
CAMERA_INFO
))

	)

65 
tfûe_c⁄ãxt
 *
fûe_√w_c⁄ãxt
();

66 
fûe_‰ì_c⁄ãxt
(
tfûe_c⁄ãxt
* 
˘xt
);

69 c⁄° *
	gc⁄√˘_ªq
;

71 c⁄° *
	gc⁄√˘_ªq_hâp10
 = "GET %s HTTP/1.0\r\n"

73 "U£r-Agít: MŸi⁄-√tˇm/" 
VERSION
 "\r\n";

75 c⁄° *
	gc⁄√˘_ªq_hâp11
 = "GET %s HTTP/1.1\r\n"

77 "U£r-Agít: MŸi⁄-√tˇm/" 
VERSION
 "\r\n";

79 c⁄° *
	gc⁄√˘_ªq_˛o£
 = "Connection: close\r\n";

81 c⁄° *
	gc⁄√˘_ªq_kì∑live
 = "Connection: Keep-Alive\r\n";

83 c⁄° *
	gc⁄√˘_auth_ªq
 = "Authorization: Basic %s\r\n";

124 *
	$√tˇm_uæ_m©ch
(
ªgm©ch_t
 
m
, c⁄° *
öput
)

126 *
m©ch
 = 
NULL
;

127 
Àn
;

129 i‡(
m
.
rm_so
 != -1) {

130 
Àn
 = 
m
.
rm_eo
 - m.
rm_so
;

132 i‡((
m©ch
 = (*Ë
	`mÆloc
(
Àn
 + 1)Ë!
NULL
) {

133 
	`°∫˝y
(
m©ch
, 
öput
 + 
m
.
rm_so
, 
Àn
);

134 
m©ch
[
Àn
] = '\0';

138  
m©ch
;

139 
	}
}

154 
	$√tˇm_uæ_∑r£
(
uæ_t
 *
∑r£_uæ
, c⁄° *
ãxt_uæ
)

156 *
s
;

157 
i
;

158 c⁄° *
ª
 = "(http|ftp)://(((.*):(.*))@)?"

160 
ªgex_t
 
∑âbuf
;

161 
ªgm©ch_t
 
m©ches
[10];

163 i‡(!
	`°∫cmp
–
ãxt_uæ
, "file", 4 ) )

164 
ª
 = "(file)://(((.*):(.*))@)?"

167 i‡(
debug_Àvñ
 > 
CAMERA_DEBUG
)

168 
	`mŸi⁄_log
(-1, 0, "E¡ryÇëˇm_uæ_∑r£ d©®%s", 
ãxt_uæ
 );

170 
	`mem£t
(
∑r£_uæ
, 0, (
uæ_t
));

178 i‡(!
	`ªgcomp
(&
∑âbuf
, 
ª
, 
REG_EXTENDED
 | 
REG_ICASE
)) {

179 i‡(
	`ªgexec
(&
∑âbuf
, 
ãxt_uæ
, 10, 
m©ches
, 0Ë!
REG_NOMATCH
) {

180 
i
 = 0; i < 10; i++) {

181 i‡((
s
 = 
	`√tˇm_uæ_m©ch
(
m©ches
[
i
], 
ãxt_uæ
)Ë!
NULL
) {

182 i‡(
debug_Àvñ
 > 
CAMERA_DEBUG
)

183 
	`mŸi⁄_log
(-1, 0, "P¨£ ca£ %d d©®%s", 
i
, 
s
 );

184 
i
) {

186 
∑r£_uæ
->
£rvi˚
 = 
s
;

189 
∑r£_uæ
->
u£Ωass
 = 
s
;

192 
∑r£_uæ
->
ho°
 = 
s
;

195 
∑r£_uæ
->
p‹t
 = 
	`©oi
(
s
);

196 
	`‰ì
(
s
);

199 
∑r£_uæ
->
∑th
 = 
s
;

203 
	`‰ì
(
s
);

210 i‡((!
∑r£_uæ
->
p‹t
Ë&& (∑r£_uæ->
£rvi˚
)){

211 i‡(!
	`°rcmp
(
∑r£_uæ
->
£rvi˚
, "http"))

212 
∑r£_uæ
->
p‹t
 = 80;

213 i‡(!
	`°rcmp
(
∑r£_uæ
->
£rvi˚
, "ftp"))

214 
∑r£_uæ
->
p‹t
 = 21;

217 
	`ªg‰ì
(&
∑âbuf
);

218 
	}
}

232 
	$√tˇm_uæ_‰ì
(
uæ_t
 *
∑r£_uæ
)

234 i‡(
∑r£_uæ
->
£rvi˚
) {

235 
	`‰ì
(
∑r£_uæ
->
£rvi˚
);

236 
∑r£_uæ
->
£rvi˚
 = 
NULL
;

239 i‡(
∑r£_uæ
->
u£Ωass
) {

240 
	`‰ì
(
∑r£_uæ
->
u£Ωass
);

241 
∑r£_uæ
->
u£Ωass
 = 
NULL
;

244 i‡(
∑r£_uæ
->
ho°
) {

245 
	`‰ì
(
∑r£_uæ
->
ho°
);

246 
∑r£_uæ
->
ho°
 = 
NULL
;

249 i‡(
∑r£_uæ
->
∑th
) {

250 
	`‰ì
(
∑r£_uæ
->
∑th
);

251 
∑r£_uæ
->
∑th
 = 
NULL
;

253 
	}
}

268 
	$check_quŸe
(*
°r
)

270 
Àn
;

271 
ch
;

273 
ch
 = *
°r
;

275 i‡((
ch
 == '"') || (ch == '\'')) {

276 
Àn
 = 
	`°æí
(
°r
) - 1;

277 i‡(
°r
[
Àn
] =
ch
) {

278 
	`memmove
(
°r
, så+1, 
Àn
-1);

279 
°r
[
Àn
-1] = 0;

282 
	}
}

298 
	$√tˇm_check_c⁄ã¡_Àngth
(*
hódî
)

300 
Àngth
 = -1;

302 i‡(!
	`hódî_¥o˚ss
(
hódî
, "C⁄ã¡-Lígth", 
hódî_exåa˘_numbî
, &
Àngth
)) {

308 i‡(
Àngth
 > 0)

309  
Àngth
;

313  
Àngth
;

314 
	}
}

330 
	$√tˇm_check_kì∑live
(*
hódî
)

332 *
c⁄ã¡_ty≥
 = 
NULL
;

334 i‡(!
	`hódî_¥o˚ss
(
hódî
, "Kìp-Alive", 
hâp_¥o˚ss_ty≥
, &
c⁄ã¡_ty≥
))

339 i‡(
c⁄ã¡_ty≥
)

340 
	`‰ì
(
c⁄ã¡_ty≥
);

343 
	}
}

359 
	$√tˇm_check_˛o£
(*
hódî
)

361 *
ty≥
 = 
NULL
;

362 
ªt
 = -1;

364 i‡(!
	`hódî_¥o˚ss
(
hódî
, "C⁄√˘i⁄", 
hâp_¥o˚ss_ty≥
, &
ty≥
))

367 i‡(!
	`°rcmp
(
ty≥
, "close"))

368 
ªt
 = 1;

370 i‡(
ty≥
)

371 
	`‰ì
(
ty≥
);

373  
ªt
;

374 
	}
}

392 
	$√tˇm_check_c⁄ã¡_ty≥
(*
hódî
)

394 *
c⁄ã¡_ty≥
 = 
NULL
;

395 
ªt
;

397 i‡(!
	`hódî_¥o˚ss
(
hódî
, "C⁄ã¡-ty≥", 
hâp_¥o˚ss_ty≥
, &
c⁄ã¡_ty≥
))

400 i‡(!
	`°rcmp
(
c⁄ã¡_ty≥
, "image/jpeg")) {

401 
ªt
 = 1;

402 } i‡(!
	`°rcmp
(
c⁄ã¡_ty≥
, "multipart/x-mixed-replace") ||

403 !
	`°rcmp
(
c⁄ã¡_ty≥
, "multipart/mixed")) {

404 
ªt
 = 2;

406 
ªt
 = 0;

409 i‡(
c⁄ã¡_ty≥
)

410 
	`‰ì
(
c⁄ã¡_ty≥
);

412  
ªt
;

413 
	}
}

428 
	$√tˇm_ªad_√xt_hódî
(
√tˇm_c⁄ãxt_±r
 
√tˇm
)

430 
ªtvÆ
;

431 *
hódî
;

436 i‡(
√tˇm
->
sock
 == -1)

446 
√tˇm
->
ˇps
.
c⁄ã¡_Àngth
 = 0;

451 i‡(
√tˇm
->
ˇps
.
°ªamög
) {

453 
ªtvÆ
 = 
	`hódî_gë
(
√tˇm
, &
hódî
, 
HG_NONE
);

455 i‡(
ªtvÆ
 !
HG_OK
) {

457 i‡(
	`°æí
(
hódî
) == 0) {

458 i‡(
debug_Àvñ
 > 
CAMERA_INFO
)

459 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "ErrorÑeading image header, streaming mode (1). Null header.");

462 i‡(
debug_Àvñ
 > 
CAMERA_INFO
)

463 
	`mŸi⁄_log
(
LOG_ERR
, 0, "ErrorÑeading image header, streaming mode (1). "

464 "Unknow¿hódî '%s'", 
hódî
 );

467 
	`‰ì
(
hódî
);

471 
ªtvÆ
 = (
	`°r°r
(
hódî
, 
√tˇm
->
bound¨y
Ë=
NULL
);

472 
	`‰ì
(
hódî
);

474 i‡(!
ªtvÆ
)

480 
ªtvÆ
 = 
	`hódî_gë
(
√tˇm
, &
hódî
, 
HG_NONE
);

482 i‡(
ªtvÆ
 !
HG_OK
) {

483 
	`mŸi⁄_log
(
LOG_ERR
, 0, "ErrorÑeading image header (2)");

484 
	`‰ì
(
hódî
);

488 i‡(*
hódî
 == 0)

491 i‡((
ªtvÆ
 = 
	`√tˇm_check_c⁄ã¡_ty≥
(
hódî
)) >= 0) {

492 i‡(
ªtvÆ
 != 1) {

493 
	`mŸi⁄_log
(
LOG_ERR
, 0, "HeaderÇot JPEG");

494 
	`‰ì
(
hódî
);

499 i‡((
ªtvÆ
 = (Ë
	`√tˇm_check_c⁄ã¡_Àngth
(
hódî
)) > 0) {

500 
√tˇm
->
ˇps
.
c⁄ã¡_Àngth
 = 1;

501 
√tˇm
->
ª˚ivög
->
c⁄ã¡_Àngth
 = (Ë
ªtvÆ
;

504 
	`‰ì
(
hódî
);

507 i‡(
debug_Àvñ
 > 
CAMERA_INFO
)

508 
	`mŸi⁄_log
(-1, 0, "Found image headerÑecord");

510 
	`‰ì
(
hódî
);

512 
	}
}

536 
	$√tˇm_ªad_fú°_hódî
(
√tˇm_c⁄ãxt_±r
 
√tˇm
)

538 
ªtvÆ
 = -2;

539 
ªt
;

540 
fú°Êag
 = 1;

541 
ÆiveÊag
 = 0;

542 
˛o£Êag
 = 0;

543 *
hódî
;

544 *
bound¨y
;

545 
c⁄ãxt
 *
˙t
 = 
√tˇm
->cnt;

548 i‡(
	`£nd
(
√tˇm
->
sock
,Çëˇm->
c⁄√˘_ªque°
,

549 
	`°æí
(
√tˇm
->
c⁄√˘_ªque°
), 0) < 0) {

550 
	`mŸi⁄_log
(
LOG_ERR
, 1, "Error sending 'connect'Ñequest");

577 
ªt
 = 
	`hódî_gë
(
√tˇm
, &
hódî
, 
HG_NONE
);

579 i‡(
debug_Àvñ
 > 
CAMERA_INFO
)

580 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "Re˚ived fú° hódî ('%s')", 
hódî
);

582 i‡(
ªt
 !
HG_OK
) {

583 i‡(
debug_Àvñ
 > 
CAMERA_INFO
)

584 
	`mŸi⁄_log
(
LOG_ERR
, 0, "Eº‹Ñódög fú° hódî (%s)", 
hódî
);

585 
	`‰ì
(
hódî
);

589 i‡(
fú°Êag
) {

590 i‡((
ªt
 = 
	`hâp_ªsu…_code
(
hódî
)) != 200) {

591 i‡(
debug_Àvñ
 > 
CAMERA_INFO
)

592 
	`mŸi⁄_log
(-1, 0, "HTTP Resu… codê%d", 
ªt
);

594 
	`‰ì
(
hódî
);

596 i‡(
√tˇm
->
c⁄√˘_kì∑live
) {

601 
√tˇm
->
c⁄√˘_kì∑live
 = 0;

602 
	`mŸi⁄_log
(
LOG_INFO
, 0, "RemovedÇetcam Keep-Alive flag"

605  
ªt
;

608 
fú°Êag
 = 0;

609 
	`‰ì
(
hódî
);

613 i‡(*
hódî
 == 0)

617 i‡((
ªt
 = 
	`√tˇm_check_c⁄ã¡_ty≥
(
hódî
)) >= 0) {

618 
ªtvÆ
 = 
ªt
;

626 
ªt
) {

628 i‡(
SETUP
) {

629 i‡(
√tˇm
->
c⁄√˘_kì∑live
)

630 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "Non-streaming camera (keep-alive set)");

632 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "Non-streaming camera (keep-aliveÇot set)");

634 
√tˇm
->
ˇps
.
°ªamög
 = 0;

638 i‡(
SETUP
)

639 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "Streaming camera");

641 
√tˇm
->
ˇps
.
°ªamög
 = 1;

643 i‡((
bound¨y
 = 
	`°r°r
(
hódî
, "boundary="))) {

648 i‡(
√tˇm
->
bound¨y
)

649 
	`‰ì
(
√tˇm
->
bound¨y
);

651 
√tˇm
->
bound¨y
 = 
	`°rdup
(boundary + 9);

658 
	`check_quŸe
(
√tˇm
->
bound¨y
);

659 
√tˇm
->
bound¨y_Àngth
 = 
	`°æí
“ëˇm->
bound¨y
);

661 i‡(
SETUP
)

662 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "Boundary string [%s]",

663 
√tˇm
->
bound¨y
);

669 
	`mŸi⁄_log
(
LOG_ERR
, 0, "Unrecognized contentÅype");

670 
	`‰ì
(
hódî
);

674 } i‡((
ªt
 = (Ë
	`√tˇm_check_c⁄ã¡_Àngth
(
hódî
)) >= 0) {

675 i‡(
SETUP
)

676 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "Content-lengthÖresent");

678 
√tˇm
->
ˇps
.
c⁄ã¡_Àngth
 = 1;

679 
√tˇm
->
ª˚ivög
->
c⁄ã¡_Àngth
 = 
ªt
;

680 } i‡(
	`√tˇm_check_kì∑live
(
hódî
Ë=
TRUE
) {

682 
ÆiveÊag
=
TRUE
;

683 
√tˇm
->
kì∑live_thisc⁄n
 = 
TRUE
;

686 } i‡(
	`√tˇm_check_˛o£
(
hódî
Ë=
TRUE
) {

688 
˛o£Êag
=
TRUE
;

690 i‡(
debug_Àvñ
 > 
CAMERA_INFO
)

691 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "Found C⁄n:˛o£ hódî ('%s')", 
hódî
);

693 
	`‰ì
(
hódî
);

695 
	`‰ì
(
hódî
);

697 i‡(!
√tˇm
->
ˇps
.
°ªamög
 &&Çëˇm->
c⁄√˘_kì∑live
) {

703 i‡(
ÆiveÊag
) {

704 i‡(
˛o£Êag
) {

710 
	`mŸi⁄_log
(
LOG_INFO
, 0, "Info: Both 'Connection: Keep-Alive'ánd 'Connection: close' "

720 i‡(
debug_Àvñ
 > 
CAMERA_INFO
)

721 
	`mŸi⁄_log
(
LOG_INFO
, 0, "Info: Receivedá Keep-Alive field inÅhis set of headers.");

724 i‡(!
˛o£Êag
) {

730 
	`mŸi⁄_log
(
LOG_INFO
, 0, "Info: No 'Connection: Keep-Alive'Çor 'Connection: close' "

754 i‡(!
√tˇm
->
kì∑live_thisc⁄n
) {

755 
√tˇm
->
c⁄√˘_kì∑live
 = 
FALSE
;

756 
	`mŸi⁄_log
(
LOG_INFO
, 0, "RemovedÇetcam Keep-Alive flag because 'Connection: close' "

760 
√tˇm
->
kì∑live_timeup
 = 
TRUE
;

761 
	`mŸi⁄_log
(
LOG_INFO
, 0, "Keep-Alive hasÑeachedÉnd of validÖeriod. Motion will close "

768  
ªtvÆ
;

769 
	}
}

783 
	$√tˇm_disc⁄√˘
(
√tˇm_c⁄ãxt_±r
 
√tˇm
)

785 i‡(
√tˇm
->
sock
 > 0) {

786 i‡(
	`˛o£
(
√tˇm
->
sock
) < 0)

787 
	`mŸi⁄_log
(
LOG_ERR
, 1, "netcam_disconnect");

789 
√tˇm
->
sock
 = -1;

791 
	}
}

810 
	$√tˇm_c⁄√˘
(
√tˇm_c⁄ãxt_±r
 
√tˇm
, 
îr_Êag
)

812 
sockaddr_ö
 
£rvî
;

813 
addröfo
 *
ªs
;

814 
ªt
;

815 
ßveÊags
;

816 
back_îr
;

817 
›tvÆ
;

818 
sockÀn_t
 
›éí
=(
›tvÆ
);

819 
sockÀn_t
 
Àn
;

820 
fd_£t
 
fd_w
;

821 
timevÆ
 
£À˘time
;

824 i‡(!
√tˇm
->
c⁄√˘_kì∑live
) {

825 i‡(
debug_Àvñ
 > 
CAMERA_INFO
)

826 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "netcam_connect, disconnectingÇetcam since keep-aliveÇot set." );

828 
	`√tˇm_disc⁄√˘
(
√tˇm
);

831 i‡((
√tˇm
->
sock
 = 
	`sockë
(
PF_INET
, 
SOCK_STREAM
, 0)) < 0) {

832 
	`mŸi⁄_log
(
LOG_ERR
, 1, "netcam_connect withÇo keepalive,áttemptÅo create socket failed.");

836 i‡(
debug_Àvñ
 > 
CAMERA_INFO
 )

837 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "√tˇm_c⁄√˘ wôhÇÿkì∑live,Çew sockë cª©ed fd %d", 
√tˇm
->
sock
);

840 i‡(
√tˇm
->
sock
 == -1) {

842 i‡((
√tˇm
->
sock
 = 
	`sockë
(
PF_INET
, 
SOCK_STREAM
, 0)) < 0) {

843 
	`mŸi⁄_log
(
LOG_ERR
, 1, "netcam_connect with keepalive set, invalid socket."

848 i‡(
debug_Àvñ
 > 
CAMERA_INFO
)

849 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "netcam_connect with keepalive set, invalid socket."

850 "Thi†could bêfú°Åime, cª©edáÇew o√ wôh fd %d", 
√tˇm
->
sock
);

853 
√tˇm
->
kì∑live_thisc⁄n
 = 
FALSE
;

856 i‡(
	`gësock›t
(
√tˇm
->
sock
, 
SOL_SOCKET
, 
SO_KEEPALIVE
, &
›tvÆ
, &
›éí
) < 0) {

857 
	`mŸi⁄_log
(
LOG_ERR
, 1, "netcam_connect : getsockopt()");

861 i‡(
debug_Àvñ
 > 
CAMERA_INFO
) {

862 i‡(
›tvÆ
 == 1)

863 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "netcam_connect: SO_KEEPALIVE is ON");

865 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "netcam_connect: SO_KEEPALIVE is OFF");

869 
›tvÆ
 = 1;

870 
›éí
 = (
›tvÆ
);

872 i‡(
	`£tsock›t
(
√tˇm
->
sock
, 
SOL_SOCKET
, 
SO_KEEPALIVE
, &
›tvÆ
, 
›éí
) < 0) {

873 
	`mŸi⁄_log
(
LOG_ERR
, 1, "netcam_connect : setsockopt()");

877 i‡(
debug_Àvñ
 > 
CAMERA_INFO
 )

878 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "netcam_connect: SO_KEEPALIVE set on socket.");

880 } i‡(
debug_Àvñ
 > 
CAMERA_INFO
) {

881 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "√tˇm_c⁄√˘Ñe-usög sockë %d sö˚ kì∑livêi†£t.", 
√tˇm
->
sock
);

886 i‡((
ªt
 = 
	`gëaddröfo
(
√tˇm
->
c⁄√˘_ho°
, 
NULL
, NULL, &
ªs
)) != 0) {

887 i‡(!
îr_Êag
)

888 
	`mŸi⁄_log
(
LOG_ERR
, 0, "getaddrinfo() failed (%s): %s",

889 
√tˇm
->
c⁄√˘_ho°
, 
	`gai_°ªº‹
(
ªt
));

890 i‡(
debug_Àvñ
 > 
CAMERA_INFO
)

891 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "netcam_connect disconnectingÇetcam (1)");

892 
	`√tˇm_disc⁄√˘
(
√tˇm
);

900 
	`mem£t
(&
£rvî
, 0, (server));

901 
	`mem˝y
(&
£rvî
, 
ªs
->
ai_addr
, (server));

902 
	`‰ìaddröfo
(
ªs
);

904 
£rvî
.
sö_Ámûy
 = 
AF_INET
;

905 
£rvî
.
sö_p‹t
 = 
	`ht⁄s
(
√tˇm
->
c⁄√˘_p‹t
);

912 i‡((
ßveÊags
 = 
	`f˙é
(
√tˇm
->
sock
, 
F_GETFL
, 0)) < 0) {

913 
	`mŸi⁄_log
(
LOG_ERR
, 1, "fcntl(1) on socket");

914 
	`√tˇm_disc⁄√˘
(
√tˇm
);

919 i‡(
	`f˙é
(
√tˇm
->
sock
, 
F_SETFL
, 
ßveÊags
 | 
O_NONBLOCK
) < 0) {

920 
	`mŸi⁄_log
(
LOG_ERR
, 1, "fcntl(2) on socket");

921 
	`√tˇm_disc⁄√˘
(
√tˇm
);

926 
ªt
 = 
	`c⁄√˘
(
√tˇm
->
sock
, (
sockaddr
 *Ë&
£rvî
,

927 (
£rvî
));

928 
back_îr
 = 
î∫o
;

931 i‡((
ªt
 < 0Ë&& (
back_îr
 !
EINPROGRESS
)) {

932 i‡(!
îr_Êag
)

933 
	`mŸi⁄_log
(
LOG_ERR
, 1, "c⁄√˘(ËÁûed (%d)", 
back_îr
);

935 i‡(
debug_Àvñ
 > 
CAMERA_INFO
)

936 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "netcam_connect disconnectingÇetcam (4)");

938 
	`√tˇm_disc⁄√˘
(
√tˇm
);

943 
	`FD_ZERO
(&
fd_w
);

944 
	`FD_SET
(
√tˇm
->
sock
, &
fd_w
);

945 
£À˘time
.
tv_£c
 = 
CONNECT_TIMEOUT
;

946 
£À˘time
.
tv_u£c
 = 0;

947 
ªt
 = 
	`£À˘
(
FD_SETSIZE
, 
NULL
, &
fd_w
, NULL, &
£À˘time
);

949 i‡(
ªt
 == 0) {

950 i‡(!
îr_Êag
)

951 
	`mŸi⁄_log
(
LOG_ERR
, 0, "timeout on connect()");

953 i‡(
debug_Àvñ
 > 
CAMERA_INFO
)

954 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "netcam_connect disconnectingÇetcam (2)");

956 
	`√tˇm_disc⁄√˘
(
√tˇm
);

965 
Àn
 = (
ªt
);

967 i‡(
	`gësock›t
(
√tˇm
->
sock
, 
SOL_SOCKET
, 
SO_ERROR
, &
ªt
, &
Àn
) < 0) {

968 
	`mŸi⁄_log
(
LOG_ERR
, 0, "getsockoptáfter connect");

969 
	`√tˇm_disc⁄√˘
(
√tˇm
);

974 i‡(
ªt
) {

975 i‡(!
îr_Êag
)

976 
	`mŸi⁄_log
(
LOG_ERR
, 1, "connectÑeturnedÉrror");

977 i‡(
debug_Àvñ
 > 
CAMERA_INFO
)

978 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "netcam_connect disconnectingÇetcam (3)");

979 
	`√tˇm_disc⁄√˘
(
√tˇm
);

984 
	`rbuf_öôülize
(
√tˇm
);

987 
	}
}

1003 
	$√tˇm_check_buffsize
(
√tˇm_buff_±r
 
buff
, 
size_t
 
numbyãs
)

1005 i‡((
buff
->
size
 - buff->
u£d
Ë>
numbyãs
)

1008 i‡(
debug_Àvñ
 > 
CAMERA_INFO
)

1009 
	`mŸi⁄_log
(-1, 0, "expanding buffer from %dÅo %d bytes",

1010 (Ë
buff
->
size
, (Ëbuff->sizê+ 
NETCAM_BUFFSIZE
);

1012 
buff
->
±r
 = 
	`myªÆloc
(buff->±r, buff->
size
 + 
NETCAM_BUFFSIZE
,

1014 
buff
->
size
 +
NETCAM_BUFFSIZE
;

1015 
	}
}

1072 
	$√tˇm_ªad_html_j≥g
(
√tˇm_c⁄ãxt_±r
 
√tˇm
)

1074 
√tˇm_buff_±r
 
buf„r
;

1075 
size_t
 
ªmaöög
;

1076 
size_t
 
maxÊush
;

1077 
size_t
 
ªm
, 
æí
, 
ix
;

1078 
ªtvÆ
;

1079 *
±r
, *
b±r
, *
Ωå
;

1080 
√tˇm_buff
 *
xchg
;

1081 
timevÆ
 
cuπime
;

1086 
buf„r
 = 
√tˇm
->
ª˚ivög
;

1088 
buf„r
->
u£d
 = 0;

1090 i‡(
buf„r
->
c⁄ã¡_Àngth
 != 0)

1091 
ªmaöög
 = 
buf„r
->
c⁄ã¡_Àngth
;

1093 
ªmaöög
 = 999999;

1096 
ªmaöög
) {

1098 i‡(
√tˇm
->
ª•⁄£
->
buf„r_À·
 <= 0) {

1099 
ªtvÆ
 = 
	`rbuf_ªad_buf„rful
(
√tˇm
);

1101 i‡(
ªtvÆ
 <= 0)

1104 
√tˇm
->
ª•⁄£
->
buf„r_À·
 = 
ªtvÆ
;

1105 
√tˇm
->
ª•⁄£
->
buf„r_pos
 =Çëˇm->ª•⁄£->
buf„r
;

1109 
b±r
 = 
√tˇm
->
bound¨y
;

1111 i‡(
b±r
) {

1112 
Ωå
 = 
√tˇm
->
ª•⁄£
->
buf„r_pos
;

1113 
æí
 = 
√tˇm
->
ª•⁄£
->
buf„r_À·
;

1126 i‡(
æí
 > 
ªmaöög
)

1127 
æí
 = 
ªmaöög
;

1129 i‡(
ªmaöög
 < 
√tˇm
->
bound¨y_Àngth
)

1132 i‡((
±r
 = 
	`memchr
(
Ωå
, *
b±r
, 
æí
)Ë=
NULL
)

1139 
ªm
 = 
æí
 - (
±r
 - 
Ωå
);

1140 
ix
 = 1; (ix < 
ªm
Ë&& (ix < 
√tˇm
->
bound¨y_Àngth
); ix++) {

1141 i‡(
±r
[
ix
] !
b±r
[ix])

1145 i‡((
ix
 !
√tˇm
->
bound¨y_Àngth
Ë&& (ix !
ªm
)) {

1150 
ix
 = 
±r
 - 
Ωå
 + 1;

1151 
Ωå
 +
ix
;

1152 
æí
 -
ix
;

1154 i‡(
æí
 <= 0)

1171 i‡(
ix
 =
√tˇm
->
bound¨y_Àngth
) {

1172 i‡((
±r
 - 
√tˇm
->
ª•⁄£
->
buf„r
Ë< (Ë
ªmaöög
)

1173 
ªmaöög
 = 
±r
 - 
√tˇm
->
ª•⁄£
->
buf„r
;

1188 i‡(
±r
 !
√tˇm
->
ª•⁄£
->
buf„r
) {

1200 
ix
 = 
±r
 - 
√tˇm
->
ª•⁄£
->
buf„r_pos
;

1201 
	`√tˇm_check_buffsize
(
buf„r
, 
ix
);

1202 
ªtvÆ
 = 
	`rbuf_Êush
(
√tˇm
, 
buf„r
->
±r
 + buf„r->
u£d
, 
ix
);

1203 
buf„r
->
u£d
 +
ªtvÆ
;

1204 
ªmaöög
 -
ªtvÆ
;

1214 i‡(
debug_Àvñ
 > 
CAMERA_INFO
) {

1215 
	`mŸi⁄_log
(-1, 0,

1218 "ª-posôi⁄ed", 
ix
,

1219 (Ë
√tˇm
->
ª•⁄£
->
buf„r_À·
);

1222 
	`memmove
(
√tˇm
->
ª•⁄£
->
buf„r
, 
±r
,

1223 
√tˇm
->
ª•⁄£
->
buf„r_À·
);

1226 
ªtvÆ
 = 
	`√tˇm_ªcv
(
√tˇm
,Çëˇm->
ª•⁄£
->
buf„r
 +

1227 
√tˇm
->
ª•⁄£
->
buf„r_À·
,

1228 (
√tˇm
->
ª•⁄£
->
buf„r
) -

1229 
√tˇm
->
ª•⁄£
->
buf„r_À·
);

1231 i‡(
ªtvÆ
 <= 0) {

1232 
	`mŸi⁄_log
(
LOG_ERR
, 1, "recv() failáfter boundary string");

1237 
√tˇm
->
ª•⁄£
->
buf„r_À·
 = 
ªtvÆ
 +Çetcam->response->buffer_left;

1238 
√tˇm
->
ª•⁄£
->
buf„r_pos
 =Çëˇm->ª•⁄£->
buf„r
;

1241 
b±r
 = 
NULL
;

1248 i‡(!
b±r
)

1253 i‡(
ªmaöög
) {

1254 
maxÊush
 = 
	`MINVAL
(
√tˇm
->
ª•⁄£
->
buf„r_À·
, 
ªmaöög
);

1255 
	`√tˇm_check_buffsize
(
buf„r
, 
maxÊush
);

1256 
ªtvÆ
 = 
	`rbuf_Êush
(
√tˇm
, 
buf„r
->
±r
 + buf„r->
u£d
, 
maxÊush
);

1257 
buf„r
->
u£d
 +
ªtvÆ
;

1258 
ªmaöög
 -
ªtvÆ
;

1267 i‡(
	`gëtimeofday
(&
cuπime
, 
NULL
) < 0)

1268 
	`mŸi⁄_log
(
LOG_ERR
, 1, "gettimeofday inÇetcam_read_jpeg");

1271 
√tˇm
->
ª˚ivög
->
image_time
 = 
cuπime
;

1278 i‡(
√tˇm
->
œ°_image
.
tv_£c
) {

1279 
√tˇm
->
av_‰ame_time
 = (9.0 *Çetcam->av_frame_time +

1280 1000000.0 * (
cuπime
.
tv_£c
 - 
√tˇm
->
œ°_image
.tv_sec) +

1281 (
cuπime
.
tv_u£c
- 
√tˇm
->
œ°_image
.tv_usec)) / 10.0;

1283 i‡(
debug_Àvñ
 > 
CAMERA_INFO
)

1284 
	`mŸi⁄_log
(-1, 0, "CÆcuœãd fømêtimê%f", 
√tˇm
->
av_‰ame_time
);

1286 
√tˇm
->
œ°_image
 = 
cuπime
;

1288 
	`±hªad_muãx_lock
(&
√tˇm
->
muãx
);

1290 
xchg
 = 
√tˇm
->
œã°
;

1291 
√tˇm
->
œã°
 =Çëˇm->
ª˚ivög
;

1292 
√tˇm
->
ª˚ivög
 = 
xchg
;

1293 
√tˇm
->
img˙t
++;

1299 
	`±hªad_c⁄d_sig«l
(&
√tˇm
->
pic_ªady
);

1301 
	`±hªad_muãx_u∆ock
(&
√tˇm
->
muãx
);

1303 i‡(!
√tˇm
->
ˇps
.
°ªamög
) {

1304 i‡(!
√tˇm
->
c⁄√˘_kì∑live
) {

1305 i‡(
debug_Àvñ
 > 
CAMERA_INFO
)

1306 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "netcam_read_html_jpeg disconnectingÇetcam since keep-aliveÇot set." );

1307 
	`√tˇm_disc⁄√˘
(
√tˇm
);

1308 } i‡(
debug_Àvñ
 > 
CAMERA_INFO
) {

1309 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "netcam_read_html_jpegÜeavingÇetcam connected." );

1314 
	}
}

1324 
	$√tˇm_ªad_·p_j≥g
(
√tˇm_c⁄ãxt_±r
 
√tˇm
)

1326 
√tˇm_buff_±r
 
buf„r
;

1327 
Àn
;

1328 
√tˇm_buff
 *
xchg
;

1329 
timevÆ
 
cuπime
;

1332 
buf„r
 = 
√tˇm
->
ª˚ivög
;

1333 
buf„r
->
u£d
 = 0;

1336 i‡(
	`·p_gë_sockë
(
√tˇm
->
·p
) <= 0) {

1337 
	`mŸi⁄_log
(
LOG_ERR
, 0, "ftp_get_socket failed inÇetcam_read_jpeg");

1344 
	`√tˇm_check_buffsize
(
buf„r
, 
FTP_BUF_SIZE
);

1347 i‡((
Àn
 = 
	`·p_ªad
(
√tˇm
->
·p
, 
buf„r
->
±r
 + buf„r->
u£d
, 
FTP_BUF_SIZE
)) < 0)

1350 
buf„r
->
u£d
 +
Àn
;

1351 } 
Àn
 > 0);

1353 i‡(
	`gëtimeofday
(&
cuπime
, 
NULL
) < 0)

1354 
	`mŸi⁄_log
(
LOG_ERR
, 1, "gettimeofday inÇetcam_read_jpeg");

1357 
√tˇm
->
ª˚ivög
->
image_time
 = 
cuπime
;

1363 i‡(
√tˇm
->
œ°_image
.
tv_£c
) {

1364 
√tˇm
->
av_‰ame_time
 =

1365 ((9.0 * 
√tˇm
->
av_‰ame_time
) + 1000000.0 *

1366 (
cuπime
.
tv_£c
 - 
√tˇm
->
œ°_image
.tv_sec) +

1367 (
cuπime
.
tv_u£c
- 
√tˇm
->
œ°_image
.tv_usec)) / 10.0;

1369 i‡(
debug_Àvñ
 > 
CAMERA_INFO
)

1370 
	`mŸi⁄_log
(-1, 0, "CÆcuœãd fømêtimê%f", 
√tˇm
->
av_‰ame_time
);

1373 
√tˇm
->
œ°_image
 = 
cuπime
;

1380 
	`±hªad_muãx_lock
(&
√tˇm
->
muãx
);

1382 
xchg
 = 
√tˇm
->
œã°
;

1383 
√tˇm
->
œã°
 =Çëˇm->
ª˚ivög
;

1384 
√tˇm
->
ª˚ivög
 = 
xchg
;

1385 
√tˇm
->
img˙t
++;

1392 
	`±hªad_c⁄d_sig«l
(&
√tˇm
->
pic_ªady
);

1393 
	`±hªad_muãx_u∆ock
(&
√tˇm
->
muãx
);

1396 
	}
}

1407 
	$√tˇm_ªad_fûe_j≥g
(
√tˇm_c⁄ãxt_±r
 
√tˇm
)

1409 
lo›_cou¡î
=0;

1411 i‡(
debug_Àvñ
 > 
CAMERA_VERBOSE
)

1412 
	`mŸi⁄_log
(-1,0,"Begö %s", 
__FUNCTION__
);

1414 
√tˇm_buff_±r
 
buf„r
;

1415 
Àn
;

1416 
√tˇm_buff
 *
xchg
;

1417 
timevÆ
 
cuπime
;

1418 
°©
 
°©buf
;

1421 
buf„r
 = 
√tˇm
->
ª˚ivög
;

1422 
buf„r
->
u£d
 = 0;

1427 i‡(
	`°©
–
√tˇm
->
fûe
->
∑th
, &
°©buf
)) {

1428 
	`mŸi⁄_log
(-1, 0, "°©(%sËîr‹", 
√tˇm
->
fûe
->
∑th
 );

1432 i‡(
debug_Àvñ
 > 
CAMERA_VERBOSE
)

1433 
	`mŸi⁄_log
(-1, 0, "°©buf.°_mtime[%d] !œ°_°_mtime[%d]", 
°©buf
.
°_mtime
, 
√tˇm
->
fûe
->
œ°_°_mtime
);

1435 i‡(
lo›_cou¡î
>((
POLLING_TIMEOUT
*1000*1000)/(
POLLING_TIME
/1000))) {

1436 
	`mŸi⁄_log
(-1, 0, "waitingÇew file imageÅimeout" );

1440 i‡(
debug_Àvñ
 > 
CAMERA_VERBOSE
)

1441 
	`mŸi⁄_log
(-1, 0, "delay waitingÇew file image ");

1444 
	`SLEEP
–0, 
POLLING_TIME
 );

1446 
lo›_cou¡î
++;

1448 } 
°©buf
.
°_mtime
==
√tˇm
->
fûe
->
œ°_°_mtime
);

1450 
√tˇm
->
fûe
->
œ°_°_mtime
 = 
°©buf
.
°_mtime
;

1451 i‡(
debug_Àvñ
 > 
CAMERA_INFO
)

1452 
	`mŸi⁄_log
(
LOG_INFO
, 0, "processingÇew file image - st_mtime "

1453 "%d", 
√tˇm
->
fûe
->
œ°_°_mtime
 );

1457 
buf„r
->
size
 < (
size_t
)
°©buf
.
°_size
)

1458 
	`√tˇm_check_buffsize
(
buf„r
, 
°©buf
.
°_size
);

1462 
√tˇm
->
fûe
->
c⁄åﬁ_fûe_desc
 = 
	`›í
–√tˇm->fûe->
∑th
, 
O_RDONLY
);

1464 i‡(
√tˇm
->
fûe
->
c⁄åﬁ_fûe_desc
 < 0) {

1465 
	`mŸi⁄_log
(-1, 0, "›í(%sËîr‹:%d", 
√tˇm
->
fûe
->
∑th
,Çëˇm->fûe->
c⁄åﬁ_fûe_desc
);

1469 i‡((
Àn
 = 
	`ªad
(
√tˇm
->
fûe
->
c⁄åﬁ_fûe_desc
, 
buf„r
->
±r
 + buf„r->
u£d
, 
°©buf
.
°_size
)) < 0) {

1470 
	`mŸi⁄_log
(-1, 0, "ªad(%sËîr‹:%d", 
√tˇm
->
fûe
->
c⁄åﬁ_fûe_desc
, 
Àn
 );

1474 
buf„r
->
u£d
 +
Àn
;

1476 
	`˛o£
–
√tˇm
->
fûe
->
c⁄åﬁ_fûe_desc
 );

1478 i‡(
	`gëtimeofday
(&
cuπime
, 
NULL
) < 0)

1479 
	`mŸi⁄_log
(
LOG_ERR
, 1, "gettimeofday inÇetcam_read_jpeg");

1481 
√tˇm
->
ª˚ivög
->
image_time
 = 
cuπime
;

1487 i‡(
√tˇm
->
œ°_image
.
tv_£c
) {

1488 
√tˇm
->
av_‰ame_time
 =

1489 ((9.0 * 
√tˇm
->
av_‰ame_time
) + 1000000.0 *

1490 (
cuπime
.
tv_£c
 - 
√tˇm
->
œ°_image
.tv_sec) +

1491 (
cuπime
.
tv_u£c
- 
√tˇm
->
œ°_image
.tv_usec)) / 10.0;

1493 i‡(
debug_Àvñ
 > 
CAMERA_INFO
)

1494 
	`mŸi⁄_log
(-1, 0, "CÆcuœãd fømêtimê%f", 
√tˇm
->
av_‰ame_time
);

1497 
√tˇm
->
œ°_image
 = 
cuπime
;

1504 
	`±hªad_muãx_lock
(&
√tˇm
->
muãx
);

1506 
xchg
 = 
√tˇm
->
œã°
;

1507 
√tˇm
->
œã°
 =Çëˇm->
ª˚ivög
;

1508 
√tˇm
->
ª˚ivög
 = 
xchg
;

1509 
√tˇm
->
img˙t
++;

1516 
	`±hªad_c⁄d_sig«l
(&
√tˇm
->
pic_ªady
);

1518 
	`±hªad_muãx_u∆ock
(&
√tˇm
->
muãx
);

1520 i‡(
debug_Àvñ
 > 
CAMERA_VERBOSE
)

1521 
	`mŸi⁄_log
(-1,0,"End %s", 
__FUNCTION__
);

1524 
	}
}

1527 
tfûe_c⁄ãxt
 *
	$fûe_√w_c⁄ãxt
()

1529 
tfûe_c⁄ãxt
 *
ªt
;

1532 
ªt
 = 
	`mymÆloc
((
tfûe_c⁄ãxt
));

1533 i‡(!
ªt
)

1534  
ªt
;

1536 
	`mem£t
(
ªt
, 0, (
tfûe_c⁄ãxt
));

1537  
ªt
;

1538 
	}
}

1540 
	$fûe_‰ì_c⁄ãxt
(
tfûe_c⁄ãxt
* 
˘xt
) {

1541 i‡(
˘xt
 =
NULL
)

1544 i‡(
˘xt
->
∑th
 !
NULL
)

1545 
	`‰ì
(
˘xt
->
∑th
);

1547 
	`‰ì
(
˘xt
);

1548 
	}
}

1550 
	$√tˇm_£tup_fûe
(
√tˇm_c⁄ãxt_±r
 
√tˇm
, 
uæ_t
 *
uæ
)

1553 i‡((
√tˇm
->
fûe
 = 
	`fûe_√w_c⁄ãxt
()Ë=
NULL
)

1562 
√tˇm
->
fûe
->
∑th
 = 
uæ
->path;

1563 
uæ
->
∑th
 = 
NULL
;

1565 i‡(
debug_Àvñ
 > 
CAMERA_INFO
)

1566 
	`mŸi⁄_log
(
LOG_INFO
, 0, "√tˇm_£tup_fûe:Çëˇm->fûe->∑th %s",
√tˇm
->
fûe
->
∑th
);

1568 
	`√tˇm_uæ_‰ì
(
uæ
);

1570 
√tˇm
->
gë_image
 = 
√tˇm_ªad_fûe_j≥g
;

1573 
	}
}

1587 *
	$√tˇm_h™dÀr_lo›
(*
¨g
)

1589 
ªtvÆ
;

1590 
›í_îr‹
 = 0;

1591 
√tˇm_c⁄ãxt_±r
 
√tˇm
 = 
¨g
;

1592 
c⁄ãxt
 *
˙t
 = 
√tˇm
->cnt;

1597 
	`±hªad_£t•ecific
(
és_key_thªadƒ
, (*)(()
˙t
->
thªadƒ
));

1599 i‡(
SETUP
)

1600 
	`mŸi⁄_log
(
LOG_INFO
, 0, "Camî®h™dÀ∏thªad [%d] sèπed", 
√tˇm
->
thªadƒ
);

1613 !
√tˇm
->
föish
) {

1614 i‡(
√tˇm
->
ª•⁄£
) {

1615 i‡(!
√tˇm
->
ˇps
.
°ªamög
) {

1617 i‡(!
√tˇm
->
c⁄√˘_kì∑live
 || (√tˇm->c⁄√˘_kì∑livê&&Çëˇm->
kì∑live_timeup
)) {

1619 i‡(
√tˇm
->
c⁄√˘_kì∑live
 &&Çëˇm->
kì∑live_timeup
) {

1620 
	`mŸi⁄_log
(
LOG_INFO
, 0, "ClosingÇetcam socketás Keep-AliveÅime is up "

1622 
	`√tˇm_disc⁄√˘
(
√tˇm
);

1623 
√tˇm
->
kì∑live_timeup
 = 
FALSE
;

1627 i‡(
	`√tˇm_c⁄√˘
(
√tˇm
, 
›í_îr‹
) < 0) {

1628 i‡(!
›í_îr‹
) {

1629 
	`mŸi⁄_log
(
LOG_ERR
, 0,

1631 
›í_îr‹
 = 1;

1634 
	`SLEEP
(5,0);

1638 i‡(
›í_îr‹
) {

1639 
	`mŸi⁄_log
(
LOG_ERR
, 0, "cameraÑe-connected");

1640 
›í_îr‹
 = 0;

1644 i‡((
ªtvÆ
 = 
	`√tˇm_ªad_fú°_hódî
(
√tˇm
)) != 1) {

1645 i‡(
ªtvÆ
 > 0) {

1646 
	`mŸi⁄_log
(
LOG_ERR
, 0, "Uƒecognized imagêhódî (%d)", 
ªtvÆ
);

1647 } i‡(
ªtvÆ
 != -1) {

1648 
	`mŸi⁄_log
(
LOG_ERR
, 0, "Eº‹ i¿hódî (%d)", 
ªtvÆ
);

1654 i‡(
	`√tˇm_ªad_√xt_hódî
(
√tˇm
) < 0) {

1655 i‡(
	`√tˇm_c⁄√˘
(
√tˇm
, 
›í_îr‹
) < 0) {

1656 i‡(!
›í_îr‹
) {

1657 
	`mŸi⁄_log
(
LOG_ERR
, 0, "re-opening camera (streaming)");

1658 
›í_îr‹
 = 1;

1660 
	`SLEEP
(5,0);

1664 i‡((
ªtvÆ
 = 
	`√tˇm_ªad_fú°_hódî
(
√tˇm
) != 2)) {

1665 i‡(
ªtvÆ
 > 0) {

1666 
	`mŸi⁄_log
(
LOG_ERR
, 0, "Uƒecognized imagêhódî (%d)", 
ªtvÆ
);

1667 } i‡(
ªtvÆ
 != -1) {

1668 
	`mŸi⁄_log
(
LOG_ERR
, 0, "Eº‹ i¿hódî (%d)", 
ªtvÆ
);

1674 i‡(
›í_îr‹
) {

1675 
	`mŸi⁄_log
(
LOG_ERR
, 0, "cameraÑe-connected");

1676 
›í_îr‹
 = 0;

1680 i‡(
√tˇm
->
	`gë_image
(netcam) < 0) {

1681 
	`mŸi⁄_log
(
LOG_ERR
, 0, "Error getting jpeg image");

1683 i‡(
√tˇm
->
·p
) {

1684 
	`˛o£
(
√tˇm
->
·p
->
c⁄åﬁ_fûe_desc
);

1685 i‡(
	`·p_c⁄√˘
(
√tˇm
) < 0)

1686 
	`mŸi⁄_log
(
LOG_ERR
, 0, "TryingÅoÑe-connect");

1701 i‡(!
√tˇm
->
ˇps
.
°ªamög
) {

1702 
	`±hªad_muãx_lock
(&
√tˇm
->
muãx
);

1705 i‡(
√tˇm
->
föish
) {

1706 
	`±hªad_muãx_u∆ock
(&
√tˇm
->
muãx
);

1718 i‡(!
√tˇm
->
°¨t_ˇ±uª
)

1719 
	`±hªad_c⁄d_waô
(&
√tˇm
->
ˇp_c⁄d
, &√tˇm->
muãx
);

1721 
√tˇm
->
°¨t_ˇ±uª
 = 0;

1723 
	`±hªad_muãx_u∆ock
(&
√tˇm
->
muãx
);

1729 
	`±hªad_muãx_lock
(&
globÆ_lock
);

1730 
thªads_ru¬ög
--;

1731 
	`±hªad_muãx_u∆ock
(&
globÆ_lock
);

1734 
	`mŸi⁄_log
(
LOG_INFO
, 0, "netcam camera handler: finish set,Éxiting");

1737 
√tˇm
->
thªad_id
 = 0;

1740 
	`±hªad_muãx_lock
(&
√tˇm
->
muãx
);

1741 
	`±hªad_c⁄d_sig«l
(&
√tˇm
->
exôög
);

1742 
	`±hªad_muãx_u∆ock
(&
√tˇm
->
muãx
);

1745 
	`±hªad_exô
(
NULL
);

1746 
	}
}

1748 
	$√tˇm_£tup_html
(
√tˇm_c⁄ãxt_±r
 
√tˇm
, 
uæ_t
 *
uæ
) {

1749 
c⁄ãxt
 *
˙t
 = 
√tˇm
->cnt;

1750 c⁄° *
±r
;

1751 *
u£Ωass
;

1752 *
ícu£Ωass
;

1753 *
ªque°_∑ss
 = 
NULL
;

1754 
ix
;

1757 
√tˇm
->
ª•⁄£
 = (
rbuf
 *Ë
	`mymÆloc
((rbuf));

1758 
	`mem£t
(
√tˇm
->
ª•⁄£
, 0, (
rbuf
));

1760 i‡(
debug_Àvñ
 > 
CAMERA_INFO
)

1761 
	`mŸi⁄_log
(
LOG_INFO
, 0, "netcam_setup_html: Netcam has flags: HTTP1.0: %s HTTP1.1: %s Keep-Alive %s.",

1762 
√tˇm
->
c⁄√˘_hâp_10
 ? "1":"0",Çëˇm->
c⁄√˘_hâp_11
 ? "1":"0",

1763 
√tˇm
->
c⁄√˘_kì∑live
 ? "ON":"OFF");

1773 i‡(
˙t
->
c⁄f
.
√tˇm_u£Ωass
)

1774 
±r
 = 
˙t
->
c⁄f
.
√tˇm_u£Ωass
;

1776 
±r
 = 
uæ
->
u£Ωass
;

1779 i‡(
±r
) {

1780 
u£Ωass
 = 
	`mymÆloc
(
	`°æí
(
±r
) + 3);

1781 
	`°r˝y
(
u£Ωass
, 
±r
);

1783 
u£Ωass
 = 
NULL
;

1796 
ix
 = 3;

1799 i‡(
u£Ωass
) {

1801 
ícu£Ωass
 = 
	`mymÆloc
(
	`BASE64_LENGTH
(
	`°æí
(
u£Ωass
)) + 1);

1803 
	`ba£64_ícode
(
u£Ωass
, 
ícu£Ωass
, 
	`°æí
(userpass));

1805 
ªque°_∑ss
 = 
	`mymÆloc
(
	`°æí
(
c⁄√˘_auth_ªq
) +

1806 
	`°æí
(
ícu£Ωass
) + 1);

1807 
ix
 +
	`•rötf
(
ªque°_∑ss
, 
c⁄√˘_auth_ªq
, 
ícu£Ωass
);

1809 
	`‰ì
(
ícu£Ωass
);

1826 i‡(
˙t
->
c⁄f
.
√tˇm_¥oxy
) {

1831 
±r
 = 
	`mymÆloc
(
	`°æí
(
uæ
->
£rvi˚
Ë+ såÀn(uæ->
ho°
)

1832 + 
	`°æí
(
uæ
->
∑th
) + 4);

1833 
	`•rötf
((*)
±r
, "hâp://%s%s", 
uæ
->
ho°
, uæ->
∑th
);

1834 
√tˇm
->
c⁄√˘_kì∑live
=0;

1836 i‡(
debug_Àvñ
 > 
CAMERA_INFO
)

1837 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "RemovedÇetcam_keepalive flag dueÅoÖroxy set."

1841 
±r
 = 
uæ
->
∑th
;

1847 
uæ
->
∑th
 = 
NULL
;

1850 
ix
 +
	`°æí
(
±r
);

1858 i‡(
√tˇm
->
c⁄√˘_kì∑live
)

1859 
ix
 +
	`°æí
(
c⁄√˘_ªq_kì∑live
);

1861 
ix
 +
	`°æí
(
c⁄√˘_ªq_˛o£
);

1866 i‡(
√tˇm
->
c⁄√˘_hâp_11
==
TRUE
)

1867 
c⁄√˘_ªq
 = 
c⁄√˘_ªq_hâp11
;

1869 
c⁄√˘_ªq
 = 
c⁄√˘_ªq_hâp10
;

1875 
√tˇm
->
c⁄√˘_ªque°
 = 
	`mymÆloc
(
	`°æí
(
c⁄√˘_ªq
Ë+ 
ix
 +

1876 
	`°æí
(
√tˇm
->
c⁄√˘_ho°
));

1879 
	`•rötf
(
√tˇm
->
c⁄√˘_ªque°
, 
c⁄√˘_ªq
, 
±r
,

1880 
√tˇm
->
c⁄√˘_ho°
);

1882 i‡(
√tˇm
->
c⁄√˘_kì∑live
)

1883 
	`°rˇt
(
√tˇm
->
c⁄√˘_ªque°
, 
c⁄√˘_ªq_kì∑live
);

1885 
	`°rˇt
(
√tˇm
->
c⁄√˘_ªque°
, 
c⁄√˘_ªq_˛o£
);

1888 i‡(
u£Ωass
) {

1889 
	`°rˇt
(
√tˇm
->
c⁄√˘_ªque°
, 
ªque°_∑ss
);

1890 
	`‰ì
(
ªque°_∑ss
);

1891 
	`‰ì
(
u£Ωass
);

1895 
	`°rˇt
(
√tˇm
->
c⁄√˘_ªque°
, "\r\n");

1896 
	`‰ì
((*)
±r
);

1897 
	`√tˇm_uæ_‰ì
(
uæ
);

1899 i‡(
debug_Àvñ
 > 
CAMERA_INFO
) {

1900 
	`mŸi⁄_log
(-1, 0, "Camî®c⁄√˘ såög i†''%s''", 
√tˇm
->
c⁄√˘_ªque°
);

1901 
	`mŸi⁄_log
(-1, 0, "End of camera connect string.");

1913 
ix
 = 0; ix < 
MAX_HEADER_RETRIES
; ix++) {

1919 i‡(
debug_Àvñ
 > 
CAMERA_INFO
)

1920 
	`mŸi⁄_log
(-1, 0, "√tˇm_£tup_html:ábouàtÿåyÅÿc⁄√˘,Åimê#%d", 
ix
);

1922 i‡(
	`√tˇm_c⁄√˘
(
√tˇm
, 0) != 0) {

1923 
	`mŸi⁄_log
(
LOG_ERR
, 0,"FailedÅo open camera - check your configándÅhatÇetcamera is online");

1926 
ix
 = 
MAX_HEADER_RETRIES
;

1930 i‡(
	`√tˇm_ªad_fú°_hódî
(
√tˇm
) >= 0)

1933 
	`mŸi⁄_log
(
LOG_ERR
, 0, "ErrorÑeading first header -Ñe-trying");

1936 i‡(
ix
 =
MAX_HEADER_RETRIES
) {

1937 
	`mŸi⁄_log
(
LOG_ERR
, 0, "FailedÅoÑead first camera header - giving up forÇow");

1945 i‡(
√tˇm
->
ˇps
.
°ªamög
) {

1946 i‡(
	`√tˇm_ªad_√xt_hódî
(
√tˇm
) < 0) {

1947 
	`mŸi⁄_log
(
LOG_ERR
, 0,

1953 i‡(
debug_Àvñ
 > 
CAMERA_INFO
)

1954 
	`mŸi⁄_log
(-1, 0, "√tˇm_£tup_html: c⁄√˘ed, goög o¿tÿªad image.", 
ix
 );

1956 
√tˇm
->
gë_image
 = 
√tˇm_ªad_html_j≥g
;

1958 
	}
}

1960 
	$√tˇm_£tup_·p
(
√tˇm_c⁄ãxt_±r
 
√tˇm
, 
uæ_t
 *
uæ
) {

1961 
c⁄ãxt
 *
˙t
 = 
√tˇm
->cnt;

1962 c⁄° *
±r
;

1964 i‡((
√tˇm
->
·p
 = 
	`·p_√w_c⁄ãxt
()Ë=
NULL
)

1972 
√tˇm
->
·p
->
∑th
 = 
uæ
->path;

1973 
uæ
->
∑th
 = 
NULL
;

1975 i‡(
˙t
->
c⁄f
.
√tˇm_u£Ωass
 !
NULL
)

1976 
±r
 = 
˙t
->
c⁄f
.
√tˇm_u£Ωass
;

1978 
±r
 = 
uæ
->
u£Ωass
;

1981 i‡(
±r
 !
NULL
) {

1982 *
˝å
;

1984 i‡((
˝å
 = 
	`°rchr
(
±r
, ':')Ë=
NULL
) {

1985 
√tˇm
->
·p
->
u£r
 = 
	`°rdup
(
±r
);

1987 
√tˇm
->
·p
->
u£r
 = 
	`mymÆloc
((
˝å
 - 
±r
));

1988 
	`mem˝y
(
√tˇm
->
·p
->
u£r
,
±r
,(
˝å
 -Ötr));

1989 
√tˇm
->
·p
->
∑sswd
 = 
	`°rdup
(
˝å
 + 1);

1993 
	`√tˇm_uæ_‰ì
(
uæ
);

1999 i‡(
	`·p_c⁄√˘
(
√tˇm
) < 0) {

2000 
	`·p_‰ì_c⁄ãxt
(
√tˇm
->
·p
);

2004 i‡(
	`·p_£nd_ty≥
(
√tˇm
->
·p
, 'I') < 0) {

2005 
	`mŸi⁄_log
(
LOG_ERR
, 0, "Error sending TYPE IÅo ftp server");

2009 
√tˇm
->
gë_image
 = 
√tˇm_ªad_·p_j≥g
;

2011 
	}
}

2031 
ssize_t
 
	$√tˇm_ªcv
(
√tˇm_c⁄ãxt_±r
 
√tˇm
, *
bufÂå
, 
size_t
 
buffsize
) {

2032 
ssize_t
 
ªtvÆ
;

2033 
fd_£t
 
fd_r
;

2034 
timevÆ
 
£À˘time
;

2036 
	`FD_ZERO
(&
fd_r
);

2037 
	`FD_SET
(
√tˇm
->
sock
, &
fd_r
);

2038 
£À˘time
 = 
√tˇm
->
timeout
;

2040 
ªtvÆ
 = 
	`£À˘
(
FD_SETSIZE
, &
fd_r
, 
NULL
, NULL, &
£À˘time
);

2041 i‡(
ªtvÆ
 == 0)

2044  
	`ªcv
(
√tˇm
->
sock
, 
bufÂå
, 
buffsize
, 0);

2045 
	}
}

2069 
	$√tˇm_˛ónup
(
√tˇm_c⁄ãxt_±r
 
√tˇm
, 
öô_ªåy_Êag
)

2071 
time•ec
 
waôtime
;

2073 i‡(!
√tˇm
)

2082 
	`±hªad_muãx_lock
(&
√tˇm
->
muãx
);

2084 i‡(
√tˇm
->
˙t
->√tˇm =
NULL
)

2091 
√tˇm
->
˙t
->√tˇm = 
NULL
;

2097 
√tˇm
->
föish
 = 1;

2106 i‡(!
√tˇm
->
ˇps
.
°ªamög
)

2107 
	`±hªad_c⁄d_sig«l
(&
√tˇm
->
ˇp_c⁄d
);

2127 
waôtime
.
tv_£c
 = 
	`time
(
NULL
) + 8;

2128 
waôtime
.
tv_n£c
 = 0;

2130 i‡(!
öô_ªåy_Êag
 &&

2131 
	`±hªad_c⁄d_timedwaô
(&
√tˇm
->
exôög
, &√tˇm->
muãx
, &
waôtime
) != 0) {

2136 
	`mŸi⁄_log
(-1, 0, "NoÑesponse from camera "

2138 
	`±hªad_muãx_lock
(&
globÆ_lock
);

2139 
thªads_ru¬ög
--;

2140 
	`±hªad_muãx_u∆ock
(&
globÆ_lock
);

2144 
	`±hªad_muãx_u∆ock
(&
√tˇm
->
muãx
);

2147 i‡(
√tˇm
->
c⁄√˘_ho°
 !
NULL
)

2148 
	`‰ì
(
√tˇm
->
c⁄√˘_ho°
);

2150 i‡(
√tˇm
->
c⁄√˘_ªque°
 !
NULL
)

2151 
	`‰ì
(
√tˇm
->
c⁄√˘_ªque°
);

2153 i‡(
√tˇm
->
bound¨y
 !
NULL
)

2154 
	`‰ì
(
√tˇm
->
bound¨y
);

2156 i‡(
√tˇm
->
œã°
 !
NULL
) {

2157 i‡(
√tˇm
->
œã°
->
±r
 !
NULL
)

2158 
	`‰ì
(
√tˇm
->
œã°
->
±r
);

2160 
	`‰ì
(
√tˇm
->
œã°
);

2163 i‡(
√tˇm
->
ª˚ivög
 !
NULL
) {

2164 i‡(
√tˇm
->
ª˚ivög
->
±r
 !
NULL
)

2165 
	`‰ì
(
√tˇm
->
ª˚ivög
->
±r
);

2167 
	`‰ì
(
√tˇm
->
ª˚ivög
);

2170 i‡(
√tˇm
->
j≥gbuf
 !
NULL
) {

2171 i‡(
√tˇm
->
j≥gbuf
->
±r
 !
NULL
)

2172 
	`‰ì
(
√tˇm
->
j≥gbuf
->
±r
);

2174 
	`‰ì
(
√tˇm
->
j≥gbuf
);

2177 i‡(
√tˇm
->
·p
 !
NULL
)

2178 
	`·p_‰ì_c⁄ãxt
(
√tˇm
->
·p
);

2180 
	`√tˇm_disc⁄√˘
(
√tˇm
);

2182 i‡(
√tˇm
->
ª•⁄£
 !
NULL
)

2183 
	`‰ì
(
√tˇm
->
ª•⁄£
);

2185 
	`±hªad_muãx_de°roy
(&
√tˇm
->
muãx
);

2186 
	`±hªad_c⁄d_de°roy
(&
√tˇm
->
ˇp_c⁄d
);

2187 
	`±hªad_c⁄d_de°roy
(&
√tˇm
->
pic_ªady
);

2188 
	`±hªad_c⁄d_de°roy
(&
√tˇm
->
exôög
);

2189 
	`‰ì
(
√tˇm
);

2190 
	}
}

2205 
	$√tˇm_√xt
(
c⁄ãxt
 *
˙t
, *
image
)

2207 
√tˇm_c⁄ãxt_±r
 
√tˇm
;

2213 i‡((!
˙t
Ë|| (!˙t->
√tˇm
))

2214  
NETCAM_FATAL_ERROR
;

2216 
√tˇm
 = 
˙t
->netcam;

2218 i‡(!
√tˇm
->
œã°
->
u£d
) {

2219 i‡(
debug_Àvñ
)

2220 
	`mŸi⁄_log
(
LOG_INFO
, 0, "netcam_next called withÇo data in buffer");

2222  
NETCAM_NOTHING_NEW_ERROR
;

2230 i‡(!
√tˇm
->
ˇps
.
°ªamög
) {

2231 
	`±hªad_muãx_lock
(&
√tˇm
->
muãx
);

2232 
√tˇm
->
°¨t_ˇ±uª
 = 1;

2233 
	`±hªad_c⁄d_sig«l
(&
√tˇm
->
ˇp_c⁄d
);

2234 
	`±hªad_muãx_u∆ock
(&
√tˇm
->
muãx
);

2243 i‡(
	`£tjmp
(
√tˇm
->
£tjmp_buf„r
))

2244  
NETCAM_GENERAL_ERROR
 | 
NETCAM_JPEG_CONV_ERROR
;

2247  
	`√tˇm_¥oc_j≥g
(
√tˇm
, 
image
);

2248 
	}
}

2266 
	$√tˇm_°¨t
(
c⁄ãxt
 *
˙t
)

2268 
√tˇm_c⁄ãxt_±r
 
√tˇm
;

2269 
±hªad_©å_t
 
h™dÀr_©åibuã
;

2270 
ªtvÆ
;

2271 
uæ_t
 
uæ
;

2273 i‡(
debug_Àvñ
 > 
CAMERA_INFO
)

2274 
	`mŸi⁄_log
(-1, 0, "enteredÇetcam_start()");

2276 
	`mem£t
(&
uæ
, 0, (url));

2277 i‡(
SETUP
)

2278 
	`mŸi⁄_log
(
LOG_INFO
, 0, "CameraÅhread starting...");

2284 
˙t
->
√tˇm
 = (
√tˇm_c⁄ãxt
 *)

2285 
	`mymÆloc
((
√tˇm_c⁄ãxt
));

2286 
	`mem£t
(
˙t
->
√tˇm
, 0, (
√tˇm_c⁄ãxt
));

2287 
√tˇm
 = 
˙t
->netcam;

2288 
√tˇm
->
˙t
 = cnt;

2296 
√tˇm
->
ª˚ivög
 = 
	`mymÆloc
((
√tˇm_buff
));

2297 
	`mem£t
(
√tˇm
->
ª˚ivög
, 0, (
√tˇm_buff
));

2298 
√tˇm
->
ª˚ivög
->
±r
 = 
	`mymÆloc
(
NETCAM_BUFFSIZE
);

2300 
√tˇm
->
j≥gbuf
 = 
	`mymÆloc
((
√tˇm_buff
));

2301 
	`mem£t
(
√tˇm
->
j≥gbuf
, 0, (
√tˇm_buff
));

2302 
√tˇm
->
j≥gbuf
->
±r
 = 
	`mymÆloc
(
NETCAM_BUFFSIZE
);

2304 
√tˇm
->
œã°
 = 
	`mymÆloc
((
√tˇm_buff
));

2305 
	`mem£t
(
√tˇm
->
œã°
, 0, (
√tˇm_buff
));

2306 
√tˇm
->
œã°
->
±r
 = 
	`mymÆloc
(
NETCAM_BUFFSIZE
);

2307 
√tˇm
->
timeout
.
tv_£c
 = 
READ_TIMEOUT
;

2310 
	`±hªad_muãx_öô
(&
√tˇm
->
muãx
, 
NULL
);

2311 
	`±hªad_c⁄d_öô
(&
√tˇm
->
ˇp_c⁄d
, 
NULL
);

2312 
	`±hªad_c⁄d_öô
(&
√tˇm
->
pic_ªady
, 
NULL
);

2313 
	`±hªad_c⁄d_öô
(&
√tˇm
->
exôög
, 
NULL
);

2316 
√tˇm
->
av_‰ame_time
 = 1000000.0 / 
˙t
->
c⁄f
.
‰ame_limô
;

2321 i‡(
˙t
->
c⁄f
.
√tˇm_¥oxy
) {

2322 
	`√tˇm_uæ_∑r£
(&
uæ
, 
˙t
->
c⁄f
.
√tˇm_¥oxy
);

2324 i‡(!
uæ
.
ho°
) {

2325 
	`mŸi⁄_log
(
LOG_ERR
, 0, "InvalidÇetcam_proxy (%s)",

2326 
˙t
->
c⁄f
.
√tˇm_¥oxy
);

2327 
	`√tˇm_uæ_‰ì
(&
uæ
);

2331 i‡(
uæ
.
u£Ωass
) {

2332 
	`mŸi⁄_log
(
LOG_ERR
, 0, "Username/passwordÇotállowed onáÖroxy URL");

2333 
	`√tˇm_uæ_‰ì
(&
uæ
);

2342 
√tˇm
->
c⁄√˘_ho°
 = 
uæ
.
ho°
;

2343 
uæ
.
ho°
 = 
NULL
;

2344 
√tˇm
->
c⁄√˘_p‹t
 = 
uæ
.
p‹t
;

2345 
	`√tˇm_uæ_‰ì
(&
uæ
);

2351 
	`√tˇm_uæ_∑r£
(&
uæ
, 
˙t
->
c⁄f
.
√tˇm_uæ
);

2353 i‡(!
uæ
.
ho°
) {

2354 
	`mŸi⁄_log
(
LOG_ERR
, 0, "InvÆidÇëˇm_uæ (%s)", 
˙t
->
c⁄f
.
√tˇm_uæ
);

2355 
	`√tˇm_uæ_‰ì
(&
uæ
);

2359 i‡(
˙t
->
c⁄f
.
√tˇm_¥oxy
 =
NULL
) {

2360 
√tˇm
->
c⁄√˘_ho°
 = 
uæ
.
ho°
;

2361 
uæ
.
ho°
 = 
NULL
;

2362 
√tˇm
->
c⁄√˘_p‹t
 = 
uæ
.
p‹t
;

2373 i‡(!
	`°rcmp
(
˙t
->
c⁄f
.
√tˇm_hâp
,"keep_alive")) {

2374 
√tˇm
->
c⁄√˘_hâp_10
 = 
TRUE
;

2375 
√tˇm
->
c⁄√˘_hâp_11
 = 
FALSE
;

2376 
√tˇm
->
c⁄√˘_kì∑live
 = 
TRUE
;

2377 } i‡(!
	`°rcmp
(
˙t
->
c⁄f
.
√tˇm_hâp
,"1.0") || !strcmp(cnt->conf.netcam_http,"1.0")) {

2378 
√tˇm
->
c⁄√˘_hâp_10
 = 
TRUE
;

2379 
√tˇm
->
c⁄√˘_hâp_11
 = 
FALSE
;

2380 
√tˇm
->
c⁄√˘_kì∑live
 = 
FALSE
;

2381 } i‡(!
	`°rcmp
(
˙t
->
c⁄f
.
√tˇm_hâp
,"1.1")) {

2382 
√tˇm
->
c⁄√˘_hâp_10
 = 
FALSE
;

2383 
√tˇm
->
c⁄√˘_hâp_11
 = 
TRUE
;

2384 
√tˇm
->
c⁄√˘_kì∑live
 = 
TRUE
;

2386 i‡(
debug_Àvñ
 > 
CAMERA_INFO
)

2387 
	`mŸi⁄_log
(
LOG_INFO
, 0, "netcam_start: Netcam_httpÖarameter '%s' convertsÅo flags: HTTP1.0:"

2388 "%†HTTP1.1: %†Kìp-Alivê%s.", 
˙t
->
c⁄f
.
√tˇm_hâp
,

2389 
√tˇm
->
c⁄√˘_hâp_10
 ? "1":"0",Çëˇm->
c⁄√˘_hâp_11
 ? "1":"0",

2390 
√tˇm
->
c⁄√˘_kì∑live
 ? "ON":"OFF");

2393 
√tˇm
->
sock
 = -1;

2395 i‡((
uæ
.
£rvi˚
Ë&& (!
	`°rcmp
(url.service, "http")) ){

2396 i‡(
debug_Àvñ
 > 
CAMERA_INFO
)

2397 
	`mŸi⁄_log
(-1, 0, "netcam_start:Çow callingÇetcam_setup_html()");

2398 
ªtvÆ
 = 
	`√tˇm_£tup_html
(
√tˇm
, &
uæ
);

2399 } i‡((
uæ
.
£rvi˚
Ë&& (!
	`°rcmp
(url.service, "ftp")) ){

2400 i‡(
debug_Àvñ
 > 
CAMERA_INFO
)

2401 
	`mŸi⁄_log
(-1, 0, "netcam_start:Çow callingÇetcam_setup_ftp");

2402 
ªtvÆ
 = 
	`√tˇm_£tup_·p
(
√tˇm
, &
uæ
);

2403 } i‡((
uæ
.
£rvi˚
Ë&& (!
	`°rcmp
(url.service, "file")) ){

2404 i‡(
debug_Àvñ
 > 
CAMERA_INFO
)

2405 
	`mŸi⁄_log
(-1, 0, "netcam_start:Çow callingÇetcam_setup_file()");

2406 
ªtvÆ
 = 
	`√tˇm_£tup_fûe
(
√tˇm
, &
uæ
);

2408 
	`mŸi⁄_log
(
LOG_ERR
, 0, "InvalidÇetcam service '%s' - "

2409 "mu° bêhâ∞‹ fç", 
uæ
.
£rvi˚
);

2410 
	`√tˇm_uæ_‰ì
(&
uæ
);

2414 i‡(
ªtvÆ
 < 0)

2424 i‡((
ªtvÆ
 = 
√tˇm
->
	`gë_image
(netcam)) != 0) {

2425 
	`mŸi⁄_log
(
LOG_ERR
, 0, "FaûedÅryögÅÿªad fú° imagê-ÑëvÆ:%d", 
ªtvÆ
 );

2434 i‡(
	`£tjmp
(
√tˇm
->
£tjmp_buf„r
)) {

2435 
	`mŸi⁄_log
(
LOG_ERR
, 0, "libjpeg decompression failure "

2440 
√tˇm
->
√tˇm_tﬁî™t_check
 = 
˙t
->
c⁄f
.netcam_tolerant_check;

2441 
√tˇm
->
JFIF_m¨kî
 = 0;

2442 
	`√tˇm_gë_dimísi⁄s
(
√tˇm
);

2447 i‡(
√tˇm
->
width
 % 16) {

2448 
	`mŸi⁄_log
(
LOG_ERR
, 0, "netcam image width (%d) isÇot modulo 16",

2449 
√tˇm
->
width
);

2453 i‡(
√tˇm
->
height
 % 16) {

2454 
	`mŸi⁄_log
(
LOG_ERR
, 0, "netcam image height (%d) isÇot modulo 16",

2455 
√tˇm
->
height
);

2460 
˙t
->
imgs
.
width
 = 
√tˇm
->width;

2461 
˙t
->
imgs
.
height
 = 
√tˇm
->height;

2462 
˙t
->
imgs
.
size
 = (
√tˇm
->
width
 *Çëˇm->
height
 * 3) / 2;

2463 
˙t
->
imgs
.
mŸi⁄size
 = 
√tˇm
->
width
 *Çëˇm->
height
;

2464 
˙t
->
imgs
.
ty≥
 = 
VIDEO_PALETTE_YUV420P
;

2470 
	`±hªad_©å_öô
(&
h™dÀr_©åibuã
);

2471 
	`±hªad_©å_£tdëach°©e
(&
h™dÀr_©åibuã
, 
PTHREAD_CREATE_DETACHED
);

2472 
	`±hªad_muãx_lock
(&
globÆ_lock
);

2473 
√tˇm
->
thªadƒ
 = ++
thªads_ru¬ög
;

2474 
	`±hªad_muãx_u∆ock
(&
globÆ_lock
);

2476 i‡((
ªtvÆ
 = 
	`±hªad_¸óã
(&
√tˇm
->
thªad_id
, &
h™dÀr_©åibuã
,

2477 &
√tˇm_h™dÀr_lo›
, 
√tˇm
)) < 0) {

2478 
	`mŸi⁄_log
(
LOG_ERR
, 1, "Sèπög camî®h™dÀ∏thªad [%d]", 
√tˇm
->
thªadƒ
);

2483 
	}
}

	@netcam.h

15 #i‚de‡
_INCLUDE_NETCAM_H


16 
	#_INCLUDE_NETCAM_H


	)

18 #unde‡
HAVE_STDLIB_H


19 
	~<j≥glib.h
>

20 
	~<£tjmp.h
>

21 
	~<sys/sockë.h
>

22 
	~<sys/ty≥s.h
>

23 
	~<ªgex.h
>

38 #ifde‡
__GNUC__


39 #ifde‡
HAVE_ANSIDECL_H


40 
	~<™side˛.h
>

42 #i‚de‡
ATTRIBUTE_UNUSED


43 
	#ATTRIBUTE_UNUSED
 
	`__©åibuã__
((
unu£d
))

	)

46 
	#ATTRIBUTE_UNUSED


	)

50 
√tˇm_c⁄ãxt
 *
	t√tˇm_c⁄ãxt_±r
;

52 
	~"√tˇm_wgë.h
"

54 
	#NETCAM_BUFFSIZE
 4096

	)

67 
	#NETCAM_GENERAL_ERROR
 0x02

	)

68 
	#NETCAM_NOTHING_NEW_ERROR
 0x06

	)

69 
	#NETCAM_JPEG_CONV_ERROR
 0x0®

	)

70 
	#NETCAM_RESTART_ERROR
 0x12

	)

71 
	#NETCAM_FATAL_ERROR
 -2

	)

77 
	suæ_t
 {

78 *
	m£rvi˚
;

79 *
	mu£Ωass
;

80 *
	mho°
;

81 
	mp‹t
;

82 *
	m∑th
;

90 
	s√tˇm_image_buff
 {

91 *
	m±r
;

92 
	mc⁄ã¡_Àngth
;

93 
size_t
 
	msize
;

94 
size_t
 
	mu£d
;

95 
timevÆ
 
	mimage_time
;

96 } 
	t√tˇm_buff
;

97 
√tˇm_buff
 *
	t√tˇm_buff_±r
;

99 
	sfûe_c⁄ãxt
 {

100 *
	m∑th
;

101 
	mc⁄åﬁ_fûe_desc
;

102 
time_t
 
	mœ°_°_mtime
;

103 } 
	ttfûe_c⁄ãxt
;

109 
	s√tˇm_c⁄ãxt
 {

110 
c⁄ãxt
 *
	m˙t
;

113 
	mföish
;

117 
	mthªadƒ
;

122 
±hªad_t
 
	mthªad_id
;

127 
±hªad_muãx_t
 
	mmuãx
;

129 
±hªad_c⁄d_t
 
	mexôög
;

133 
±hªad_c⁄d_t
 
	mˇp_c⁄d
;

137 
±hªad_c⁄d_t
 
	mpic_ªady
;

142 
	m°¨t_ˇ±uª
;

149 *
	mc⁄√˘_ho°
;

153 
	mc⁄√˘_p‹t
;

157 
	mc⁄√˘_hâp_10
;

159 
	mc⁄√˘_hâp_11
;

161 
	mc⁄√˘_kì∑live
;

165 
	mkì∑live_thisc⁄n
;

167 
	mkì∑live_timeup
;

171 *
	mc⁄√˘_ªque°
;

175 
	msock
;

180 
timevÆ
 
	mtimeout
;

183 
rbuf
 *
	mª•⁄£
;

190 
·p_c⁄ãxt
 *
	m·p
;

193 
fûe_c⁄ãxt
 *
	mfûe
;

196 (*
	mgë_image
)(
	m√tˇm_c⁄ãxt_±r
);

204 
	s√tˇm_ˇps
 {

205 
	m°ªamög
;

206 
	mc⁄ã¡_Àngth
;

207 } 
	mˇps
;

209 *
	mbound¨y
;

212 
size_t
 
	mbound¨y_Àngth
;

219 
√tˇm_buff_±r
 
	mœã°
;

222 
√tˇm_buff_±r
 
	mª˚ivög
;

225 
√tˇm_buff_±r
 
	mj≥gbuf
;

228 
	mimg˙t
;

229 
	mimg˙t_œ°
;

232 
	mîr‹_cou¡
;

235 
	mwidth
;

236 
	mheight
;

238 
	mJFIF_m¨kî
;

239 
	m√tˇm_tﬁî™t_check
;

241 
timevÆ
 
	mœ°_image
;

244 
	mav_‰ame_time
;

247 
j≥g_îr‹_mgr
 
	mjîr
;

248 
jmp_buf
 
	m£tjmp_buf„r
;

250 
	mj≥g_îr‹
;

252 } 
	t√tˇm_c⁄ãxt
;

259 
√tˇm_¥oc_j≥g
 (
√tˇm_c⁄ãxt
 *, *);

260 
√tˇm_gë_dimísi⁄s
 (
√tˇm_c⁄ãxt
 *);

262 
√tˇm_°¨t
 (
c⁄ãxt
 *);

263 
√tˇm_√xt
 (
c⁄ãxt
 *, *);

264 
√tˇm_˛ónup
 (
√tˇm_c⁄ãxt
 *, );

265 
ssize_t
 
√tˇm_ªcv
(
√tˇm_c⁄ãxt_±r
, *, 
size_t
);

	@netcam_ftp.c

11 
	~"mŸi⁄.h
"

13 
	~<˘y≥.h
>

14 
	~<√tdb.h
>

15 
	~<ªgex.h
>

16 
	~<sys/sockë.h
>

17 
	~<√töë/ö.h
>

19 
	~"√tˇm_·p.h
"

33 
·p_c⁄ãxt_poöãr
 
	$·p_√w_c⁄ãxt
()

35 
·p_c⁄ãxt_poöãr
 
ªt
;

38 
ªt
 = 
	`mymÆloc
((
·p_c⁄ãxt
));

40 
	`mem£t
(
ªt
, 0, (
·p_c⁄ãxt
));

41 
ªt
->
c⁄åﬁ_fûe_desc
 = -1;

42 
ªt
->
d©a_fûe_desc
 = -1;

43  
ªt
;

44 
	}
}

58 
	$·p_‰ì_c⁄ãxt
(
·p_c⁄ãxt_poöãr
 
˘xt
)

60 i‡(
˘xt
 =
NULL
)

63 i‡(
˘xt
->
∑th
 !
NULL
)

64 
	`‰ì
(
˘xt
->
∑th
);

66 i‡(
˘xt
->
u£r
)

67 
	`‰ì
(
˘xt
->
u£r
);

69 i‡(
˘xt
->
∑sswd
)

70 
	`‰ì
(
˘xt
->
∑sswd
);

72 i‡(
˘xt
->
c⁄åﬁ_fûe_desc
 >= 0)

73 
	`˛o£
(
˘xt
->
c⁄åﬁ_fûe_desc
);

75 
	`‰ì
(
˘xt
);

76 
	}
}

93 
	$·p_∑r£_ª•⁄£
(*
buf
, 
Àn
) {

94 
vÆ
 = 0;

96 i‡(
Àn
 < 3)

99 i‡((*
buf
 >= '0') && (*buf <= '9'))

100 
vÆ
 = vÆ * 10 + (*
buf
 - '0');

104 
buf
++;

106 i‡((*
buf
 >= '0') && (*buf <= '9'))

107 
vÆ
 = vÆ * 10 + (*
buf
 - '0');

111 
buf
++;

113 i‡((*
buf
 >= '0') && (*buf <= '9'))

114 
vÆ
 = vÆ * 10 + (*
buf
 - '0');

118 
buf
++;

120 i‡(*
buf
 == '-')

121  -
vÆ
;

123  
vÆ
;

124 
	}
}

137 
	$·p_gë_m‹e
(
·p_c⁄ãxt_poöãr
 
˘xt
) {

138 
Àn
;

139 
size
;

142 i‡((
˘xt
 =
NULL
Ë|| (˘xt->
c⁄åﬁ_fûe_desc
 < 0))

145 i‡((
˘xt
->
c⁄åﬁ_buf„r_ödex
 < 0Ë|| (˘xt->c⁄åﬁ_buf„r_ödex > 
FTP_BUF_SIZE
))

148 i‡((
˘xt
->
c⁄åﬁ_buf„r_u£d
 < 0Ë|| (˘xt->c⁄åﬁ_buf„r_u£d > 
FTP_BUF_SIZE
))

151 i‡(
˘xt
->
c⁄åﬁ_buf„r_ödex
 > ctxt->
c⁄åﬁ_buf„r_u£d
)

157 i‡(
˘xt
->
c⁄åﬁ_buf„r_ödex
 > 0) {

158 
	`memmove
(&
˘xt
->
c⁄åﬁ_buf„r
[0],

159 &
˘xt
->
c⁄åﬁ_buf„r
[˘xt->
c⁄åﬁ_buf„r_ödex
],

160 
˘xt
->
c⁄åﬁ_buf„r_u£d
 - ctxt->
c⁄åﬁ_buf„r_ödex
);

162 
˘xt
->
c⁄åﬁ_buf„r_u£d
 -˘xt->
c⁄åﬁ_buf„r_ödex
;

163 
˘xt
->
c⁄åﬁ_buf„r_ödex
 = 0;

165 
size
 = 
FTP_BUF_SIZE
 - 
˘xt
->
c⁄åﬁ_buf„r_u£d
;

167 i‡(
size
 == 0)

174 i‡((
Àn
 = 
	`ªcv
(
˘xt
->
c⁄åﬁ_fûe_desc
,

175 &
˘xt
->
c⁄åﬁ_buf„r
[˘xt->
c⁄åﬁ_buf„r_ödex
], 
size
, 0)) < 0) {

176 
	`mŸi⁄_log
(
LOG_ERR
, 1, "recv failed in ftp_get_more");

177 
	`˛o£
(
˘xt
->
c⁄åﬁ_fûe_desc
);

178 
˘xt
->
c⁄åﬁ_fûe_desc
 = -1;

182 
˘xt
->
c⁄åﬁ_buf„r_u£d
 +
Àn
;

183 
˘xt
->
c⁄åﬁ_buf„r
[˘xt->
c⁄åﬁ_buf„r_u£d
] = 0;

185  
Àn
;

186 
	}
}

199 
	$·p_gë_ª•⁄£
(
·p_c⁄ãxt_poöãr
 
˘xt
) {

200 *
±r
, *
íd
;

201 
Àn
;

202 
ªs
 = -1, 
cur
 = -1;

204 i‡((
˘xt
 =
NULL
Ë|| (˘xt->
c⁄åﬁ_fûe_desc
 < 0))

207 
gë_m‹e
:

212 
Àn
 = 
	`·p_gë_m‹e
(
˘xt
);

214 i‡(
Àn
 < 0)

217 i‡((
˘xt
->
c⁄åﬁ_buf„r_u£d
 =0Ë&& (
Àn
 == 0))

220 
±r
 = &
˘xt
->
c⁄åﬁ_buf„r
[˘xt->
c⁄åﬁ_buf„r_ödex
];

221 
íd
 = &
˘xt
->
c⁄åﬁ_buf„r
[˘xt->
c⁄åﬁ_buf„r_u£d
];

223 
±r
 < 
íd
) {

224 
cur
 = 
	`·p_∑r£_ª•⁄£
(
±r
, 
íd
 -Ötr);

225 i‡(
cur
 > 0) {

231 
ªs
 = 
cur
;

232 
±r
 += 3;

233 
˘xt
->
c⁄åﬁ_buf„r_™swî
 = 
±r
 - ctxt->
c⁄åﬁ_buf„r
;

235 (
±r
 < 
íd
) && (*ptr != '\n'))

236 
±r
++;

238 i‡(*
±r
 == '\n')

239 
±r
++;

241 i‡(*
±r
 == '\r')

242 
±r
++;

247 (
±r
 < 
íd
) && (*ptr != '\n'))

248 
±r
++;

250 i‡(
±r
 >
íd
) {

251 
˘xt
->
c⁄åﬁ_buf„r_ödex
 = ctxt->
c⁄åﬁ_buf„r_u£d
;

252 
gë_m‹e
;

255 i‡(*
±r
 != '\r')

256 
±r
++;

259 i‡(
ªs
 < 0)

260 
gë_m‹e
;

262 
˘xt
->
c⁄åﬁ_buf„r_ödex
 = 
±r
 - ctxt->
c⁄åﬁ_buf„r
;

264  (
ªs
 / 100);

265 
	}
}

271 
	$·p_£nd_u£r
(
·p_c⁄ãxt_poöãr
 
˘xt
) {

272 
buf
[200];

273 
Àn
;

274 
ªs
;

276 i‡(
˘xt
->
u£r
 =
NULL
)

277 
	`¢¥ötf
(
buf
, (buf), "USERánonymous\r\n");

279 
	`¢¥ötf
(
buf
, (buf), "USER %s\r\n", 
˘xt
->
u£r
);

281 
buf
[(buf) - 1] = 0;

282 
Àn
 = 
	`°æí
(
buf
);

283 
ªs
 = 
	`£nd
(
˘xt
->
c⁄åﬁ_fûe_desc
, 
buf
, 
Àn
, 0);

285 i‡(
ªs
 < 0) {

286 
	`mŸi⁄_log
(
LOG_ERR
, 1, "send failed in ftp_send_user");

287  
ªs
;

291 
	}
}

297 
	$·p_£nd_∑sswd
(
·p_c⁄ãxt_poöãr
 
˘xt
) {

298 
buf
[200];

299 
Àn
;

300 
ªs
;

302 i‡(
˘xt
->
∑sswd
 =
NULL
)

303 
	`¢¥ötf
(
buf
, (buf), "PASSánonymous@\r\n");

305 
	`¢¥ötf
(
buf
, (buf), "PASS %s\r\n", 
˘xt
->
∑sswd
);

307 
buf
[(buf) - 1] = 0;

308 
Àn
 = 
	`°æí
(
buf
);

309 
ªs
 = 
	`£nd
(
˘xt
->
c⁄åﬁ_fûe_desc
, 
buf
, 
Àn
, 0);

311 i‡(
ªs
 < 0) {

312 
	`mŸi⁄_log
(
LOG_ERR
, 1, "send failed in ftp_send_passwd");

313  
ªs
;

317 
	}
}

332 
	$·p_quô
(
·p_c⁄ãxt_poöãr
 
˘xt
) {

333 
buf
[200];

334 
Àn
, 
ªs
;

336 i‡((
˘xt
 =
NULL
Ë|| (˘xt->
c⁄åﬁ_fûe_desc
 < 0))

339 
	`¢¥ötf
(
buf
, (buf), "QUIT\r\n");

340 
Àn
 = 
	`°æí
(
buf
);

341 
ªs
 = 
	`£nd
(
˘xt
->
c⁄åﬁ_fûe_desc
, 
buf
, 
Àn
, 0);

343 i‡(
ªs
 < 0) {

344 
	`mŸi⁄_log
(
LOG_ERR
, 1, "send failed in ftp_quit");

345  
ªs
;

349 
	}
}

363 
	$·p_c⁄√˘
(
√tˇm_c⁄ãxt_±r
 
√tˇm
) {

364 
·p_c⁄ãxt_poöãr
 
˘xt
;

365 
ho°ít
 *
hp
;

366 
p‹t
;

367 
ªs
;

368 
addæí
 =  (
sockaddr_ö
);

370 i‡(
√tˇm
 =
NULL
)

373 
˘xt
 = 
√tˇm
->
·p
;

375 i‡(
˘xt
 =
NULL
)

378 i‡(
√tˇm
->
c⁄√˘_ho°
 =
NULL
)

384 
p‹t
 = 
√tˇm
->
c⁄√˘_p‹t
;

386 i‡(
p‹t
 == 0)

387 
p‹t
 = 21;

389 
	`mem£t
 (&
˘xt
->
·p_addªss
, 0, (ctxt->ftp_address));

391 
hp
 = 
	`gëho°by«me
 (
√tˇm
->
c⁄√˘_ho°
);

393 i‡(
hp
 =
NULL
) {

394 
	`mŸi⁄_log
(
LOG_ERR
, 1, "gethostbyname failed in ftp_connect");

398 i‡((Ë
hp
->
h_Àngth
 >

399 (((
sockaddr_ö
 *)&
˘xt
->
·p_addªss
)->
sö_addr
)) {

400 
	`mŸi⁄_log
(
LOG_ERR
, 1, "gethostbynameáddress mismatch "

408 ((
sockaddr_ö
 *)&
˘xt
->
·p_addªss
)->
sö_Ámûy
 = 
AF_INET
;

409 
	`mem˝y
 (&((
sockaddr_ö
 *)&
˘xt
->
·p_addªss
)->
sö_addr
,

410 
hp
->
h_addr_li°
[0], hp->
h_Àngth
);

412 ((
sockaddr_ö
 *)&
˘xt
->
·p_addªss
)->
sö_p‹t
 =

413 (
u_sh‹t
)
	`ht⁄s
 (()
p‹t
);

414 
˘xt
->
c⁄åﬁ_fûe_desc
 = 
	`sockë
 (
AF_INET
, 
SOCK_STREAM
, 0);

415 
addæí
 =  (
sockaddr_ö
);

417 i‡(
˘xt
->
c⁄åﬁ_fûe_desc
 < 0) {

418 
	`mŸi⁄_log
(
LOG_ERR
, 1, "socket failed");

425 i‡(
	`c⁄√˘
(
˘xt
->
c⁄åﬁ_fûe_desc
, (
sockaddr
 *Ë&˘xt->
·p_addªss
,

426 
addæí
) < 0) {

427 
	`mŸi⁄_log
(
LOG_ERR
, 1, "FailedÅo createá connection");

428 
	`˛o£
(
˘xt
->
c⁄åﬁ_fûe_desc
);

429 
˘xt
->
c⁄åﬁ_fûe_desc
 = -1;

436 
ªs
 = 
	`·p_gë_ª•⁄£
(
˘xt
);

438 i‡(
ªs
 != 2) {

439 
	`˛o£
(
˘xt
->
c⁄åﬁ_fûe_desc
);

440 
˘xt
->
c⁄åﬁ_fûe_desc
 = -1;

447 
ªs
 = 
	`·p_£nd_u£r
(
˘xt
);

448 i‡(
ªs
 < 0) {

449 
	`˛o£
(
˘xt
->
c⁄åﬁ_fûe_desc
);

450 
˘xt
->
c⁄åﬁ_fûe_desc
 = -1;

454 
ªs
 = 
	`·p_gë_ª•⁄£
(
˘xt
);

456 
ªs
) {

466 
	`˛o£
(
˘xt
->
c⁄åﬁ_fûe_desc
);

467 
˘xt
->
c⁄åﬁ_fûe_desc
 = -1;

471 
ªs
 = 
	`·p_£nd_∑sswd
(
˘xt
);

473 i‡(
ªs
 < 0) {

474 
	`˛o£
(
˘xt
->
c⁄åﬁ_fûe_desc
);

475 
˘xt
->
c⁄åﬁ_fûe_desc
 = -1;

479 
ªs
 = 
	`·p_gë_ª•⁄£
(
˘xt
);

481 
ªs
) {

485 
	`mŸi⁄_log
(
LOG_ERR
, 0, "FTP serverásking for ACCT onánonymous");

491 
	`˛o£
(
˘xt
->
c⁄åﬁ_fûe_desc
); ctxt->control_file_desc = -1;

492 
˘xt
->
c⁄åﬁ_fûe_desc
 = -1;

497 
	}
}

511 
	$·p_gë_c⁄√˘i⁄
(
·p_c⁄ãxt_poöãr
 
˘xt
) {

512 
buf
[200], *
cur
;

513 
Àn
, 
i
;

514 
ªs
;

515 
⁄
;

516 
ad
[6], *
adp
, *
p‹ç
;

517 
ãmp
[6];

518 
sockaddr_ö
 
d©a_addªss
;

519 
d©a_addªss_Àngth
;

521 i‡(
˘xt
 =
NULL
)

525 i‡(
˘xt
->
d©a_fûe_desc
 != -1)

526 
	`˛o£
(
˘xt
->
d©a_fûe_desc
);

527 
	`mem£t
 (&
d©a_addªss
, 0, (data_address));

528 
˘xt
->
d©a_fûe_desc
 = 
	`sockë
 (
AF_INET
, 
SOCK_STREAM
, 
IPPROTO_TCP
);

530 i‡(
˘xt
->
d©a_fûe_desc
 < 0) {

531 
	`mŸi⁄_log
(
LOG_ERR
, 1, "socket failed");

535 
⁄
 = 1;

537 i‡(
	`£tsock›t
(
˘xt
->
d©a_fûe_desc
, 
SOL_SOCKET
, 
SO_REUSEADDR
,

538 (*)&
⁄
, (on)) < 0) {

539 
	`mŸi⁄_log
(
LOG_ERR
, 1, "setting socket option SO_REUSEADDR");

543 ((
sockaddr_ö
 *)&
d©a_addªss
)->
sö_Ámûy
 = 
AF_INET
;

544 
d©a_addªss_Àngth
 =  (
sockaddr_ö
);

546 i‡(
˘xt
->
∑ssive
) {

548 
	`¢¥ötf
 (
buf
, (buf), "PASV\r\n");

549 
Àn
 = 
	`°æí
 (
buf
);

550 
ªs
 = 
	`£nd
(
˘xt
->
c⁄åﬁ_fûe_desc
, 
buf
, 
Àn
, 0);

552 i‡(
ªs
 < 0) {

553 
	`mŸi⁄_log
(
LOG_ERR
, 1, "send failed in ftp_get_connection");

554 
	`˛o£
(
˘xt
->
d©a_fûe_desc
);

555 
˘xt
->
d©a_fûe_desc
 = -1;

556  
ªs
;

560 
ªs
 = 
	`·p_gë_ª•⁄£
(
˘xt
);

562 i‡(
ªs
 != 2) {

563 i‡(
ªs
 == 5) {

564 
	`˛o£
(
˘xt
->
d©a_fûe_desc
);

565 
˘xt
->
d©a_fûe_desc
 = -1;

571 
	`˛o£
(
˘xt
->
d©a_fûe_desc
);

572 
˘xt
->
d©a_fûe_desc
 = -1;

573 
˘xt
->
∑ssive
 = 0;

577 
cur
 = &
˘xt
->
c⁄åﬁ_buf„r
[˘xt->
c⁄åﬁ_buf„r_™swî
];

578 ((*
cur
 < '0') || (*cur > '9')) && *cur != '\0')

579 
cur
++;

581 i‡(
	`ssˇnf
 (
cur
, "%u,%u,%u,%u,%u,%u", &
ãmp
[0], &temp[1], &temp[2],

582 &
ãmp
[3], &temp[4], &temp[5]) != 6) {

583 
	`mŸi⁄_log
(
LOG_ERR
, 0, "InvalidánswerÅo PASV");

585 i‡(
˘xt
->
d©a_fûe_desc
 != -1) {

586 
	`˛o£
 (
˘xt
->
d©a_fûe_desc
);

587 
˘xt
->
d©a_fûe_desc
 = -1;

593 
i
=0; i<6; i++)

594 
ad
[
i
] = (Ë(
ãmp
[i] & 0xff) ;

596 
	`mem˝y
 (&((
sockaddr_ö
 *)&
d©a_addªss
)->
sö_addr
, &
ad
[0], 4);

597 
	`mem˝y
 (&((
sockaddr_ö
 *)&
d©a_addªss
)->
sö_p‹t
, &
ad
[4], 2);

600 i‡(
	`c⁄√˘
(
˘xt
->
d©a_fûe_desc
, (
sockaddr
 *Ë&
d©a_addªss
,

601 
d©a_addªss_Àngth
) < 0) {

602 
	`mŸi⁄_log
(
LOG_ERR
, 1, "FailedÅo createá data connection");

603 
	`˛o£
(
˘xt
->
d©a_fûe_desc
);

604 
˘xt
->
d©a_fûe_desc
 = -1;

615 
	`gësock«me
(
˘xt
->
c⁄åﬁ_fûe_desc
, (
sockaddr
 *)&
d©a_addªss
,

616 &
d©a_addªss_Àngth
);

617 ((
sockaddr_ö
 *)&
d©a_addªss
)->
sö_p‹t
 = 0;

620 i‡(
	`böd
(
˘xt
->
d©a_fûe_desc
, (
sockaddr
 *Ë&
d©a_addªss
,

621 
d©a_addªss_Àngth
) < 0) {

622 
	`mŸi⁄_log
(
LOG_ERR
, 1, "bind failed");

623 
	`˛o£
(
˘xt
->
d©a_fûe_desc
);

624 
˘xt
->
d©a_fûe_desc
 = -1;

629 
	`gësock«me
(
˘xt
->
d©a_fûe_desc
, (
sockaddr
 *)&
d©a_addªss
,

630 &
d©a_addªss_Àngth
);

633 i‡(
	`li°í
(
˘xt
->
d©a_fûe_desc
, 1) < 0) {

634 
	`mŸi⁄_log
(
LOG_ERR
, 1, "listen failed");

635 
	`˛o£
(
˘xt
->
d©a_fûe_desc
);

636 
˘xt
->
d©a_fûe_desc
 = -1;

641 
adp
 = (*Ë&((
sockaddr_ö
 *)&
d©a_addªss
)->
sö_addr
;

642 
p‹ç
 = (*Ë&((
sockaddr_ö
 *)&
d©a_addªss
)->
sö_p‹t
;

643 
	`¢¥ötf
 (
buf
, (buf), "PORT %d,%d,%d,%d,%d,%d\r\n",

644 
adp
[0] & 0xff,ádp[1] & 0xff,ádp[2] & 0xff,ádp[3] & 0xff,

645 
p‹ç
[0] & 0xff,Öortp[1] & 0xff);

647 
buf
[(buf) - 1] = 0;

648 
Àn
 = 
	`°æí
(
buf
);

651 
ªs
 = 
	`£nd
(
˘xt
->
c⁄åﬁ_fûe_desc
, 
buf
, 
Àn
, 0);

653 i‡(
ªs
 < 0) {

654 
	`mŸi⁄_log
(
LOG_ERR
, 1, "send failed in ftp_get_connection");

655 
	`˛o£
(
˘xt
->
d©a_fûe_desc
);

656 
˘xt
->
d©a_fûe_desc
 = -1;

657  
ªs
;

660 
ªs
 = 
	`·p_gë_ª•⁄£
(
˘xt
);

662 i‡(
ªs
 != 2) {

663 
	`˛o£
(
˘xt
->
d©a_fûe_desc
);

664 
˘xt
->
d©a_fûe_desc
 = -1;

669  
˘xt
->
d©a_fûe_desc
;

670 
	}
}

684 
	$·p_˛o£_c⁄√˘i⁄
(
·p_c⁄ãxt_poöãr
 
˘xt
) {

685 
ªs
;

686 
fd_£t
 
rfd
, 
efd
;

687 
timevÆ
 
tv
;

689 i‡((
˘xt
 =
NULL
Ë|| (˘xt->
c⁄åﬁ_fûe_desc
 < 0))

692 
	`˛o£
(
˘xt
->
d©a_fûe_desc
);

693 
˘xt
->
d©a_fûe_desc
 = -1;

696 
tv
.
tv_£c
 = 15;

697 
tv
.
tv_u£c
 = 0;

698 
	`FD_ZERO
(&
rfd
);

699 
	`FD_SET
(
˘xt
->
c⁄åﬁ_fûe_desc
, &
rfd
);

700 
	`FD_ZERO
(&
efd
);

701 
	`FD_SET
(
˘xt
->
c⁄åﬁ_fûe_desc
, &
efd
);

702 
ªs
 = 
	`£À˘
(
˘xt
->
c⁄åﬁ_fûe_desc
 + 1, &
rfd
, 
NULL
, &
efd
, &
tv
);

704 i‡(
ªs
 < 0) {

705 
	`˛o£
(
˘xt
->
c⁄åﬁ_fûe_desc
);

706 
˘xt
->
c⁄åﬁ_fûe_desc
 = -1;

710 i‡(
ªs
 == 0) {

711 
	`˛o£
(
˘xt
->
c⁄åﬁ_fûe_desc
);

712 
˘xt
->
c⁄åﬁ_fûe_desc
 = -1;

714 
ªs
 = 
	`·p_gë_ª•⁄£
(
˘xt
);

716 i‡(
ªs
 != 2) {

717 
	`˛o£
(
˘xt
->
c⁄åﬁ_fûe_desc
);

718 
˘xt
->
c⁄åﬁ_fûe_desc
 = -1;

724 
	}
}

739 
	$·p_gë_sockë
(
·p_c⁄ãxt_poöãr
 
˘xt
) {

740 
buf
[300];

741 
ªs
, 
Àn
;

742 
acfd
;

744 i‡((
˘xt
 =
NULL
Ë|| (˘xt->
∑th
 == NULL))

748 
˘xt
->
d©a_fûe_desc
 = 
	`·p_gë_c⁄√˘i⁄
(ctxt);

750 i‡(
˘xt
->
d©a_fûe_desc
 == -1)

754 
	`¢¥ötf
(
buf
, (buf), "RETR %s\r\n", 
˘xt
->
∑th
);

755 
buf
[(buf) - 1] = 0;

756 
Àn
 = 
	`°æí
(
buf
);

759 
ªs
 = 
	`£nd
(
˘xt
->
c⁄åﬁ_fûe_desc
, 
buf
, 
Àn
, 0);

761 i‡(
ªs
 < 0) {

762 
	`mŸi⁄_log
(
LOG_ERR
, 1, "send failed in ftp_get_socket");

763 
	`˛o£
(
˘xt
->
d©a_fûe_desc
);

764 
˘xt
->
d©a_fûe_desc
 = -1;

765  
ªs
;

769 
ªs
 = 
	`·p_gë_ª•⁄£
(
˘xt
);

771 i‡(
ªs
 != 1) {

772 
	`˛o£
(
˘xt
->
d©a_fûe_desc
);

773 
˘xt
->
d©a_fûe_desc
 = -1;

774  -
ªs
;

781 i‡(!
˘xt
->
∑ssive
) {

782 
sockaddr_ö
 
d©a_addªss
;

783 
d©a_addªss_Àngth
 = (
sockaddr_ö
);

785 i‡((
acfd
 = 
	`ac˚±
(
˘xt
->
d©a_fûe_desc
, (
sockaddr
 *)&
d©a_addªss
,

786 &
d©a_addªss_Àngth
)) < 0) {

787 
	`mŸi⁄_log
(
LOG_ERR
, 1, "accept in ftp_get_socket");

788 
	`˛o£
(
˘xt
->
d©a_fûe_desc
);

789 
˘xt
->
d©a_fûe_desc
 = -1;

793 
	`˛o£
(
˘xt
->
d©a_fûe_desc
);

794 
˘xt
->
d©a_fûe_desc
 = 
acfd
;

797  
˘xt
->
d©a_fûe_desc
;

798 
	}
}

812 
	$·p_£nd_ty≥
(
·p_c⁄ãxt_poöãr
 
˘xt
, 
ty≥
) {

813 
buf
[100], 
uty≥
;

814 
Àn
, 
ªs
;

816 
uty≥
 = 
	`touµî
(
ty≥
);

818 
	`¢¥ötf
(
buf
, (buf), "TYPE I\r\n");

819 
Àn
 = 
	`°æí
(
buf
);

820 
ªs
 = 
	`£nd
(
˘xt
->
c⁄åﬁ_fûe_desc
, 
buf
, 
Àn
, 0);

822 i‡(
ªs
 < 0) {

823 
	`mŸi⁄_log
(
LOG_ERR
, 1, "send failed in ftp_get_socket");

824 
	`˛o£
(
˘xt
->
d©a_fûe_desc
);

825 
˘xt
->
d©a_fûe_desc
 = -1;

826  
ªs
;

829 
ªs
 = 
	`·p_gë_ª•⁄£
(
˘xt
);

831 i‡(
ªs
 != 2) {

832 
	`˛o£
(
˘xt
->
d©a_fûe_desc
);

833 
˘xt
->
d©a_fûe_desc
 = -1;

834  -
ªs
;

838 
	}
}

855 
	$·p_ªad
(
·p_c⁄ãxt_poöãr
 
˘xt
, *
de°
, 
Àn
) {

856 i‡(
˘xt
 =
NULL
)

859 i‡(
˘xt
->
d©a_fûe_desc
 < 0)

862 i‡(
de°
 =
NULL
)

865 i‡(
Àn
 <= 0)

868 
Àn
 = 
	`ªcv
(
˘xt
->
d©a_fûe_desc
, 
de°
,Üen, 0);

870 i‡(
Àn
 <= 0) {

871 i‡(
Àn
 < 0)

872 
	`mŸi⁄_log
(
LOG_ERR
, 1, "recv failed in ftp_read");

873 
	`·p_˛o£_c⁄√˘i⁄
(
˘xt
);

876  
Àn
;

877 
	}
}

891 
	$·p_˛o£
(
·p_c⁄ãxt_poöãr
 
˘xt
) {

892 i‡(
˘xt
 =
NULL
)

895 i‡(
˘xt
->
d©a_fûe_desc
 >= 0) {

896 
	`˛o£
(
˘xt
->
d©a_fûe_desc
);

897 
˘xt
->
d©a_fûe_desc
 = -1;

900 i‡(
˘xt
->
c⁄åﬁ_fûe_desc
 >= 0) {

901 
	`·p_quô
(
˘xt
);

902 
	`˛o£
(
˘xt
->
c⁄åﬁ_fûe_desc
);

903 
˘xt
->
c⁄åﬁ_fûe_desc
 = -1;

906 
	`·p_‰ì_c⁄ãxt
(
˘xt
);

909 
	}
}

	@netcam_ftp.h

12 #i‚de‡
_INCLUDE_NETCAM_FTP_H


13 
	#_INCLUDE_NETCAM_FTP_H


	)

15 
	#FTP_BUF_SIZE
 1024

	)

17 
	s·p_c⁄ãxt
 {

18 *
	m∑th
;

19 *
	mu£r
;

20 *
	m∑sswd
;

21 
sockaddr_ö
 
	m·p_addªss
;

22 
	m∑ssive
;

23 
	mc⁄åﬁ_fûe_desc
;

24 
	md©a_fûe_desc
;

25 
	m°©e
;

26 
	mªtu∫VÆue
;

29 
	mc⁄åﬁ_buf„r
[
FTP_BUF_SIZE
 + 1];

30 
	mc⁄åﬁ_buf„r_ödex
;

31 
	mc⁄åﬁ_buf„r_u£d
;

32 
	mc⁄åﬁ_buf„r_™swî
;

33 } 
	t·p_c⁄ãxt
, *
	t·p_c⁄ãxt_poöãr
;

36 
·p_c⁄ãxt_poöãr
 
·p_√w_c⁄ãxt
();

37 
·p_‰ì_c⁄ãxt
(
·p_c⁄ãxt_poöãr
);

38 
·p_c⁄ãxt_poöãr
 
·pO≥n
(const *);

39 
·p_c⁄√˘
(
√tˇm_c⁄ãxt_±r
);

40 
·p_£nd_ty≥
(
·p_c⁄ãxt_poöãr
, const );

41 
·p_gë_sockë
(
·p_c⁄ãxt_poöãr
);

42 
·p_ªad
(
·p_c⁄ãxt_poöãr
, *, );

43 
·p_˛o£
(
·p_c⁄ãxt_poöãr
);

	@netcam_jpeg.c

15 
	~"rŸ©e.h
"

17 
	~<j≥glib.h
>

18 
	~<jîr‹.h
>

26 
j≥g_sour˚_mgr
 
	mpub
;

27 *
	md©a
;

28 
	mÀngth
;

29 
JOCTET
 *
	mbuf„r
;

30 
boﬁón
 
	m°¨t_of_fûe
;

31 } 
	t√tˇm_sour˚_mgr
;

33 
√tˇm_sour˚_mgr
 *
	t√tˇm_§c_±r
;

42 
√tˇm_öô_sour˚
(
j_decom¥ess_±r
);

43 
boﬁón
 
√tˇm_fûl_öput_buf„r
(
j_decom¥ess_±r
);

44 
√tˇm_skù_öput_d©a
(
j_decom¥ess_±r
, );

45 
√tˇm_ãrm_sour˚
(
j_decom¥ess_±r
);

46 
√tˇm_mem‹y_§c
(
j_decom¥ess_±r
, *, );

47 
√tˇm_îr‹_exô
(
j_comm⁄_±r
);

49 
	$√tˇm_öô_sour˚
(
j_decom¥ess_±r
 
cöfo
)

54 
√tˇm_§c_±r
 
§c
 = (√tˇm_§c_±rË
cöfo
->src;

59 
§c
->
°¨t_of_fûe
 = 
TRUE
;

60 
	}
}

62 
boﬁón
 
	$√tˇm_fûl_öput_buf„r
(
j_decom¥ess_±r
 
cöfo
)

64 
√tˇm_§c_±r
 
§c
 = (√tˇm_§c_±rË
cöfo
->src;

65 
size_t
 
nbyãs
;

82 i‡(
§c
->
°¨t_of_fûe
) {

83 
nbyãs
 = 
§c
->
Àngth
;

84 
§c
->
buf„r
 = (
JOCTET
 *Ë§c->
d©a
;

87 i‡(
debug_Àvñ
 > 
CAMERA_VERBOSE
)

88 
	`mŸi⁄_log
(
LOG_INFO
, 0, "%s: **ÁkêEOI in£πed**", 
__FUNCTION__
);

89 
§c
->
buf„r
[0] = (
JOCTET
) 0xFF;

90 
§c
->
buf„r
[1] = (
JOCTET
Ë
JPEG_EOI
;

91 
nbyãs
 = 2;

94 
§c
->
pub
.
√xt_öput_byã
 = src->
buf„r
;

95 
§c
->
pub
.
byãs_ö_buf„r
 = 
nbyãs
;

96 
§c
->
°¨t_of_fûe
 = 
FALSE
;

98  
TRUE
;

99 
	}
}

101 
	$√tˇm_skù_öput_d©a
(
j_decom¥ess_±r
 
cöfo
, 
num_byãs
)

103 
√tˇm_§c_±r
 
§c
 = (√tˇm_§c_±rË
cöfo
->src;

105 i‡(
num_byãs
 > 0) {

106 
num_byãs
 > (Ë
§c
->
pub
.
byãs_ö_buf„r
) {

107 
num_byãs
 -(Ë
§c
->
pub
.
byãs_ö_buf„r
;

108 (Ë
	`√tˇm_fûl_öput_buf„r
 (
cöfo
);

110 
§c
->
pub
.
√xt_öput_byã
 +(
size_t
Ë
num_byãs
;

111 
§c
->
pub
.
byãs_ö_buf„r
 -(
size_t
Ë
num_byãs
;

113 
	}
}

115 
	$√tˇm_ãrm_sour˚
(
j_decom¥ess_±r
 
cöfo
 
ATTRIBUTE_UNUSED
)

117 
	}
}

133 
	$√tˇm_mem‹y_§c
(
j_decom¥ess_±r
 
cöfo
, *
d©a
, 
Àngth
)

135 
√tˇm_§c_±r
 
§c
;

137 i‡(
cöfo
->
§c
 =
NULL
) {

138 
cöfo
->
§c
 = (
j≥g_sour˚_mgr
 *)

139 (*
cöfo
->
mem
->
Æloc_smÆl
)

140 ((
j_comm⁄_±r
Ë
cöfo
, 
JPOOL_PERMANENT
,

141  (
√tˇm_sour˚_mgr
));

144 
§c
 = (
√tˇm_§c_±r
)
cöfo
->src;

145 
§c
->
d©a
 = data;

146 
§c
->
Àngth
 =Üength;

147 
§c
->
pub
.
öô_sour˚
 = 
√tˇm_öô_sour˚
;

148 
§c
->
pub
.
fûl_öput_buf„r
 = 
√tˇm_fûl_öput_buf„r
;

149 
§c
->
pub
.
skù_öput_d©a
 = 
√tˇm_skù_öput_d©a
;

150 
§c
->
pub
.
ªsync_to_ª°¨t
 = 
j≥g_ªsync_to_ª°¨t
;

151 
§c
->
pub
.
ãrm_sour˚
 = 
√tˇm_ãrm_sour˚
;

152 
§c
->
pub
.
byãs_ö_buf„r
 = 0;

153 
§c
->
pub
.
√xt_öput_byã
 = 
NULL
;

154 
	}
}

171 
	$√tˇm_îr‹_exô
(
j_comm⁄_±r
 
cöfo
)

174 
√tˇm_c⁄ãxt_±r
 
√tˇm
 = 
cöfo
->
˛õ¡_d©a
;

176 (*
cöfo
->
îr
->
ouçut_mesßge
)(cinfo);

178 
√tˇm
->
j≥g_îr‹
 |= 1;

180 
	`j≥g_de°roy
 (
cöfo
);

182 i‡(
debug_Àvñ
 > 
CAMERA_VERBOSE
)

183 
	`mŸi⁄_log
(
LOG_ERR
, 0, "%s:Çetcam->jpeg_error %d",

184 
__FUNCTION__
, 
√tˇm
->
j≥g_îr‹
);

187 
	`l⁄gjmp
(
√tˇm
->
£tjmp_buf„r
, 1);

188 
	}
}

204 
	$√tˇm_ouçut_mesßge
(
j_comm⁄_±r
 
cöfo
)

206 
buf„r
[
JMSG_LENGTH_MAX
];

209 
√tˇm_c⁄ãxt_±r
 
√tˇm
 = 
cöfo
->
˛õ¡_d©a
;

222 i‡((
cöfo
->
îr
->
msg_code
 !
JWRN_EXTRANEOUS_DATA
) &&

223 (
cöfo
->
îr
->
msg_code
 =
JWRN_NOT_SEQUENTIAL
Ë&& (!
√tˇm
->
√tˇm_tﬁî™t_check
))

224 
√tˇm
->
j≥g_îr‹
 |= 2;

232 i‡(
debug_Àvñ
 > 
CAMERA_VERBOSE
) {

237 (*
cöfo
->
îr
->
f‹m©_mesßge
)(cöfo, 
buf„r
);

238 
	`mŸi⁄_log
(
LOG_ERR
, 0, "%s: %s", 
__FUNCTION__
, 
buf„r
);

240 
	}
}

254 
	$√tˇm_öô_j≥g
(
√tˇm_c⁄ãxt_±r
 
√tˇm
, 
j_decom¥ess_±r
 
cöfo
)

256 
√tˇm_buff_±r
 
buff
;

264 
	`±hªad_muãx_lock
(&
√tˇm
->
muãx
);

266 i‡(
√tˇm
->
img˙t_œ°
 =√tˇm->
img˙t
) {

267 
time•ec
 
waôtime
;

268 
timevÆ
 
cuπime
;

269 
ªtcode
;

278 
	`gëtimeofday
(&
cuπime
, 
NULL
);

279 
cuπime
.
tv_u£c
 += 500000;

281 i‡(
cuπime
.
tv_u£c
 > 1000000) {

282 
cuπime
.
tv_u£c
 -= 1000000;

283 
cuπime
.
tv_£c
++;

286 
waôtime
.
tv_£c
 = 
cuπime
.tv_sec;

287 
waôtime
.
tv_n£c
 = 1000L * 
cuπime
.
tv_u£c
;

290 
ªtcode
 = 
	`±hªad_c⁄d_timedwaô
(&
√tˇm
->
pic_ªady
,

291 &
√tˇm
->
muãx
, &
waôtime
);

292 } 
ªtcode
 =
EINTR
);

294 i‡(
ªtcode
) {

295 
	`±hªad_muãx_u∆ock
(&
√tˇm
->
muãx
);

297 i‡(
debug_Àvñ
 > 
CAMERA_WARNINGS
)

298 
	`mŸi⁄_log
(-1, 0, "%s:Çÿ√wÖic,Çÿsig«»rcvd", 
__FUNCTION__
);

300  
NETCAM_GENERAL_ERROR
 | 
NETCAM_NOTHING_NEW_ERROR
;

303 i‡(
debug_Àvñ
 > 
CAMERA_VERBOSE
)

304 
	`mŸi⁄_log
(-1, 0, "%s: ***√wÖi¯dñay suc˚ssful***", 
__FUNCTION__
);

307 
√tˇm
->
img˙t_œ°
 =Çëˇm->
img˙t
;

310 
buff
 = 
√tˇm
->
œã°
;

311 
√tˇm
->
œã°
 =Çëˇm->
j≥gbuf
;

312 
√tˇm
->
j≥gbuf
 = 
buff
;

313 
	`±hªad_muãx_u∆ock
(&
√tˇm
->
muãx
);

316 
√tˇm
->
j≥g_îr‹
 = 0;

318 
buff
 = 
√tˇm
->
j≥gbuf
;

321 
	`j≥g_¸óã_decom¥ess
(
cöfo
);

324 
cöfo
->
îr
 = 
	`j≥g_°d_îr‹
(&
√tˇm
->
jîr
);

325 
cöfo
->
˛õ¡_d©a
 = 
√tˇm
;

326 
√tˇm
->
jîr
.
îr‹_exô
 = 
√tˇm_îr‹_exô
;

327 
√tˇm
->
jîr
.
ouçut_mesßge
 = 
√tˇm_ouçut_mesßge
;

330 
	`√tˇm_mem‹y_§c
(
cöfo
, 
buff
->
±r
, buff->
u£d
);

333 
	`j≥g_ªad_hódî
(
cöfo
, 
TRUE
);

336 
cöfo
->
out_cﬁ‹_•a˚
 = 
JCS_YCbCr
;

339 
	`j≥g_°¨t_decom¥ess
(
cöfo
);

341 i‡(
debug_Àvñ
 > 
CAMERA_VERBOSE
)

342 
	`mŸi⁄_log
(
LOG_INFO
, 0, "%s: j≥g_îr‹ %d", 
__FUNCTION__
, 
√tˇm
->
j≥g_îr‹
);

344  
√tˇm
->
j≥g_îr‹
;

345 
	}
}

347 
	$√tˇm_image_c⁄v
(
√tˇm_c⁄ãxt_±r
 
√tˇm
,

348 
j≥g_decom¥ess_°ru˘
 *
cöfo
,

349 *
image
)

351 
JSAMPARRAY
 
löe
;

352 *
wlöe
;

354 
löesize
, 
i
;

355 *
upic
, *
vpic
;

356 *
pic
 = 
image
;

357 
y
;

358 
width
, 
height
;

360 
width
 = 
cöfo
->
ouçut_width
;

361 
height
 = 
cöfo
->
ouçut_height
;

363 i‡(
width
 && ((width !
√tˇm
->widthË|| (
height
 !=Çetcam->height))) {

364 
	`mŸi⁄_log
(
LOG_ERR
, 0,

366 
__FUNCTION__
, 
√tˇm
->
width
,Çëˇm->
height
, width, height);

367 
	`j≥g_de°roy_decom¥ess
 (
cöfo
);

368 
√tˇm
->
j≥g_îr‹
 |= 4;

369  
√tˇm
->
j≥g_îr‹
;

372 
upic
 = 
pic
 + 
width
 * 
height
;

373 
vpic
 = 
upic
 + (
width
 * 
height
) / 4;

377 
löesize
 = 
cöfo
->
ouçut_width
 * 3;

380 
löe
 = (
cöfo
->
mem
->
Æloc_ßºay
)((
j_comm⁄_±r
Ëcöfo, 
JPOOL_IMAGE
,

381 
cöfo
->
ouçut_width
 * cöfo->
ouçut_comp⁄íts
, 1);

383 
wlöe
 = 
löe
[0];

384 
y
 = 0;

386 
cöfo
->
ouçut_sˇ∆öe
 < 
height
) {

387 
	`j≥g_ªad_sˇ∆öes
 (
cöfo
, 
löe
, 1);

389 
i
 = 0; i < 
löesize
; i += 3) {

390 
pic
[
i
 / 3] = 
wlöe
[i];

391 i‡(
i
 & 1) {

392 
upic
[(
i
 / 3Ë/ 2] = 
wlöe
[i + 1];

393 
vpic
[(
i
 / 3Ë/ 2] = 
wlöe
[i + 2];

396 
pic
 +
löesize
 / 3;

397 i‡(
y
++ & 1) {

398 
upic
 +
width
 / 2;

399 
vpic
 +
width
 / 2;

403 
	`j≥g_föish_decom¥ess
 (
cöfo
);

404 
	`j≥g_de°roy_decom¥ess
 (
cöfo
);

407 i‡(
√tˇm
->
˙t
->
rŸ©e_d©a
.
degªes
 > 0)

408 
	`rŸ©e_m≠
(
√tˇm
->
˙t
, 
image
);

411 i‡(
debug_Àvñ
 > 
CAMERA_VERBOSE
)

412 
	`mŸi⁄_log
(
LOG_INFO
, 0, "%s: jpeg_error %d",

413 
__FUNCTION__
, 
√tˇm
->
j≥g_îr‹
);

415  
√tˇm
->
j≥g_îr‹
;

416 
	}
}

435 
	$√tˇm_¥oc_j≥g
(
√tˇm_c⁄ãxt_±r
 
√tˇm
, *
image
)

437 
j≥g_decom¥ess_°ru˘
 
cöfo
;

438 
ªtvÆ
 = 0;

439 
ªt
;

447 i‡(
debug_Àvñ
 > 
CAMERA_INFO
)

448 
	`mŸi⁄_log
(
LOG_INFO
, 0, "%s:Örocessing jpeg image - contentÜength "

449 "%d", 
__FUNCTION__
, 
√tˇm
->
œã°
->
c⁄ã¡_Àngth
);

451 
ªt
 = 
	`√tˇm_öô_j≥g
(
√tˇm
, &
cöfo
);

453 i‡(
ªt
 != 0) {

454 i‡(
debug_Àvñ
 > 
CAMERA_INFO
)

455 
	`mŸi⁄_log
(
LOG_ERR
, 0, "%s:Ñë %d", 
__FUNCTION__
, 
ªt
);

456  
ªt
;

464 i‡(
√tˇm
->
width
) {

465 i‡((
cöfo
.
ouçut_width
 !
√tˇm
->
width
) ||

466 (
cöfo
.
ouçut_height
 !
√tˇm
->
height
)) {

467 
ªtvÆ
 = 
NETCAM_RESTART_ERROR
;

468 
	`mŸi⁄_log
(
LOG_ERR
, 0,

471 "ÑëvÆ %d", 
__FUNCTION__
, 
√tˇm
->
width
,Çëˇm->
height
,

472 
cöfo
.
ouçut_width
, cöfo.
ouçut_height
, 
ªtvÆ
);

473  
ªtvÆ
;

478 
ªt
 = 
	`√tˇm_image_c⁄v
(
√tˇm
, &
cöfo
, 
image
);

480 i‡(
ªt
 != 0) {

481 
ªtvÆ
 |
NETCAM_JPEG_CONV_ERROR
;

482 i‡(
debug_Àvñ
 > 
CAMERA_INFO
)

483 
	`mŸi⁄_log
(
LOG_ERR
, 0, "%s:Ñë %dÑëvÆ %d", 
__FUNCTION__
,

484 
ªt
, 
ªtvÆ
);

487  
ªtvÆ
;

488 
	}
}

503 
	$√tˇm_gë_dimísi⁄s
(
√tˇm_c⁄ãxt_±r
 
√tˇm
)

505 
j≥g_decom¥ess_°ru˘
 
cöfo
;

506 
ªt
;

508 
ªt
 = 
	`√tˇm_öô_j≥g
(
√tˇm
, &
cöfo
);

510 
√tˇm
->
width
 = 
cöfo
.
ouçut_width
;

511 
√tˇm
->
height
 = 
cöfo
.
ouçut_height
;

512 
√tˇm
->
JFIF_m¨kî
 = 
cöfo
.
ßw_JFIF_m¨kî
;

514 
	`j≥g_de°roy_decom¥ess
(&
cöfo
);

516 i‡(
debug_Àvñ
 > 
CAMERA_INFO
)

517 
	`mŸi⁄_log
(
LOG_ERR
, 0, "%s: JFIF_marker %s PRESENTÑet %d",

518 
__FUNCTION__
, 
√tˇm
->
JFIF_m¨kî
 ? "IS" : "NOT", 
ªt
);

519 
	}
}

	@netcam_wget.c

26 
	~"mŸi⁄.h
"

27 
	~<˘y≥.h
>

28 
	~<sys/ty≥s.h
>

29 
	~<sys/sockë.h
>

31 
	#MINVAL
(
x
, 
y
Ë((xË< (yË? (xË: (y))

	)

68 
	$hódî_gë
(
√tˇm_c⁄ãxt_±r
 
√tˇm
, **
hdr
, 
hódî_gë_Êags
 
Êags
)

70 
i
;

71 
bufsize
 = 80;

73 *
hdr
 = (*)
	`mymÆloc
(
bufsize
);

74 
i
 = 0; 1; i++) {

75 
ªs
;

77 i‡(
i
 > 
bufsize
 - 1)

78 *
hdr
 = (*)
	`myªÆloc
(*hdr, (
bufsize
 <<= 1), "");

80 
ªs
 = 
	`RBUF_READCHAR
 (
√tˇm
, *
hdr
 + 
i
);

82 i‡(
ªs
 == 1) {

83 i‡((*
hdr
)[
i
] == '\n') {

84 i‡(!((
Êags
 & 
HG_NO_CONTINUATIONS
Ë|| 
i
 == 0

85 || (
i
 =1 && (*
hdr
)[0] == '\r'))) {

86 
√xt
;

90 
ªs
 = 
	`rbuf_≥ek
(
√tˇm
, &
√xt
);

92 i‡(
ªs
 == 0) {

93 (*
hdr
)[
i
] = '\0';

94  
HG_EOF
;

95 } i‡(
ªs
 == -1) {

96 (*
hdr
)[
i
] = '\0';

97  
HG_ERROR
;

101 i‡(
√xt
 == '\t' ||Çext == ' ')

108 
i
 > 0 && 
	`is•a˚
((*
hdr
)[i - 1]))

109 --
i
;

111 (*
hdr
)[
i
] = '\0';

115 } i‡(
ªs
 == 0) {

117 (*
hdr
)[
i
] = '\0';

118  
HG_EOF
;

120 (*
hdr
)[
i
] = '\0';

121  
HG_ERROR
;

125  
HG_OK
;

126 
	}
}

131 
hódî_¥o˚ss
 (c⁄° *
hódî
, c⁄° *
«me
,

132 (*
¥ocfun
)(const *, *),

133 *
¨g
)

136 *
«me
 && (
	`tﬁowî
 (*«meË=tﬁowî (*
hódî
)))

137 ++
«me
, ++
hódî
;

139 i‡(*
«me
 || *
hódî
++ != ':')

142 
hódî
 +
	`skù_lws
 (header);

143  ((*
¥ocfun
Ë(
hódî
, 
¨g
));

144 
	}
}

150 
	$hódî_exåa˘_numbî
(c⁄° *
hódî
, *
˛osuª
)

152 c⁄° *
p
 = 
hódî
;

153 
ªsu…
;

155 
ªsu…
 = 0; 
	`isdigô
 (*
p
);Ö++)

156 
ªsu…
 = 10 *Ñesu… + (*
p
 - '0');

159 i‡(
p
 =
hódî
)

163 
p
 +
	`skù_lws
 (p);

166 *(*)
˛osuª
 = 
ªsu…
;

169 i‡(*
p
)

173 
	}
}

176 
	$hódî_°rdup
(c⁄° *
hódî
, *
˛osuª
)

178 *(**)
˛osuª
 = 
	`°rdup
(
hódî
);

180 
	}
}

185 
	$skù_lws
(c⁄° *
°rög
)

187 c⁄° *
p
 = 
°rög
;

189 *
p
 == ' ' || *p == '\t' || *p == '\r' || *p == '\n')

190 ++
p
;

192  
p
 - 
°rög
;

193 
	}
}

201 
	$ba£64_ícode
(c⁄° *
s
, *
°‹e
, 
Àngth
)

204 c⁄° 
tbl
[64] = {

215 
i
;

216 *
p
 = (*)
°‹e
;

219 
i
 = 0; i < 
Àngth
; i += 3) {

220 *
p
++ = 
tbl
[
s
[0] >> 2];

221 *
p
++ = 
tbl
[((
s
[0] & 3) << 4) + (s[1] >> 4)];

222 *
p
++ = 
tbl
[((
s
[1] & 0xf) << 2) + (s[2] >> 6)];

223 *
p
++ = 
tbl
[
s
[2] & 0x3f];

224 
s
 += 3;

228 i‡(
i
 =
Àngth
 + 1)

229 *(
p
 - 1) = '=';

230 i‡(
i
 =
Àngth
 + 2)

231 *(
p
 - 1) = *(p - 2) = '=';

234 *
p
 = '\0';

235 
	}
}

237 *
	$°rdupdñim
(c⁄° *
beg
, c⁄° *
íd
)

239 *
ªs
 = (*)
	`mymÆloc
(
íd
 - 
beg
 + 1);

240 
	`mem˝y
 (
ªs
, 
beg
, 
íd
 - beg);

242 
ªs
[
íd
 - 
beg
] = '\0';

243  
ªs
;

244 
	}
}

246 
	$hâp_¥o˚ss_ty≥
(c⁄° *
hdr
, *
¨g
)

248 **
ªsu…
 = (**)
¨g
;

250 c⁄° *
p
 = 
	`°rchr
 (
hdr
, ';');

252 i‡(!
p
)

253 
p
 = 
hdr
 + 
	`°æí
 (hdr);

255 
p
 > 
hdr
 && 
	`is•a˚
 (*(p - 1)))

256 --
p
;

258 *
ªsu…
 = 
	`°rdupdñim
 (
hdr
, 
p
);

260 
	}
}

264 
	$rbuf_öôülize
(
√tˇm_c⁄ãxt_±r
 
√tˇm
)

266 
√tˇm
->
ª•⁄£
->
buf„r_pos
 =Çëˇm->ª•⁄£->
buf„r
;

267 
√tˇm
->
ª•⁄£
->
buf„r_À·
 = 0;

268 
	}
}

270 
	$rbuf_ªad_buf„rful
(
√tˇm_c⁄ãxt_±r
 
√tˇm
)

272  
	`√tˇm_ªcv
(
√tˇm
,Çëˇm->
ª•⁄£
->
buf„r
,

273  (
√tˇm
->
ª•⁄£
->
buf„r
));

274 
	}
}

277 
	$rbuf_≥ek
(
√tˇm_c⁄ãxt_±r
 
√tˇm
, *
°‹e
)

279 i‡(!
√tˇm
->
ª•⁄£
->
buf„r_À·
) {

280 
ªs
;

281 
	`rbuf_öôülize
(
√tˇm
);

282 
ªs
 = 
	`√tˇm_ªcv
 (
√tˇm
,Çëˇm->
ª•⁄£
->
buf„r
,

283  (
√tˇm
->
ª•⁄£
->
buf„r
));

285 i‡(
ªs
 <= 0)

286  
ªs
;

288 
√tˇm
->
ª•⁄£
->
buf„r_À·
 = 
ªs
;

291 *
°‹e
 = *
√tˇm
->
ª•⁄£
->
buf„r_pos
;

293 
	}
}

300 
	$rbuf_Êush
(
√tˇm_c⁄ãxt_±r
 
√tˇm
, *
whîe
, 
maxsize
)

302 i‡(!
√tˇm
->
ª•⁄£
->
buf„r_À·
) {

305 
howmuch
 = 
	`MINVAL
 (()
√tˇm
->
ª•⁄£
->
buf„r_À·
, 
maxsize
);

307 i‡(
whîe
)

308 
	`mem˝y
(
whîe
, 
√tˇm
->
ª•⁄£
->
buf„r_pos
, 
howmuch
);

310 
√tˇm
->
ª•⁄£
->
buf„r_À·
 -
howmuch
;

311 
√tˇm
->
ª•⁄£
->
buf„r_pos
 +
howmuch
;

312  
howmuch
;

314 
	}
}

317 
	$hâp_ªsu…_code
(c⁄° *
hódî
)

319 *
˝å
;

322 i‡(
	`°∫cmp
(
hódî
, "HTTP", 4))

326 i‡((
˝å
 = 
	`°rchr
(
hódî
+4, ' ')Ë=
NULL
)

329  
	`©oi
(
˝å
 + 1);

330 
	}
}

	@netcam_wget.h

26 #i‚de‡
NETCAM_WGET_H


27 
	#NETCAM_WGET_H


	)

29 
	~"√tˇm.h
"

32 
	srbuf


34 
	mbuf„r
[4096];

35 *
	mbuf„r_pos
;

36 
size_t
 
	mbuf„r_À·
;

38 
	mªt
;

53 
	#RBUF_READCHAR
(
√tˇm
, 
°‹e
) \

54 ((
√tˇm
)->
ª•⁄£
->
buf„r_À·
 ? (--(netcam)->response->buffer_left, \

55 *((*Ë(
°‹e
)Ë*(
√tˇm
)->
ª•⁄£
->
buf„r_pos
++, 1) \

56 : ((
√tˇm
)->
ª•⁄£
->
buf„r_pos
 = (√tˇm)->ª•⁄£->
buf„r
, \

57 ((((
√tˇm
)->
ª•⁄£
->
ªt
 = 
	`rbuf_ªad_buf„rful
 (netcam)) <= 0) \

58 ? (
√tˇm
)->
ª•⁄£
->
ªt
 : (“ëˇm)->ª•⁄£->
buf„r_À·
 = (netcam->response)->ret - 1, \

59 *((*Ë(
°‹e
)Ë*(
√tˇm
)->
ª•⁄£
->
buf„r_pos
++,1))))

	)

62 
rbuf_öôülize
(
√tˇm_c⁄ãxt_±r
);

63 
rbuf_öôülized_p
(
√tˇm_c⁄ãxt_±r
);

64 
rbuf_unöôülize
(
√tˇm_c⁄ãxt_±r
);

65 
rbuf_ªadch¨
(
√tˇm_c⁄ãxt_±r
, *);

66 
rbuf_≥ek
(
√tˇm_c⁄ãxt_±r
, *);

67 
rbuf_Êush
(
√tˇm_c⁄ãxt_±r
, *, );

70 
rbuf_ªad_buf„rful
(
√tˇm_c⁄ãxt_±r
);

73 
	#BASE64_LENGTH
(
Àn
Ë(4 * ((÷íË+ 2Ë/ 3))

	)

75 
ba£64_ícode
(const *, *, );

76 *
°rdupdñim
(const *, const *);

77 
hâp_¥o˚ss_ty≥
(const *, *);

80 
	mHG_OK
,

81 
	mHG_ERROR
,

82 
	mHG_EOF


85 
	ehódî_gë_Êags
 {

86 
	mHG_NONE
 = 0,

87 
	mHG_NO_CONTINUATIONS
 = 0x2

90 
hódî_gë
 (
√tˇm_c⁄ãxt_±r
, **, 
hódî_gë_Êags
);

91 
hódî_¥o˚ss
 (const *, const *,

94 
	`hódî_exåa˘_numbî
(const *, *);

95 
	`hódî_°rdup
(const *, *);

96 
	`skù_lws
(const *);

97 
	`hâp_ªsu…_code
(const *);

	@picture.c

11 
	~"pi˘uª.h
"

12 
	~"evít.h
"

14 #unde‡
HAVE_STDLIB_H


15 
	~<j≥glib.h
>

16 
	~<jîr‹.h
>

22 
j≥g_de°ö©i⁄_mgr
 
	mpub
;

23 
JOCTET
 *
	mbuf
;

24 
size_t
 
	mbufsize
;

25 
size_t
 
	mj≥gsize
;

26 } 
	tmem_de°ö©i⁄_mgr
;

28 
mem_de°ö©i⁄_mgr
 *
	tmem_de°_±r
;

31 
	$METHODDEF
(Ë
	$öô_de°ö©i⁄
(
j_com¥ess_±r
 
cöfo
)

33 
mem_de°_±r
 
de°
 = (mem_de°_±rË
cöfo
->dest;

34 
de°
->
pub
.
√xt_ouçut_byã
 = de°->
buf
;

35 
de°
->
pub
.
‰ì_ö_buf„r
 = de°->
bufsize
;

36 
de°
->
j≥gsize
 = 0;

37 
	}
}

39 
	$METHODDEF
(
boﬁón
Ë
	$em±y_ouçut_buf„r
(
j_com¥ess_±r
 
cöfo
)

41 
mem_de°_±r
 
de°
 = (mem_de°_±rË
cöfo
->dest;

42 
de°
->
pub
.
√xt_ouçut_byã
 = de°->
buf
;

43 
de°
->
pub
.
‰ì_ö_buf„r
 = de°->
bufsize
;

45  
FALSE
;

46 
	`ERREXIT
(
cöfo
, 
JERR_BUFFER_SIZE
);

47 
	}
}

49 
	$METHODDEF
(Ë
	$ãrm_de°ö©i⁄
(
j_com¥ess_±r
 
cöfo
)

51 
mem_de°_±r
 
de°
 = (mem_de°_±rË
cöfo
->dest;

52 
de°
->
j≥gsize
 = de°->
bufsize
 - de°->
pub
.
‰ì_ö_buf„r
;

53 
	}
}

55 
	$GLOBAL
(Ë
	$_j≥g_mem_de°
(
j_com¥ess_±r
 
cöfo
, 
JOCTET
* 
buf
, 
size_t
 
bufsize
)

57 
mem_de°_±r
 
de°
;

59 i‡(
cöfo
->
de°
 =
NULL
) {

60 
cöfo
->
de°
 = (
j≥g_de°ö©i⁄_mgr
 *)

61 (*
cöfo
->
mem
->
Æloc_smÆl
)((
j_comm⁄_±r
)cöfo, 
JPOOL_PERMANENT
,

62 (
mem_de°ö©i⁄_mgr
));

65 
de°
 = (
mem_de°_±r
Ë
cöfo
->dest;

67 
de°
->
pub
.
öô_de°ö©i⁄
 = init_destination;

68 
de°
->
pub
.
em±y_ouçut_buf„r
 =Émpty_output_buffer;

69 
de°
->
pub
.
ãrm_de°ö©i⁄
 =Åerm_destination;

71 
de°
->
buf
 = buf;

72 
de°
->
bufsize
 = bufsize;

73 
de°
->
j≥gsize
 = 0;

74 
	}
}

76 
	$GLOBAL
(Ë
	$_j≥g_mem_size
(
j_com¥ess_±r
 
cöfo
)

78 
mem_de°_±r
 
de°
 = (mem_de°_±rË
cöfo
->dest;

79  
de°
->
j≥gsize
;

80 
	}
}

94 
	$put_j≥g_yuv420p_mem‹y
(*
de°_image
, 
image_size
,

95 *
öput_image
, 
width
, 
height
, 
quÆôy
)

97 
i
, 
j
, 
j≥g_image_size
;

99 
JSAMPROW
 
y
[16],
cb
[16],
¸
[16];

100 
JSAMPARRAY
 
d©a
[3];

102 
j≥g_com¥ess_°ru˘
 
cöfo
;

103 
j≥g_îr‹_mgr
 
jîr
;

105 
d©a
[0] = 
y
;

106 
d©a
[1] = 
cb
;

107 
d©a
[2] = 
¸
;

109 
cöfo
.
îr
 = 
	`j≥g_°d_îr‹
(&
jîr
);

111 
	`j≥g_¸óã_com¥ess
(&
cöfo
);

112 
cöfo
.
image_width
 = 
width
;

113 
cöfo
.
image_height
 = 
height
;

114 
cöfo
.
öput_comp⁄íts
 = 3;

115 
	`j≥g_£t_deÁu…s
 (&
cöfo
);

117 
	`j≥g_£t_cﬁ‹•a˚
(&
cöfo
, 
JCS_YCbCr
);

119 
cöfo
.
øw_d©a_ö
 = 
TRUE
;

120 #i‡
JPEG_LIB_VERSION
 >= 70

121 #w¨nög 
usög
 
JPEG_LIB_VERSION
 >= 70

122 
cöfo
.
do_Áncy_downßm∂ög
 = 
FALSE
;

124 
cöfo
.
comp_öfo
[0].
h_ßmp_Á˘‹
 = 2;

125 
cöfo
.
comp_öfo
[0].
v_ßmp_Á˘‹
 = 2;

126 
cöfo
.
comp_öfo
[1].
h_ßmp_Á˘‹
 = 1;

127 
cöfo
.
comp_öfo
[1].
v_ßmp_Á˘‹
 = 1;

128 
cöfo
.
comp_öfo
[2].
h_ßmp_Á˘‹
 = 1;

129 
cöfo
.
comp_öfo
[2].
v_ßmp_Á˘‹
 = 1;

131 
	`j≥g_£t_quÆôy
(&
cöfo
, 
quÆôy
, 
TRUE
);

132 
cöfo
.
d˘_mëhod
 = 
JDCT_FASTEST
;

134 
	`_j≥g_mem_de°
(&
cöfo
, 
de°_image
, 
image_size
);

136 
	`j≥g_°¨t_com¥ess
 (&
cöfo
, 
TRUE
);

138 
j
 = 0; j < 
height
; j += 16) {

139 
i
 = 0; i < 16; i++) {

140 
y
[
i
] = 
öput_image
 + 
width
 * (ò+ 
j
);

141 i‡(
i
%2 == 0) {

142 
cb
[
i
/2] = 
öput_image
 + 
width
 * 
height
 + width / 2 * ((ò+ 
j
) / 2);

143 
¸
[
i
/2] = 
öput_image
 + 
width
 * 
height
 + width * heighà/ 4 + width / 2 * ((ò+ 
j
) / 2);

146 
	`j≥g_wrôe_øw_d©a
(&
cöfo
, 
d©a
, 16);

149 
	`j≥g_föish_com¥ess
(&
cöfo
);

150 
j≥g_image_size
 = 
	`_j≥g_mem_size
(&
cöfo
);

151 
	`j≥g_de°roy_com¥ess
(&
cöfo
);

153  
j≥g_image_size
;

154 
	}
}

166 
	$put_j≥g_gªy_mem‹y
(*
de°_image
, 
image_size
,

167 *
öput_image
, 
width
, 
height
, 
quÆôy
)

169 
y
, 
de°_image_size
;

170 
JSAMPROW
 
row_±r
[1];

171 
j≥g_com¥ess_°ru˘
 
cj≥g
;

172 
j≥g_îr‹_mgr
 
jîr
;

174 
cj≥g
.
îr
 = 
	`j≥g_°d_îr‹
(&
jîr
);

175 
	`j≥g_¸óã_com¥ess
(&
cj≥g
);

176 
cj≥g
.
image_width
 = 
width
;

177 
cj≥g
.
image_height
 = 
height
;

178 
cj≥g
.
öput_comp⁄íts
 = 1;

179 
cj≥g
.
ö_cﬁ‹_•a˚
 = 
JCS_GRAYSCALE
;

181 
	`j≥g_£t_deÁu…s
(&
cj≥g
);

183 
	`j≥g_£t_quÆôy
(&
cj≥g
, 
quÆôy
, 
TRUE
);

184 
cj≥g
.
d˘_mëhod
 = 
JDCT_FASTEST
;

185 
	`_j≥g_mem_de°
(&
cj≥g
, 
de°_image
, 
image_size
);

187 
	`j≥g_°¨t_com¥ess
 (&
cj≥g
, 
TRUE
);

189 
row_±r
[0] = 
öput_image
;

191 
y
 = 0; y < 
height
; y++) {

192 
	`j≥g_wrôe_sˇ∆öes
(&
cj≥g
, 
row_±r
, 1);

193 
row_±r
[0] +
width
;

196 
	`j≥g_föish_com¥ess
(&
cj≥g
);

197 
de°_image_size
 = 
	`_j≥g_mem_size
(&
cj≥g
);

198 
	`j≥g_de°roy_com¥ess
(&
cj≥g
);

200  
de°_image_size
;

201 
	}
}

213 
	$put_j≥g_yuv420p_fûe
(
FILE
 *
Â
, *
image
, 
width
,

214 
height
, 
quÆôy
)

216 
i
,
j
;

218 
JSAMPROW
 
y
[16],
cb
[16],
¸
[16];

219 
JSAMPARRAY
 
d©a
[3];

221 
j≥g_com¥ess_°ru˘
 
cöfo
;

222 
j≥g_îr‹_mgr
 
jîr
;

224 
d©a
[0] = 
y
;

225 
d©a
[1] = 
cb
;

226 
d©a
[2] = 
¸
;

228 
cöfo
.
îr
 = 
	`j≥g_°d_îr‹
(&
jîr
);

230 
	`j≥g_¸óã_com¥ess
(&
cöfo
);

231 
cöfo
.
image_width
 = 
width
;

232 
cöfo
.
image_height
 = 
height
;

233 
cöfo
.
öput_comp⁄íts
 = 3;

234 
	`j≥g_£t_deÁu…s
(&
cöfo
);

236 
	`j≥g_£t_cﬁ‹•a˚
(&
cöfo
, 
JCS_YCbCr
);

238 
cöfo
.
øw_d©a_ö
 = 
TRUE
;

239 #i‡
JPEG_LIB_VERSION
 >= 70

240 #w¨nög 
usög
 
JPEG_LIB_VERSION
 >= 70

241 
cöfo
.
do_Áncy_downßm∂ög
 = 
FALSE
;

243 
cöfo
.
comp_öfo
[0].
h_ßmp_Á˘‹
 = 2;

244 
cöfo
.
comp_öfo
[0].
v_ßmp_Á˘‹
 = 2;

245 
cöfo
.
comp_öfo
[1].
h_ßmp_Á˘‹
 = 1;

246 
cöfo
.
comp_öfo
[1].
v_ßmp_Á˘‹
 = 1;

247 
cöfo
.
comp_öfo
[2].
h_ßmp_Á˘‹
 = 1;

248 
cöfo
.
comp_öfo
[2].
v_ßmp_Á˘‹
 = 1;

250 
	`j≥g_£t_quÆôy
(&
cöfo
, 
quÆôy
, 
TRUE
);

251 
cöfo
.
d˘_mëhod
 = 
JDCT_FASTEST
;

253 
	`j≥g_°dio_de°
(&
cöfo
, 
Â
);

254 
	`j≥g_°¨t_com¥ess
(&
cöfo
, 
TRUE
);

256 
j
 = 0; j < 
height
; j += 16) {

257 
i
 = 0; i < 16; i++) {

258 
y
[
i
] = 
image
 + 
width
 * (ò+ 
j
);

259 i‡(
i
 % 2 == 0) {

260 
cb
[
i
 / 2] = 
image
 + 
width
 * 
height
 + width / 2 * ((ò+ 
j
) / 2);

261 
¸
[
i
 / 2] = 
image
 + 
width
 * 
height
 + width * heighà/ 4 + width / 2 * ((ò+ 
j
) /2);

264 
	`j≥g_wrôe_øw_d©a
(&
cöfo
, 
d©a
, 16);

267 
	`j≥g_föish_com¥ess
(&
cöfo
);

268 
	`j≥g_de°roy_com¥ess
(&
cöfo
);

269 
	}
}

282 
	$put_j≥g_gªy_fûe
(
FILE
 *
pi˘uª
, *
image
, 
width
, 
height
, 
quÆôy
)

284 
y
;

285 
JSAMPROW
 
row_±r
[1];

286 
j≥g_com¥ess_°ru˘
 
cj≥g
;

287 
j≥g_îr‹_mgr
 
jîr
;

289 
cj≥g
.
îr
 = 
	`j≥g_°d_îr‹
(&
jîr
);

290 
	`j≥g_¸óã_com¥ess
(&
cj≥g
);

291 
cj≥g
.
image_width
 = 
width
;

292 
cj≥g
.
image_height
 = 
height
;

293 
cj≥g
.
öput_comp⁄íts
 = 1;

294 
cj≥g
.
ö_cﬁ‹_•a˚
 = 
JCS_GRAYSCALE
;

296 
	`j≥g_£t_deÁu…s
(&
cj≥g
);

298 
	`j≥g_£t_quÆôy
(&
cj≥g
, 
quÆôy
, 
TRUE
);

299 
cj≥g
.
d˘_mëhod
 = 
JDCT_FASTEST
;

300 
	`j≥g_°dio_de°
(&
cj≥g
, 
pi˘uª
);

302 
	`j≥g_°¨t_com¥ess
(&
cj≥g
, 
TRUE
);

304 
row_±r
[0] = 
image
;

306 
y
 = 0; y < 
height
; y++) {

307 
	`j≥g_wrôe_sˇ∆öes
(&
cj≥g
, 
row_±r
, 1);

308 
row_±r
[0] +
width
;

311 
	`j≥g_föish_com¥ess
(&
cj≥g
);

312 
	`j≥g_de°roy_com¥ess
(&
cj≥g
);

313 
	}
}

325 
	$put_µm_bgr24_fûe
(
FILE
 *
pi˘uª
, *
image
, 
width
, 
height
)

327 
x
, 
y
;

328 *
l
 = 
image
;

329 *
u
 = 
image
 + 
width
 * 
height
;

330 *
v
 = 
u
 + (
width
 * 
height
) / 4;

331 
r
, 
g
, 
b
;

332 
w¨nögkûÀr
;

333 
rgb
[3];

339 
	`Ârötf
(
pi˘uª
, "P6\n");

340 
	`Ârötf
(
pi˘uª
, "%d %d\n", 
width
, 
height
);

341 
	`Ârötf
(
pi˘uª
, "%d\n", 255);

342 
y
 = 0; y < 
height
; y++) {

344 
x
 = 0; x < 
width
; x++) {

345 
r
 = 76283* ((()*
l
Ë- 16Ë+ 104595 * ((()*
u
) - 128);

346 
g
 = 76283* ((()*
l
Ë- 16)- 53281 * ((()*
u
Ë- 128)-25625*((()*
v
)-128);

347 
b
 = 76283* ((()*
l
Ë- 16Ë+ 132252 * ((()*
v
) - 128);

348 
r
 =Ñ>>16;

349 
g
 = g>>16;

350 
b
 = b>>16;

351 i‡(
r
 < 0)

352 
r
 = 0;

353 i‡(
r
 > 255)

354 
r
 = 255;

355 i‡(
g
 < 0)

356 
g
 = 0;

357 i‡(
g
 > 255)

358 
g
 = 255;

359 i‡(
b
 < 0)

360 
b
 = 0;

361 i‡(
b
 > 255)

362 
b
 = 255;

364 
rgb
[0] = 
b
;

365 
rgb
[1] = 
g
;

366 
rgb
[2] = 
r
;

368 
l
++;

369 i‡(
x
 & 1) {

370 
u
++;

371 
v
++;

374 
w¨nögkûÀr
 = 
	`fwrôe
(
rgb
, 1, 3, 
pi˘uª
);

376 i‡(
y
 & 1) {

377 
u
 -
width
 / 2;

378 
v
 -
width
 / 2;

381 
	}
}

384 
	$ovîœy_sm¨tmask
(
c⁄ãxt
 *
˙t
, *
out
)

386 
i
, 
x
, 
v
, 
width
, 
height
, 
löe
;

387 
images
 *
imgs
 = &
˙t
->imgs;

388 *
sm¨tmask
 = 
imgs
->
sm¨tmask_föÆ
;

389 *
out_y
, *
out_u
, *
out_v
;

391 
i
 = 
imgs
->
mŸi⁄size
;

392 
v
 = 
i
 + ((
imgs
->
mŸi⁄size
) / 4);

393 
width
 = 
imgs
->width;

394 
height
 = 
imgs
->height;

397 
out_v
 = 
out
 + 
v
;

398 
out_u
 = 
out
 + 
i
;

399 
i
 = 0; i < 
height
; i += 2){

400 
löe
 = 
i
 * 
width
;

401 
x
 = 0; x < 
width
; x += 2){

402 i‡(
sm¨tmask
[
löe
 + 
x
] == 0 ||

403 
sm¨tmask
[
löe
 + 
x
 + 1] == 0 ||

404 
sm¨tmask
[
löe
 + 
width
 + 
x
] == 0 ||

405 
sm¨tmask
[
löe
 + 
width
 + 
x
 + 1] == 0){

406 *
out_v
 = 255;

407 *
out_u
 = 128;

409 
out_v
++;

410 
out_u
++;

413 
out_y
 = 
out
;

415 
i
 = 0; i < 
imgs
->
mŸi⁄size
; i++){

416 i‡(
sm¨tmask
[
i
] == 0)

417 *
out_y
 = 0;

418 
out_y
++;

420 
	}
}

423 
	$ovîœy_fixed_mask
(
c⁄ãxt
 *
˙t
, *
out
)

425 
i
;

426 
images
 *
imgs
 = &
˙t
->imgs;

427 *
mŸi⁄_img
 = 
imgs
->
out
;

428 *
mask
 = 
imgs
->mask;

429 
pixñ
;

432 
i
 = 0; i < 
imgs
->
mŸi⁄size
; i++){

433 
pixñ
 = 255 - 
mask
[
i
] + 
mŸi⁄_img
[i];

434 i‡(
pixñ
 > 255)

435 *
out
 = 255;

437 *
out
 = 
pixñ
;

438 
out
++;

440 
	}
}

443 
	$ovîœy_œrge°_œbñ
(
c⁄ãxt
 *
˙t
, *
out
)

445 
i
, 
x
, 
v
, 
width
, 
height
, 
löe
;

446 
images
 *
imgs
 = &
˙t
->imgs;

447 *
œbñs
 = 
imgs
->labels;

448 *
out_y
, *
out_u
, *
out_v
;

450 
i
 = 
imgs
->
mŸi⁄size
;

451 
v
 = 
i
 + ((
imgs
->
mŸi⁄size
) / 4);

452 
width
 = 
imgs
->width;

453 
height
 = 
imgs
->height;

456 
out_u
 = 
out
 + 
i
;

457 
out_v
 = 
out
 + 
v
;

458 
i
 = 0; i < 
height
; i += 2){

459 
löe
 = 
i
 * 
width
;

460 
x
 = 0; x < 
width
; x += 2){

461 i‡(
œbñs
[
löe
 + 
x
] & 32768 ||

462 
œbñs
[
löe
 + 
x
 + 1] & 32768 ||

463 
œbñs
[
löe
 + 
width
 + 
x
] & 32768 ||

464 
œbñs
[
löe
 + 
width
 + 
x
 + 1] & 32768) {

465 *
out_u
 = 255;

466 *
out_v
 = 128;

468 
out_u
++;

469 
out_v
++;

472 
out_y
 = 
out
;

474 
i
 = 0; i < 
imgs
->
mŸi⁄size
; i++) {

475 i‡(*
œbñs
++ & 32768)

476 *
out_y
 = 0;

477 
out_y
++;

479 
	}
}

493 
	$put_pi˘uª_mem‹y
(
c⁄ãxt
 *
˙t
, * 
de°_image
, 
image_size
,

494 *
image
, 
quÆôy
)

496 
˙t
->
imgs
.
ty≥
) {

497 
VIDEO_PALETTE_YUV420P
:

498  
	`put_j≥g_yuv420p_mem‹y
(
de°_image
, 
image_size
, 
image
,

499 
˙t
->
imgs
.
width
, c¡->imgs.
height
, 
quÆôy
);

500 
VIDEO_PALETTE_GREY
:

501  
	`put_j≥g_gªy_mem‹y
(
de°_image
, 
image_size
, 
image
,

502 
˙t
->
imgs
.
width
, c¡->imgs.
height
, 
quÆôy
);

504 
	`mŸi⁄_log
(
LOG_ERR
, 0, "Unknow imagêty≥ %d", 
˙t
->
imgs
.
ty≥
);

508 
	}
}

510 
	$put_pi˘uª_fd
(
c⁄ãxt
 *
˙t
, 
FILE
 *
pi˘uª
, *
image
, 
quÆôy
)

512 i‡(
˙t
->
c⁄f
.
µm
) {

513 
	`put_µm_bgr24_fûe
(
pi˘uª
, 
image
, 
˙t
->
imgs
.
width
, c¡->imgs.
height
);

515 
˙t
->
imgs
.
ty≥
) {

516 
VIDEO_PALETTE_YUV420P
:

517 
	`put_j≥g_yuv420p_fûe
(
pi˘uª
, 
image
, 
˙t
->
imgs
.
width
, c¡->imgs.
height
, 
quÆôy
);

519 
VIDEO_PALETTE_GREY
:

520 
	`put_j≥g_gªy_fûe
(
pi˘uª
, 
image
, 
˙t
->
imgs
.
width
, c¡->imgs.
height
, 
quÆôy
);

523 
	`mŸi⁄_log
(
LOG_ERR
, 0, "Unknow imagêty≥ %d", 
˙t
->
imgs
.
ty≥
);

526 
	}
}

529 
	$put_pi˘uª
(
c⁄ãxt
 *
˙t
, *
fûe
, *
image
, 
·y≥
)

531 
FILE
 *
pi˘uª
;

533 
pi˘uª
 = 
	`myf›í
(
fûe
, "w");

534 i‡(!
pi˘uª
) {

536 i‡(
î∫o
 =
EACCES
) {

537 
	`mŸi⁄_log
(
LOG_ERR
, 1,

538 "C™'àwrôêpi˘uªÅÿfûê%†- checkác˚s†right†tÿèrgë dúe˘‹y", 
fûe
);

539 
	`mŸi⁄_log
(
LOG_ERR
, 1, "Thread is goingÅo finish dueÅoÅhis fatalÉrror");

540 
˙t
->
föish
 = 1;

541 
˙t
->
ª°¨t
 = 0;

545 
	`mŸi⁄_log
(
LOG_ERR
, 1, "C™'àwrôêpi˘uªÅÿfûê%s", 
fûe
);

550 
	`put_pi˘uª_fd
(
˙t
, 
pi˘uª
, 
image
, c¡->
c⁄f
.
quÆôy
);

551 
	`f˛o£
(
pi˘uª
);

552 
	`evít
(
˙t
, 
EVENT_FILECREATE
, 
NULL
, 
fûe
, (*)()
·y≥
, NULL);

553 
	}
}

556 *
	$gë_pgm
(
FILE
 *
pi˘uª
, 
width
, 
height
)

558 
x
 = 0 ,
y
 = 0, 
maxvÆ
;

559 
löe
[256];

560 *
image
;

562 
löe
[255]=0;

564 i‡(!
	`fgës
(
löe
, 255, 
pi˘uª
)) {

565 
	`mŸi⁄_log
(
LOG_ERR
, 1, "CouldÇotÑead fromÖpm file");

566  
NULL
;

569 i‡(
	`°∫cmp
(
löe
, "P5", 2)) {

570 
	`mŸi⁄_log
(
LOG_ERR
, 1, "Thi†i†nŸáÖpm fûe, sèπ†wôh '%s'", 
löe
);

571  
NULL
;

575 
löe
[0] = '#';

576 
löe
[0] == '#')

577 i‡(!
	`fgës
(
löe
, 255, 
pi˘uª
))

578  
NULL
;

581 i‡(
	`ssˇnf
(
löe
, "%d %d", &
x
, &
y
) != 2) {

582 
	`mŸi⁄_log
(
LOG_ERR
, 1, "FailedÑeading size inÖgm file");

583  
NULL
;

586 i‡(
x
 !
width
 || 
y
 !
height
) {

587 
	`mŸi⁄_log
(
LOG_ERR
, 1, "Wr⁄g imagêsizê%dx%d should bê%dx%d", 
x
, 
y
, 
width
, 
height
);

588  
NULL
;

592 
löe
[0] = '#';

593 
löe
[0] == '#')

594 i‡(!
	`fgës
(
löe
, 255, 
pi˘uª
))

595  
NULL
;

597 i‡(
	`ssˇnf
(
löe
, "%d", &
maxvÆ
) != 1) {

598 
	`mŸi⁄_log
(
LOG_ERR
, 1, "FailedÑeading maximum value inÖgm file");

599  
NULL
;

604 
image
 = 
	`mymÆloc
(
width
 * 
height
);

606 
y
 = 0; y < 
height
; y++) {

607 i‡(()
	`‰ód
(&
image
[
y
 * 
width
], 1, width, 
pi˘uª
) != width)

608 
	`mŸi⁄_log
(
LOG_ERR
, 1, "FailedÑeading image data fromÖgm file");

610 
x
 = 0; x < 
width
; x++)

611 
image
[
y
 * 
width
 + 
x
] = ()image[y * width + x] * 255 / 
maxvÆ
;

615  
image
;

616 
	}
}

622 
	$put_fixed_mask
(
c⁄ãxt
 *
˙t
, c⁄° *
fûe
)

624 
FILE
 *
pi˘uª
;

626 
pi˘uª
 = 
	`myf›í
(
fûe
, "w");

628 i‡(!
pi˘uª
) {

630 i‡(
î∫o
 =
EACCES
) {

631 
	`mŸi⁄_log
(
LOG_ERR
, 1,

632 "ˇn'àwrôêmask fûê%†- checkác˚s†right†tÿèrgë dúe˘‹y", 
fûe
);

635 
	`mŸi⁄_log
(
LOG_ERR
, 1, "ˇn'àwrôêmask fûê%s", 
fûe
);

640 
	`mem£t
(
˙t
->
imgs
.
out
, 255, c¡->imgs.
mŸi⁄size
);

643 
	`Ârötf
(
pi˘uª
, "P5\n");

644 
	`Ârötf
(
pi˘uª
, "%d %d\n", 
˙t
->
c⁄f
.
width
, c¡->c⁄f.
height
);

645 
	`Ârötf
(
pi˘uª
, "%d\n", 255);

648 i‡(()
	`fwrôe
(
˙t
->
imgs
.
out
, c¡->
c⁄f
.
width
, c¡->c⁄f.
height
, 
pi˘uª
) != cnt->conf.height) {

649 
	`mŸi⁄_log
(
LOG_ERR
, 1, "Failed writing default maskásÖgm file");

653 
	`f˛o£
(
pi˘uª
);

655 
	`mŸi⁄_log
(
LOG_ERR
, 0, "Cª©ögÉm±y mask %s",
˙t
->
c⁄f
.
mask_fûe
);

656 
	`mŸi⁄_log
(
LOG_ERR
, 0, "PleaseÉditÅhis fileándÑe-run motionÅoÉnable mask feature");

657 
	}
}

660 
	$¥evõw_ßve
(
c⁄ãxt
 *
˙t
)

662 #ifde‡
HAVE_FFMPEG


663 
u£_j≥g∑th
;

664 
ba£«me_Àn
;

666 c⁄° *
j≥g∑th
;

667 
¥evõw«me
[
PATH_MAX
];

668 
fûíame
[
PATH_MAX
];

669 
image_d©a
 *
ßved_cuºít_image
;

671 i‡(
˙t
->
imgs
.
¥evõw_image
.
diffs
) {

673 
ßved_cuºít_image
 = 
˙t
->
cuºít_image
;

675 
˙t
->
cuºít_image
 = &˙t->
imgs
.
¥evõw_image
;

677 #ifde‡
HAVE_FFMPEG


679 
u£_j≥g∑th
 = 
	`°rcmp
(
˙t
->
c⁄f
.
j≥g∑th
, "preview");

681 i‡(
˙t
->
ffm≥g_√w
 && !
u£_j≥g∑th
) {

683 
ba£«me_Àn
 = 
	`°æí
(
˙t
->
√wfûíame
) - 3;

684 
	`°∫˝y
(
¥evõw«me
, 
˙t
->
√wfûíame
, 
ba£«me_Àn
);

685 
¥evõw«me
[
ba£«me_Àn
] = '\0';

686 
	`°rˇt
(
¥evõw«me
, 
	`imagìxt
(
˙t
));

687 
	`put_pi˘uª
(
˙t
, 
¥evõw«me
, c¡->
imgs
.
¥evõw_image
.
image
 , 
FTYPE_IMAGE
);

697 i‡(
˙t
->
c⁄f
.
j≥g∑th
)

698 
j≥g∑th
 = 
˙t
->
c⁄f
.jpegpath;

700 
j≥g∑th
 = (*)
DEF_JPEGPATH
;

702 
	`my°r·ime
(
˙t
, 
fûíame
, (fûíame), 
j≥g∑th
, &˙t->
imgs
.
¥evõw_image
.
time°amp_tm
, 
NULL
, 0);

703 
	`¢¥ötf
(
¥evõw«me
, 
PATH_MAX
, "%s/%s.%s", 
˙t
->
c⁄f
.
fûï©h
, 
fûíame
, 
	`imagìxt
(cnt));

705 
	`put_pi˘uª
(
˙t
, 
¥evõw«me
, c¡->
imgs
.
¥evõw_image
.
image
, 
FTYPE_IMAGE
);

709 
˙t
->
cuºít_image
 = 
ßved_cuºít_image
;

711 
	}
}

	@picture.h

10 #i‚de‡
_INCLUDE_PICTURE_H_


11 
	#_INCLUDE_PICTURE_H_


	)

13 
	~"mŸi⁄.h
"

15 
ovîœy_sm¨tmask
(
c⁄ãxt
 *, *);

16 
ovîœy_fixed_mask
(
c⁄ãxt
 *, *);

17 
put_fixed_mask
(
c⁄ãxt
 *, const *);

18 
ovîœy_œrge°_œbñ
(
c⁄ãxt
 *, *);

19 
put_pi˘uª_fd
(
c⁄ãxt
 *, 
FILE
 *, *, );

20 
put_pi˘uª_mem‹y
(
c⁄ãxt
 *, *, , *, );

21 
put_pi˘uª
(
c⁄ãxt
 *, *, *, );

22 *
gë_pgm
(
FILE
 *, , );

23 
¥evõw_ßve
(
c⁄ãxt
 *);

	@pwc-ioctl.h

1 #i‚de‡
PWC_IOCTL_H


2 
	#PWC_IOCTL_H


	)

55 #i‡(!
deföed
(
BSD
))

56 
	~<löux/ty≥s.h
>

57 
	~<löux/vîsi⁄.h
>

59 #i‡
LINUX_VERSION_CODE
 <
KERNEL_VERSION
(2, 6, 10)

61 
__u16
 
	t__À16
;

67 
	#PSZ_SQCIF
 0x00

	)

68 
	#PSZ_QSIF
 0x01

	)

69 
	#PSZ_QCIF
 0x02

	)

70 
	#PSZ_SIF
 0x03

	)

71 
	#PSZ_CIF
 0x04

	)

72 
	#PSZ_VGA
 0x05

	)

73 
	#PSZ_MAX
 6

	)

85 
	#PWC_FPS_SHIFT
 16

	)

86 
	#PWC_FPS_MASK
 0x00FF0000

	)

87 
	#PWC_FPS_FRMASK
 0x003F0000

	)

88 
	#PWC_FPS_SNAPSHOT
 0x00400000

	)

89 
	#PWC_QLT_MASK
 0x03000000

	)

90 
	#PWC_QLT_SHIFT
 24

	)

94 
	spwc_co‹d


96 
	mx
, 
	my
;

97 
	msize
;

102 
	spwc_¥obe


104 
	m«me
[32];

105 
	mty≥
;

108 
	spwc_£rül


110 
	m£rül
[30];

114 
	#PWC_WB_INDOOR
 0

	)

115 
	#PWC_WB_OUTDOOR
 1

	)

116 
	#PWC_WB_FL
 2

	)

117 
	#PWC_WB_MANUAL
 3

	)

118 
	#PWC_WB_AUTO
 4

	)

128 
	spwc_whôebÆ™˚


130 
	mmode
;

131 
	mm™uÆ_ªd
, 
	mm™uÆ_blue
;

132 
	mªad_ªd
, 
	mªad_blue
;

140 
	spwc_wb_•ìd


142 
	mc⁄åﬁ_•ìd
;

143 
	mc⁄åﬁ_dñay
;

148 
	spwc_Àds


150 
	mÀd_⁄
;

151 
	mÀd_off
;

155 
	spwc_imagesize


157 
	mwidth
;

158 
	mheight
;

162 
	#PWC_MPT_PAN
 0x01

	)

163 
	#PWC_MPT_TILT
 0x02

	)

164 
	#PWC_MPT_TIMEOUT
 0x04

	)

171 
	spwc_m±_™gÀs


173 
	mabsﬁuã
;

174 
	m∑n
;

175 
	mtût
;

180 
	spwc_m±_ønge


182 
	m∑n_mö
, 
	m∑n_max
;

183 
	mtût_mö
, 
	mtût_max
;

186 
	spwc_m±_°©us


188 
	m°©us
;

189 
	mtime_∑n
;

190 
	mtime_tût
;

198 
	spwc_video_comm™d


200 
	mty≥
;

201 
	mªÀa£
;

203 
	msize
;

204 
	mÆã∫©e
;

205 
	mcomm™d_Àn
;

206 
	mcomm™d_buf
[13];

207 
	mb™dÀngth
;

208 
	m‰ame_size
;

212 
	#PWCX_FLAG_PLANAR
 0x0001

	)

213 
	#PWCX_FLAG_BAYER
 0x0008

	)

219 
	#VIDIOCPWCRUSER
 
	`_IO
('v', 192)

	)

221 
	#VIDIOCPWCSUSER
 
	`_IO
('v', 193)

	)

223 
	#VIDIOCPWCFACTORY
 
	`_IO
('v', 194)

	)

233 
	#VIDIOCPWCSCQUAL
 
	`_IOW
('v', 195, )

	)

235 
	#VIDIOCPWCGCQUAL
 
	`_IOR
('v', 195, )

	)

239 
	#VIDIOCPWCGSERIAL
 
	`_IOR
('v', 198, 
pwc_£rül
)

	)

251 
	#VIDIOCPWCPROBE
 
	`_IOR
('v', 199, 
pwc_¥obe
)

	)

254 
	#VIDIOCPWCSAGC
 
	`_IOW
('v', 200, )

	)

256 
	#VIDIOCPWCGAGC
 
	`_IOR
('v', 200, )

	)

258 
	#VIDIOCPWCSSHUTTER
 
	`_IOW
('v', 201, )

	)

261 
	#VIDIOCPWCSAWB
 
	`_IOW
('v', 202, 
pwc_whôebÆ™˚
)

	)

262 
	#VIDIOCPWCGAWB
 
	`_IOR
('v', 202, 
pwc_whôebÆ™˚
)

	)

265 
	#VIDIOCPWCSAWBSPEED
 
	`_IOW
('v', 203, 
pwc_wb_•ìd
)

	)

266 
	#VIDIOCPWCGAWBSPEED
 
	`_IOR
('v', 203, 
pwc_wb_•ìd
)

	)

269 
	#VIDIOCPWCSLED
 
	`_IOW
('v', 205, 
pwc_Àds
)

	)

270 
	#VIDIOCPWCGLED
 
	`_IOR
('v', 205, 
pwc_Àds
)

	)

273 
	#VIDIOCPWCSCONTOUR
 
	`_IOW
('v', 206, )

	)

274 
	#VIDIOCPWCGCONTOUR
 
	`_IOR
('v', 206, )

	)

277 
	#VIDIOCPWCSBACKLIGHT
 
	`_IOW
('v', 207, )

	)

278 
	#VIDIOCPWCGBACKLIGHT
 
	`_IOR
('v', 207, )

	)

281 
	#VIDIOCPWCSFLICKER
 
	`_IOW
('v', 208, )

	)

282 
	#VIDIOCPWCGFLICKER
 
	`_IOR
('v', 208, )

	)

285 
	#VIDIOCPWCSDYNNOISE
 
	`_IOW
('v', 209, )

	)

286 
	#VIDIOCPWCGDYNNOISE
 
	`_IOR
('v', 209, )

	)

289 
	#VIDIOCPWCGREALSIZE
 
	`_IOR
('v', 210, 
pwc_imagesize
)

	)

292 
	#VIDIOCPWCMPTRESET
 
	`_IOW
('v', 211, )

	)

293 
	#VIDIOCPWCMPTGRANGE
 
	`_IOR
('v', 211, 
pwc_m±_ønge
)

	)

294 
	#VIDIOCPWCMPTSANGLE
 
	`_IOW
('v', 212, 
pwc_m±_™gÀs
)

	)

295 
	#VIDIOCPWCMPTGANGLE
 
	`_IOR
('v', 212, 
pwc_m±_™gÀs
)

	)

296 
	#VIDIOCPWCMPTSTATUS
 
	`_IOR
('v', 213, 
pwc_m±_°©us
)

	)

299 
	#VIDIOCPWCGVIDCMD
 
	`_IOR
('v', 215, 
pwc_video_comm™d
)

	)

300 
	spwc_èbÀ_öô_buf„r
 {

301 
	mÀn
;

302 *
	mbuf„r
;

305 
	#VIDIOCPWCGVIDTABLE
 
	`_IOR
('v', 216, 
pwc_èbÀ_öô_buf„r
)

	)

313 #i‡(
deföed
(
MOTION_V4L2
)Ë&& (!deföed(
BSD
))

315 
	#V4L2_CID_PRIVATE_SAVE_USER
 (
V4L2_CID_PRIVATE_BASE
 + 0)

	)

316 
	#V4L2_CID_PRIVATE_RESTORE_USER
 (
V4L2_CID_PRIVATE_BASE
 + 1)

	)

317 
	#V4L2_CID_PRIVATE_RESTORE_FACTORY
 (
V4L2_CID_PRIVATE_BASE
 + 2)

	)

318 
	#V4L2_CID_PRIVATE_COLOUR_MODE
 (
V4L2_CID_PRIVATE_BASE
 + 3)

	)

319 
	#V4L2_CID_PRIVATE_AUTOCONTOUR
 (
V4L2_CID_PRIVATE_BASE
 + 4)

	)

320 
	#V4L2_CID_PRIVATE_CONTOUR
 (
V4L2_CID_PRIVATE_BASE
 + 5)

	)

321 
	#V4L2_CID_PRIVATE_BACKLIGHT
 (
V4L2_CID_PRIVATE_BASE
 + 6)

	)

322 
	#V4L2_CID_PRIVATE_FLICKERLESS
 (
V4L2_CID_PRIVATE_BASE
 + 7)

	)

323 
	#V4L2_CID_PRIVATE_NOISE_REDUCTION
 (
V4L2_CID_PRIVATE_BASE
 + 8)

	)

325 
	spwc_øw_‰ame
 {

326 
__À16
 
	mty≥
;

327 
__À16
 
	mvb™dÀngth
;

328 
__u8
 
	mcmd
[4];

330 
__u8
 
	møw‰ame
[0];

331 } 
__©åibuã__
 ((
∑cked
));

	@rotate.c

32 
	~"rŸ©e.h
"

34 #i‚de‡
__uöt32


39 #ifde‡
TYPE_32BIT


40 
	tTYPE_32BIT
 
	t__uöt32
;

68 
	#rŸ__bsw≠_c⁄°™t_32
(
x
) \

69 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

70 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

72 #ifde‡
__GNUC__


73 #i‡(
__GNUC__
 >2Ë&& (
i386
 || 
__i386
 || 
__i386__
)

77 #i‚de‡
HAVE_BSWAP


79 
	#rŸ__bsw≠_32
(
x
) \

80 (
__exãnsi⁄__
 \

81 ({ 
__uöt32
 
__v
, 
__x
 = (
x
); \

82 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

83 
__v
 = 
	`rŸ__bsw≠_c⁄°™t_32
 (
__x
); \

85 
	`__asm__
 ("rorw $8, %w0;" \

88 : "Ù" (
__v
) \

89 : "0" (
__x
) \

91 
__v
; }))

	)

93 
	#rŸ__bsw≠_32
(
x
) \

94 (
__exãnsi⁄__
 \

95 ({ 
__uöt32
 
__v
, 
__x
 = (
x
); \

96 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

97 
__v
 = 
	`rŸ__bsw≠_c⁄°™t_32
 (
__x
); \

99 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

100 
__v
; }))

	)

104 
	#rŸ__bsw≠_32
(
x
) \

105 (
__exãnsi⁄__
 \

106 ({ 
__uöt32
 
__x
 = (
x
); \

107 
	`rŸ__bsw≠_c⁄°™t_32
 (
__x
); }))

	)

111 
ölöe
 
__uöt32
 
	$rŸ__bsw≠_32
(
__uöt32
 
__bsx
)

113  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

114 
	}
}

122 
	#sw≠_byãs
(
x
Ë
	`rŸ__bsw≠_32
(x)

	)

137 
	$ªvî£_ö∂a˚_quad
(*
§c
, 
size
)

139 
__uöt32
 *
n§c
 = (__uöt32 *)
§c
;

140 
__uöt32
 *
nd°
 = (__uöt32 *)(
§c
 + 
size
 - 4);

141 
__uöt32
 
tmp
;

143 
n§c
 < 
nd°
) {

144 
tmp
 = 
	`sw≠_byãs
(*
nd°
);

145 *
nd°
-- = 
	`sw≠_byãs
(*
n§c
);

146 *
n§c
++ = 
tmp
;

148 
	}
}

167 
	$rŸ90cw
(*
§c
, *
d°
, 
size
,

168 
width
, 
height
)

170 *
ídp
;

171 *
ba£
;

172 
j
;

174 
ídp
 = 
§c
 + 
size
;

175 
ba£
 = 
ídp
 - 
width
; base <Éndp; base++) {

176 
§c
 = 
ba£
;

177 
j
 = 0; j < 
height
; j++, 
§c
 -
width
)

178 *
d°
++ = *
§c
;

181 
	}
}

200 
ölöe
 
	$rŸ90ccw
(*
§c
, *
d°
,

201 
size
, 
width
, 
height
)

203 *
ídp
;

204 *
ba£
;

205 
j
;

207 
ídp
 = 
§c
 + 
size
;

208 
d°
 = d° + 
size
 - 1;

209 
ba£
 = 
ídp
 - 
width
; base <Éndp; base++) {

210 
§c
 = 
ba£
;

211 
j
 = 0; j < 
height
; j++, 
§c
 -
width
)

212 *
d°
-- = *
§c
;

215 
	}
}

229 
	$rŸ©e_öô
(
c⁄ãxt
 *
˙t
)

231 
size
;

234 
˙t
->
rŸ©e_d©a
.
ãmp_buf
 = 
NULL
;

239 i‡((
˙t
->
c⁄f
.
rŸ©e_deg
 % 90) > 0) {

240 
	`mŸi⁄_log
(
LOG_ERR
, 0, "Config option \"rotate\"Çotá multiple of 90: %d",

241 
˙t
->
c⁄f
.
rŸ©e_deg
);

242 
˙t
->
c⁄f
.
rŸ©e_deg
 = 0;

243 
˙t
->
rŸ©e_d©a
.
degªes
 = 0;

245 
˙t
->
rŸ©e_d©a
.
degªes
 = c¡->
c⁄f
.
rŸ©e_deg
 % 360;

259 
˙t
->
rŸ©e_d©a
.
ˇp_width
 = c¡->
imgs
.
width
;

260 
˙t
->
rŸ©e_d©a
.
ˇp_height
 = c¡->
imgs
.
height
;

262 i‡((
˙t
->
rŸ©e_d©a
.
degªes
 == 90) || (cnt->rotate_data.degrees == 270)) {

264 
˙t
->
imgs
.
width
 = c¡->
rŸ©e_d©a
.
ˇp_height
;

265 
˙t
->
imgs
.
height
 = c¡->
rŸ©e_d©a
.
ˇp_width
;

271 i‡(
˙t
->
rŸ©e_d©a
.
degªes
 == 0)

275 
˙t
->
imgs
.
ty≥
) {

276 
VIDEO_PALETTE_YUV420P
:

280 
size
 = 
˙t
->
imgs
.
width
 * c¡->imgs.
height
 * 3 / 2;

282 
VIDEO_PALETTE_GREY
:

286 
size
 = 
˙t
->
imgs
.
width
 * c¡->imgs.
height
;

289 
˙t
->
rŸ©e_d©a
.
degªes
 = 0;

290 
	`mŸi⁄_log
(
LOG_ERR
, 0, "UnsupportedÖalette (%d),Ñotation is disabled",

291 
˙t
->
imgs
.
ty≥
);

298 i‡((
˙t
->
rŸ©e_d©a
.
degªes
 == 90) || (cnt->rotate_data.degrees == 270))

299 
˙t
->
rŸ©e_d©a
.
ãmp_buf
 = 
	`mymÆloc
(
size
);

301 
	}
}

314 
	$rŸ©e_deöô
(
c⁄ãxt
 *
˙t
)

316 i‡(
˙t
->
rŸ©e_d©a
.
ãmp_buf
)

317 
	`‰ì
(
˙t
->
rŸ©e_d©a
.
ãmp_buf
);

319 
	}
}

337 
	$rŸ©e_m≠
(
c⁄ãxt
 *
˙t
, *
m≠
)

347 
wh
, 
wh4
 = 0, 
w2
 = 0, 
h2
 = 0;

348 
size
, 
deg
;

349 
width
, 
height
;

351 
deg
 = 
˙t
->
rŸ©e_d©a
.
degªes
;

352 
width
 = 
˙t
->
rŸ©e_d©a
.
ˇp_width
;

353 
height
 = 
˙t
->
rŸ©e_d©a
.
ˇp_height
;

362 
wh
 = 
width
 * 
height
;

364 i‡(
˙t
->
imgs
.
ty≥
 =
VIDEO_PALETTE_YUV420P
) {

365 
size
 = 
wh
 * 3 / 2;

366 
wh4
 = 
wh
 / 4;

367 
w2
 = 
width
 / 2;

368 
h2
 = 
height
 / 2;

370 
size
 = 
wh
;

373 
deg
) {

376 
	`rŸ90cw
(
m≠
, 
˙t
->
rŸ©e_d©a
.
ãmp_buf
, 
wh
, 
width
, 
height
);

378 i‡(
˙t
->
imgs
.
ty≥
 =
VIDEO_PALETTE_YUV420P
) {

380 
	`rŸ90cw
(
m≠
 + 
wh
, 
˙t
->
rŸ©e_d©a
.
ãmp_buf
 + wh, 
wh4
, 
w2
, 
h2
);

381 
	`rŸ90cw
(
m≠
 + 
wh
 + 
wh4
, 
˙t
->
rŸ©e_d©a
.
ãmp_buf
 + wh + wh4,

382 
wh4
, 
w2
, 
h2
);

386 
	`mem˝y
(
m≠
, 
˙t
->
rŸ©e_d©a
.
ãmp_buf
, 
size
);

393 
	`ªvî£_ö∂a˚_quad
(
m≠
, 
wh
);

395 i‡(
˙t
->
imgs
.
ty≥
 =
VIDEO_PALETTE_YUV420P
) {

396 
	`ªvî£_ö∂a˚_quad
(
m≠
 + 
wh
, 
wh4
);

397 
	`ªvî£_ö∂a˚_quad
(
m≠
 + 
wh
 + 
wh4
, wh4);

403 
	`rŸ90ccw
(
m≠
, 
˙t
->
rŸ©e_d©a
.
ãmp_buf
, 
wh
, 
width
, 
height
);

405 i‡(
˙t
->
imgs
.
ty≥
 =
VIDEO_PALETTE_YUV420P
) {

407 
	`rŸ90ccw
(
m≠
 + 
wh
, 
˙t
->
rŸ©e_d©a
.
ãmp_buf
 + wh, 
wh4
, 
w2
, 
h2
);

408 
	`rŸ90ccw
(
m≠
 + 
wh
 + 
wh4
, 
˙t
->
rŸ©e_d©a
.
ãmp_buf
 + wh + wh4,

409 
wh4
, 
w2
, 
h2
);

413 
	`mem˝y
(
m≠
, 
˙t
->
rŸ©e_d©a
.
ãmp_buf
, 
size
);

422 
	}
}

	@rotate.h

11 #i‚de‡
_INCLUDE_ROTATE_H


12 
	#_INCLUDE_ROTATE_H


	)

14 
	~"mŸi⁄.h
"

28 
rŸ©e_öô
(
c⁄ãxt
 *
˙t
);

39 
rŸ©e_deöô
(
c⁄ãxt
 *
˙t
);

65 
rŸ©e_m≠
(
c⁄ãxt
 *
˙t
, *
m≠
);

	@track.c

9 
	~<m©h.h
>

10 
	~<ãrmios.h
>

11 
	~"mŸi⁄.h
"

13 #i‚de‡
WITHOUT_V4L


14 
	~"pwc-io˘l.h
"

18 
åack›ti⁄s
 
	gåack_ãm∂©e
 = {

19 
dev
: -1,

20 
p‹t
: 
NULL
,

21 
mŸ‹x
: 0,

22 
mŸ‹y
: 0,

23 
maxx
: 0,

24 
maxy
: 0,

25 
•ìd
: 
TRACK_SPEED
,

26 
°ïsize
: 
TRACK_STEPSIZE
,

27 
a˘ive
: 0,

28 
mömaxfound
: 0,

29 
°ï_™gÀ_x
: 10,

30 
°ï_™gÀ_y
: 10,

31 
move_waô
: 10

36 
°ï≥r_˚¡î
(
c⁄ãxt
 *, 
xoff
, 
yoff
 
ATTRIBUTE_UNUSED
);

37 
°ï≥r_move
(
c⁄ãxt
 *, 
co‹d
 *, 
images
 *);

38 
iomojo_˚¡î
(
c⁄ãxt
 *, 
xoff
, 
yoff
);

39 
iomojo_move
(
c⁄ãxt
 *, 
dev
, 
co‹d
 *, 
images
 *);

40 #i‚de‡
WITHOUT_V4L


41 
lqos_˚¡î
(
c⁄ãxt
 *, 
dev
, 
xoff
, 
yoff
);

42 
lqos_move
(
c⁄ãxt
 *, 
dev
, 
co‹d
 *, 
images
 *,

44 #ifde‡
MOTION_V4L2


45 
uvc_˚¡î
(
c⁄ãxt
 *, 
dev
, 
xoff
, 
yoff
);

46 
uvc_move
(
c⁄ãxt
 *, 
dev
, 
co‹d
 *, 
images
 *,

52 
	$åack_˚¡î
(
c⁄ãxt
 *
˙t
, 
dev
 
ATTRIBUTE_UNUSED
,

53 
m™uÆ
, 
xoff
, 
yoff
)

55 i‡(!
m™uÆ
 && !
˙t
->
åack
.
a˘ive
)

58 i‡(
˙t
->
åack
.
ty≥
 =
TRACK_TYPE_STEPPER
) {

59 
ªt
;

60 
ªt
 = 
	`°ï≥r_˚¡î
(
˙t
, 
xoff
, 
yoff
);

61 i‡(!
ªt
) {

62 
	`mŸi⁄_log
(
LOG_ERR
, 1, "track_center: internalÉrror (stepper_center)");

65  
ªt
;

68 #i‚de‡
WITHOUT_V4L


69 i‡(
˙t
->
åack
.
ty≥
 =
TRACK_TYPE_PWC
)

70  
	`lqos_˚¡î
(
˙t
, 
dev
, 
xoff
, 
yoff
);

71 #ifde‡
MOTION_V4L2


72 i‡(
˙t
->
åack
.
ty≥
 =
TRACK_TYPE_UVC
)

73  
	`uvc_˚¡î
(
˙t
, 
dev
, 
xoff
, 
yoff
);

76 i‡(
˙t
->
åack
.
ty≥
 =
TRACK_TYPE_IOMOJO
)

77  
	`iomojo_˚¡î
(
˙t
, 
xoff
, 
yoff
);

78 i‡(
˙t
->
åack
.
ty≥
 =
TRACK_TYPE_GENERIC
)

81 
	`mŸi⁄_log
(
LOG_ERR
, 1, "track_center: internalÉrror, %hu isÇotá knownÅrack-type",

82 
˙t
->
åack
.
ty≥
);

85 
	}
}

88 
	$åack_move
(
c⁄ãxt
 *
˙t
, 
dev
, 
co‹d
 *
˚¡
,

89 
images
 *
imgs
, 
m™uÆ
)

91 i‡(!
m™uÆ
 && !
˙t
->
åack
.
a˘ive
)

94 i‡(
˙t
->
åack
.
ty≥
 =
TRACK_TYPE_STEPPER
)

95  
	`°ï≥r_move
(
˙t
, 
˚¡
, 
imgs
);

96 #i‚de‡
WITHOUT_V4L


97 i‡(
˙t
->
åack
.
ty≥
 =
TRACK_TYPE_PWC
)

98  
	`lqos_move
(
˙t
, 
dev
, 
˚¡
, 
imgs
, 
m™uÆ
);

99 #ifde‡
MOTION_V4L2


100 i‡(
˙t
->
åack
.
ty≥
 =
TRACK_TYPE_UVC
)

101  
	`uvc_move
(
˙t
, 
dev
, 
˚¡
, 
imgs
, 
m™uÆ
);

104 i‡(
˙t
->
åack
.
ty≥
 =
TRACK_TYPE_IOMOJO
)

105  
	`iomojo_move
(
˙t
, 
dev
, 
˚¡
, 
imgs
);

106 i‡(
˙t
->
åack
.
ty≥
 =
TRACK_TYPE_GENERIC
)

107  
˙t
->
åack
.
move_waô
;

109 
	`mŸi⁄_log
(
LOG_ERR
, 1, "track_move: internalÉrror, %hu isÇotá knownÅrack-type",

110 
˙t
->
åack
.
ty≥
);

113 
	}
}

123 
	$°ï≥r_comm™d
(
c⁄ãxt
 *
˙t
, 
mŸ‹
,

124 
comm™d
, 
d©a
)

126 
buf„r
[3];

127 
time_t
 
timeout
 = 
	`time
(
NULL
);

129 
buf„r
[0] = 
mŸ‹
;

130 
buf„r
[1] = 
comm™d
;

131 
buf„r
[2] = 
d©a
;

133 i‡(
	`wrôe
(
˙t
->
åack
.
dev
, 
buf„r
, 3) != 3) {

134 
	`mŸi⁄_log
(
LOG_ERR
, 1, "stepper_commandÖort %s dev fd %i, motor %hu command %hu data %hu",

135 
˙t
->
åack
.
p‹t
, c¡->åack.
dev
, 
mŸ‹
, 
comm™d
, 
d©a
);

139 
	`ªad
(
˙t
->
åack
.
dev
, 
buf„r
, 1Ë!1 && 
	`time
(
NULL
Ë< 
timeout
 + 1);

141 i‡(
	`time
(
NULL
Ë>
timeout
 + 2) {

142 
	`mŸi⁄_log
(
LOG_ERR
, 1, "Status byteÅimeout!");

146  
buf„r
[0];

147 
	}
}

150 
	$°ï≥r_°©us
(
c⁄ãxt
 *
˙t
, 
mŸ‹
)

152  
	`°ï≥r_comm™d
(
˙t
, 
mŸ‹
, 
STEPPER_COMMAND_STATUS
, 0);

153 
	}
}

156 
	$°ï≥r_˚¡î
(
c⁄ãxt
 *
˙t
, 
x_off£t
, 
y_off£t
)

158 
ãrmios
 
adtio
;

160 i‡(
˙t
->
åack
.
dev
 < 0) {

161 
	`mŸi⁄_log
(
LOG_INFO
, 0, "TryÅÿ›í sîü»devi˚ %s", 
˙t
->
åack
.
p‹t
);

163 i‡((
˙t
->
åack
.
dev
=
	`›í
(˙t->åack.
p‹t
, 
O_RDWR
 | 
O_NOCTTY
)) < 0) {

164 
	`mŸi⁄_log
(
LOG_ERR
, 1, "U«bÀÅÿ›í sîü»devi˚ %s", 
˙t
->
åack
.
p‹t
);

168 
	`bzîo
 (&
adtio
, (adtio));

169 
adtio
.
c_cÊag
 = 
STEPPER_BAUDRATE
 | 
CS8
 | 
CLOCAL
 | 
CREAD
;

170 
adtio
.
c_iÊag
 = 
IGNPAR
;

171 
adtio
.
c_oÊag
 = 0;

172 
adtio
.
c_lÊag
 = 0;

173 
adtio
.
c_cc
[
VTIME
] = 0;

174 
adtio
.
c_cc
[
VMIN
] = 0;

175 
	`tcÊush
 (
˙t
->
åack
.
dev
, 
TCIFLUSH
);

177 i‡(
	`tc£èâr
(
˙t
->
åack
.
dev
, 
TCSANOW
, &
adtio
) < 0) {

178 
	`mŸi⁄_log
(
LOG_ERR
, 1, "U«bÀÅÿöôülizê£rü»devi˚ %s", 
˙t
->
åack
.
p‹t
);

181 
	`mŸi⁄_log
(
LOG_INFO
, 0, "Opened serial device %sánd initialize, fd %i",

182 
˙t
->
åack
.
p‹t
, c¡->åack.
dev
);

187 
	`°ï≥r_comm™d
(
˙t
, c¡->
åack
.
mŸ‹x
, 
STEPPER_COMMAND_SPEED
, c¡->åack.
•ìd
);

188 
	`°ï≥r_comm™d
(
˙t
, c¡->
åack
.
mŸ‹x
, 
STEPPER_COMMAND_LEFT_N
, c¡->åack.
maxx
);

190 
	`°ï≥r_°©us
(
˙t
, c¡->
åack
.
mŸ‹x
Ë& 
STEPPER_STATUS_LEFT
);

192 
	`°ï≥r_comm™d
(
˙t
, c¡->
åack
.
mŸ‹x
, 
STEPPER_COMMAND_RIGHT_N
,

193 
˙t
->
åack
.
maxx
 / 2 + 
x_off£t
 * c¡->åack.
°ïsize
);

195 
	`°ï≥r_°©us
(
˙t
, c¡->
åack
.
mŸ‹x
Ë& 
STEPPER_STATUS_RIGHT
);

199 
	`°ï≥r_comm™d
(
˙t
, c¡->
åack
.
mŸ‹y
, 
STEPPER_COMMAND_SPEED
, c¡->åack.
•ìd
);

200 
	`°ï≥r_comm™d
(
˙t
, c¡->
åack
.
mŸ‹y
, 
STEPPER_COMMAND_UP_N
, c¡->åack.
maxy
);

202 
	`°ï≥r_°©us
(
˙t
, c¡->
åack
.
mŸ‹y
Ë& 
STEPPER_STATUS_UP
)

204 
	`°ï≥r_comm™d
(
˙t
, c¡->
åack
.
mŸ‹y
, 
STEPPER_COMMAND_DOWN_N
,

205 
˙t
->
åack
.
maxy
 / 2 + 
y_off£t
 * c¡->åack.
°ïsize
);

207 
	`°ï≥r_°©us
(
˙t
, c¡->
åack
.
mŸ‹y
Ë& 
STEPPER_STATUS_DOWN
);

209  
˙t
->
åack
.
move_waô
;

210 
	}
}

212 
	$°ï≥r_move
(
c⁄ãxt
 *
˙t
, 
co‹d
 *
˚¡
,

213 
images
 *
imgs
)

215 
comm™d
 = 0, 
d©a
 = 0;

217 i‡(
˙t
->
åack
.
dev
 < 0) {

218 
	`mŸi⁄_log
(
LOG_INFO
, 0, "Nÿdevi˚ %†°¨ãd yë ,Åryög sãµî_˚¡î()", 
˙t
->
åack
.
p‹t
);

219 i‡(!
	`°ï≥r_˚¡î
(
˙t
, 0, 0)){

220 
	`mŸi⁄_log
(
LOG_ERR
, 1, "Stepper_center() failedÅo initialize stepper device on %s , fd [%i].",

221 
˙t
->
åack
.
p‹t
, c¡->åack.
dev
);

224 
	`mŸi⁄_log
(
LOG_INFO
, 0, "stepper_center() succeed , device started %s , fd [%i]",

225 
˙t
->
åack
.
p‹t
, c¡->åack.
dev
);

230 i‡(
˚¡
->
x
 < 
imgs
->
width
 / 2) {

231 
comm™d
 = 
STEPPER_COMMAND_LEFT_N
;

232 
d©a
 = 
imgs
->
width
 / 2 - 
˚¡
->
x
;

235 i‡(
˚¡
->
x
 > 
imgs
->
width
 / 2) {

236 
comm™d
 = 
STEPPER_COMMAND_RIGHT_N
;

237 
d©a
 = 
˚¡
->
x
 - 
imgs
->
width
 / 2;

240 
d©a
 = d©®* 
˙t
->
åack
.
°ïsize
 / 
imgs
->
width
;

242 i‡(
d©a
)

243 
	`°ï≥r_comm™d
(
˙t
, c¡->
åack
.
mŸ‹x
, 
comm™d
, 
d©a
);

247 i‡(
˚¡
->
y
 < 
imgs
->
height
 / 2) {

248 
comm™d
 = 
STEPPER_COMMAND_UP_N
;

249 
d©a
 = 
imgs
->
height
 / 2 - 
˚¡
->
y
;

252 i‡(
˚¡
->
y
 > 
imgs
->
height
 / 2) {

253 
comm™d
 = 
STEPPER_COMMAND_DOWN_N
;

254 
d©a
 = 
˚¡
->
y
 - 
imgs
->
height
 / 2;

257 
d©a
 = d©®* 
˙t
->
åack
.
°ïsize
 / 
imgs
->
height
;

259 i‡(
d©a
)

260 
	`°ï≥r_comm™d
(
˙t
, c¡->
åack
.
mŸ‹y
, 
comm™d
, 
d©a
);

263  
˙t
->
åack
.
move_waô
;

264 
	}
}

272 
	$iomojo_comm™d
(
c⁄ãxt
 *
˙t
, *
comm™d
,

273 
Àn
, 
ªt
)

275 
buf„r
[1];

276 
time_t
 
timeout
 = 
	`time
(
NULL
);

278 i‡(
	`wrôe
(
˙t
->
åack
.
dev
, 
comm™d
, 
Àn
) !=Üen)

281 i‡(
ªt
) {

282 
	`ªad
(
˙t
->
åack
.
dev
, 
buf„r
, 1Ë!1 && 
	`time
(
NULL
Ë< 
timeout
 + 2);

284 i‡(
	`time
(
NULL
Ë>
timeout
 + 2) {

285 
	`mŸi⁄_log
(
LOG_ERR
, 1, "Return byteÅimeout!");

290  
buf„r
[0];

291 
	}
}

293 
	$iomojo_£t•ìd
(
c⁄ãxt
 *
˙t
, 
•ìd
)

295 
comm™d
[3];

297 
comm™d
[0] = 
IOMOJO_SETSPEED_CMD
;

298 
comm™d
[1] = 
˙t
->
åack
.
iomojo_id
;

299 
comm™d
[2] = 
•ìd
;

301 i‡(
	`iomojo_comm™d
(
˙t
, 
comm™d
, 3, 1Ë!
IOMOJO_SETSPEED_RET
)

302 
	`mŸi⁄_log
(
LOG_ERR
, 1, "UnableÅo set camera speed");

303 
	}
}

305 
	$iomojo_movehome
(
c⁄ãxt
 *
˙t
)

307 
comm™d
[2];

309 
comm™d
[0] = 
IOMOJO_MOVEHOME
;

310 
comm™d
[1] = 
˙t
->
åack
.
iomojo_id
;

312 
	`iomojo_comm™d
(
˙t
, 
comm™d
, 2, 0);

313 
	}
}

315 
	$iomojo_˚¡î
(
c⁄ãxt
 *
˙t
, 
x_off£t
, 
y_off£t
)

317 
ãrmios
 
adtio
;

318 
comm™d
[5], 
dúe˘i⁄
 = 0;

320 i‡(
˙t
->
åack
.
dev
<0) {

321 i‡((
˙t
->
åack
.
dev
=
	`›í
(˙t->åack.
p‹t
, 
O_RDWR
 | 
O_NOCTTY
)) < 0) {

322 
	`mŸi⁄_log
(
LOG_ERR
, 1, "U«bÀÅÿ›í sîü»devi˚ %s", 
˙t
->
åack
.
p‹t
);

326 
	`bzîo
 (&
adtio
, (adtio));

327 
adtio
.
c_cÊag
 = 
IOMOJO_BAUDRATE
 | 
CS8
 | 
CLOCAL
 | 
CREAD
;

328 
adtio
.
c_iÊag
 = 
IGNPAR
;

329 
adtio
.
c_oÊag
 = 0;

330 
adtio
.
c_lÊag
 = 0;

331 
adtio
.
c_cc
[
VTIME
] = 0;

332 
adtio
.
c_cc
[
VMIN
] = 0;

333 
	`tcÊush
(
˙t
->
åack
.
dev
, 
TCIFLUSH
);

334 i‡(
	`tc£èâr
(
˙t
->
åack
.
dev
, 
TCSANOW
, &
adtio
) < 0) {

335 
	`mŸi⁄_log
(
LOG_ERR
, 1, "U«bÀÅÿöôülizê£rü»devi˚ %s", 
˙t
->
åack
.
p‹t
);

340 
	`iomojo_£t•ìd
(
˙t
, 40);

341 
	`iomojo_movehome
(
˙t
);

343 i‡(
x_off£t
 || 
y_off£t
) {

344 i‡(
x_off£t
 > 0)

345 
dúe˘i⁄
 |
IOMOJO_DIRECTION_RIGHT
;

347 
dúe˘i⁄
 |
IOMOJO_DIRECTION_LEFT
;

348 
x_off£t
 *= -1;

351 i‡(
y_off£t
 > 0)

352 
dúe˘i⁄
 |
IOMOJO_DIRECTION_UP
;

354 
dúe˘i⁄
 |
IOMOJO_DIRECTION_DOWN
;

355 
y_off£t
 *= -1;

358 i‡(
x_off£t
 > 180)

359 
x_off£t
 = 180;

361 i‡(
y_off£t
 > 60)

362 
y_off£t
 = 60;

364 
comm™d
[0] = 
IOMOJO_MOVEOFFSET_CMD
;

365 
comm™d
[1] = 
˙t
->
åack
.
iomojo_id
;

366 
comm™d
[2] = 
dúe˘i⁄
;

367 
comm™d
[3] = 
x_off£t
;

368 
comm™d
[4] = 
y_off£t
;

369 
	`iomojo_comm™d
(
˙t
, 
comm™d
, 5, 0);

372 
	`mŸi⁄_log
(
LOG_INFO
, 0, "iomojo_center() succeed");

374  
˙t
->
åack
.
move_waô
;

375 
	}
}

377 
	$iomojo_move
(
c⁄ãxt
 *
˙t
, 
dev
,

378 
co‹d
 *
˚¡
, 
images
 *
imgs
)

380 
comm™d
[5];

381 
dúe˘i⁄
 = 0;

382 
nx
 = 0, 
ny
 = 0;

383 
i
;

385 i‡(
dev
 < 0)

386 i‡(!
	`iomojo_˚¡î
(
˙t
, 0, 0))

389 i‡(
˚¡
->
x
 < 
imgs
->
width
 / 2) {

390 
dúe˘i⁄
 |
IOMOJO_DIRECTION_LEFT
;

391 
nx
 = 
imgs
->
width
 / 2 - 
˚¡
->
x
;

394 i‡(
˚¡
->
x
 > 
imgs
->
width
 / 2) {

395 
dúe˘i⁄
 |
IOMOJO_DIRECTION_RIGHT
;

396 
nx
 = 
˚¡
->
x
 - 
imgs
->
width
 / 2;

399 i‡(
˚¡
->
y
 < 
imgs
->
height
 / 2) {

400 
dúe˘i⁄
 |
IOMOJO_DIRECTION_DOWN
;

401 
ny
 = 
imgs
->
height
 / 2 - 
˚¡
->
y
;

404 i‡(
˚¡
->
y
 > 
imgs
->
height
 / 2) {

405 
dúe˘i⁄
 |
IOMOJO_DIRECTION_UP
;

406 
ny
 = 
˚¡
->
y
 - 
imgs
->
height
 / 2;

409 
nx
 =Çx * 72 / 
imgs
->
width
;

410 
ny
 =Çy * 72 / 
imgs
->
height
;

412 i‡(
nx
 || 
ny
) {

413 i‡(
nx
 > 180)

414 
nx
 = 180;

416 i‡(
ny
 > 60)

417 
ny
 = 60;

419 
comm™d
[0] = 
IOMOJO_MOVEOFFSET_CMD
;

420 
comm™d
[1] = 
˙t
->
åack
.
iomojo_id
;

421 
comm™d
[2] = 
dúe˘i⁄
;

422 
comm™d
[3] = 
nx
;

423 
comm™d
[4] = 
ny
;

424 
	`iomojo_comm™d
(
˙t
, 
comm™d
, 5, 0);

427 i‡(
ny
 >
nx
)

428 
i
 = 25 * 
ny
 / 90;

430 
i
 = 25 * 
nx
 / 90;

432  
i
;

436 
	}
}

443 #i‚de‡
WITHOUT_V4L


444 
	$lqos_˚¡î
(
c⁄ãxt
 *
˙t
, 
dev
, 
x_™gÀ
, 
y_™gÀ
)

446 
ª£t
 = 3;

447 
pwc_m±_™gÀs
 
pma
;

448 
pwc_m±_ønge
 
pmr
;

450 i‡(
˙t
->
åack
.
dev
 == -1) {

452 i‡(
	`io˘l
(
dev
, 
VIDIOCPWCMPTRESET
, &
ª£t
) == -1) {

453 
	`mŸi⁄_log
(
LOG_ERR
, 1, "FailedÅoÑesetÖwc cameraÅo startingÖosition! Reason");

457 
	`SLEEP
(6,0)

459 i‡(
	`io˘l
(
dev
, 
VIDIOCPWCMPTGRANGE
, &
pmr
) == -1) {

460 
	`mŸi⁄_log
(
LOG_ERR
, 1, "failed VIDIOCPWCMPTGRANGE");

464 
˙t
->
åack
.
dev
 = dev;

465 
˙t
->
åack
.
mömaxfound
 = 1;

466 
˙t
->
åack
.
∑nmö
 = 
pmr
.
∑n_mö
;

467 
˙t
->
åack
.
∑nmax
 = 
pmr
.
∑n_max
;

468 
˙t
->
åack
.
tûtmö
 = 
pmr
.
tût_mö
;

469 
˙t
->
åack
.
tûtmax
 = 
pmr
.
tût_max
;

472 i‡(
	`io˘l
(
dev
, 
VIDIOCPWCMPTGANGLE
, &
pma
) == -1)

473 
	`mŸi⁄_log
(
LOG_ERR
, 1, "ioctl VIDIOCPWCMPTGANGLE");

475 
pma
.
absﬁuã
 = 1;

477 i‡(
x_™gÀ
 * 100 < 
˙t
->
åack
.
∑nmax
 && x_™gÀ * 100 > c¡->åack.
∑nmö
)

478 
pma
.
∑n
 = 
x_™gÀ
 * 100;

480 i‡(
y_™gÀ
 * 100 < 
˙t
->
åack
.
tûtmax
 && y_™gÀ * 100 > c¡->åack.
tûtmö
)

481 
pma
.
tût
 = 
y_™gÀ
 * 100;

483 i‡(
	`io˘l
(
dev
, 
VIDIOCPWCMPTSANGLE
, &
pma
) == -1) {

484 
	`mŸi⁄_log
(
LOG_ERR
, 1, "FailedÅoÖan/tiltÖwc camera! Reason");

488 
	`mŸi⁄_log
(
LOG_INFO
, 0, "lqos_center succeed");

490  
˙t
->
åack
.
move_waô
;

491 
	}
}

493 
	$lqos_move
(
c⁄ãxt
 *
˙t
, 
dev
, 
co‹d
 *
˚¡
,

494 
images
 *
imgs
, 
m™uÆ
)

496 
dñè_x
 = 
˚¡
->
x
 - (
imgs
->
width
 / 2);

497 
dñè_y
 = 
˚¡
->
y
 - (
imgs
->
height
 / 2);

498 
move_x_degªes
, 
move_y_degªes
;

499 
pwc_m±_™gÀs
 
pma
;

500 
pwc_m±_ønge
 
pmr
;

503 i‡(!
m™uÆ
) {

504 i‡(
dñè_x
 > 
imgs
->
width
 * 3 / 8 && delta_x < imgs->width * 5 / 8)

506 i‡(
dñè_y
 > 
imgs
->
height
 * 3 / 8 && delta_y < imgs->height * 5 / 8)

509 
move_x_degªes
 = 
dñè_x
 * 
˙t
->
åack
.
°ï_™gÀ_x
 * 100 / (
imgs
->
width
 / 2);

510 
move_y_degªes
 = -
dñè_y
 * 
˙t
->
åack
.
°ï_™gÀ_y
 * 100 / (
imgs
->
height
 / 2);

512 
move_x_degªes
 = 
˚¡
->
x
 * 100;

513 
move_y_degªes
 = 
˚¡
->
y
 * 100;

517 i‡(
˙t
->
åack
.
mömaxfound
 == 0) {

518 i‡(
	`io˘l
(
dev
, 
VIDIOCPWCMPTGRANGE
, &
pmr
) == -1) {

519 
	`mŸi⁄_log
(
LOG_ERR
, 1, "failed VIDIOCPWCMPTGRANGE");

522 
˙t
->
åack
.
mömaxfound
 = 1;

523 
˙t
->
åack
.
∑nmö
 = 
pmr
.
∑n_mö
;

524 
˙t
->
åack
.
∑nmax
 = 
pmr
.
∑n_max
;

525 
˙t
->
åack
.
tûtmö
 = 
pmr
.
tût_mö
;

526 
˙t
->
åack
.
tûtmax
 = 
pmr
.
tût_max
;

530 i‡(
	`io˘l
(
dev
, 
VIDIOCPWCMPTGANGLE
, &
pma
) == -1)

531 
	`mŸi⁄_log
(
LOG_ERR
, 1, "ioctl VIDIOCPWCMPTGANGLE");

536 i‡(
move_x_degªes
<0 && (
˙t
->
åack
.
∑nmö
 - 
pma
.
∑n
) > move_x_degrees)

537 
move_x_degªes
 = (
˙t
->
åack
.
∑nmö
 - 
pma
.
∑n
);

539 i‡(
move_x_degªes
>0 && (
˙t
->
åack
.
∑nmax
 - 
pma
.
∑n
) < move_x_degrees)

540 
move_x_degªes
 = (
˙t
->
åack
.
∑nmax
 - 
pma
.
∑n
);

542 i‡(
move_y_degªes
<0 && (
˙t
->
åack
.
tûtmö
 - 
pma
.
tût
) > move_y_degrees)

543 
move_y_degªes
 = (
˙t
->
åack
.
tûtmö
 - 
pma
.
tût
);

545 i‡(
move_y_degªes
>0 && (
˙t
->
åack
.
tûtmax
 - 
pma
.
tût
) < move_y_degrees)

546 
move_y_degªes
 = (
˙t
->
åack
.
tûtmax
 - 
pma
.
tût
);

549 
pma
.
absﬁuã
 = 0;

550 
pma
.
∑n
 = 
move_x_degªes
;

551 
pma
.
tût
 = 
move_y_degªes
;

553 i‡(
	`io˘l
(
dev
, 
VIDIOCPWCMPTSANGLE
, &
pma
) == -1) {

554 
	`mŸi⁄_log
(
LOG_ERR
, 1, "FailedÅoÖan/tiltÖwc camera! Reason");

558  
˙t
->
åack
.
move_waô
;

559 
	}
}

568 #ifde‡
MOTION_V4L2


570 
	$uvc_˚¡î
(
c⁄ãxt
 *
˙t
, 
dev
, 
x_™gÀ
, 
y_™gÀ
)

573 
move_x_degªes
 = 0, 
move_y_degªes
 = 0;

575 
	u∑¡ût
 {

577 
∑n
;

578 
tût
;

579 } 
s16
;

580 
vÆue
;

582 
∑¡ût
 
∑n
;

584 i‡(
˙t
->
åack
.
dev
 == -1) {

586 
ª£t
 = 3;

587 
v4l2_c⁄åﬁ
 
c⁄åﬁ_s
;

589 
c⁄åﬁ_s
.
id
 = 
V4L2_CID_PANTILT_RESET
;

590 
c⁄åﬁ_s
.
vÆue
 = (Ë
ª£t
;

592 i‡(
	`io˘l
(
dev
, 
VIDIOC_S_CTRL
, &
c⁄åﬁ_s
) < 0) {

593 
	`mŸi⁄_log
(
LOG_ERR
, 1, "FailedÅoÑeset UVC cameraÅo startingÖosition! Reason");

596 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "Reseting UVC cameraÅo startingÖosition");

598 
	`SLEEP
(8, 0)

601 
v4l2_quîy˘æ
 
quîy˘æ
;

603 
quîy˘æ
.
id
 = 
V4L2_CID_PAN_RELATIVE
;

605 i‡(
	`io˘l
(
dev
, 
VIDIOC_QUERYCTRL
, &
quîy˘æ
) < 0) {

606 
	`mŸi⁄_log
(
LOG_ERR
, 1, "ioctl querycontrol");

610 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "Getting cameraÑange");

622 
˙t
->
åack
.
∑nmö
 = -4480 / 
INCPANTILT
;

623 
˙t
->
åack
.
tûtmö
 = -1920 / 
INCPANTILT
;

625 
˙t
->
åack
.
∑nmax
 = 4480 / 
INCPANTILT
;

626 
˙t
->
åack
.
tûtmax
 = 1920 / 
INCPANTILT
;

629 
˙t
->
åack
.
dev
 = dev;

630 
˙t
->
åack
.
∑n_™gÀ
 = 0;

631 
˙t
->
åack
.
tût_™gÀ
 = 0;

632 
˙t
->
åack
.
mömaxfound
 = 1;

636 
v4l2_c⁄åﬁ
 
c⁄åﬁ_s
;

638 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "INPUT_PARAM_ABSÖan_min %d,pan_max %d,tilt_min %d,tilt_max %d ",

639 
˙t
->
åack
.
∑nmö
, c¡->åack.
∑nmax
, c¡->åack.
tûtmö
, c¡->åack.
tûtmax
 );

640 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "INPUT_PARAM_ABS X_Angñ %d, Y_Angñ %d ", 
x_™gÀ
, 
y_™gÀ
);

642 i‡(
x_™gÀ
 <
˙t
->
åack
.
∑nmax
 && x_™gÀ >˙t->åack.
∑nmö
)

643 
move_x_degªes
 = 
x_™gÀ
 - (
˙t
->
åack
.
∑n_™gÀ
);

645 i‡(
y_™gÀ
 <
˙t
->
åack
.
tûtmax
 && y_™gÀ >˙t->åack.
tûtmö
)

646 
move_y_degªes
 = 
y_™gÀ
 - (
˙t
->
åack
.
tût_™gÀ
);

655 
∑n
.
s16
.∑¿-
move_x_degªes
 * 
INCPANTILT
;

656 
∑n
.
s16
.
tût
 = -
move_y_degªes
 * 
INCPANTILT
;

658 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "F‹_SET_ABS move_X %d,move_Y %d", 
move_x_degªes
, 
move_y_degªes
);

665 i‡(
move_x_degªes
 != 0) {

666 
c⁄åﬁ_s
.
id
 = 
V4L2_CID_PAN_RELATIVE
;

668 
c⁄åﬁ_s
.
vÆue
 = 
∑n
.
s16
.pan;

669 i‡(
	`io˘l
(
dev
, 
VIDIOC_S_CTRL
, &
c⁄åﬁ_s
) < 0) {

670 
	`mŸi⁄_log
(
LOG_ERR
, 1, "FailedÅo move UVC camera!");

676 i‡((
move_x_degªes
 !0Ë&& (
move_y_degªes
 != 0))

677 
	`SLEEP
 (1,0);

680 i‡(
move_y_degªes
 != 0) {

681 
c⁄åﬁ_s
.
id
 = 
V4L2_CID_TILT_RELATIVE
;

683 
c⁄åﬁ_s
.
vÆue
 = 
∑n
.
s16
.
tût
;

684 i‡(
	`io˘l
(
dev
, 
VIDIOC_S_CTRL
, &
c⁄åﬁ_s
) < 0) {

685 
	`mŸi⁄_log
(
LOG_ERR
, 1, "FailedÅo move UVC camera!");

691 
	`mŸi⁄_log
(
LOG_DEBUG
, 0,"Found MINMAX = %d", 
˙t
->
åack
.
mömaxfound
);

693 i‡(
˙t
->
åack
.
dev
 != -1) {

694 
	`mŸi⁄_log
(
LOG_DEBUG
, 0," Before_ABS_Y_Angel : x= %d , Y= %d , ",

695 
˙t
->
åack
.
∑n_™gÀ
, c¡->åack.
tût_™gÀ
 );

696 i‡(
move_x_degªes
 != -1)

697 
˙t
->
åack
.
∑n_™gÀ
 +
move_x_degªes
;

699 i‡(
move_x_degªes
 != -1)

700 
˙t
->
åack
.
tût_™gÀ
 +
move_y_degªes
;

702 
	`mŸi⁄_log
(
LOG_DEBUG
, 0," After_ABS_Y_Angel : x= %d , Y= %d , ",

703 
˙t
->
åack
.
∑n_™gÀ
, c¡->åack.
tût_™gÀ
 );

706  
˙t
->
åack
.
move_waô
;

707 
	}
}

709 
	$uvc_move
(
c⁄ãxt
 *
˙t
, 
dev
, 
co‹d
 *
˚¡
,

710 
images
 *
imgs
, 
m™uÆ
)

714 
dñè_x
 = 
˚¡
->
x
 - (
imgs
->
width
 / 2);

715 
dñè_y
 = 
˚¡
->
y
 - (
imgs
->
height
 / 2);

716 
move_x_degªes
, 
move_y_degªes
;

722 i‡((
˙t
->
åack
.
mömaxfound
 !1Ë|| (
˚¡
->
x
 == 7777)) {

723 
ª£t
 = 3;

724 
v4l2_c⁄åﬁ
 
c⁄åﬁ_s
;

726 
c⁄åﬁ_s
.
id
 = 
V4L2_CID_PANTILT_RESET
;

727 
c⁄åﬁ_s
.
vÆue
 = (Ë
ª£t
;

729 i‡(
	`io˘l
(
dev
, 
VIDIOC_S_CTRL
, &
c⁄åﬁ_s
) < 0) {

730 
	`mŸi⁄_log
(
LOG_ERR
, 1, "FailedÅoÑeset UVC cameraÅo startingÖosition! Reason");

734 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "Reseting UVC cameraÅo startingÖosition");

737 
˚¡
->
x
 = 0;

738 
	`SLEEP
(8,0);

746 
˙t
->
åack
.
∑nmö
 = -4480 / 
INCPANTILT
;

747 
˙t
->
åack
.
tûtmö
 = -1920 / 
INCPANTILT
;

748 
˙t
->
åack
.
∑nmax
 = 4480 / 
INCPANTILT
;

749 
˙t
->
åack
.
tûtmax
 = 1920 / 
INCPANTILT
;

750 
˙t
->
åack
.
dev
 = dev;

751 
˙t
->
åack
.
∑n_™gÀ
 = 0;

752 
˙t
->
åack
.
tût_™gÀ
 = 0;

753 
˙t
->
åack
.
mömaxfound
 = 1;

758 i‡(!
m™uÆ
) {

759 i‡(
dñè_x
 > 
imgs
->
width
 * 3 / 8 && delta_x < imgs->width * 5 / 8)

761 i‡(
dñè_y
 > 
imgs
->
height
 * 3 / 8 && delta_y < imgs->height * 5 / 8)

764 
move_x_degªes
 = 
dñè_x
 * 
˙t
->
åack
.
°ï_™gÀ_x
 / (
imgs
->
width
 / 2);

765 
move_y_degªes
 = -
dñè_y
 * 
˙t
->
åack
.
°ï_™gÀ_y
 / (
imgs
->
height
 / 2);

767 
move_x_degªes
 = 
˚¡
->
x
;

768 
move_y_degªes
 = 
˚¡
->
y
;

771 
	u∑¡ût
 {

773 
∑n
;

774 
tût
;

775 } 
s16
;

776 
vÆue
;

779 
v4l2_c⁄åﬁ
 
c⁄åﬁ_s
;

780 
∑¡ût
 
∑n
;

782 i‡(
˙t
->
åack
.
mömaxfound
 == 1) {

785 i‡(
move_x_degªes
<0 && (
˙t
->
åack
.
∑nmö
 - c¡->åack.
∑n_™gÀ
) > move_x_degrees)

786 
move_x_degªes
 = (
˙t
->
åack
.
∑nmö
 - c¡->åack.
∑n_™gÀ
);

788 i‡(
move_x_degªes
>0 && (
˙t
->
åack
.
∑nmax
 - c¡->åack.
∑n_™gÀ
) < move_x_degrees)

789 
move_x_degªes
 = (
˙t
->
åack
.
∑nmax
 - c¡->åack.
∑n_™gÀ
);

791 i‡(
move_y_degªes
<0 && (
˙t
->
åack
.
tûtmö
 - c¡->åack.
tût_™gÀ
) > move_y_degrees)

792 
move_y_degªes
 = (
˙t
->
åack
.
tûtmö
 - c¡->åack.
tût_™gÀ
);

794 i‡(
move_y_degªes
>0 && (
˙t
->
åack
.
tûtmax
 - c¡->åack.
tût_™gÀ
) < move_y_degrees)

795 
move_y_degªes
 = (
˙t
->
åack
.
tûtmax
 - c¡->åack.
tût_™gÀ
);

799 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "For_SET_RELÖan_min %d,pan_max %d,tilt_min %d,tilt_max %d ",

800 
˙t
->
åack
.
∑nmö
, c¡->åack.
∑nmax
, c¡->åack.
tûtmö
, c¡->åack.
tûtmax
 );

801 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "For_SET_RELÅrack_pan_Angel %d,Årack_tilt_Angel %d ",

802 
˙t
->
åack
.
∑n_™gÀ
, c¡->åack.
tût_™gÀ
);

803 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "For_SET_REL move_X %d,move_Y %d",

804 
move_x_degªes
, 
move_y_degªes
);

812 
∑n
.
s16
.∑¿-
move_x_degªes
 * 
INCPANTILT
;

813 
∑n
.
s16
.
tût
 = -
move_y_degªes
 * 
INCPANTILT
;

820 i‡(
move_x_degªes
 != 0) {

822 
c⁄åﬁ_s
.
id
 = 
V4L2_CID_PAN_RELATIVE
;

824 
c⁄åﬁ_s
.
vÆue
 = 
∑n
.
s16
.pan;

825 
	`mŸi⁄_log
(
LOG_DEBUG
, 0," dev %d,addr= %d, control_S= %d,Wert= %d,",

826 
dev
,
VIDIOC_S_CTRL
, &
c⁄åﬁ_s
, 
∑n
.
s16
.pan );

828 i‡(
	`io˘l
(
dev
, 
VIDIOC_S_CTRL
, &
c⁄åﬁ_s
) < 0) {

829 
	`mŸi⁄_log
(
LOG_ERR
, 1, "FailedÅo move UVC camera!");

835 i‡((
move_x_degªes
 !0Ë&& (
move_y_degªes
 != 0))

836 
	`SLEEP
 (1,0);

840 i‡(
move_y_degªes
 != 0) {

842 
c⁄åﬁ_s
.
id
 = 
V4L2_CID_TILT_RELATIVE
;

843 
c⁄åﬁ_s
.
vÆue
 = 
∑n
.
s16
.
tût
;

844 
	`mŸi⁄_log
(
LOG_DEBUG
, 0," dev %d,addr= %d, control_S= %d, Wert= %d, ",

845 
dev
,
VIDIOC_S_CTRL
, &
c⁄åﬁ_s
, 
∑n
.
s16
.
tût
);

847 i‡(
	`io˘l
(
dev
, 
VIDIOC_S_CTRL
, &
c⁄åﬁ_s
) < 0) {

848 
	`mŸi⁄_log
(
LOG_ERR
, 1, "FailedÅo move UVC camera!");

854 
	`mŸi⁄_log
(
LOG_DEBUG
, 0,"Found MINMAX = %d", 
˙t
->
åack
.
mömaxfound
);

856 i‡(
˙t
->
åack
.
mömaxfound
 == 1) {

857 
	`mŸi⁄_log
(
LOG_DEBUG
, 0," Before_REL_Y_Angel : x= %d , Y= %d",

858 
˙t
->
åack
.
∑n_™gÀ
, c¡->åack.
tût_™gÀ
);

860 i‡(
move_x_degªes
 != 0)

861 
˙t
->
åack
.
∑n_™gÀ
 +-
∑n
.
s16
.∑¿/ 
INCPANTILT
;

863 i‡(
move_y_degªes
 != 0)

864 
˙t
->
åack
.
tût_™gÀ
 +-
∑n
.
s16
.
tût
 / 
INCPANTILT
;

866 
	`mŸi⁄_log
(
LOG_DEBUG
, 0," After_REL_Y_Angel : x= %d , Y= %d",

867 
˙t
->
åack
.
∑n_™gÀ
, c¡->åack.
tût_™gÀ
);

870  
˙t
->
åack
.
move_waô
;

871 
	}
}

	@track.h

9 #i‚de‡
_INCLUDE_TRACK_H


10 
	#_INCLUDE_TRACK_H


	)

12 
	~"Æg.h
"

14 
	såack›ti⁄s
 {

15 
	mdev
;

17 
	mty≥
;

18 *
	mp‹t
;

19 
	mmŸ‹x
;

20 
	mmŸ‹y
;

21 
	mmaxx
;

22 
	mmaxy
;

23 
	m°ïsize
;

24 
	m•ìd
;

25 
	miomojo_id
;

26 
	ma˘ive
;

27 
	m∑nmö
;

28 
	m∑nmax
;

29 
	mtûtmö
;

30 
	mtûtmax
;

31 
	mmömaxfound
;

32 
	m°ï_™gÀ_x
;

33 
	m°ï_™gÀ_y
;

34 
	mmove_waô
;

36 
	m∑n_™gÀ
;

37 
	mtût_™gÀ
;

40 
åack›ti⁄s
 
åack_ãm∂©e
;

42 
åack_˚¡î
(
c⁄ãxt
 *, , , , );

43 
åack_move
(
c⁄ãxt
 *, , 
co‹d
 *, 
images
 *, );

48 
	#TRACK_SPEED
 255

	)

49 
	#TRACK_STEPSIZE
 40

	)

51 
	#TRACK_TYPE_STEPPER
 1

	)

52 
	#TRACK_TYPE_IOMOJO
 2

	)

53 
	#TRACK_TYPE_PWC
 3

	)

54 
	#TRACK_TYPE_GENERIC
 4

	)

55 
	#TRACK_TYPE_UVC
 5

	)

61 
	#STEPPER_BAUDRATE
 
B9600


	)

63 
	#STEPPER_STATUS_LEFT
 1

	)

64 
	#STEPPER_STATUS_RIGHT
 2

	)

65 
	#STEPPER_STATUS_SAFETYL
 4

	)

66 
	#STEPPER_STATUS_SAFETYR
 8

	)

68 
	#STEPPER_STATUS_UP
 1

	)

69 
	#STEPPER_STATUS_DOWN
 2

	)

70 
	#STEPPER_STATUS_SAFETYU
 4

	)

71 
	#STEPPER_STATUS_SAFETYD
 8

	)

75 
	#STEPPER_COMMAND_STATUS
 0

	)

76 
	#STEPPER_COMMAND_LEFT_N
 1

	)

77 
	#STEPPER_COMMAND_RIGHT_N
 2

	)

78 
	#STEPPER_COMMAND_LEFT
 3

	)

79 
	#STEPPER_COMMAND_RIGHT
 4

	)

80 
	#STEPPER_COMMAND_SWEEP
 5

	)

81 
	#STEPPER_COMMAND_STOP
 6

	)

82 
	#STEPPER_COMMAND_SPEED
 7

	)

84 
	#STEPPER_COMMAND_UP_N
 1

	)

85 
	#STEPPER_COMMAND_DOWN_N
 2

	)

86 
	#STEPPER_COMMAND_UP
 3

	)

87 
	#STEPPER_COMMAND_DOWN
 4

	)

94 
	#IOMOJO_BAUDRATE
 
B19200


	)

96 
	#IOMOJO_CHECKPOWER_CMD
 0xff

	)

97 
	#IOMOJO_CHECKPOWER_RET
 'Q'

	)

98 
	#IOMOJO_MOVEOFFSET_CMD
 0x„

	)

99 
	#IOMOJO_SETSPEED_CMD
 0xfd

	)

100 
	#IOMOJO_SETSPEED_RET
 'P'

	)

101 
	#IOMOJO_MOVEHOME
 0xf9

	)

102 
	#IOMOJO_RESTART
 0xf7

	)

104 
	#IOMOJO_DIRECTION_RIGHT
 0x01

	)

105 
	#IOMOJO_DIRECTION_LEFT
 0x02

	)

106 
	#IOMOJO_DIRECTION_DOWN
 0x04

	)

107 
	#IOMOJO_DIRECTION_UP
 0x08

	)

109 #i‚de‡
WITHOUT_V4L


115 
	#LQOS_VERTICAL_DEGREES
 180

	)

116 
	#LQOS_HORIZONAL_DEGREES
 120

	)

122 #ifde‡
MOTION_V4L2


124 #i‚de‡
V4L2_CID_PAN_RELATIVE


125 
	#V4L2_CID_PAN_RELATIVE
 (
V4L2_CID_PRIVATE_BASE
+7)

	)

128 #i‚de‡
V4L2_CID_TILT_RELATIVE


129 
	#V4L2_CID_TILT_RELATIVE
 (
V4L2_CID_PRIVATE_BASE
+8)

	)

132 #i‚de‡
V4L2_CID_PANTILT_RESET


133 
	#V4L2_CID_PANTILT_RESET
 (
V4L2_CID_PRIVATE_BASE
+9)

	)

136 
	#INCPANTILT
 64

138 

	)

	@video.c

9 #i‚de‡
WITHOUT_V4L


12 
	~"rŸ©e.h
"

13 
	~"video.h
"

17 
	~<sys/mm™.h
>

18 
	~<m©h.h
>

19 
	~<sys/ut¢ame.h
>

20 
	~<dúít.h
>

23 
	$v4l_pi˘uª_c⁄åﬁs
(
c⁄ãxt
 *
˙t
, 
video_dev
 *
viddev
)

25 
dev
 = 
viddev
->
fd
;

26 
video_pi˘uª
 
vid_pic
;

27 
make_ch™ge
 = 0;

29 i‡(
˙t
->
c⁄f
.
c⁄åa°
 && c¡->c⁄f.c⁄åa° !
viddev
->contrast) {

31 i‡(
	`io˘l
(
dev
, 
VIDIOCGPICT
, &
vid_pic
) == -1)

32 
	`mŸi⁄_log
(
LOG_ERR
, 1, "ioctl (VIDIOCGPICT)");

34 
make_ch™ge
 = 1;

35 
vid_pic
.
c⁄åa°
 = 
˙t
->
c⁄f
.contrast * 256;

36 
viddev
->
c⁄åa°
 = 
˙t
->
c⁄f
.contrast;

39 i‡(
˙t
->
c⁄f
.
ßtuøti⁄
 && c¡->c⁄f.ßtuøti⁄ !
viddev
->saturation) {

41 i‡(!
make_ch™ge
) {

42 i‡(
	`io˘l
(
dev
, 
VIDIOCGPICT
, &
vid_pic
) == -1)

43 
	`mŸi⁄_log
(
LOG_ERR
, 1, "ioctl (VIDIOCGPICT)");

46 
make_ch™ge
 = 1;

47 
vid_pic
.
cﬁour
 = 
˙t
->
c⁄f
.
ßtuøti⁄
 * 256;

48 
viddev
->
ßtuøti⁄
 = 
˙t
->
c⁄f
.saturation;

51 i‡(
˙t
->
c⁄f
.
hue
 && c¡->c⁄f.huê!
viddev
->hue) {

53 i‡(!
make_ch™ge
) {

54 i‡(
	`io˘l
(
dev
, 
VIDIOCGPICT
, &
vid_pic
) == -1)

55 
	`mŸi⁄_log
(
LOG_ERR
, 1, "ioctl (VIDIOCGPICT)");

58 
make_ch™ge
 = 1;

59 
vid_pic
.
hue
 = 
˙t
->
c⁄f
.hue * 256;

60 
viddev
->
hue
 = 
˙t
->
c⁄f
.hue;

64 #i‡
	`deföed
(
PWCBSD
)

65 i‡(
˙t
->
c⁄f
.
‰ame_limô
 !
viddev
->
Âs
) {

66 
video_wödow
 
vw
;

67 
Âs
;

69 i‡(
	`io˘l
(
dev
, 
VIDIOCGWIN
, &
vw
) == -1) {

70 
	`mŸi⁄_log
(
LOG_ERR
, 1, "%s: io˘»VIDIOCGWIN", 
__FUNCTION__
);

72 
Âs
 = 
vw
.
Êags
 >> 
PWC_FPS_SHIFT
;

73 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "%s: Get Current framerate %d ..Årying %d",

74 
__FUNCTION__
, 
Âs
, 
˙t
->
c⁄f
.
‰ame_limô
);

77 
Âs
 = 
˙t
->
c⁄f
.
‰ame_limô
;

78 
vw
.
Êags
 = 
Âs
 << 
PWC_FPS_SHIFT
;

80 i‡(
	`io˘l
(
dev
, 
VIDIOCSWIN
, &
vw
) == -1) {

81 
	`mŸi⁄_log
(
LOG_ERR
, 1, "%s: io˘»VIDIOCSWIN", 
__FUNCTION__
);

82 } i‡(
	`io˘l
(
dev
, 
VIDIOCGWIN
, &
vw
) == -1) {

83 
	`mŸi⁄_log
(
LOG_ERR
, 1, "%s: io˘»VIDIOCGWIN", 
__FUNCTION__
);

85 
Âs
 = 
vw
.
Êags
 >> 
PWC_FPS_SHIFT
;

86 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "%s: SëÇew fømî©ê%d", 
__FUNCTION__
, 
Âs
);

89 
viddev
->
Âs
 = fps;

94 i‡(
˙t
->
c⁄f
.
autobright
) {

96 i‡(
	`vid_do_autobright
(
˙t
, 
viddev
)) {

98 i‡(!
make_ch™ge
) {

99 i‡(
	`io˘l
(
dev
, 
VIDIOCGPICT
, &
vid_pic
) == -1)

100 
	`mŸi⁄_log
(
LOG_ERR
, 1, "ioctl (VIDIOCGPICT)");

103 
vid_pic
.
brighäess
 = 
viddev
->brightness * 256;

104 
make_ch™ge
 = 1;

108 i‡(
˙t
->
c⁄f
.
brighäess
 && c¡->c⁄f.brighäes†!
viddev
->brightness) {

109 i‡(!
make_ch™ge
) {

110 i‡(
	`io˘l
(
dev
, 
VIDIOCGPICT
, &
vid_pic
) == -1)

111 
	`mŸi⁄_log
(
LOG_ERR
, 1, "ioctl (VIDIOCGPICT)");

114 
make_ch™ge
 = 1;

115 
vid_pic
.
brighäess
 = 
˙t
->
c⁄f
.brightness * 256;

116 
viddev
->
brighäess
 = 
˙t
->
c⁄f
.brightness;

120 i‡(
make_ch™ge
) {

121 i‡(
	`io˘l
(
dev
, 
VIDIOCSPICT
, &
vid_pic
) == -1)

122 
	`mŸi⁄_log
(
LOG_ERR
, 1, "ioctl (VIDIOCSPICT)");

124 
	}
}

133 *
	$v4l_°¨t
(
c⁄ãxt
 *
˙t
, 
video_dev
 *
viddev
, 
width
, 
height
,

134 
öput
, 
n‹m
, 
‰eq
, 
tu√r_numbî
)

136 
dev
 = 
viddev
->
fd
;

137 
video_ˇ∑bûôy
 
vid_ˇps
;

138 
video_ch™√l
 
vid_ch∆
;

139 
video_tu√r
 
vid_tu√r
;

140 
video_mbuf
 
vid_buf
;

141 
video_mm≠
 
vid_mm≠
;

142 *
m≠
;

144 i‡(
	`io˘l
 (
dev
, 
VIDIOCGCAP
, &
vid_ˇps
) == -1) {

145 
	`mŸi⁄_log
(
LOG_ERR
, 1, "ioctl (VIDIOCGCAP)");

146  
NULL
;

149 i‡(
vid_ˇps
.
ty≥
 & 
VID_TYPE_MONOCHROME
)

150 
viddev
->
v4l_fmt
 = 
VIDEO_PALETTE_GREY
;

152 i‡(
öput
 !
IN_DEFAULT
) {

153 
	`mem£t
(&
vid_ch∆
, 0, (
video_ch™√l
));

154 
vid_ch∆
.
ch™√l
 = 
öput
;

156 i‡(
	`io˘l
 (
dev
, 
VIDIOCGCHAN
, &
vid_ch∆
) == -1) {

157 
	`mŸi⁄_log
(
LOG_ERR
, 1, "ioctl (VIDIOCGCHAN)");

159 
vid_ch∆
.
ch™√l
 = 
öput
;

160 
vid_ch∆
.
n‹m
 =Çorm;

161 i‡(
	`io˘l
 (
dev
, 
VIDIOCSCHAN
, &
vid_ch∆
) == -1) {

162 
	`mŸi⁄_log
(
LOG_ERR
, 1, "ioctl (VIDIOCSCHAN)");

163  
NULL
;

168 i‡(
‰eq
) {

169 
	`mem£t
(&
vid_tu√r
, 0, (
video_tu√r
));

170 
vid_tu√r
.
tu√r
 = 
tu√r_numbî
;

171 i‡(
	`io˘l
 (
dev
, 
VIDIOCGTUNER
, &
vid_tu√r
) == -1) {

172 
	`mŸi⁄_log
(
LOG_ERR
, 1, "ioctl (VIDIOCGTUNER)");

174 i‡(
vid_tu√r
.
Êags
 & 
VIDEO_TUNER_LOW
) {

175 
‰eq
 = freq * 16;

177 
‰eq
 = (freq * 10) / 625;

180 i‡(
	`io˘l
(
dev
, 
VIDIOCSFREQ
, &
‰eq
) == -1) {

181 
	`mŸi⁄_log
(
LOG_ERR
, 1, "ioctl (VIDIOCSFREQ)");

182  
NULL
;

185 i‡(
˙t
->
c⁄f
.
£tup_mode
)

186 
	`mŸi⁄_log
(-1, 0, "Frequency set");

190 i‡(
	`io˘l
 (
dev
, 
VIDIOCGMBUF
, &
vid_buf
) == -1) {

191 
	`mŸi⁄_log
(
LOG_ERR
, 0, "ioctl(VIDIOCGMBUF) - Error device doesÇot support memory map");

192 
	`mŸi⁄_log
(
LOG_ERR
, 0, "V4L capturing usingÑead is deprecated!");

193 
	`mŸi⁄_log
(
LOG_ERR
, 0, "Motion only supports mmap.");

194  
NULL
;

196 
m≠
 = 
	`mm≠
(0, 
vid_buf
.
size
, 
PROT_READ
|
PROT_WRITE
, 
MAP_SHARED
, 
dev
, 0);

197 
viddev
->
size_m≠
 = 
vid_buf
.
size
;

199 i‡(
vid_buf
.
‰ames
 > 1) {

200 
viddev
->
v4l_maxbuf„r
 = 2;

201 
viddev
->
v4l_buf„rs
[0] = 
m≠
;

202 
viddev
->
v4l_buf„rs
[1] = (*)
m≠
 + 
vid_buf
.
off£ts
[1];

204 
viddev
->
v4l_buf„rs
[0] = 
m≠
;

205 
viddev
->
v4l_maxbuf„r
 = 1;

208 i‡(
MAP_FAILED
 =
m≠
) {

209 
	`mŸi⁄_log
(
LOG_ERR
,1,"MAP_FAILED");

210  
NULL
;

213 
viddev
->
v4l_curbuf„r
 = 0;

214 
vid_mm≠
.
f‹m©
 = 
viddev
->
v4l_fmt
;

215 
vid_mm≠
.
‰ame
 = 
viddev
->
v4l_curbuf„r
;

216 
vid_mm≠
.
width
 = width;

217 
vid_mm≠
.
height
 = height;

218 i‡(
	`io˘l
(
dev
, 
VIDIOCMCAPTURE
, &
vid_mm≠
) == -1) {

219 
	`mŸi⁄_log
(
LOG_DEBUG
, 1, "Failed with YUV420P,Årying YUV422Öalette");

220 
viddev
->
v4l_fmt
 = 
VIDEO_PALETTE_YUV422
;

221 
vid_mm≠
.
f‹m©
 = 
viddev
->
v4l_fmt
;

224 i‡(
	`io˘l
(
dev
, 
VIDIOCMCAPTURE
, &
vid_mm≠
) == -1) {

225 
	`mŸi⁄_log
(
LOG_DEBUG
, 1, "Failed with YUV422,Årying YUYVÖalette");

226 
viddev
->
v4l_fmt
 = 
VIDEO_PALETTE_YUYV
;

227 
vid_mm≠
.
f‹m©
 = 
viddev
->
v4l_fmt
;

229 i‡(
	`io˘l
(
dev
, 
VIDIOCMCAPTURE
, &
vid_mm≠
) == -1) {

230 
	`mŸi⁄_log
(
LOG_DEBUG
, 1, "Failed with YUYV,Årying RGB24Öalette");

231 
viddev
->
v4l_fmt
 = 
VIDEO_PALETTE_RGB24
;

232 
vid_mm≠
.
f‹m©
 = 
viddev
->
v4l_fmt
;

235 i‡(
	`io˘l
(
dev
, 
VIDIOCMCAPTURE
, &
vid_mm≠
) == -1) {

236 
	`mŸi⁄_log
(
LOG_DEBUG
, 1, "Failed with RGB24,Årying GREYSCALEÖalette");

237 
viddev
->
v4l_fmt
 = 
VIDEO_PALETTE_GREY
;

238 
vid_mm≠
.
f‹m©
 = 
viddev
->
v4l_fmt
;

241 i‡(
	`io˘l
(
dev
, 
VIDIOCMCAPTURE
, &
vid_mm≠
) == -1) {

242 
	`mŸi⁄_log
(
LOG_ERR
, 1, "Failed witháll supportedÖalettes "

244  
NULL
;

252 
viddev
->
v4l_fmt
) {

253 
VIDEO_PALETTE_YUV420P
:

254 
viddev
->
v4l_bufsize
 = (
width
 * 
height
 * 3) / 2;

255 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "Using VIDEO_PALETTE_YUV420PÖalette");

257 
VIDEO_PALETTE_YUV422
:

258 
viddev
->
v4l_bufsize
 = (
width
 * 
height
 * 2);

259 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "Using VIDEO_PALETTE_YUV422Öalette");

261 
VIDEO_PALETTE_YUYV
:

262 
viddev
->
v4l_bufsize
 = (
width
 * 
height
 * 2);

263 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "Using VIDEO_PALETTE_YUYVÖalette");

265 
VIDEO_PALETTE_RGB24
:

266 
viddev
->
v4l_bufsize
 = (
width
 * 
height
 * 3);

267 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "Using VIDEO_PALETTE_RGB24Öalette");

269 
VIDEO_PALETTE_GREY
:

270 
viddev
->
v4l_bufsize
 = 
width
 * 
height
;

271 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "Using VIDEO_PALETTE_GREYÖalette");

275  
m≠
;

276 
	}
}

295 
	$v4l_√xt
(
video_dev
 *
viddev
, *
m≠
, 
width
, 
height
)

297 
dev
 = 
viddev
->
fd
;

298 
‰ame
 = 
viddev
->
v4l_curbuf„r
;

299 
video_mm≠
 
vid_mm≠
;

300 *
ˇp_m≠
;

302 
sig£t_t
 
£t
, 
ﬁd
;

305 
vid_mm≠
.
f‹m©
 = 
viddev
->
v4l_fmt
;

306 
vid_mm≠
.
width
 = width;

307 
vid_mm≠
.
height
 = height;

310 
	`sigem±y£t
(&
£t
);

311 
	`sigadd£t
(&
£t
, 
SIGCHLD
);

312 
	`sigadd£t
(&
£t
, 
SIGALRM
);

313 
	`sigadd£t
(&
£t
, 
SIGUSR1
);

314 
	`sigadd£t
(&
£t
, 
SIGTERM
);

315 
	`sigadd£t
(&
£t
, 
SIGHUP
);

316 
	`±hªad_sigmask
 (
SIG_BLOCK
, &
£t
, &
ﬁd
);

318 
ˇp_m≠
 = 
viddev
->
v4l_buf„rs
[viddev->
v4l_curbuf„r
];

319 
viddev
->
v4l_curbuf„r
++;

321 i‡(
viddev
->
v4l_curbuf„r
 >viddev->
v4l_maxbuf„r
)

322 
viddev
->
v4l_curbuf„r
 = 0;

324 
vid_mm≠
.
‰ame
 = 
viddev
->
v4l_curbuf„r
;

326 i‡(
	`io˘l
(
dev
, 
VIDIOCMCAPTURE
, &
vid_mm≠
) == -1) {

327 
	`mŸi⁄_log
(
LOG_ERR
, 1, "mˇ±uªÉº‹ i¿¥o¯%d", 
	`gëpid
());

328 
	`sig¥ocmask
 (
SIG_UNBLOCK
, &
ﬁd
, 
NULL
);

329  
V4L_FATAL_ERROR
;

332 
vid_mm≠
.
‰ame
 = frame;

334 i‡(
	`io˘l
(
dev
, 
VIDIOCSYNC
, &
vid_mm≠
.
‰ame
) == -1) {

335 
	`mŸi⁄_log
(
LOG_ERR
, 1, "syn¯îr‹ i¿¥o¯%d", 
	`gëpid
());

336 
	`sig¥ocmask
 (
SIG_UNBLOCK
, &
ﬁd
, 
NULL
);

339 
	`±hªad_sigmask
 (
SIG_UNBLOCK
, &
ﬁd
, 
NULL
);

341 
viddev
->
v4l_fmt
) {

342 
VIDEO_PALETTE_RGB24
:

343 
	`c⁄v_rgb24toyuv420p
(
m≠
, 
ˇp_m≠
, 
width
, 
height
);

345 
VIDEO_PALETTE_YUYV
:

346 
VIDEO_PALETTE_YUV422
:

347 
	`c⁄v_yuv422to420p
(
m≠
, 
ˇp_m≠
, 
width
, 
height
);

350 
	`mem˝y
(
m≠
, 
ˇp_m≠
, 
viddev
->
v4l_bufsize
);

354 
	}
}

356 
	$v4l_£t_öput
(
c⁄ãxt
 *
˙t
, 
video_dev
 *
viddev
, *
m≠
, 
width
,

357 
height
, 
öput
, 
n‹m
, 
skù
, 
‰eq
, 
tu√r_numbî
)

359 
dev
 = 
viddev
->
fd
;

360 
i
;

361 
video_ch™√l
 
vid_ch∆
;

362 
video_tu√r
 
vid_tu√r
;

363 
‰equnôs
 = 
‰eq
;

365 i‡(
öput
 !
viddev
->öpuà|| 
width
 !viddev->width || 
height
 != viddev->height ||

366 
‰eq
 !
viddev
->‰eq || 
tu√r_numbî
 != viddev->tuner_number) {

368 i‡(
‰eq
) {

369 
	`mem£t
(&
vid_tu√r
, 0, (
video_tu√r
));

371 
vid_tu√r
.
tu√r
 = 
tu√r_numbî
;

372 i‡(
	`io˘l
 (
dev
, 
VIDIOCGTUNER
, &
vid_tu√r
) == -1) {

373 
	`mŸi⁄_log
(
LOG_ERR
, 1, "ioctl (VIDIOCGTUNER)");

375 i‡(
vid_tu√r
.
Êags
 & 
VIDEO_TUNER_LOW
)

376 
‰equnôs
 = 
‰eq
 * 16;

378 
‰equnôs
 = (
‰eq
 * 10) / 625;

381 i‡(
	`io˘l
(
dev
, 
VIDIOCSFREQ
, &
‰equnôs
) == -1) {

382 
	`mŸi⁄_log
(
LOG_ERR
, 1, "ioctl (VIDIOCSFREQ)");

388 
	`mem£t
(&
vid_ch∆
, 0, (
video_ch™√l
));

389 
vid_ch∆
.
ch™√l
 = 
öput
;

391 i‡(
	`io˘l
 (
dev
, 
VIDIOCGCHAN
, &
vid_ch∆
) == -1) {

392 
	`mŸi⁄_log
(
LOG_ERR
, 1, "ioctl (VIDIOCGCHAN)");

394 
vid_ch∆
.
ch™√l
 = 
öput
;

395 
vid_ch∆
.
n‹m
 =Çorm;

396 i‡(
	`io˘l
 (
dev
, 
VIDIOCSCHAN
, &
vid_ch∆
) == -1) {

397 
	`mŸi⁄_log
(
LOG_ERR
, 1, "ioctl (VIDIOCSCHAN)");

402 
	`v4l_pi˘uª_c⁄åﬁs
(
˙t
, 
viddev
);

403 
viddev
->
öput
 = input;

404 
viddev
->
width
 = width;

405 
viddev
->
height
 = height;

406 
viddev
->
‰eq
 =freq;

407 
viddev
->
tu√r_numbî
 =Åuner_number;

409 
i
 = 0; i < 
skù
; i++)

410 
	`v4l_√xt
(
viddev
, 
m≠
, 
width
, 
height
);

414 
	`v4l_pi˘uª_c⁄åﬁs
(
˙t
, 
viddev
);

416 
	}
}

418 
	$v4l_›í_vidpùe
()

420 
pùe_fd
 = -1;

421 
pùï©h
[255];

422 
buf„r
[255];

423 *
maj‹
;

424 *
mö‹
;

425 
ut¢ame
 
uts
;

427 i‡(
	`u«me
(&
uts
) < 0) {

428 
	`mŸi⁄_log
(
LOG_ERR
, 1, "UnableÅoÉxecute uname");

431 
maj‹
 = 
	`°πok
(
uts
.
ªÀa£
, ".");

432 
mö‹
 = 
	`°πok
(
NULL
, ".");

434 i‡((
maj‹
 =
NULL
Ë|| (
mö‹
 =NULLË|| (
	`°rcmp
(major, "2"))) {

435 
	`mŸi⁄_log
(
LOG_ERR
, 1, "UnableÅo decipher OS version");

439 i‡(
	`°rcmp
(
mö‹
, "5") < 0) {

440 
FILE
 *
vlo›backs
;

441 *
lo›
;

442 *
öput
;

443 *
i°©us
;

444 *
ouçut
;

445 *
o°©us
;

447 
vlo›backs
 = 
	`f›í
("/proc/video/vloopback/vloopbacks", "r");

449 i‡(!
vlo›backs
) {

450 
	`mŸi⁄_log
(
LOG_ERR
, 1, "FailedÅo open '/proc/video/vloopback/vloopbacks'");

455 i‡(!
	`fgës
(
buf„r
, 255, 
vlo›backs
)) {

456 
	`mŸi⁄_log
(
LOG_ERR
, 1, "UnableÅoÑead vloopback version");

460 
	`Ârötf
(
°dîr
,"\t%s", 
buf„r
);

464 i‡(!
	`fgës
(
buf„r
, 255, 
vlo›backs
)) {

465 
	`mŸi⁄_log
(
LOG_ERR
, 1, "UnableÅoÑead vloopbackÉxplanationÜine");

469 
	`fgës
(
buf„r
, 255, 
vlo›backs
)) {

470 i‡(
	`°æí
(
buf„r
) > 1) {

471 
buf„r
[
	`°æí
(buffer)-1] = 0;

472 
lo›
=
	`°πok
(
buf„r
, "\t");

473 
öput
=
	`°πok
(
NULL
, "\t");

474 
i°©us
=
	`°πok
(
NULL
, "\t");

475 
ouçut
=
	`°πok
(
NULL
, "\t");

476 
o°©us
=
	`°πok
(
NULL
, "\t");

477 i‡(
i°©us
[0] == '-') {

478 
	`¢¥ötf
(
pùï©h
, 255, "/dev/%s", 
öput
);

479 
pùe_fd
 = 
	`›í
(
pùï©h
, 
O_RDWR
);

480 i‡(
pùe_fd
 >= 0) {

481 
	`mŸi⁄_log
(-1, 0, "\tI≈ut: /dev/%s", 
öput
);

482 
	`mŸi⁄_log
(-1, 0, "\tOuçut: /dev/%s", 
ouçut
);

488 
	`f˛o£
(
vlo›backs
);

490 
DIR
 *
dú
;

491 
dúít
 *
dúp
;

492 c⁄° 
¥efix
[] = "/sys/class/video4linux/";

493 *
±r
, *
io
;

494 
fd
;

495 
low
 = 9999;

496 
tfd
;

497 
äum
;

499 i‡((
dú
=
	`›ídú
(
¥efix
)Ë=
NULL
) {

500 
	`mŸi⁄_log
(
LOG_ERR
, 1, "FaûedÅÿ›í '%s'", 
¥efix
);

504 (
dúp
=
	`ªaddú
(
dú
)Ë!
NULL
) {

505 i‡(!
	`°∫cmp
(
dúp
->
d_«me
, "video", 5)) {

506 
	`°∫˝y
(
buf„r
, 
¥efix
, (buffer));

507 
	`°∫ˇt
(
buf„r
, 
dúp
->
d_«me
, (buf„rË- 
	`°æí
(buffer));

508 
	`°∫ˇt
(
buf„r
, "/«me", (buf„rË- 
	`°æí
(buffer));

509 i‡((
fd
 = 
	`›í
(
buf„r
, 
O_RDONLY
)) >= 0) {

510 i‡((
	`ªad
(
fd
, 
buf„r
, (buffer)-1)) < 0) {

511 
	`˛o£
(
fd
);

515 
±r
 = 
	`°πok
(
buf„r
, " ");

517 i‡(
	`°rcmp
(
±r
,"Video")) {

518 
	`˛o£
(
fd
);

522 
maj‹
 = 
	`°πok
(
NULL
, " ");

523 
mö‹
 = 
	`°πok
(
NULL
, " ");

524 
io
 = 
	`°πok
(
NULL
, " \n");

526 i‡(
	`°rcmp
(
maj‹
, "lo›back"Ë|| såcmp(
io
, "input")) {

527 
	`˛o£
(
fd
);

531 i‡((
±r
=
	`°πok
(
buf„r
, " ")Ë=
NULL
) {

532 
	`˛o£
(
fd
);

536 
äum
 = 
	`©oi
(
mö‹
);

538 i‡(
äum
 < 
low
) {

539 
	`°r˝y
(
buf„r
, "/dev/");

540 
	`°∫ˇt
(
buf„r
, 
dúp
->
d_«me
, (buf„rË- 
	`°æí
(buffer));

541 i‡((
tfd
=
	`›í
(
buf„r
, 
O_RDWR
)) >= 0) {

542 
	`°∫˝y
(
pùï©h
, 
buf„r
, (pipepath));

544 i‡(
pùe_fd
 >= 0)

545 
	`˛o£
(
pùe_fd
);

547 
pùe_fd
 = 
tfd
;

548 
low
 = 
äum
;

551 
	`˛o£
(
fd
);

555 
	`˛o£dú
(
dú
);

557 i‡(
pùe_fd
 >= 0)

558 
	`mŸi⁄_log
(-1, 0, "O≥√d i≈uào‡%s", 
pùï©h
);

561  
pùe_fd
;

562 
	}
}

564 
	$v4l_°¨çùe
(c⁄° *
dev_«me
, 
width
, 
height
, 
ty≥
)

566 
dev
;

567 
video_pi˘uª
 
vid_pic
;

568 
video_wödow
 
vid_wö
;

570 i‡(!
	`°rcmp
(
dev_«me
, "-"))

571 
dev
 = 
	`v4l_›í_vidpùe
();

573 
dev
 = 
	`›í
(
dev_«me
, 
O_RDWR
);

575 i‡(
dev
 < 0)

578 i‡(
	`io˘l
(
dev
, 
VIDIOCGPICT
, &
vid_pic
) == -1) {

579 
	`mŸi⁄_log
(
LOG_ERR
, 1, "ioctl (VIDIOCGPICT)");

583 
vid_pic
.
∑Àâe
 = 
ty≥
;

585 i‡(
	`io˘l
(
dev
, 
VIDIOCSPICT
, &
vid_pic
) == -1) {

586 
	`mŸi⁄_log
(
LOG_ERR
, 1, "ioctl (VIDIOCSPICT)");

590 i‡(
	`io˘l
(
dev
, 
VIDIOCGWIN
, &
vid_wö
) == -1) {

591 
	`mŸi⁄_log
(
LOG_ERR
, 1, "ioctl (VIDIOCGWIN)");

595 
vid_wö
.
height
 = height;

596 
vid_wö
.
width
 = width;

598 i‡(
	`io˘l
(
dev
, 
VIDIOCSWIN
, &
vid_wö
) == -1) {

599 
	`mŸi⁄_log
(
LOG_ERR
, 1, "ioctl (VIDIOCSWIN)");

603  
dev
;

604 
	}
}

606 
	$v4l_puçùe
 (
dev
, *
image
, 
size
)

608  
	`wrôe
(
dev
, 
image
, 
size
);

609 
	}
}

612 
	$vid_°¨çùe
(c⁄° *
dev_«me
, 
width
, 
height
, 
ty≥
)

614  
	`v4l_°¨çùe
(
dev_«me
, 
width
, 
height
, 
ty≥
);

615 
	}
}

617 
	$vid_puçùe
 (
dev
, *
image
, 
size
)

619  
	`v4l_puçùe
(
dev
, 
image
, 
size
);

620 
	}
}

	@video.h

10 #i‚de‡
_INCLUDE_VIDEO_H


11 
	#_INCLUDE_VIDEO_H


	)

13 
	#_LINUX_TIME_H
 1

	)

14 #i‚de‡
WITHOUT_V4L


15 
	~<löux/videodev.h
>

16 
	~<sys/mm™.h
>

17 
	~"pwc-io˘l.h
"

21 
	#NORM_DEFAULT
 0

	)

22 
	#NORM_PAL
 0

	)

23 
	#NORM_NTSC
 1

	)

24 
	#NORM_SECAM
 2

	)

25 
	#NORM_PAL_NC
 3

	)

26 
	#IN_DEFAULT
 8

	)

27 
	#IN_TV
 0

	)

28 
	#IN_COMPOSITE
 1

	)

29 
	#IN_COMPOSITE2
 2

	)

30 
	#IN_SVIDEO
 3

	)

33 
	#V4L_GENERAL_ERROR
 0x01

	)

34 
	#V4L_BTTVLOST_ERROR
 0x05

	)

35 
	#V4L_FATAL_ERROR
 -1

	)

37 
	#VIDEO_DEVICE
 "/dev/video0"

	)

39 
	svideo_dev
 {

40 
video_dev
 *
	m√xt
;

41 
	mußge_cou¡
;

42 
	mfd
;

43 c⁄° *
	mvideo_devi˚
;

44 
	möput
;

45 
	mwidth
;

46 
	mheight
;

47 
	mbrighäess
;

48 
	mc⁄åa°
;

49 
	mßtuøti⁄
;

50 
	mhue
;

51 
	m‰eq
;

52 
	mtu√r_numbî
;

53 
	mÂs
;

55 
±hªad_muãx_t
 
	mmuãx
;

56 
±hªad_muãx©å_t
 
	m©å
;

57 
	mow√r
;

58 
	m‰ames
;

61 #i‚de‡
WITHOUT_V4L


63 
	mv4l2
;

64 *
	mv4l2_¥iv©e
;

66 
	msize_m≠
;

67 
	mv4l_fmt
;

68 *
	mv4l_buf„rs
[2];

69 
	mv4l_curbuf„r
;

70 
	mv4l_maxbuf„r
;

71 
	mv4l_bufsize
;

76 
vid_°¨t
(
c⁄ãxt
 *);

77 
vid_√xt
(
c⁄ãxt
 *, *
m≠
);

78 
vid_˛o£
(
c⁄ãxt
 *
˙t
);

79 
vid_˛ónup
();

80 
vid_öô
();

81 
c⁄v_yuv422to420p
(*
m≠
, *
ˇp_m≠
, 
width
, 
height
);

82 
c⁄v_uyvyto420p
(*
m≠
, *
ˇp_m≠
, 
width
, 
height
);

83 
c⁄v_rgb24toyuv420p
(*
m≠
, *
ˇp_m≠
, 
width
, 
height
);

84 
c⁄v_j≥g2yuv420
(
c⁄ãxt
 *
˙t
, *
d°
, 
√tˇm_buff
 * 
buff
, 
width
, 
height
);

85 
s⁄ix_decom¥ess
(*
ouç
, *
öp
,
width
, 
height
);

86 
bayî2rgb24
(*
d°
, *
§c
, 
width
, 
height
);

87 
vid_do_autobright
(
c⁄ãxt
 *
˙t
, 
video_dev
 *
viddev
);

88 
mj≥gtoyuv420p
(*
m≠
, *
ˇp_m≠
, 
width
, 
height
, 
size
);

90 #i‚de‡
WITHOUT_V4L


92 
vid_°¨çùe
(c⁄° *
dev_«me
, 
width
, 
height
, );

93 
vid_puçùe
(
dev
, *
image
, );

94 *
v4l_°¨t
(
c⁄ãxt
 *
˙t
, 
video_dev
 *
viddev
, 
width
, 
height
,

95 
öput
, 
n‹m
, 
‰eq
, 
tu√r_numbî
);

96 
v4l_£t_öput
(
c⁄ãxt
 *
˙t
, 
video_dev
 *
viddev
, *
m≠
, 
width
,

97 
height
, 
öput
, 
n‹m
, 
skù
, 
‰eq
, 
tu√r_numbî
);

98 
v4l_√xt
(
video_dev
 *
viddev
, *
m≠
, 
width
, 
height
);

101 *
v4l2_°¨t
(
c⁄ãxt
 *
˙t
, 
video_dev
 *
viddev
, 
width
, 
height
,

102 
öput
, 
n‹m
, 
‰eq
, 
tu√r_numbî
);

103 
v4l2_£t_öput
(
c⁄ãxt
 *
˙t
, 
video_dev
 *
viddev
, *
m≠
, 
width
,

104 
height
, 
c⁄fig
 *
c⁄f
);

105 
v4l2_√xt
(
c⁄ãxt
 *
˙t
, 
video_dev
 *
viddev
, *
m≠
, 
width
, 
height
);

106 
v4l2_˛o£
(
video_dev
 *
viddev
);

107 
v4l2_˛ónup
(
video_dev
 *
viddev
);

	@video2.c

49 #i‚de‡
WITHOUT_V4L


50 #ifde‡
MOTION_V4L2


52 
	~"mŸi⁄.h
"

53 
	~"√tˇm.h
"

54 
	~"video.h
"

56 #ifde‡
MOTION_V4L2_OLD


58 
	~<löux/time.h
>

59 
	~<löux/videodev2.h
>

62 
	#u8
 

	)

63 
	#u16
 

	)

64 
	#u32
 

	)

65 
	#s32
 sig√d 

	)

67 
	#MMAP_BUFFERS
 4

	)

68 
	#MIN_MMAP_BUFFERS
 2

	)

70 #i‚de‡
V4L2_PIX_FMT_SBGGR8


72 
	#V4L2_PIX_FMT_SBGGR8
 
	`v4l2_fourcc
('B','A','8','1'Ë

	)

75 #i‚de‡
V4L2_PIX_FMT_MJPEG


76 
	#V4L2_PIX_FMT_MJPEG
 
	`v4l2_fourcc
('M','J','P','G'Ë

	)

79 #i‚de‡
V4L2_PIX_FMT_SN9C10X


80 
	#V4L2_PIX_FMT_SN9C10X
 
	`v4l2_fourcc
('S','9','1','0'Ë

	)

83 
	#ZC301_V4L2_CID_DAC_MAGN
 
V4L2_CID_PRIVATE_BASE


	)

84 
	#ZC301_V4L2_CID_GREEN_BALANCE
 (
V4L2_CID_PRIVATE_BASE
+1)

	)

86 c⁄° 
u32
 
	gquîõd_˘æs
[] = {

87 
V4L2_CID_BRIGHTNESS
,

88 
V4L2_CID_CONTRAST
,

89 
V4L2_CID_SATURATION
,

90 
V4L2_CID_HUE
,

92 
V4L2_CID_RED_BALANCE
,

93 
V4L2_CID_BLUE_BALANCE
,

94 
V4L2_CID_GAMMA
,

95 
V4L2_CID_EXPOSURE
,

96 
V4L2_CID_AUTOGAIN
,

97 
V4L2_CID_GAIN
,

99 
ZC301_V4L2_CID_DAC_MAGN
,

100 
ZC301_V4L2_CID_GREEN_BALANCE
,

105 
	mfd
;

106 
	mm≠
;

107 
u32
 
	mÂs
;

109 
v4l2_ˇ∑bûôy
 
	mˇp
;

110 
v4l2_f‹m©
 
	mfmt
;

111 
v4l2_ªque°buf„rs
 
	mªq
;

112 
v4l2_buf„r
 
	mbuf
;

114 
√tˇm_buff
 *
	mbuf„rs
;

116 
s32
 
	mp‰ame
;

118 
u32
 
	m˘æ_Êags
;

119 
v4l2_quîy˘æ
 *
	mc⁄åﬁs
;

121 } 
	t§c_v4l2_t
;

123 
	$xio˘l
(
fd
, 
ªque°
, *
¨g
)

125 
r
;

128 
r
 = 
	`io˘l
(
fd
, 
ªque°
, 
¨g
);

129 -1 =
r
 && 
EINTR
 =
î∫o
);

131  
r
;

132 
	}
}

134 
	$v4l2_gë_ˇ∑bûôy
(
§c_v4l2_t
 * 
s
)

136 i‡(
	`xio˘l
(
s
->
fd
, 
VIDIOC_QUERYCAP
, &s->
ˇp
) < 0) {

137 
	`mŸi⁄_log
(
LOG_ERR
, 0, "Notá V4L2 device?");

141 
	`mŸi⁄_log
(
LOG_INFO
, 0, "ˇp.drivî: \"%s\"", 
s
->
ˇp
.
drivî
);

142 
	`mŸi⁄_log
(
LOG_INFO
, 0, "ˇp.ˇrd: \"%s\"", 
s
->
ˇp
.
ˇrd
);

143 
	`mŸi⁄_log
(
LOG_INFO
, 0, "ˇp.bus_öfo: \"%s\"", 
s
->
ˇp
.
bus_öfo
);

144 
	`mŸi⁄_log
(
LOG_INFO
, 0, "ˇp.ˇ∑bûôõs=0x%08X", 
s
->
ˇp
.
ˇ∑bûôõs
);

146 i‡(
s
->
ˇp
.
ˇ∑bûôõs
 & 
V4L2_CAP_VIDEO_CAPTURE
)

147 
	`mŸi⁄_log
(
LOG_INFO
, 0, "- VIDEO_CAPTURE");

149 i‡(
s
->
ˇp
.
ˇ∑bûôõs
 & 
V4L2_CAP_VIDEO_OUTPUT
)

150 
	`mŸi⁄_log
(
LOG_INFO
, 0, "- VIDEO_OUTPUT");

152 i‡(
s
->
ˇp
.
ˇ∑bûôõs
 & 
V4L2_CAP_VIDEO_OVERLAY
)

153 
	`mŸi⁄_log
(
LOG_INFO
, 0, "- VIDEO_OVERLAY");

155 i‡(
s
->
ˇp
.
ˇ∑bûôõs
 & 
V4L2_CAP_VBI_CAPTURE
)

156 
	`mŸi⁄_log
(
LOG_INFO
, 0, "- VBI_CAPTURE");

158 i‡(
s
->
ˇp
.
ˇ∑bûôõs
 & 
V4L2_CAP_VBI_OUTPUT
)

159 
	`mŸi⁄_log
(
LOG_INFO
, 0, "- VBI_OUTPUT");

161 i‡(
s
->
ˇp
.
ˇ∑bûôõs
 & 
V4L2_CAP_RDS_CAPTURE
)

162 
	`mŸi⁄_log
(
LOG_INFO
, 0, "- RDS_CAPTURE");

164 i‡(
s
->
ˇp
.
ˇ∑bûôõs
 & 
V4L2_CAP_TUNER
)

165 
	`mŸi⁄_log
(
LOG_INFO
, 0, "- TUNER");

167 i‡(
s
->
ˇp
.
ˇ∑bûôõs
 & 
V4L2_CAP_AUDIO
)

168 
	`mŸi⁄_log
(
LOG_INFO
, 0, "- AUDIO");

170 i‡(
s
->
ˇp
.
ˇ∑bûôõs
 & 
V4L2_CAP_READWRITE
)

171 
	`mŸi⁄_log
(
LOG_INFO
, 0, "- READWRITE");

173 i‡(
s
->
ˇp
.
ˇ∑bûôõs
 & 
V4L2_CAP_ASYNCIO
)

174 
	`mŸi⁄_log
(
LOG_INFO
, 0, "- ASYNCIO");

176 i‡(
s
->
ˇp
.
ˇ∑bûôõs
 & 
V4L2_CAP_STREAMING
)

177 
	`mŸi⁄_log
(
LOG_INFO
, 0, "- STREAMING");

179 i‡(
s
->
ˇp
.
ˇ∑bûôõs
 & 
V4L2_CAP_TIMEPERFRAME
)

180 
	`mŸi⁄_log
(
LOG_INFO
, 0, "- TIMEPERFRAME");

182 i‡(!(
s
->
ˇp
.
ˇ∑bûôõs
 & 
V4L2_CAP_VIDEO_CAPTURE
)) {

183 
	`mŸi⁄_log
(
LOG_ERR
, 0, "Device doesÇot support capturing.");

188 
	}
}

190 
	$v4l2_£À˘_öput
(
§c_v4l2_t
 * 
s
, 
ö
, 
n‹m
, 
‰eq_
, 
tu√r_numbî
 
ATTRIBUTE_UNUSED
)

192 
v4l2_öput
 
öput
;

193 
v4l2_°™d¨d
 
°™d¨d
;

194 
v4l2_°d_id
 
°d_id
;

196 i‡(
ö
 == 8)

197 
ö
 = 0;

200 
	`mem£t
 (&
öput
, 0,  (input));

201 
öput
.
ödex
 = 
ö
;

208 i‡(
debug_Àvñ
 > 
CAMERA_VIDEO
)

209 
	`mŸi⁄_log
(
LOG_INFO
, 0, "%s:Çamê\"%s\",Åy≥ 0x%08X, sètu†%08x", 
__FUNCTION__
, 
öput
.
«me
,

210 
öput
.
ty≥
, i≈ut.
°©us
);

212 i‡((
öput
.
ty≥
 & 
V4L2_INPUT_TYPE_TUNER
Ë&& (
debug_Àvñ
 > 
CAMERA_VIDEO
))

213 
	`mŸi⁄_log
(
LOG_INFO
, 0, "- TUNER");

215 i‡((
öput
.
ty≥
 & 
V4L2_INPUT_TYPE_CAMERA
Ë&& (
debug_Àvñ
 > 
CAMERA_VIDEO
))

216 
	`mŸi⁄_log
(
LOG_INFO
, 0, "- CAMERA");

224 i‡(
	`xio˘l
(
s
->
fd
, 
VIDIOC_G_STD
, &
°d_id
) == -1) {

225 i‡(
debug_Àvñ
 > 
CAMERA_VIDEO
)

226 
	`mŸi⁄_log
(
LOG_INFO
, 0, "Device doesn't support VIDIOC_G_STD");

227 
°d_id
 = 0;

230 i‡(
°d_id
) {

231 
	`mem£t
(&
°™d¨d
, 0, (standard));

232 
°™d¨d
.
ödex
 = 0;

234 
	`xio˘l
(
s
->
fd
, 
VIDIOC_ENUMSTD
, &
°™d¨d
) == 0) {

235 i‡((
°™d¨d
.
id
 & 
°d_id
Ë&& (
debug_Àvñ
 > 
CAMERA_VIDEO
))

236 
	`mŸi⁄_log
(
LOG_INFO
, 0, "- videÿ°™d¨d %s", 
°™d¨d
.
«me
);

238 
°™d¨d
.
ödex
++;

241 
n‹m
) {

243 
°d_id
 = 
V4L2_STD_NTSC
;

246 
°d_id
 = 
V4L2_STD_SECAM
;

249 
°d_id
 = 
V4L2_STD_PAL
;

252 i‡(
	`xio˘l
(
s
->
fd
, 
VIDIOC_S_STD
, &
°d_id
) == -1)

253 
	`mŸi⁄_log
(
LOG_ERR
, 1, "Eº‹ sñe˘ög sènd¨d mëhod %d VIDIOC_S_STD", 
°d_id
);

258 i‡(
öput
.
ty≥
 & 
V4L2_INPUT_TYPE_TUNER
) {

259 
v4l2_tu√r
 
tu√r
;

260 
v4l2_‰equícy
 
‰eq
;

264 
	`mem£t
(&
tu√r
, 0, (
v4l2_tu√r
));

265 
tu√r
.
ödex
 = 
öput
.tuner;

267 i‡(
	`xio˘l
(
s
->
fd
, 
VIDIOC_G_TUNER
, &
tu√r
) == -1) {

268 
	`mŸi⁄_log
(
LOG_ERR
, 1, "tu√∏%d VIDIOC_G_TUNER", 
tu√r
.
ödex
);

273 
	`mem£t
(&
‰eq
, 0, (
v4l2_‰equícy
));

274 
‰eq
.
tu√r
 = 
öput
.tuner;

275 
‰eq
.
ty≥
 = 
V4L2_TUNER_ANALOG_TV
;

276 
‰eq
.
‰equícy
 = (
‰eq_
 / 1000) * 16;

278 i‡(
	`xio˘l
(
s
->
fd
, 
VIDIOC_S_FREQUENCY
, &
‰eq
) == -1) {

279 
	`mŸi⁄_log
(
LOG_ERR
, 1, "‰eq %lu VIDIOC_S_FREQUENCY", 
‰eq
.
‰equícy
);

285 
	}
}

311 
	$v4l2_do_£t_pix_f‹m©
(
u32
 
pixf‹m©
, 
§c_v4l2_t
 * 
s
,

312 *
width
, *
height
)

314 
	`mem£t
(&
s
->
fmt
, 0, (
v4l2_f‹m©
));

315 
s
->
fmt
.
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

316 
s
->
fmt
.fmt.
pix
.
width
 = *width;

317 
s
->
fmt
.fmt.
pix
.
height
 = *height;

318 
s
->
fmt
.fmt.
pix
.
pixñf‹m©
 = 
pixf‹m©
;

319 
s
->
fmt
.fmt.
pix
.
fõld
 = 
V4L2_FIELD_ANY
;

321 i‡(
	`xio˘l
(
s
->
fd
, 
VIDIOC_TRY_FMT
, &s->
fmt
) != -1 &&

322 
s
->
fmt
.fmt.
pix
.
pixñf‹m©
 =
pixf‹m©
) {

323 
	`mŸi⁄_log
(
LOG_INFO
, 0, "TestÖalette %c%c%c%c (%dx%d)",

324 
pixf‹m©
 >> 0,Öixformat >> 8,Öixformat >> 16,

325 
pixf‹m©
 >> 24, *
width
, *
height
);

327 i‡(
s
->
fmt
.fmt.
pix
.
width
 != () *width ||

328 
s
->
fmt
.fmt.
pix
.
height
 != () *height) {

329 
	`mŸi⁄_log
(
LOG_INFO
, 0, "AdjustingÑesolution from %ix%iÅo %ix%i.",

330 *
width
, *
height
, 
s
->
fmt
.fmt.
pix
.width,

331 
s
->
fmt
.fmt.
pix
.
height
);

332 *
width
 = 
s
->
fmt
.fmt.
pix
.width;

333 *
height
 = 
s
->
fmt
.fmt.
pix
.height;

336 i‡(
	`xio˘l
(
s
->
fd
, 
VIDIOC_S_FMT
, &s->
fmt
) == -1) {

337 
	`mŸi⁄_log
(
LOG_ERR
, 1, "Error settingÖixel format VIDIOC_S_FMT");

341 
	`mŸi⁄_log
(
LOG_INFO
, 0, "UsingÖalette %c%c%c%c (%dx%d) bytesperlines "

342 "%d sizeimagê%d cﬁ‹•a˚ %08x", 
pixf‹m©
 >> 0,

343 
pixf‹m©
 >> 8,Öixformat >> 16,Öixformat >> 24,

344 *
width
, *
height
, 
s
->
fmt
.fmt.
pix
.
byã•îlöe
,

345 
s
->
fmt
.fmt.
pix
.
sizeimage
, s->fmt.fmt.pix.
cﬁ‹•a˚
);

349 
	}
}

352 
	$v4l2_£t_pix_f‹m©
(
c⁄ãxt
 *
˙t
, 
§c_v4l2_t
 * 
s
,

353 *
width
, *
height
)

355 
v4l2_fmtdesc
 
fmt
;

356 
v4l2_∑l
;

362 c⁄° 
u32
 
suµ‹ãd_f‹m©s
[] = {

363 
V4L2_PIX_FMT_SN9C10X
,

364 
V4L2_PIX_FMT_SBGGR8
,

365 
V4L2_PIX_FMT_MJPEG
,

366 
V4L2_PIX_FMT_JPEG
,

367 
V4L2_PIX_FMT_RGB24
,

368 
V4L2_PIX_FMT_UYVY
,

369 
V4L2_PIX_FMT_YUYV
,

370 
V4L2_PIX_FMT_YUV422P
,

371 
V4L2_PIX_FMT_YUV420


374 
¨øy_size
 = (
suµ‹ãd_f‹m©s
) / (supported_formats[0]);

375 
ödex_f‹m©
 = -1;

378 i‡(
˙t
->
c⁄f
.
v4l2_∑Àâe
 >= 0) {

379 
«me
[5] = {
suµ‹ãd_f‹m©s
[
˙t
->
c⁄f
.
v4l2_∑Àâe
] >> 0,

380 
suµ‹ãd_f‹m©s
[
˙t
->
c⁄f
.
v4l2_∑Àâe
] >> 8,

381 
suµ‹ãd_f‹m©s
[
˙t
->
c⁄f
.
v4l2_∑Àâe
] >> 16,

382 
suµ‹ãd_f‹m©s
[
˙t
->
c⁄f
.
v4l2_∑Àâe
] >> 24, 0};

384 i‡(
	`v4l2_do_£t_pix_f‹m©
(
suµ‹ãd_f‹m©s
[
˙t
->
c⁄f
.
v4l2_∑Àâe
],

385 
s
, 
width
, 
height
) >= 0)

388 
	`mŸi⁄_log
(
LOG_INFO
, 0, "ConfigÖalette index %d (%s) doesn't work.",

389 
˙t
->
c⁄f
.
v4l2_∑Àâe
, 
«me
);

393 
	`mem£t
(&
fmt
, 0, (
v4l2_fmtdesc
));

394 
fmt
.
ödex
 = 
v4l2_∑l
 = 0;

395 
fmt
.
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

397 
	`mŸi⁄_log
(
LOG_INFO
, 0, "SupportedÖalettes:");

399 
	`xio˘l
(
s
->
fd
, 
VIDIOC_ENUM_FMT
, &
fmt
) != -1) {

400 
i
;

402 
	`mŸi⁄_log
(
LOG_INFO
, 0, "%i: %c%c%c%¯(%s)", 
v4l2_∑l
,

403 
fmt
.
pixñf‹m©
 >> 0, fmt.pixelformat >> 8,

404 
fmt
.
pixñf‹m©
 >> 16, fmt.pixelformat >> 24,

405 
fmt
.
des¸ùti⁄
);

408 
i
 = 
ödex_f‹m©
 + 1; i < 
¨øy_size
; i++)

409 i‡(
suµ‹ãd_f‹m©s
[
i
] =
fmt
.
pixñf‹m©
)

410 
ödex_f‹m©
 = 
i
;

412 
	`mem£t
(&
fmt
, 0, (
v4l2_fmtdesc
));

413 
fmt
.
ödex
 = ++
v4l2_∑l
;

414 
fmt
.
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

417 i‡(
ödex_f‹m©
 >= 0) {

418 
«me
[5] = {
suµ‹ãd_f‹m©s
[
ödex_f‹m©
] >> 0,

419 
suµ‹ãd_f‹m©s
[
ödex_f‹m©
] >> 8,

420 
suµ‹ãd_f‹m©s
[
ödex_f‹m©
] >> 16,

421 
suµ‹ãd_f‹m©s
[
ödex_f‹m©
] >> 24, 0};

423 
	`mŸi⁄_log
(
LOG_INFO
, 0, "Sñe˘edÖÆëã %s", 
«me
);

425 i‡(
	`v4l2_do_£t_pix_f‹m©
(
suµ‹ãd_f‹m©s
[
ödex_f‹m©
],

426 
s
, 
width
, 
height
) >= 0)

428 
	`mŸi⁄_log
(
LOG_ERR
, 1, "VIDIOC_TRY_FMT faûed f‹ f‹m© %s", 
«me
);

431 
	`mŸi⁄_log
(
LOG_ERR
, 0, "UnableÅo findá compatibleÖalette format.");

433 
	}
}

436 
	$v4l2_£t_Âs
(
§c_v4l2_t
 * 
s
){

437 
v4l2_°ªam∑rm
* 
£tÂs
;

439 
£tÂs
=(
v4l2_°ªam∑rm
 *Ë
	`ˇŒoc
(1, (v4l2_streamparm));

440 
	`mem£t
(
£tÂs
, 0, (
v4l2_°ªam∑rm
));

441 
£tÂs
->
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

442 
£tÂs
->
∑rm
.
ˇ±uª
.
timïî‰ame
.
numî©‹
=1;

443 
£tÂs
->
∑rm
.
ˇ±uª
.
timïî‰ame
.
díomö©‹
=
s
->
Âs
;

445 i‡(
	`xio˘l
(
s
->
fd
, 
VIDIOC_S_PARM
, 
£tÂs
) == -1)

446 
	`mŸi⁄_log
(
LOG_ERR
, 1, "v4l2_set_fps VIDIOC_S_PARM");

449 
	}
}

452 
	$v4l2_£t_mm≠
(
§c_v4l2_t
 * 
s
)

454 
v4l2_buf_ty≥
 
ty≥
;

455 
u32
 
b
;

458 i‡(!(
s
->
ˇp
.
ˇ∑bûôõs
 & 
V4L2_CAP_STREAMING
))

461 
	`mem£t
(&
s
->
ªq
, 0, (
v4l2_ªque°buf„rs
));

463 
s
->
ªq
.
cou¡
 = 
MMAP_BUFFERS
;

464 
s
->
ªq
.
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

465 
s
->
ªq
.
mem‹y
 = 
V4L2_MEMORY_MMAP
;

467 i‡(
	`xio˘l
(
s
->
fd
, 
VIDIOC_REQBUFS
, &s->
ªq
) == -1) {

468 
	`mŸi⁄_log
(
LOG_ERR
, 1, "Eº‹Ñeque°ög buf„r†%d f‹ mem‹y m≠. VIDIOC_REQBUFS", 
s
->
ªq
.
cou¡
);

472 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "mmap information:");

473 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "‰ames=%d", 
s
->
ªq
.
cou¡
);

475 i‡(
s
->
ªq
.
cou¡
 < 
MIN_MMAP_BUFFERS
) {

476 
	`mŸi⁄_log
(
LOG_ERR
, 0, "Insufficient buffer memory.");

480 
s
->
buf„rs
 = 
	`ˇŒoc
(s->
ªq
.
cou¡
, (
√tˇm_buff
));

481 i‡(!
s
->
buf„rs
) {

482 
	`mŸi⁄_log
(
LOG_ERR
, 1, "%s: Ouào‡mem‹y.", 
__FUNCTION__
);

486 
b
 = 0; b < 
s
->
ªq
.
cou¡
; b++) {

487 
v4l2_buf„r
 
buf
;

489 
	`mem£t
(&
buf
, 0, (
v4l2_buf„r
));

491 
buf
.
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

492 
buf
.
mem‹y
 = 
V4L2_MEMORY_MMAP
;

493 
buf
.
ödex
 = 
b
;

495 i‡(
	`xio˘l
(
s
->
fd
, 
VIDIOC_QUERYBUF
, &
buf
) == -1) {

496 
	`mŸi⁄_log
(
LOG_ERR
, 0, "Eº‹ quîyög buf„∏%d VIDIOC_QUERYBUF", 
b
);

497 
	`‰ì
(
s
->
buf„rs
);

501 
s
->
buf„rs
[
b
].
size
 = 
buf
.
Àngth
;

502 
s
->
buf„rs
[
b
].
±r
 = 
	`mm≠
(
NULL
, 
buf
.
Àngth
, 
PROT_READ
 | 
PROT_WRITE
, 
MAP_SHARED
, s->
fd
, buf.
m
.
off£t
);

504 i‡(
s
->
buf„rs
[
b
].
±r
 =
MAP_FAILED
) {

505 
	`mŸi⁄_log
(
LOG_ERR
, 1, "Eº‹ m≠pög buf„∏%òmm≠", 
b
);

506 
	`‰ì
(
s
->
buf„rs
);

510 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "%òÀngth=%d", 
b
, 
buf
.
Àngth
);

513 
s
->
m≠
 = -1;

515 
b
 = 0; b < 
s
->
ªq
.
cou¡
; b++) {

516 
	`mem£t
(&
s
->
buf
, 0, (
v4l2_buf„r
));

518 
s
->
buf
.
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

519 
s
->
buf
.
mem‹y
 = 
V4L2_MEMORY_MMAP
;

520 
s
->
buf
.
ödex
 = 
b
;

522 i‡(
	`xio˘l
(
s
->
fd
, 
VIDIOC_QBUF
, &s->
buf
) == -1) {

523 
	`mŸi⁄_log
(
LOG_ERR
, 1, "buf„∏ödex %d VIDIOC_QBUF", 
s
->
buf
.
ödex
);

528 
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

530 i‡(
	`xio˘l
(
s
->
fd
, 
VIDIOC_STREAMON
, &
ty≥
) == -1) {

531 
	`mŸi⁄_log
(
LOG_ERR
, 1, "Error starting stream VIDIOC_STREAMON");

536 
	}
}

538 
	$v4l2_sˇn_c⁄åﬁs
(
§c_v4l2_t
 * 
s
)

540 
cou¡
, 
i
;

541 
v4l2_quîy˘æ
 
quîy˘æ
;

543 
	`mem£t
(&
quîy˘æ
, 0, (
v4l2_quîy˘æ
));

545 
i
 = 0, 
cou¡
 = 0; 
quîõd_˘æs
[i]; i++) {

546 
quîy˘æ
.
id
 = 
quîõd_˘æs
[
i
];

547 i‡(
	`xio˘l
(
s
->
fd
, 
VIDIOC_QUERYCTRL
, &
quîy˘æ
))

550 
cou¡
++;

551 
s
->
˘æ_Êags
 |1 << 
i
;

554 i‡(
cou¡
) {

555 
v4l2_quîy˘æ
 *
˘æ
 = 
s
->
c⁄åﬁs
 = 
	`ˇŒoc
(
cou¡
, (v4l2_queryctrl));

557 i‡(!
˘æ
) {

558 
	`mŸi⁄_log
(
LOG_ERR
, 1, "%s: Insufficõ¡ buf„∏mem‹y.", 
__FUNCTION__
);

562 
i
 = 0; 
quîõd_˘æs
[i]; i++) {

563 i‡(
s
->
˘æ_Êags
 & (1 << 
i
)) {

564 
v4l2_c⁄åﬁ
 
c⁄åﬁ
;

566 
quîy˘æ
.
id
 = 
quîõd_˘æs
[
i
];

567 i‡(
	`xio˘l
(
s
->
fd
, 
VIDIOC_QUERYCTRL
, &
quîy˘æ
))

570 
	`mem˝y
(
˘æ
, &
quîy˘æ
, (
v4l2_quîy˘æ
));

572 
	`mŸi⁄_log
(
LOG_INFO
, 0, "found c⁄åﬁ 0x%08x, \"%s\",Ñ™gê%d,%d %s", 
˘æ
->
id
,

573 
˘æ
->
«me
, cål->
möimum
, cål->
maximum
,

574 
˘æ
->
Êags
 & 
V4L2_CTRL_FLAG_DISABLED
 ? "!DISABLED!" : "");

576 
	`mem£t
 (&
c⁄åﬁ
, 0,  (control));

577 
c⁄åﬁ
.
id
 = 
quîõd_˘æs
[
i
];

578 
	`xio˘l
(
s
->
fd
, 
VIDIOC_G_CTRL
, &
c⁄åﬁ
);

579 
	`mŸi⁄_log
(
LOG_INFO
, 0, "\t\"%s\", deÁu… %d, cuºíà%d", 
˘æ
->
«me
,

580 
˘æ
->
deÁu…_vÆue
, 
c⁄åﬁ
.
vÆue
);

582 
˘æ
++;

588 
	}
}

590 
	$v4l2_£t_c⁄åﬁ
(
§c_v4l2_t
 * 
s
, 
u32
 
cid
, 
vÆue
)

592 
i
, 
cou¡
;

594 i‡(!
s
->
c⁄åﬁs
)

597 
i
 = 0, 
cou¡
 = 0; 
quîõd_˘æs
[i]; i++) {

598 i‡(
s
->
˘æ_Êags
 & (1 << 
i
)) {

599 i‡(
cid
 =
quîõd_˘æs
[
i
]) {

600 
v4l2_quîy˘æ
 *
˘æ
 = 
s
->
c⁄åﬁs
 + 
cou¡
;

601 
v4l2_c⁄åﬁ
 
c⁄åﬁ
;

602 
ªt
;

604 
	`mem£t
 (&
c⁄åﬁ
, 0,  (control));

605 
c⁄åﬁ
.
id
 = 
quîõd_˘æs
[
i
];

607 
˘æ
->
ty≥
) {

608 
V4L2_CTRL_TYPE_INTEGER
:

609 
vÆue
 = 
c⁄åﬁ
.value =

610 (
vÆue
 * (
˘æ
->
maximum
 - cål->
möimum
) / 256) + ctrl->minimum;

611 
ªt
 = 
	`xio˘l
(
s
->
fd
, 
VIDIOC_S_CTRL
, &
c⁄åﬁ
);

614 
V4L2_CTRL_TYPE_BOOLEAN
:

615 
vÆue
 = 
c⁄åﬁ
.value = value ? 1 : 0;

616 
ªt
 = 
	`xio˘l
(
s
->
fd
, 
VIDIOC_S_CTRL
, &
c⁄åﬁ
);

620 
	`mŸi⁄_log
(
LOG_ERR
, 0, "%s: controlÅypeÇot supported yet");

624 i‡(
debug_Àvñ
 > 
CAMERA_VIDEO
)

625 
	`mŸi⁄_log
(
LOG_INFO
, 0, "£âög c⁄åﬁ \"%s\"Åÿ%d (ªà%d %sË%s", 
˘æ
->
«me
,

626 
vÆue
, 
ªt
,Ñë ? 
	`°ªº‹
(
î∫o
) : "",

627 
˘æ
->
Êags
 & 
V4L2_CTRL_FLAG_DISABLED
 ? "Control is DISABLED!" : "");

631 
cou¡
++;

636 
	}
}

638 
	$v4l2_pi˘uª_c⁄åﬁs
(
c⁄ãxt
 *
˙t
, 
video_dev
 *
viddev
)

640 
§c_v4l2_t
 *
s
 = (§c_v4l2_à*Ë
viddev
->
v4l2_¥iv©e
;

642 i‡(
˙t
->
c⁄f
.
c⁄åa°
 && c¡->c⁄f.c⁄åa° !
viddev
->contrast) {

643 
viddev
->
c⁄åa°
 = 
˙t
->
c⁄f
.contrast;

644 
	`v4l2_£t_c⁄åﬁ
(
s
, 
V4L2_CID_CONTRAST
, 
viddev
->
c⁄åa°
);

647 i‡(
˙t
->
c⁄f
.
ßtuøti⁄
 && c¡->c⁄f.ßtuøti⁄ !
viddev
->saturation) {

648 
viddev
->
ßtuøti⁄
 = 
˙t
->
c⁄f
.saturation;

649 
	`v4l2_£t_c⁄åﬁ
(
s
, 
V4L2_CID_SATURATION
, 
viddev
->
ßtuøti⁄
);

652 i‡(
˙t
->
c⁄f
.
hue
 && c¡->c⁄f.huê!
viddev
->hue) {

653 
viddev
->
hue
 = 
˙t
->
c⁄f
.hue;

654 
	`v4l2_£t_c⁄åﬁ
(
s
, 
V4L2_CID_HUE
, 
viddev
->
hue
);

657 i‡(
˙t
->
c⁄f
.
autobright
) {

658 i‡(
	`vid_do_autobright
(
˙t
, 
viddev
)) {

659 i‡(
	`v4l2_£t_c⁄åﬁ
(
s
, 
V4L2_CID_BRIGHTNESS
, 
viddev
->
brighäess
))

660 
	`v4l2_£t_c⁄åﬁ
(
s
, 
V4L2_CID_GAIN
, 
viddev
->
brighäess
);

663 i‡(
˙t
->
c⁄f
.
brighäess
 && c¡->c⁄f.brighäes†!
viddev
->brightness) {

664 
viddev
->
brighäess
 = 
˙t
->
c⁄f
.brightness;

665 i‡(
	`v4l2_£t_c⁄åﬁ
(
s
, 
V4L2_CID_BRIGHTNESS
, 
viddev
->
brighäess
))

666 
	`v4l2_£t_c⁄åﬁ
(
s
, 
V4L2_CID_GAIN
, 
viddev
->
brighäess
);

670 
	}
}

674 *
	$v4l2_°¨t
(
c⁄ãxt
 *
˙t
, 
video_dev
 *
viddev
, 
width
, 
height
,

675 
öput
, 
n‹m
, 
‰eq
, 
tu√r_numbî
)

677 
§c_v4l2_t
 *
s
;

680 i‡(!(
s
 = 
	`ˇŒoc
((
§c_v4l2_t
), 1))) {

681 
	`mŸi⁄_log
(
LOG_ERR
, 1, "%s: Ouào‡mem‹y.", 
__FUNCTION__
);

682 
îr
;

685 
viddev
->
v4l2_¥iv©e
 = 
s
;

686 
s
->
fd
 = 
viddev
->fd;

687 
s
->
Âs
 = 
˙t
->
c⁄f
.
‰ame_limô
;

688 
s
->
p‰ame
 = -1;

690 i‡(
	`v4l2_gë_ˇ∑bûôy
(
s
))

691 
îr
;

693 i‡(
	`v4l2_£À˘_öput
(
s
, 
öput
, 
n‹m
, 
‰eq
, 
tu√r_numbî
))

694 
îr
;

696 i‡(
	`v4l2_£t_pix_f‹m©
(
˙t
 ,
s
, &
width
, &
height
))

697 
îr
;

699 i‡(
	`v4l2_sˇn_c⁄åﬁs
(
s
))

700 
îr
;

703 
	`v4l2_£t_Âs
(
s
);

705 i‡(
	`v4l2_£t_mm≠
(
s
))

706 
îr
;

708 
viddev
->
size_m≠
 = 0;

709 
viddev
->
v4l_buf„rs
[0] = 
NULL
;

710 
viddev
->
v4l_maxbuf„r
 = 1;

711 
viddev
->
v4l_curbuf„r
 = 0;

713 
viddev
->
v4l_fmt
 = 
VIDEO_PALETTE_YUV420P
;

714 
viddev
->
v4l_bufsize
 = (
width
 * 
height
 * 3) / 2;

718 
viddev
->
width
 = width;

719 
viddev
->
height
 = height;

723 
îr
:

724 i‡(
s
)

725 
	`‰ì
(
s
);

727 
viddev
->
v4l2_¥iv©e
 = 
NULL
;

728 
viddev
->
v4l2
 = 0;

729  
NULL
;

730 
	}
}

732 
	$v4l2_£t_öput
(
c⁄ãxt
 *
˙t
, 
video_dev
 *
viddev
, *
m≠
, 
width
, 
height
,

733 
c⁄fig
 *
c⁄f
)

735 
i
;

736 
öput
 = 
c⁄f
->input;

737 
n‹m
 = 
c⁄f
->norm;

738 
skù
 = 
c⁄f
->
roundrobö_skù
;

739 
‰eq
 = 
c⁄f
->
‰equícy
;

740 
tu√r_numbî
 = 
c⁄f
->tuner_number;

742 i‡(
öput
 !
viddev
->öpuà|| 
width
 !viddev->width || 
height
 != viddev->height ||

743 
‰eq
 !
viddev
->‰eq || 
tu√r_numbî
 != viddev->tuner_number) {

745 
timevÆ
 
swôchTime
;

747 
	`v4l2_£À˘_öput
((
§c_v4l2_t
 *Ë
viddev
->
v4l2_¥iv©e
, 
öput
, 
n‹m
, 
‰eq
, 
tu√r_numbî
);

749 
	`gëtimeofday
(&
swôchTime
, 
NULL
);

751 
	`v4l2_pi˘uª_c⁄åﬁs
(
˙t
, 
viddev
);

753 
viddev
->
öput
 = input;

754 
viddev
->
width
 = width;

755 
viddev
->
height
 = height;

756 
viddev
->
‰eq
 = freq;

757 
viddev
->
tu√r_numbî
 =Åuner_number;

762 
§c_v4l2_t
 *
s
 = (§c_v4l2_à*Ë
viddev
->
v4l2_¥iv©e
;

763 
cou¡î
 = 0;

764 i‡(
debug_Àvñ
 > 
CAMERA_VIDEO
)

765 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "set_input_skip_frame switch_time=%ld:%ld",

766 
swôchTime
.
tv_£c
, swôchTime.
tv_u£c
);

769 
cou¡î
 < 
s
->
ªq
.
cou¡
) {

770 
cou¡î
++;

771 i‡(
	`v4l2_√xt
(
˙t
, 
viddev
, 
m≠
, 
width
, 
height
))

774 i‡(
s
->
buf
.
time°amp
.
tv_£c
 > 
swôchTime
.tv_sec ||

775 (
s
->
buf
.
time°amp
.
tv_£c
 =
swôchTime
.tv_£¯&& s->buf.time°amp.
tv_u£c
 >

776 
swôchTime
.
tv_u£c
))

779 i‡(
debug_Àvñ
 > 
CAMERA_VIDEO
)

780 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "got frame before switchÅimestamp=%ld:%ld",

781 
s
->
buf
.
time°amp
.
tv_£c
, s->buf.time°amp.
tv_u£c
);

786 
i
 = 1; i < 
skù
; i++)

787 
	`v4l2_√xt
(
˙t
, 
viddev
, 
m≠
, 
width
, 
height
);

791 
	`v4l2_pi˘uª_c⁄åﬁs
(
˙t
, 
viddev
);

793 
	}
}

795 
	$v4l2_√xt
(
c⁄ãxt
 *
˙t
, 
video_dev
 *
viddev
, *
m≠
, 
width
, 
height
)

797 
sig£t_t
 
£t
, 
ﬁd
;

798 
§c_v4l2_t
 *
s
 = (§c_v4l2_à*Ë
viddev
->
v4l2_¥iv©e
;

800 i‡(
viddev
->
v4l_fmt
 !
VIDEO_PALETTE_YUV420P
)

801  
V4L_FATAL_ERROR
;

805 
	`sigem±y£t
(&
£t
);

806 
	`sigadd£t
(&
£t
, 
SIGCHLD
);

807 
	`sigadd£t
(&
£t
, 
SIGALRM
);

808 
	`sigadd£t
(&
£t
, 
SIGUSR1
);

809 
	`sigadd£t
(&
£t
, 
SIGTERM
);

810 
	`sigadd£t
(&
£t
, 
SIGHUP
);

811 
	`±hªad_sigmask
(
SIG_BLOCK
, &
£t
, &
ﬁd
);

813 i‡(
s
->
p‰ame
 >= 0) {

814 i‡(
	`xio˘l
(
s
->
fd
, 
VIDIOC_QBUF
, &s->
buf
) == -1) {

815 
	`mŸi⁄_log
(
LOG_ERR
, 1, "%s: VIDIOC_QBUF", 
__FUNCTION__
);

820 
	`mem£t
(&
s
->
buf
, 0, (
v4l2_buf„r
));

822 
s
->
buf
.
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

823 
s
->
buf
.
mem‹y
 = 
V4L2_MEMORY_MMAP
;

825 i‡(
	`xio˘l
(
s
->
fd
, 
VIDIOC_DQBUF
, &s->
buf
) == -1) {

831 i‡(
î∫o
 =
EIO
) {

832 
s
->
p‰ame
++;

833 i‡((
u32
)
s
->
p‰ame
 >s->
ªq
.
cou¡
) s->pframe = 0;

834 
s
->
buf
.
ödex
 = s->
p‰ame
;

836 
	`mŸi⁄_log
(
LOG_ERR
, 1, "%s: VIDIOC_DQBUF: EIO (s->p‰amê%d)", 
__FUNCTION__
, 
s
->
p‰ame
);

841 
	`mŸi⁄_log
(
LOG_ERR
, 1, "%s: VIDIOC_DQBUF", 
__FUNCTION__
);

846 
s
->
p‰ame
 = s->
buf
.
ödex
;

847 
s
->
buf„rs
[s->
buf
.
ödex
].
u£d
 = s->buf.
byãsu£d
;

848 
s
->
buf„rs
[s->
buf
.
ödex
].
c⁄ã¡_Àngth
 = s->buf.
byãsu£d
;

850 
	`±hªad_sigmask
(
SIG_UNBLOCK
, &
ﬁd
, 
NULL
);

853 
√tˇm_buff
 *
the_buf„r
 = &
s
->
buf„rs
[s->
buf
.
ödex
];

855 
s
->
fmt
.fmt.
pix
.
pixñf‹m©
) {

856 
V4L2_PIX_FMT_RGB24
:

857 
	`c⁄v_rgb24toyuv420p
(
m≠
, (*Ë
the_buf„r
->
±r
, 
width
, 
height
);

860 
V4L2_PIX_FMT_UYVY
:

861 
	`c⁄v_uyvyto420p
(
m≠
, (*Ë
the_buf„r
->
±r
, ()
width
, ()
height
);

864 
V4L2_PIX_FMT_YUYV
:

865 
V4L2_PIX_FMT_YUV422P
:

866 
	`c⁄v_yuv422to420p
(
m≠
, (*Ë
the_buf„r
->
±r
, 
width
, 
height
);

869 
V4L2_PIX_FMT_YUV420
:

870 
	`mem˝y
(
m≠
, 
the_buf„r
->
±r
, 
viddev
->
v4l_bufsize
);

873 
V4L2_PIX_FMT_JPEG
:

874 
V4L2_PIX_FMT_MJPEG
:

875  
	`mj≥gtoyuv420p
(
m≠
, (*Ë
the_buf„r
->
±r
, 
width
, 
height
,

876 
s
->
buf„rs
[s->
buf
.
ödex
].
c⁄ã¡_Àngth
);

882 
V4L2_PIX_FMT_SBGGR8
:

883 
	`bayî2rgb24
(
˙t
->
imgs
.
comm⁄_buf„r
, (*Ë
the_buf„r
->
±r
, 
width
, 
height
);

884 
	`c⁄v_rgb24toyuv420p
(
m≠
, 
˙t
->
imgs
.
comm⁄_buf„r
, 
width
, 
height
);

887 
V4L2_PIX_FMT_SN9C10X
:

888 
	`s⁄ix_decom¥ess
(
m≠
, (*Ë
the_buf„r
->
±r
, 
width
, 
height
);

889 
	`bayî2rgb24
(
˙t
->
imgs
.
comm⁄_buf„r
, 
m≠
, 
width
, 
height
);

890 
	`c⁄v_rgb24toyuv420p
(
m≠
, 
˙t
->
imgs
.
comm⁄_buf„r
, 
width
, 
height
);

896 
	}
}

898 
	$v4l2_˛o£
(
video_dev
 *
viddev
)

900 
§c_v4l2_t
 *
s
 = (§c_v4l2_à*Ë
viddev
->
v4l2_¥iv©e
;

901 
v4l2_buf_ty≥
 
ty≥
;

903 
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

904 
	`xio˘l
(
s
->
fd
, 
VIDIOC_STREAMOFF
, &
ty≥
);

905 
	`˛o£
(
s
->
fd
);

906 
s
->
fd
 = -1;

907 
	}
}

909 
	$v4l2_˛ónup
(
video_dev
 *
viddev
)

911 
§c_v4l2_t
 *
s
 = (§c_v4l2_à*Ë
viddev
->
v4l2_¥iv©e
;

913 i‡(
s
->
buf„rs
) {

914 
i
;

916 
i
 = 0; i < 
s
->
ªq
.
cou¡
; i++)

917 
	`munm≠
(
s
->
buf„rs
[
i
].
±r
, s->buf„rs[i].
size
);

919 
	`‰ì
(
s
->
buf„rs
);

920 
s
->
buf„rs
 = 
NULL
;

923 i‡(
s
->
c⁄åﬁs
) {

924 
	`‰ì
(
s
->
c⁄åﬁs
);

925 
s
->
c⁄åﬁs
 = 
NULL
;

928 
	`‰ì
(
s
);

929 
viddev
->
v4l2_¥iv©e
 = 
NULL
;

930 
	}
}

	@video_common.c

13 
	~"rŸ©e.h
"

14 
	~"video.h
"

15 
	~"j≥gutûs.h
"

18 
	tuöt8_t
;

19 
	tuöt16_t
;

20 
	tuöt32_t
;

22 
	#CLAMP
(
x
Ë((xË< 0 ? 0 : ((xË> 255Ë? 255 : (x))

	)

25 
	mis_abs
;

26 
	mÀn
;

27 
	mvÆ
;

28 } 
	tcode_èbÀ_t
;

39 
	$s⁄ix_decom¥ess_öô
(
code_èbÀ_t
 * 
èbÀ
)

41 
i
;

42 
is_abs
, 
vÆ
, 
Àn
;

44 
i
 = 0; i < 256; i++) {

45 
is_abs
 = 0;

46 
vÆ
 = 0;

47 
Àn
 = 0;

48 i‡((
i
 & 0x80) == 0) {

50 
vÆ
 = 0;

51 
Àn
 = 1;

52 } i‡((
i
 & 0xE0) == 0x80) {

54 
vÆ
 = +4;

55 
Àn
 = 3;

56 } i‡((
i
 & 0xE0) == 0xA0) {

58 
vÆ
 = -4;

59 
Àn
 = 3;

60 } i‡((
i
 & 0xF0) == 0xD0) {

62 
vÆ
 = +11;

63 
Àn
 = 4;

64 } i‡((
i
 & 0xF0) == 0xF0) {

66 
vÆ
 = -11;

67 
Àn
 = 4;

68 } i‡((
i
 & 0xF8) == 0xC8) {

70 
vÆ
 = +20;

71 
Àn
 = 5;

72 } i‡((
i
 & 0xFC) == 0xC0) {

74 
vÆ
 = -20;

75 
Àn
 = 6;

76 } i‡((
i
 & 0xFC) == 0xC4) {

78 
vÆ
 = 0;

79 
Àn
 = 8;

80 } i‡((
i
 & 0xF0) == 0xE0) {

82 
is_abs
 = 1;

83 
vÆ
 = (
i
 & 0x0F) << 4;

84 
Àn
 = 8;

86 
èbÀ
[
i
].
is_abs
 = is_abs;

87 
èbÀ
[
i
].
vÆ
 = val;

88 
èbÀ
[
i
].
Àn
 =Üen;

90 
	}
}

106 
	$s⁄ix_decom¥ess
(*
ouç
, *
öp
, 
width
, 
height
)

108 
row
, 
cﬁ
;

109 
vÆ
;

110 
bôpos
;

111 
code
;

112 *
addr
;

115 
code_èbÀ_t
 
èbÀ
[256];

116 
öô_d⁄e
 = 0;

118 i‡(!
öô_d⁄e
) {

119 
öô_d⁄e
 = 1;

120 
	`s⁄ix_decom¥ess_öô
(
èbÀ
);

125 
bôpos
 = 0;

126 
row
 = 0;Ñow < 
height
;Ñow++) {

128 
cﬁ
 = 0;

131 i‡(
row
 < 2) {

132 
addr
 = 
öp
 + (
bôpos
 >> 3);

133 
code
 = (
addr
[0] << (
bôpos
 & 7)) | (addr[1] >> (8 - (bitpos & 7)));

134 
bôpos
 += 8;

135 *
ouç
++ = 
code
;

137 
addr
 = 
öp
 + (
bôpos
 >> 3);

138 
code
 = (
addr
[0] << (
bôpos
 & 7)) | (addr[1] >> (8 - (bitpos & 7)));

139 
bôpos
 += 8;

140 *
ouç
++ = 
code
;

142 
cﬁ
 += 2;

145 
cﬁ
 < 
width
) {

147 
addr
 = 
öp
 + (
bôpos
 >> 3);

148 
code
 = (
addr
[0] << (
bôpos
 & 7)) | (addr[1] >> (8 - (bitpos & 7)));

151 
bôpos
 +
èbÀ
[
code
].
Àn
;

154 
vÆ
 = 
èbÀ
[
code
].val;

155 i‡(!
èbÀ
[
code
].
is_abs
) {

157 i‡(
cﬁ
 < 2) {

159 
vÆ
 +
ouç
[-2 * 
width
];

160 } i‡(
row
 < 2) {

162 
vÆ
 +
ouç
[-2];

165 
vÆ
 +(
ouç
[-2] + ouç[-2 * 
width
]) / 2;

170 *
ouç
++ = 
	`CLAMP
(
vÆ
);

171 
cﬁ
++;

176 
	}
}

186 
	$bayî2rgb24
(*
d°
, *
§c
, 
width
, 
height
)

188 
i
;

189 *
øw±
, *
sˇ≈t
;

190 
size
;

192 
øw±
 = 
§c
;

193 
sˇ≈t
 = 
d°
;

194 
size
 = 
width
 * 
height
;

196 
i
 = 0; i < 
size
; i++) {

197 i‡(((
i
 / 
width
) & 1) == 0) {

198 i‡((
i
 & 1) == 0) {

200 i‡((
i
 > 
width
) && ((i % width) > 0)) {

201 *
sˇ≈t
++ = *
øw±
;

202 *
sˇ≈t
++ = (*(
øw±
 - 1) + *(rawpt + 1) +

203 *(
øw±
 + 
width
) + *(rawpt - width)) / 4;

204 *
sˇ≈t
++ = (*(
øw±
 - 
width
 - 1) + *(rawpt - width + 1) +

205 *(
øw±
 + 
width
 - 1) + *(rawpt + width + 1)) / 4;

208 *
sˇ≈t
++ = *
øw±
;

209 *
sˇ≈t
++ = (*(
øw±
 + 1Ë+ *‘aw± + 
width
)) / 2;

210 *
sˇ≈t
++ = *(
øw±
 + 
width
 + 1);

214 i‡((
i
 > 
width
) && ((i % width) < (width - 1))) {

215 *
sˇ≈t
++ = (*(
øw±
 - 1) + *(rawpt + 1)) / 2;

216 *
sˇ≈t
++ = *
øw±
;

217 *
sˇ≈t
++ = (*(
øw±
 + 
width
) + *(rawpt - width)) / 2;

220 *
sˇ≈t
++ = *(
øw±
 - 1);

221 *
sˇ≈t
++ = *
øw±
;

222 *
sˇ≈t
++ = *(
øw±
 + 
width
);

226 i‡((
i
 & 1) == 0) {

228 i‡((
i
 < (
width
 * (
height
 - 1))) && ((i % width) > 0)) {

229 *
sˇ≈t
++ = (*(
øw±
 + 
width
) + *(rawpt - width)) / 2;

230 *
sˇ≈t
++ = *
øw±
;

231 *
sˇ≈t
++ = (*(
øw±
 - 1) + *(rawpt + 1)) / 2;

234 *
sˇ≈t
++ = *(
øw±
 - 
width
);

235 *
sˇ≈t
++ = *
øw±
;

236 *
sˇ≈t
++ = *(
øw±
 + 1);

240 i‡(
i
 < (
width
 * (
height
 - 1)) && ((i % width) < (width - 1))) {

241 *
sˇ≈t
++ = (*(
øw±
 - 
width
 - 1) + *(rawpt - width + 1) +

242 *(
øw±
 + 
width
 - 1) + *(rawpt + width + 1)) / 4;

243 *
sˇ≈t
++ = (*(
øw±
 - 1Ë+ *‘aw± + 1Ë+ *‘aw± - 
width
) +

244 *(
øw±
 + 
width
)) / 4;

245 *
sˇ≈t
++ = *
øw±
;

248 *
sˇ≈t
++ = *(
øw±
 - 
width
 - 1);

249 *
sˇ≈t
++ = (*(
øw±
 - 1Ë+ *‘aw± - 
width
)) / 2;

250 *
sˇ≈t
++ = *
øw±
;

254 
øw±
++;

257 
	}
}

259 
	$c⁄v_yuv422to420p
(*
m≠
, *
ˇp_m≠
, 
width
, 
height
)

261 *
§c
, *
de°
, *
§c2
, *
de°2
;

262 
i
, 
j
;

265 
§c
 = 
ˇp_m≠
;

266 
de°
 = 
m≠
;

267 
i
 = 
width
 * 
height
; i > 0; i--) {

268 *
de°
++ = *
§c
;

269 
§c
 += 2;

272 
§c
 = 
ˇp_m≠
 + 1;

273 
§c2
 = 
ˇp_m≠
 + 
width
 * 2 + 1;

274 
de°
 = 
m≠
 + 
width
 * 
height
;

275 
de°2
 = 
de°
 + (
width
 * 
height
) / 4;

276 
i
 = 
height
 / 2; i > 0; i--) {

277 
j
 = 
width
 / 2; j > 0; j--) {

278 *
de°
 = ((Ë*
§c
 + (Ë*
§c2
) / 2;

279 
§c
 += 2;

280 
§c2
 += 2;

281 
de°
++;

282 *
de°2
 = ((Ë*
§c
 + (Ë*
§c2
) / 2;

283 
§c
 += 2;

284 
§c2
 += 2;

285 
de°2
++;

287 
§c
 +
width
 * 2;

288 
§c2
 +
width
 * 2;

290 
	}
}

292 
	$c⁄v_uyvyto420p
(*
m≠
, *
ˇp_m≠
, 
width
, 
height
)

294 
uöt8_t
 *
pY
 = 
m≠
;

295 
uöt8_t
 *
pU
 = 
pY
 + (
width
 * 
height
);

296 
uöt8_t
 *
pV
 = 
pU
 + (
width
 * 
height
) / 4;

297 
uöt32_t
 
uv_off£t
 = 
width
 * 2 * (
uöt8_t
);

298 
uöt32_t
 
ix
, 
jx
;

300 
ix
 = 0; ix < 
height
; ix++) {

301 
jx
 = 0; jx < 
width
; jx += 2) {

302 
uöt16_t
 
ˇlc
;

303 i‡((
ix
&1) == 0) {

304 
ˇlc
 = *
ˇp_m≠
;

305 
ˇlc
 +*(
ˇp_m≠
 + 
uv_off£t
);

306 
ˇlc
 /= 2;

307 *
pU
++ = (
uöt8_t
Ë
ˇlc
;

309 
ˇp_m≠
++;

310 *
pY
++ = *
ˇp_m≠
++;

311 i‡((
ix
&1) == 0) {

312 
ˇlc
 = *
ˇp_m≠
;

313 
ˇlc
 +*(
ˇp_m≠
 + 
uv_off£t
);

314 
ˇlc
 /= 2;

315 *
pV
++ = (
uöt8_t
Ë
ˇlc
;

317 
ˇp_m≠
++;

318 *
pY
++ = *
ˇp_m≠
++;

321 
	}
}

323 
	$c⁄v_rgb24toyuv420p
(*
m≠
, *
ˇp_m≠
, 
width
, 
height
)

325 *
y
, *
u
, *
v
;

326 *
r
, *
g
, *
b
;

327 
i
, 
lo›
;

329 
b
 = 
ˇp_m≠
;

330 
g
 = 
b
 + 1;

331 
r
 = 
g
 + 1;

332 
y
 = 
m≠
;

333 
u
 = 
y
 + 
width
 * 
height
;

334 
v
 = 
u
 + (
width
 * 
height
) / 4;

335 
	`mem£t
(
u
, 0, 
width
 * 
height
 / 4);

336 
	`mem£t
(
v
, 0, 
width
 * 
height
 / 4);

338 
lo›
 = 0;Üo› < 
height
;Üoop++) {

339 
i
 = 0; i < 
width
; i += 2) {

340 *
y
++ = (9796 ** 
r
 + 19235 ** 
g
 + 3736 ** 
b
) >> 15;

341 *
u
 +((-4784 ** 
r
 - 9437 ** 
g
 + 14221 ** 
b
) >> 17) + 32;

342 *
v
 +((20218 ** 
r
 - 16941 ** 
g
 - 3277 ** 
b
) >> 17) + 32;

343 
r
 += 3;

344 
g
 += 3;

345 
b
 += 3;

346 *
y
++ = (9796 ** 
r
 + 19235 ** 
g
 + 3736 ** 
b
) >> 15;

347 *
u
 +((-4784 ** 
r
 - 9437 ** 
g
 + 14221 ** 
b
) >> 17) + 32;

348 *
v
 +((20218 ** 
r
 - 16941 ** 
g
 - 3277 ** 
b
) >> 17) + 32;

349 
r
 += 3;

350 
g
 += 3;

351 
b
 += 3;

352 
u
++;

353 
v
++;

356 i‡((
lo›
 & 1) == 0) {

357 
u
 -
width
 / 2;

358 
v
 -
width
 / 2;

361 
	}
}

363 
	$c⁄v_j≥g2yuv420
(
c⁄ãxt
 *
˙t
, *
d°
, 
√tˇm_buff
 * 
buff
, 
width
, 
height
)

365 
√tˇm_c⁄ãxt
 
√tˇm
;

367 i‡(!
buff
 || !
d°
)

370 i‡(!
buff
->
±r
)

373 
	`mem£t
(&
√tˇm
, 0, (netcam));

374 
√tˇm
.
img˙t_œ°
 = 1;

375 
√tˇm
.
œã°
 = 
buff
;

376 
√tˇm
.
width
 = width;

377 
√tˇm
.
height
 = height;

378 
√tˇm
.
˙t
 = cnt;

380 
	`±hªad_muãx_öô
(&
√tˇm
.
muãx
, 
NULL
);

381 
	`±hªad_c⁄d_öô
(&
√tˇm
.
ˇp_c⁄d
, 
NULL
);

382 
	`±hªad_c⁄d_öô
(&
√tˇm
.
pic_ªady
, 
NULL
);

383 
	`±hªad_c⁄d_öô
(&
√tˇm
.
exôög
, 
NULL
);

385 i‡(
	`£tjmp
(
√tˇm
.
£tjmp_buf„r
))

386  
NETCAM_GENERAL_ERROR
 | 
NETCAM_JPEG_CONV_ERROR
;

389  
	`√tˇm_¥oc_j≥g
(&
√tˇm
, 
d°
);

390 
	}
}

404 
	$mj≥gtoyuv420p
(*
m≠
, *
ˇp_m≠
, 
width
, 
height
, 
size
)

406 
uöt8_t
 *
yuv
[3];

407 *
y
, *
u
, *
v
;

408 
lo›
, 
ªt
;

410 
yuv
[0] = 
	`mÆloc
(
width
 * 
height
 * (yuv[0][0]));

411 
yuv
[1] = 
	`mÆloc
(
width
 * 
height
 / 4 * (yuv[1][0]));

412 
yuv
[2] = 
	`mÆloc
(
width
 * 
height
 / 4 * (yuv[2][0]));

415 
ªt
 = 
	`decode_j≥g_øw
(
ˇp_m≠
, 
size
, 0, 420, 
width
, 
height
, 
yuv
[0], yuv[1], yuv[2]);

417 i‡(
ªt
 == 1) {

418 i‡(
debug_Àvñ
 >
CAMERA_WARNINGS
)

419 
	`mŸi⁄_log
(
LOG_ERR
, 0, "%s: C‹ru± imagê... c⁄töue", 
__FUNCTION__
);

420 
ªt
 = 2;

424 
y
 = 
m≠
;

425 
u
 = 
y
 + 
width
 * 
height
;

426 
v
 = 
u
 + (
width
 * 
height
) / 4;

427 
	`mem£t
(
y
, 0, 
width
 * 
height
);

428 
	`mem£t
(
u
, 0, 
width
 * 
height
 / 4);

429 
	`mem£t
(
v
, 0, 
width
 * 
height
 / 4);

431 
lo›
 = 0;Üo› < 
width
 * 
height
;Üoop++)

432 *
m≠
++=
yuv
[0][
lo›
];

434 
lo›
 = 0;Üo› < 
width
 * 
height
 / 4;Üoop++)

435 *
m≠
++=
yuv
[1][
lo›
];

437 
lo›
 = 0;Üo› < 
width
 * 
height
 / 4;Üoop++)

438 *
m≠
++=
yuv
[2][
lo›
];

440 
	`‰ì
(
yuv
[0]);

441 
	`‰ì
(
yuv
[1]);

442 
	`‰ì
(
yuv
[2]);

444  
ªt
;

445 
	}
}

447 
	#MAX2
(
x
, 
y
Ë((xË> (yË? (xË: (y))

	)

448 
	#MIN2
(
x
, 
y
Ë((xË< (yË? (xË: (y))

	)

465 
	#AUTOBRIGHT_HYSTERESIS
 10

	)

466 
	#AUTOBRIGHT_DAMPER
 5

	)

467 
	#AUTOBRIGHT_MAX
 255

	)

468 
	#AUTOBRIGHT_MIN
 0

	)

470 
	$vid_do_autobright
(
c⁄ãxt
 *
˙t
, 
video_dev
 *
viddev
)

473 
brighäess_wödow_high
;

474 
brighäess_wödow_low
;

475 
brighäess_èrgë
;

476 
i
, 
j
 = 0, 
avg
 = 0, 
°ï
 = 0;

477 *
image
 = 
˙t
->
imgs
.
image_vúgö
;

479 
make_ch™ge
 = 0;

481 i‡(
˙t
->
c⁄f
.
brighäess
)

482 
brighäess_èrgë
 = 
˙t
->
c⁄f
.
brighäess
;

484 
brighäess_èrgë
 = 128;

486 
brighäess_wödow_high
 = 
	`MIN2
(
brighäess_èrgë
 + 
AUTOBRIGHT_HYSTERESIS
, 255);

487 
brighäess_wödow_low
 = 
	`MAX2
(
brighäess_èrgë
 - 
AUTOBRIGHT_HYSTERESIS
, 1);

489 
i
 = 0; i < 
˙t
->
imgs
.
mŸi⁄size
; i += 101) {

490 
avg
 +
image
[
i
];

491 
j
++;

493 
avg
 =ávg / 
j
;

496 i‡(
avg
 > 
brighäess_wödow_high
) {

497 
°ï
 = 
	`MIN2
((
avg
 - 
brighäess_èrgë
Ë/ 
AUTOBRIGHT_DAMPER
 + 1, 
viddev
->
brighäess
 - 
AUTOBRIGHT_MIN
);

498 i‡(
viddev
->
brighäess
 > 
°ï
 + 1 - 
AUTOBRIGHT_MIN
) {

499 
viddev
->
brighäess
 -
°ï
;

500 
make_ch™ge
 = 1;

502 } i‡(
avg
 < 
brighäess_wödow_low
) {

504 
°ï
 = 
	`MIN2
((
brighäess_èrgë
 - 
avg
Ë/ 
AUTOBRIGHT_DAMPER
 + 1, 
AUTOBRIGHT_MAX
 - 
viddev
->
brighäess
);

505 i‡(
viddev
->
brighäess
 < 
AUTOBRIGHT_MAX
 - 
°ï
) {

506 
viddev
->
brighäess
 +
°ï
;

507 
make_ch™ge
 = 1;

511  
make_ch™ge
;

512 
	}
}

518 #i‚de‡
WITHOUT_V4L


522 
±hªad_muãx_t
 
	gvid_muãx
;

527 
video_dev
 *
	gviddevs
 = 
NULL
;

535 
	$vid_öô
()

537 
	`±hªad_muãx_öô
(&
vid_muãx
, 
NULL
);

538 
	}
}

545 
	$vid_˛ónup
()

547 
	`±hªad_muãx_de°roy
(&
vid_muãx
);

548 
	}
}

557 
	$vid_˛o£
(
c⁄ãxt
 *
˙t
)

559 #i‚de‡
WITHOUT_V4L


560 
video_dev
 *
dev
 = 
viddevs
;

561 
video_dev
 *
¥ev
 = 
NULL
;

565 i‡(
˙t
->
√tˇm
) {

566 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "vid_close: callingÇetcam_cleanup");

567 
	`√tˇm_˛ónup
(
˙t
->
√tˇm
, 0);

568 
˙t
->
√tˇm
 = 
NULL
;

572 #i‚de‡
WITHOUT_V4L


575 
	`±hªad_muãx_lock
(&
vid_muãx
);

576 
dev
) {

577 i‡(
dev
->
fd
 =
˙t
->
video_dev
)

579 
¥ev
 = 
dev
;

580 
dev
 = dev->
√xt
;

582 
	`±hªad_muãx_u∆ock
(&
vid_muãx
);

585 
˙t
->
video_dev
 = -1;

587 i‡(
dev
 =
NULL
) {

588 
	`mŸi⁄_log
(
LOG_ERR
, 0, "vid_close: UnableÅo find video device");

592 i‡(--
dev
->
ußge_cou¡
 == 0) {

593 
	`mŸi⁄_log
(
LOG_INFO
, 0, "Closög videÿdevi˚ %s", 
dev
->
video_devi˚
);

594 #ifde‡
MOTION_V4L2


595 i‡(
dev
->
v4l2
) {

596 
	`v4l2_˛o£
(
dev
);

597 
	`v4l2_˛ónup
(
dev
);

600 
	`˛o£
(
dev
->
fd
);

601 
	`munm≠
(
viddevs
->
v4l_buf„rs
[0], 
dev
->
size_m≠
);

602 #ifde‡
MOTION_V4L2


605 
dev
->
fd
 = -1;

606 
	`±hªad_muãx_lock
(&
vid_muãx
);

609 i‡(
¥ev
 =
NULL
)

610 
viddevs
 = 
dev
->
√xt
;

612 
¥ev
->
√xt
 = 
dev
->next;

614 
	`±hªad_muãx_u∆ock
(&
vid_muãx
);

616 
	`±hªad_muãx©å_de°roy
(&
dev
->
©å
);

617 
	`±hªad_muãx_de°roy
(&
dev
->
muãx
);

618 
	`‰ì
(
dev
);

620 
	`mŸi⁄_log
(
LOG_INFO
, 0, "Still %d users of video device %s, so we don't close itÇow",

621 
dev
->
ußge_cou¡
, dev->
video_devi˚
);

625 i‡(
dev
->
ow√r
 =
˙t
->
thªadƒ
) {

626 
dev
->
‰ames
 = 0;

627 
dev
->
ow√r
 = -1;

628 
	`±hªad_muãx_u∆ock
(&
dev
->
muãx
);

632 
	}
}

634 #i‚de‡
WITHOUT_V4L


659 
	$vid_v4lx_°¨t
(
c⁄ãxt
 *
˙t
)

661 
c⁄fig
 *
c⁄f
 = &
˙t
->conf;

662 
fd
 = -1;

663 
video_dev
 *
dev
;

665 
width
, 
height
, 
öput
, 
n‹m
, 
tu√r_numbî
;

666 
‰equícy
;

674 i‡(
c⁄f
->
width
 % 16) {

675 
	`mŸi⁄_log
(
LOG_ERR
, 0, "c⁄fig imagêwidth (%dËi†nŸ modulÿ16", 
c⁄f
->
width
);

679 i‡(
c⁄f
->
height
 % 16) {

680 
	`mŸi⁄_log
(
LOG_ERR
, 0, "c⁄fig imagêheighà(%dËi†nŸ modulÿ16", 
c⁄f
->
height
);

684 
width
 = 
c⁄f
->width;

685 
height
 = 
c⁄f
->height;

686 
öput
 = 
c⁄f
->input;

687 
n‹m
 = 
c⁄f
->norm;

688 
‰equícy
 = 
c⁄f
->frequency;

689 
tu√r_numbî
 = 
c⁄f
->tuner_number;

691 
	`±hªad_muãx_lock
(&
vid_muãx
);

697 
˙t
->
imgs
.
width
 = width;

698 
˙t
->
imgs
.
height
 = height;

705 
dev
 = 
viddevs
;

706 
dev
) {

707 i‡(!
	`°rcmp
(
c⁄f
->
video_devi˚
, 
dev
->video_device)) {

708 
dev
->
ußge_cou¡
++;

709 
˙t
->
imgs
.
ty≥
 = 
dev
->
v4l_fmt
;

711 
˙t
->
imgs
.
ty≥
) {

712 
VIDEO_PALETTE_GREY
:

713 
˙t
->
imgs
.
mŸi⁄size
 = 
width
 * 
height
;

714 
˙t
->
imgs
.
size
 = 
width
 * 
height
;

716 
VIDEO_PALETTE_YUYV
:

717 
VIDEO_PALETTE_RGB24
:

718 
VIDEO_PALETTE_YUV422
:

719 
˙t
->
imgs
.
ty≥
 = 
VIDEO_PALETTE_YUV420P
;

720 
VIDEO_PALETTE_YUV420P
:

721 
˙t
->
imgs
.
mŸi⁄size
 = 
width
 * 
height
;

722 
˙t
->
imgs
.
size
 = (
width
 * 
height
 * 3) / 2;

725 
	`±hªad_muãx_u∆ock
(&
vid_muãx
);

726  
dev
->
fd
;

728 
dev
 = dev->
√xt
;

731 
dev
 = 
	`mymÆloc
((
video_dev
));

732 
	`mem£t
(
dev
, 0, (
video_dev
));

734 
dev
->
video_devi˚
 = 
c⁄f
->video_device;

736 
fd
 = 
	`›í
(
dev
->
video_devi˚
, 
O_RDWR
);

738 i‡(
fd
 < 0) {

739 
	`mŸi⁄_log
(
LOG_ERR
, 1, "FaûedÅÿ›í videÿdevi˚ %s", 
c⁄f
->
video_devi˚
);

740 
	`‰ì
(
dev
);

741 
	`±hªad_muãx_u∆ock
(&
vid_muãx
);

745 
	`±hªad_muãx©å_öô
(&
dev
->
©å
);

746 
	`±hªad_muãx_öô
(&
dev
->
muãx
, &dev->
©å
);

748 
dev
->
ußge_cou¡
 = 1;

749 
dev
->
fd
 = fd;

750 
dev
->
öput
 = input;

751 
dev
->
height
 = height;

752 
dev
->
width
 = width;

753 
dev
->
‰eq
 = 
‰equícy
;

754 
dev
->
tu√r_numbî
 =Åuner_number;

759 
dev
->
brighäess
 = 0;

760 
dev
->
c⁄åa°
 = 0;

761 
dev
->
ßtuøti⁄
 = 0;

762 
dev
->
hue
 = 0;

763 
dev
->
ow√r
 = -1;

764 
dev
->
v4l_fmt
 = 
VIDEO_PALETTE_YUV420P
;

765 
dev
->
Âs
 = 0;

766 #ifde‡
MOTION_V4L2


769 
dev
->
v4l2
 = 1;

771 i‡(!
	`v4l2_°¨t
(
˙t
, 
dev
, 
width
, 
height
, 
öput
, 
n‹m
, 
‰equícy
, 
tu√r_numbî
)) {

775 
dev
->
width
 = width;

776 
dev
->
height
 = height;

779 i‡(!
	`v4l_°¨t
(
˙t
, 
dev
, 
width
, 
height
, 
öput
, 
n‹m
, 
‰equícy
, 
tu√r_numbî
)) {

780 
	`˛o£
(
dev
->
fd
);

781 
	`±hªad_muãx©å_de°roy
(&
dev
->
©å
);

782 
	`±hªad_muãx_de°roy
(&
dev
->
muãx
);

783 
	`‰ì
(
dev
);

785 
	`±hªad_muãx_u∆ock
(&
vid_muãx
);

788 #ifde‡
MOTION_V4L2


789 
dev
->
v4l2
 = 0;

792 i‡(
dev
->
v4l2
 == 0) {

793 
	`mŸi⁄_log
(-1, 0, "Using V4L1");

795 
	`mŸi⁄_log
(-1, 0, "Using V4L2");

797 
width
 = 
dev
->width;

798 
height
 = 
dev
->height;

799 
˙t
->
imgs
.
width
 = width;

800 
˙t
->
imgs
.
height
 = height;

803 
˙t
->
imgs
.
ty≥
 = 
dev
->
v4l_fmt
;

805 
˙t
->
imgs
.
ty≥
) {

806 
VIDEO_PALETTE_GREY
:

807 
˙t
->
imgs
.
size
 = 
width
 * 
height
;

808 
˙t
->
imgs
.
mŸi⁄size
 = 
width
 * 
height
;

810 
VIDEO_PALETTE_YUYV
:

811 
VIDEO_PALETTE_RGB24
:

812 
VIDEO_PALETTE_YUV422
:

813 
˙t
->
imgs
.
ty≥
 = 
VIDEO_PALETTE_YUV420P
;

814 
VIDEO_PALETTE_YUV420P
:

815 
˙t
->
imgs
.
size
 = (
width
 * 
height
 * 3) / 2;

816 
˙t
->
imgs
.
mŸi⁄size
 = 
width
 * 
height
;

821 
dev
->
√xt
 = 
viddevs
;

822 
viddevs
 = 
dev
;

824 
	`±hªad_muãx_u∆ock
(&
vid_muãx
);

826  
fd
;

827 
	}
}

854 
	$vid_°¨t
(
c⁄ãxt
 *
˙t
)

856 
c⁄fig
 *
c⁄f
 = &
˙t
->conf;

857 
dev
 = -1;

859 i‡(
c⁄f
->
√tˇm_uæ
) {

860 
dev
 = 
	`√tˇm_°¨t
(
˙t
);

861 i‡(
dev
 < 0) {

862 
	`√tˇm_˛ónup
(
˙t
->
√tˇm
, 1);

863 
˙t
->
√tˇm
 = 
NULL
;

866 #ifde‡
WITHOUT_V4L


868 
	`mŸi⁄_log
(
LOG_ERR
, 0,"You must setupÇetcam_url");

871 
dev
 = 
	`vid_v4lx_°¨t
(
˙t
);

874  
dev
;

875 
	}
}

897 
	$vid_√xt
(
c⁄ãxt
 *
˙t
, *
m≠
)

899 
ªt
 = -2;

900 
c⁄fig
 *
c⁄f
 = &
˙t
->conf;

902 i‡(
c⁄f
->
√tˇm_uæ
) {

903 i‡(
˙t
->
video_dev
 == -1)

904  
NETCAM_GENERAL_ERROR
;

906  
	`√tˇm_√xt
(
˙t
, 
m≠
);

908 #i‚de‡
WITHOUT_V4L


913 
video_dev
 *
dev
;

914 
width
, 
height
;

917 
width
 = 
˙t
->
rŸ©e_d©a
.
ˇp_width
;

918 
height
 = 
˙t
->
rŸ©e_d©a
.
ˇp_height
;

920 
	`±hªad_muãx_lock
(&
vid_muãx
);

921 
dev
 = 
viddevs
;

922 
dev
) {

923 i‡(
dev
->
fd
 =
˙t
->
video_dev
)

925 
dev
 = dev->
√xt
;

927 
	`±hªad_muãx_u∆ock
(&
vid_muãx
);

929 i‡(
dev
 =
NULL
)

930  
V4L_FATAL_ERROR
;

932 i‡(
dev
->
ow√r
 !
˙t
->
thªadƒ
) {

933 
	`±hªad_muãx_lock
(&
dev
->
muãx
);

934 
dev
->
ow√r
 = 
˙t
->
thªadƒ
;

935 
dev
->
‰ames
 = 
c⁄f
->
roundrobö_‰ames
;

937 #ifde‡
MOTION_V4L2


938 i‡(
dev
->
v4l2
) {

939 
	`v4l2_£t_öput
(
˙t
, 
dev
, 
m≠
, 
width
, 
height
, 
c⁄f
);

940 
ªt
 = 
	`v4l2_√xt
(
˙t
, 
dev
, 
m≠
, 
width
, 
height
);

943 
	`v4l_£t_öput
(
˙t
, 
dev
, 
m≠
, 
width
, 
height
, 
c⁄f
->
öput
, c⁄f->
n‹m
,

944 
c⁄f
->
roundrobö_skù
, c⁄f->
‰equícy
, c⁄f->
tu√r_numbî
);

946 
ªt
 = 
	`v4l_√xt
(
dev
, 
m≠
, 
width
, 
height
);

947 #ifde‡
MOTION_V4L2


950 i‡(--
dev
->
‰ames
 <= 0) {

951 
dev
->
ow√r
 = -1;

952 
dev
->
‰ames
 = 0;

953 
	`±hªad_muãx_u∆ock
(&
dev
->
muãx
);

957 i‡(
˙t
->
rŸ©e_d©a
.
degªes
 > 0)

958 
	`rŸ©e_m≠
(
˙t
, 
m≠
);

962  
ªt
;

963 
	}
}

	@video_freebsd.c

11 
	~"rŸ©e.h
"

12 
	~"video_‰ìbsd.h
"

14 #i‚de‡
WITHOUT_V4L


17 
	~<sys/mm™.h
>

21 
	#VIDEO_NONE
 0

	)

22 
	#VIDEO_RGB08
 1

	)

23 
	#VIDEO_GRAY
 2

	)

24 
	#VIDEO_RGB15_LE
 3

	)

25 
	#VIDEO_RGB16_LE
 4

	)

26 
	#VIDEO_RGB15_BE
 5

	)

27 
	#VIDEO_RGB16_BE
 6

	)

28 
	#VIDEO_BGR24
 7

	)

29 
	#VIDEO_BGR32
 8

	)

30 
	#VIDEO_RGB24
 9

	)

31 
	#VIDEO_RGB32
 10

	)

32 
	#VIDEO_LUT2
 11

	)

33 
	#VIDEO_LUT4
 12

	)

34 
	#VIDEO_YUYV
 13

	)

35 
	#VIDEO_YUV422P
 14

	)

36 
	#VIDEO_YUV420P
 15

	)

37 
	#VIDEO_MJPEG
 16

	)

38 
	#VIDEO_JPEG
 17

	)

39 
	#VIDEO_UYVY
 18

	)

40 
	#VIDEO_MPEG
 19

	)

41 
	#VIDEO_FMT_COUNT
 20

	)

43 
	#¨øy_ñem
(
x
Ë((xË/ –(x)[0] ))

	)

45 c⁄° 
	sˇm∑øm_°
 {

46 
	mmö
, 
	mmax
, 
	mønge
, 
	mdrv_mö
, 
	mdrv_ønge
, 
	mdef
;

47 } 
	gCamP¨ams
[] = {

49 
BT848_BRIGHTMIN
, BT848_BRIGHTMIN + 
BT848_BRIGHTRANGE
,

50 
BT848_BRIGHTRANGE
, 
BT848_BRIGHTREGMIN
,

51 
BT848_BRIGHTREGMAX
 - 
BT848_BRIGHTREGMIN
 + 1, 
BT848_BRIGHTCENTER
, },

53 
BT848_CONTRASTMIN
, (BT848_CONTRASTMIN + 
BT848_CONTRASTRANGE
),

54 
BT848_CONTRASTRANGE
, 
BT848_CONTRASTREGMIN
,

55 (
BT848_CONTRASTREGMAX
 - 
BT848_CONTRASTREGMIN
 + 1),

56 
BT848_CONTRASTCENTER
, },

58 
BT848_CHROMAMIN
, (BT848_CHROMAMIN + 
BT848_CHROMARANGE
), BT848_CHROMARANGE,

59 
BT848_CHROMAREGMIN
, (
BT848_CHROMAREGMAX
 - BT848_CHROMAREGMIN + 1 ),

60 
BT848_CHROMACENTER
, },

63 
	#BRIGHT
 0

	)

64 
	#CONTR
 1

	)

65 
	#CHROMA
 2

	)

67 vﬁ©ûê
sig_©omic_t
 
	gbkå_‰ame_waôög
;

72 
	$ˇtchsig«l
(
sig
)

74 
bkå_‰ame_waôög
++;

75 
	}
}

79 
	$yuv422to420p
(*
m≠
, *
ˇp_m≠
, 
width
, 
height
)

81 *
§c
, *
de°
, *
§c2
, *
de°2
;

82 
i
, 
j
;

85 
§c
 = 
ˇp_m≠
;

86 
de°
 = 
m≠
;

87 
i
 = 
width
 * 
height
; i; i--) {

88 *
de°
++ = *
§c
;

89 
§c
 += 2;

92 
§c
 = 
ˇp_m≠
 + 1;

93 
§c2
 = 
ˇp_m≠
 + 
width
 * 2 + 1;

94 
de°
 = 
m≠
 + 
width
* 
height
;

95 
de°2
 = 
de°
 + (
width
 * 
height
) / 4;

96 
i
 = 
height
 / 2; i; i--) {

97 
j
 = 
width
 / 2; j; j--) {

98 *
de°
 = (()*
§c
 + ()*
§c2
) / 2;

99 
§c
 += 2;

100 
§c2
 += 2;

101 
de°
++;

102 *
de°2
 = (()*
§c
 + ()*
§c2
) / 2;

103 
§c
 += 2;

104 
§c2
 += 2;

105 
de°2
++;

107 
§c
 +
width
 * 2;

108 
§c2
 +
width
 * 2;

111 
	}
}

115 
	$rgb24toyuv420p
(*
m≠
, *
ˇp_m≠
, 
width
, 
height
)

117 *
y
, *
u
, *
v
;

118 *
r
, *
g
, *
b
;

119 
i
, 
lo›
;

121 
b
 = 
ˇp_m≠
;

122 
g
 = 
b
 + 1;

123 
r
 = 
g
 + 1;

124 
y
 = 
m≠
;

125 
u
 = 
y
 + 
width
 * 
height
;

126 
v
 = 
u
 + (
width
 * 
height
) / 4;

127 
	`mem£t
(
u
, 0, 
width
 * 
height
 / 4);

128 
	`mem£t
(
v
, 0, 
width
 * 
height
 / 4);

130 
lo›
 = 0;Üo› < 
height
;Üoop++) {

131 
i
 = 0; i < 
width
; i += 2) {

132 *
y
++ = (9796 ** 
r
 + 19235 ** 
g
 + 3736 ** 
b
) >> 15;

133 *
u
 +((-4784 ** 
r
 - 9437 ** 
g
 + 14221 ** 
b
) >> 17) + 32;

134 *
v
 +((20218 ** 
r
 - 16941**
g
 - 3277 ** 
b
) >> 17) + 32;

135 
r
 += 3;

136 
g
 += 3;

137 
b
 += 3;

138 *
y
++ = (9796 ** 
r
 + 19235 ** 
g
 + 3736 ** 
b
) >> 15;

139 *
u
 +((-4784 ** 
r
 - 9437 ** 
g
 + 14221 ** 
b
) >> 17) + 32;

140 *
v
 +((20218 ** 
r
 - 16941 ** 
g
 - 3277 ** 
b
) >> 17) + 32;

141 
r
 += 3;

142 
g
 += 3;

143 
b
 += 3;

144 
u
++;

145 
v
++;

148 i‡((
lo›
 & 1) == 0) {

149 
u
 -
width
 / 2;

150 
v
 -
width
 / 2;

154 
	}
}

177 
	$£t_hue
(
viddev
, 
√w_hue
)

179 sig√d 
io˘lvÆ
 = 
√w_hue
;

181 i‡(
	`io˘l
(
viddev
, 
METEORSHUE
, &
io˘lvÆ
) < 0) {

182 
	`mŸi⁄_log
(
LOG_ERR
, 1, "%s: METEORSHUE Eº‹ sëtög huê[%d]", 
__FUNCTION__
, 
√w_hue
);

186 i‡(
debug_Àvñ
 >
CAMERA_VIDEO
)

187 
	`mŸi⁄_log
(-1, 0, "%s:Åÿ[%d]", 
__FUNCTION__
, 
io˘lvÆ
);

189  
io˘lvÆ
;

190 
	}
}

192 
	$gë_hue
(
viddev
 , *
hue
)

194 sig√d 
io˘lvÆ
;

196 i‡(
	`io˘l
(
viddev
, 
METEORGHUE
, &
io˘lvÆ
) < 0) {

197 
	`mŸi⁄_log
(
LOG_ERR
, 1, "%s: METEORGHUE Eº‹ gëtög hue", 
__FUNCTION__
);

201 i‡(
debug_Àvñ
 >
CAMERA_VIDEO
)

202 
	`mŸi⁄_log
(-1, 0, "%s:Åÿ[%d]", 
__FUNCTION__
, 
io˘lvÆ
);

204 *
hue
 = 
io˘lvÆ
;

205  
io˘lvÆ
;

206 
	}
}

208 
	$£t_ßtuøti⁄
(
viddev
, 
√w_ßtuøti⁄
)

210 
io˘lvÆ

√w_ßtuøti⁄
;

212 i‡(
	`io˘l
(
viddev
, 
METEORSCSAT
, &
io˘lvÆ
) < 0) {

213 
	`mŸi⁄_log
(
LOG_ERR
, 1, "%s: METEORSCSAT Error setting saturation [%d]",

214 
__FUNCTION__
, 
√w_ßtuøti⁄
);

218 i‡(
debug_Àvñ
 >
CAMERA_VIDEO
)

219 
	`mŸi⁄_log
(-1, 0, "%s:Åÿ[%d]", 
__FUNCTION__
, 
io˘lvÆ
);

221  
io˘lvÆ
;

222 
	}
}

224 
	$gë_ßtuøti⁄
(
viddev
 , *
ßtuøti⁄
)

226 
io˘lvÆ
;

228 i‡(
	`io˘l
(
viddev
, 
METEORGCSAT
, &
io˘lvÆ
) < 0) {

230 
	`mŸi⁄_log
(
LOG_ERR
, 1, "%s: METEORGCSAT Eº‹ gëtög s©uøti⁄", 
__FUNCTION__
);

234 i‡(
debug_Àvñ
 >
CAMERA_VIDEO
)

235 
	`mŸi⁄_log
(-1, 0, "%s:Åÿ[%d]", 
__FUNCTION__
, 
io˘lvÆ
);

237 *
ßtuøti⁄
 = 
io˘lvÆ
;

238  
io˘lvÆ
;

239 
	}
}

241 
	$£t_c⁄åa°
(
viddev
, 
√w_c⁄åa°
)

243 
io˘lvÆ
 = 
√w_c⁄åa°
;

245 i‡(
	`io˘l
(
viddev
, 
METEORSCONT
, &
io˘lvÆ
) < 0) {

246 
	`mŸi⁄_log
(
LOG_ERR
, 1, "%s: METEORSCONT Error setting contrast [%d]",

247 
__FUNCTION__
, 
√w_c⁄åa°
);

251 i‡(
debug_Àvñ
 >
CAMERA_VIDEO
)

252 
	`mŸi⁄_log
(-1, 0, "%s:Åÿ[%d]", 
__FUNCTION__
, 
io˘lvÆ
);

254  
io˘lvÆ
;

255 
	}
}

257 
	$gë_c⁄åa°
(
viddev
, *
c⁄åa°
)

259 
io˘lvÆ
;

261 i‡(
	`io˘l
 (
viddev
, 
METEORGCONT
, &
io˘lvÆ
 ) < 0) {

262 
	`mŸi⁄_log
(
LOG_ERR
, 1, "%s: METEORGCONT Eº‹ gëtög c⁄åa°", 
__FUNCTION__
);

266 i‡(
debug_Àvñ
 >
CAMERA_VIDEO
)

267 
	`mŸi⁄_log
(-1, 0, "%s:Åÿ[%d]", 
__FUNCTION__
, 
io˘lvÆ
);

269 *
c⁄åa°
 = 
io˘lvÆ
;

270  
io˘lvÆ
;

271 
	}
}

274 
	$£t_brighäess
(
viddev
, 
√w_bright
)

276 
io˘lvÆ
 = 
√w_bright
;

278 i‡(
	`io˘l
(
viddev
, 
METEORSBRIG
, &
io˘lvÆ
) < 0) {

279 
	`mŸi⁄_log
(
LOG_ERR
, 1, "%s: METEORSBRIG brighäes†[%d]", 
__FUNCTION__
, 
√w_bright
);

283 i‡(
debug_Àvñ
 >
CAMERA_VIDEO
)

284 
	`mŸi⁄_log
(-1, 0, "%s:Åÿ[%d]", 
__FUNCTION__
, 
io˘lvÆ
);

286  
io˘lvÆ
;

287 
	}
}

290 
	$gë_brighäess
(
viddev
, *
brighäess
)

292 
io˘lvÆ
;

294 i‡(
	`io˘l
(
viddev
, 
METEORGBRIG
, &
io˘lvÆ
) < 0) {

295 
	`mŸi⁄_log
(
LOG_ERR
, 1, "%s: METEORGBRIG gëtög brighäess", 
__FUNCTION__
);

299 i‡(
debug_Àvñ
 >
CAMERA_VIDEO
)

300 
	`mŸi⁄_log
(-1, 0, "%s:Åÿ[%d]", 
__FUNCTION__
, 
io˘lvÆ
);

302 *
brighäess
 = 
io˘lvÆ
;

303  
io˘lvÆ
;

304 
	}
}

328 
	$£t_‰eq
(
video_dev
 *
viddev
, 
‰eq
)

330 
tu√r_fd
 = 
viddev
->
fd_tu√r
;

331 
ﬁd_audio
;

333 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "%s: NŸ im∂emíãd", 
__FUNCTION__
);

339 i‡(
	`io˘l
(
tu√r_fd
, 
BT848_GAUDIO
, &
ﬁd_audio
) < 0) {

340 
	`mŸi⁄_log
(
LOG_ERR
, 1, "%s: BT848_GAUDIO", 
__FUNCTION__
);

344 i‡(
	`io˘l
(
tu√r_fd
, 
TVTUNER_SETFREQ
, &
‰eq
) < 0) {

345 
	`mŸi⁄_log
(
LOG_ERR
, 1, "%s: Tunög (TVTUNER_SETFREQËÁûed , fªq [%lu]", 
__FUNCTION__
, 
‰eq
);

349 
ﬁd_audio
 &
AUDIO_MUTE
;

350 i‡(
ﬁd_audio
) {

351 
ﬁd_audio
 = 
AUDIO_MUTE
;

352 i‡(
	`io˘l
(
tu√r_fd
 , 
BT848_SAUDIO
, &
ﬁd_audio
) < 0) {

353 
	`mŸi⁄_log
(
LOG_ERR
, 1, "%s: BT848_SAUDIO %i", 
__FUNCTION__
, 
ﬁd_audio
);

359 
	}
}

370 
	$£t_öput
(
video_dev
 *
viddev
, 
öput
)

372 
a˘p‹t
;

373 
p‹td©a
[] = { 
METEOR_INPUT_DEV0
, 
METEOR_INPUT_DEV1
,

374 
METEOR_INPUT_DEV2
, 
METEOR_INPUT_DEV3
,

375 
METEOR_INPUT_DEV_SVIDEO
};

377 i‡(
öput
 >
	`¨øy_ñem
(
p‹td©a
)) {

378 
	`mŸi⁄_log
(
LOG_INFO
, 0, "%s: Ch™√»P‹à%d ouào‡øngê(0-4)", 
__FUNCTION__
, 
öput
);

382 
a˘p‹t
 = 
p‹td©a
[
öput
];

383 i‡(
	`io˘l
(
viddev
->
fd_bkå
, 
METEORSINPUT
, &
a˘p‹t
) < 0) {

384 i‡(
öput
 !
IN_DEFAULT
) {

385 
	`mŸi⁄_log
(
LOG_INFO
, 1, "%s: METEORSINPUT %d invalid - Trying default %d",

386 
__FUNCTION__
, 
öput
, 
IN_DEFAULT
);

387 
öput
 = 
IN_DEFAULT
;

388 
a˘p‹t
 = 
p‹td©a
[
öput
];

389 i‡(
	`io˘l
(
viddev
->
fd_bkå
, 
METEORSINPUT
, &
a˘p‹t
) < 0) {

390 
	`mŸi⁄_log
(
LOG_ERR
, 1, "%s: METEORSINPUT %d inô", 
__FUNCTION__
, 
öput
);

394 
	`mŸi⁄_log
(
LOG_ERR
, 1, "%s: METEORSINPUT %d inô", 
__FUNCTION__
, 
öput
);

399 i‡(
debug_Àvñ
 >
CAMERA_VIDEO
)

400 
	`mŸi⁄_log
(-1, 0, "%s:Åÿ[%d]", 
__FUNCTION__
, 
öput
);

402  
öput
;

403 
	}
}

405 
	$£t_geomëry
(
video_dev
 *
viddev
, 
width
, 
height
)

407 
mëe‹_geomë
 
geom
;

408 
h_max
;

410 
geom
.
cﬁumns
 = 
width
;

411 
geom
.
rows
 = 
height
;

413 
geom
.
of‹m©
 = 
METEOR_GEO_YUV_422
 | 
METEOR_GEO_YUV_12
;

416 
viddev
->
n‹m
) {

417 
PAL
:

418 
h_max
 = 
PAL_HEIGHT
;

420 
NTSC
:

421 
h_max
 = 
NTSC_HEIGHT
;

423 
SECAM
:

424 
h_max
 = 
SECAM_HEIGHT
;

427 
h_max
 = 
PAL_HEIGHT
;

430 i‡(
height
 <
h_max
 / 2)

431 
geom
.
of‹m©
 |
METEOR_GEO_EVEN_ONLY
;

433 
geom
.
‰ames
 = 1;

435 i‡(
	`io˘l
(
viddev
->
fd_bkå
, 
METEORSETGEO
, &
geom
) < 0) {

436 
	`mŸi⁄_log
(
LOG_ERR
, 1, "%s: Couldn'à£àthêgeomëry", 
__FUNCTION__
);

440 i‡(
debug_Àvñ
 >
CAMERA_VIDEO
)

441 
	`mŸi⁄_log
(-1, 0, "%s:Åÿ[%d/%d] N‹m %d", 
__FUNCTION__
, 
width
, 
height
, 
viddev
->
n‹m
);

444 
	}
}

450 
	$£t_öput_f‹m©
(
video_dev
 *
viddev
, 
√wf‹m©
)

452 
öput_f‹m©
[] = { 
NORM_PAL_NEW
, 
NORM_NTSC_NEW
, 
NORM_SECAM_NEW
, 
NORM_DEFAULT_NEW
};

453 
f‹m©
;

455 i‡(
√wf‹m©
 >
	`¨øy_ñem
–
öput_f‹m©
 )) {

456 
	`mŸi⁄_log
(
LOG_WARNING
, 0, "%s: I≈uàf‹m© %d ouào‡øngê(0-2)", 
__FUNCTION__
, 
√wf‹m©
);

460 
f‹m©
 = 
öput_f‹m©
[
√wf‹m©
];

462 i‡(
	`io˘l
–
viddev
->
fd_bkå
, 
BT848SFMT
, &
f‹m©
) < 0) {

463 
	`mŸi⁄_log
(
LOG_ERR
, 1, "%s: BT848SFMT, Couldn't setÅhe input format ,Åryágain with default",

464 
__FUNCTION__
);

465 
f‹m©
 = 
NORM_DEFAULT_NEW
;

466 
√wf‹m©
 = 3;

468 i‡(
	`io˘l
(
viddev
->
fd_bkå
, 
BT848SFMT
, &
f‹m©
) < 0) {

469 
	`mŸi⁄_log
(
LOG_ERR
, 1, "%s: BT848SFMT, Couldn't setÅhe input formatÉither default",

470 
__FUNCTION__
);

475 i‡(
debug_Àvñ
 >
CAMERA_VIDEO
)

476 
	`mŸi⁄_log
(-1, 0, "%s:Åÿ%d", 
__FUNCTION__
, 
√wf‹m©
);

478  
√wf‹m©
;

479 
	}
}

565 
	$v4l_pi˘uª_c⁄åﬁs
(
c⁄ãxt
 *
˙t
, 
video_dev
 *
viddev
)

567 
dev
 = 
viddev
->
fd_bkå
;

569 i‡((
˙t
->
c⁄f
.
c⁄åa°
Ë&& (˙t->c⁄f.c⁄åa° !
viddev
->contrast)) {

570 
	`£t_c⁄åa°
(
dev
, 
˙t
->
c⁄f
.
c⁄åa°
);

571 
viddev
->
c⁄åa°
 = 
˙t
->
c⁄f
.contrast;

574 i‡((
˙t
->
c⁄f
.
hue
Ë&& (˙t->c⁄f.huê!
viddev
->hue)) {

575 
	`£t_hue
(
dev
, 
˙t
->
c⁄f
.
hue
);

576 
viddev
->
hue
 = 
˙t
->
c⁄f
.hue;

579 i‡((
˙t
->
c⁄f
.
brighäess
) &&

580 (
˙t
->
c⁄f
.
brighäess
 !
viddev
->brightness)) {

581 
	`£t_brighäess
(
dev
, 
˙t
->
c⁄f
.
brighäess
);

582 
viddev
->
brighäess
 = 
˙t
->
c⁄f
.brightness;

585 i‡((
˙t
->
c⁄f
.
ßtuøti⁄
) &&

586 (
˙t
->
c⁄f
.
ßtuøti⁄
 !
viddev
->saturation)) {

587 
	`£t_ßtuøti⁄
(
dev
, 
˙t
->
c⁄f
.
ßtuøti⁄
);

588 
viddev
->
ßtuøti⁄
 = 
˙t
->
c⁄f
.saturation;

590 
	}
}

608 *
	$v4l_°¨t
(
video_dev
 *
viddev
, 
width
, 
height
,

609 
öput
, 
n‹m
, 
‰eq
)

611 
dev_bkå
 = 
viddev
->
fd_bkå
;

612 
siga˘i⁄
 
a˘
, 
ﬁd
;

617 
dummy
 = 1;

620 *
m≠
;

623 i‡((
viddev
->
tu√r_devi˚
 !
NULL
Ë&& (
öput
 =
IN_TV
)) {

624 i‡(!
‰eq
) {

625 
	`mŸi⁄_log
(
LOG_ERR
, 0, "%s: Not valid Frequency [%lu] for Source input [%i]",

626 
__FUNCTION__
, 
‰eq
, 
öput
);

627  
NULL
;

628 } i‡(
	`£t_‰eq
(
viddev
, 
‰eq
) == -1) {

629 
	`mŸi⁄_log
(
LOG_ERR
, 0, "%s: Frequency [%lu] Source input [%i]",

630 
__FUNCTION__
, 
‰eq
, 
öput
);

631  
NULL
;

637 i‡((
dummy
 = 
	`£t_öput
(
viddev
, 
öput
)) == -1) {

638 
	`mŸi⁄_log
(
LOG_ERR
, 0, "%s: së i≈uà[%d]", 
__FUNCTION__
, 
öput
);

639  
NULL
;

642 
viddev
->
öput
 = 
dummy
;

644 i‡((
dummy
 = 
	`£t_öput_f‹m©
(
viddev
, 
n‹m
)) == -1) {

645 
	`mŸi⁄_log
(
LOG_ERR
, 0, "%s: së i≈uàf‹m© [%d]", 
__FUNCTION__
, 
n‹m
);

646  
NULL
;

649 
viddev
->
n‹m
 = 
dummy
;

651 i‡(
	`£t_geomëry
(
viddev
, 
width
, 
height
) == -1) {

652 
	`mŸi⁄_log
(
LOG_ERR
, 0, "%s: së geomëry [%d]x[%d]", 
__FUNCTION__
, 
width
, 
height
);

653  
NULL
;

668 i‡(
‰eq
) {

669 i‡(
debug_Àvñ
 >
CAMERA_DEBUG
)

670 
	`mŸi⁄_log
(-1, 0, "%s: Fªquícy së (nÿim∂emíãd yë", 
__FUNCTION__
);

687 
viddev
->
v4l_bufsize
 = (((
width
 * 
height
 * 3 / 2)) * ());

688 
viddev
->
v4l_fmt
 = 
VIDEO_PALETTE_YUV420P
;

691 
m≠
 = 
	`mm≠
((
ˇddr_t
)0, 
viddev
->
v4l_bufsize
, 
PROT_READ
|
PROT_WRITE
, 
MAP_SHARED
, 
dev_bkå
, (
off_t
)0);

693 i‡(
m≠
 =
MAP_FAILED
){

694 
	`mŸi⁄_log
(
LOG_ERR
, 1, "%s: mm≠ faûed", 
__FUNCTION__
);

695  
NULL
;

700 
viddev
->
v4l_maxbuf„r
 = 2;

701 
viddev
->
v4l_buf„rs
[0] = 
m≠
;

702 
viddev
->
v4l_buf„rs
[1] = (*)
m≠
 + 0;

705 
viddev
->
v4l_buf„rs
[0] = 
m≠
;

706 
viddev
->
v4l_maxbuf„r
 = 1;

709 
viddev
->
v4l_curbuf„r
 = 0;

713 i‡(
	`io˘l
(
dev_bkå
, 
BT848SCBUF
, &
dummy
) < 0) {

714 
	`mŸi⁄_log
(
LOG_ERR
, 1, "%s: BT848SCBUF", 
__FUNCTION__
);

715  
NULL
;

720 
	`mem£t
(&
a˘
, 0, (act));

721 
	`sigem±y£t
(&
a˘
.
ß_mask
);

722 
a˘
.
ß_h™dÀr
 = 
ˇtchsig«l
;

723 
	`siga˘i⁄
(
SIGUSR2
, &
a˘
, &
ﬁd
);

725 
dummy
 = 
SIGUSR2
;

730 i‡((
viddev
->
ˇ±uª_mëhod
 =
METEOR_CAP_CONTINOUS
Ë&& (
	`io˘l
(
dev_bkå
, 
METEORSSIGNAL
, &
dummy
) < 0)) {

731 
	`mŸi⁄_log
(
LOG_ERR
, 1, "%s: METEORSSIGNAL", 
__FUNCTION__
);

732 
	`mŸi⁄_log
(
LOG_INFO
, 0 , "%s: METEORSSIGNAL", 
__FUNCTION__
);

733 
viddev
->
ˇ±uª_mëhod
 = 
METEOR_CAP_SINGLE
;

734 i‡(
	`io˘l
(
dev_bkå
, 
METEORCAPTUR
, &
viddev
->
ˇ±uª_mëhod
) < 0) {

735 
	`mŸi⁄_log
(
LOG_ERR
, 1, "%s: METEORCAPTUR using single method "

736 "Eº‹ c≠turög", 
__FUNCTION__
);

737 
	`mŸi⁄_log
(
LOG_INFO
, 0, "%s: METEORCAPTUR using single method "

738 "Eº‹ c≠turög", 
__FUNCTION__
);

741 i‡(
	`io˘l
(
dev_bkå
, 
METEORCAPTUR
, &
viddev
->
ˇ±uª_mëhod
) < 0) {

742 
viddev
->
ˇ±uª_mëhod
 = 
METEOR_CAP_SINGLE
;

743 i‡(
	`io˘l
(
dev_bkå
, 
METEORCAPTUR
, &
viddev
->
ˇ±uª_mëhod
) < 0) {

744 
	`mŸi⁄_log
(
LOG_ERR
, 1, "%s: METEORCAPTUR using single method "

745 "Eº‹ c≠turög", 
__FUNCTION__
);

746 
	`mŸi⁄_log
(
LOG_INFO
, 0, "%s: METEORCAPTUR using single method "

747 "Eº‹ c≠turög", 
__FUNCTION__
);

752 i‡(
viddev
->
ˇ±uª_mëhod
 =
METEOR_CAP_CONTINOUS
)

753 
	`mŸi⁄_log
(
LOG_INFO
, 0, "%s: METEORCAPTUR METEOR_CAP_CONTINOUS", 
__FUNCTION__
);

755 
	`mŸi⁄_log
(
LOG_INFO
, 0, "%s: METEORCAPTUR METEOR_CAP_SINGLE", 
__FUNCTION__
);

758 
	`SLEEP
(1, 0);

761 
viddev
->
v4l_fmt
) {

762 
VIDEO_PALETTE_YUV420P
:

763 
viddev
->
v4l_bufsize
 = (
width
 * 
height
 * 3) / 2;

765 
VIDEO_PALETTE_YUV422
:

766 
viddev
->
v4l_bufsize
 = (
width
 * 
height
 * 2);

768 
VIDEO_PALETTE_RGB24
:

769 
viddev
->
v4l_bufsize
 = (
width
 * 
height
 * 3);

771 
VIDEO_PALETTE_GREY
:

772 
viddev
->
v4l_bufsize
 = 
width
 * 
height
;

776 
	`mŸi⁄_log
(
LOG_INFO
, 0, "HUE [%d]", 
	`gë_hue
(
dev_bkå
, &
dummy
));

777 
	`mŸi⁄_log
(
LOG_INFO
, 0, "SATURATION [%d]", 
	`gë_ßtuøti⁄
(
dev_bkå
, &
dummy
));

778 
	`mŸi⁄_log
(
LOG_INFO
, 0, "BRIGHTNESS [%d]", 
	`gë_brighäess
(
dev_bkå
, &
dummy
));

779 
	`mŸi⁄_log
(
LOG_INFO
, 0, "CONTRAST [%d]", 
	`gë_c⁄åa°
(
dev_bkå
, &
dummy
));

781  
m≠
;

782 
	}
}

798 
	$v4l_√xt
(
video_dev
 *
viddev
, *
m≠
, 
width
, 
height
)

800 
dev_bkå
 = 
viddev
->
fd_bkå
;

801 *
ˇp_m≠
 = 
NULL
;

802 
sögÀ
 = 
METEOR_CAP_SINGLE
;

803 
sig£t_t
 
£t
, 
ﬁd
;

810 
	`sigem±y£t
 (&
£t
);

811 
	`sigadd£t
 (&
£t
, 
SIGCHLD
);

812 
	`sigadd£t
 (&
£t
, 
SIGALRM
);

813 
	`sigadd£t
 (&
£t
, 
SIGUSR1
);

814 
	`sigadd£t
 (&
£t
, 
SIGTERM
);

815 
	`sigadd£t
 (&
£t
, 
SIGHUP
);

816 
	`±hªad_sigmask
(
SIG_BLOCK
, &
£t
, &
ﬁd
);

817 
ˇp_m≠
 = 
viddev
->
v4l_buf„rs
[viddev->
v4l_curbuf„r
];

819 
viddev
->
v4l_curbuf„r
++;

820 i‡(
viddev
->
v4l_curbuf„r
 >viddev->
v4l_maxbuf„r
)

821 
viddev
->
v4l_curbuf„r
 = 0;

825 i‡(
viddev
->
ˇ±uª_mëhod
 =
METEOR_CAP_CONTINOUS
) {

826 i‡(
bkå_‰ame_waôög
)

827 
bkå_‰ame_waôög
 = 0;

829 } i‡(
	`io˘l
(
dev_bkå
, 
METEORCAPTUR
, &
sögÀ
) < 0) {

830 
	`mŸi⁄_log
(
LOG_ERR
, 1, "%s: Eº‹ c≠turög usög sögÀ mëhod", 
__FUNCTION__
);

831 
	`sig¥ocmask
(
SIG_UNBLOCK
, &
ﬁd
, 
NULL
);

836 
	`±hªad_sigmask
(
SIG_UNBLOCK
, &
ﬁd
, 
NULL
);

838 
viddev
->
v4l_fmt
) {

839 
VIDEO_PALETTE_RGB24
:

840 
	`rgb24toyuv420p
(
m≠
, 
ˇp_m≠
, 
width
, 
height
);

842 
VIDEO_PALETTE_YUV422
:

843 
	`yuv422to420p
(
m≠
, 
ˇp_m≠
, 
width
, 
height
);

846 
	`mem˝y
(
m≠
, 
ˇp_m≠
, 
viddev
->
v4l_bufsize
);

850 
	}
}

855 
	$v4l_£t_öput
(
c⁄ãxt
 *
˙t
, 
video_dev
 *
viddev
, *
m≠
, 
width
, 
height
,

856 
öput
, 
n‹m
, 
skù
, 
‰eq
)

859 i‡(
öput
 !
viddev
->öpuà|| 
n‹m
 !viddev->n‹m || 
‰eq
 != viddev->freq) {

860 
dummy
;

861 
‰equnôs
 = 
‰eq
;

864 i‡((
dummy
 = 
	`£t_öput
(
viddev
, 
öput
)) == -1)

867 
viddev
->
öput
 = 
dummy
;

869 i‡((
dummy
 = 
	`£t_öput_f‹m©
(
viddev
, 
n‹m
)) == -1)

872 
viddev
->
n‹m
 = 
dummy
;

874 i‡((
viddev
->
tu√r_devi˚
 !
NULL
Ë&& (viddev->
öput
 =
IN_TV
Ë&& (
‰equnôs
 > 0)) {

875 i‡(
	`£t_‰eq
(
viddev
, 
‰eq
) == -1)

892 
	`v4l_pi˘uª_c⁄åﬁs
(
˙t
, 
viddev
);

894 
viddev
->
‰eq
 = freq;

897 
dummy
 = 0; dummy < 
skù
; dummy++)

898 
	`v4l_√xt
(
viddev
, 
m≠
, 
width
, 
height
);

902 
	`v4l_pi˘uª_c⁄åﬁs
(
˙t
, 
viddev
);

904 
	}
}

923 
±hªad_muãx_t
 
	gvid_muãx
;

929 
video_dev
 *
	gviddevs
 = 
NULL
;

938 
	$vid_öô
()

940 
	`±hªad_muãx_öô
(&
vid_muãx
, 
NULL
);

941 
	}
}

948 
	$vid_˛ónup
()

950 
	`±hªad_muãx_de°roy
(&
vid_muãx
);

951 
	}
}

961 
	$vid_˛o£
(
c⁄ãxt
 *
˙t
)

963 #i‚de‡
WITHOUT_V4L


964 
video_dev
 *
dev
 = 
viddevs
;

965 
video_dev
 *
¥ev
 = 
NULL
;

969 i‡(
˙t
->
√tˇm
) {

970 
	`√tˇm_˛ónup
(
˙t
->
√tˇm
, 0);

971 
˙t
->
√tˇm
 = 
NULL
;

975 #i‚de‡
WITHOUT_V4L


978 
	`±hªad_muãx_lock
(&
vid_muãx
);

979 
dev
) {

980 i‡(
dev
->
fd_bkå
 =
˙t
->
video_dev
)

982 
¥ev
 = 
dev
;

983 
dev
 = dev->
√xt
;

985 
	`±hªad_muãx_u∆ock
(&
vid_muãx
);

988 
˙t
->
video_dev
 = -1;

990 i‡(
dev
 =
NULL
) {

991 
	`mŸi⁄_log
(
LOG_ERR
, 0, "%s: U«bÀÅÿföd videÿdevi˚", 
__FUNCTION__
);

995 i‡(--
dev
->
ußge_cou¡
 == 0) {

996 
	`mŸi⁄_log
(
LOG_INFO
, 0, "%s: Closing video device %s",

997 
__FUNCTION__
, 
dev
->
video_devi˚
);

999 i‡(
dev
->
fd_tu√r
 > 0)

1000 
	`˛o£
(
dev
->
fd_tu√r
);

1002 i‡(
dev
->
fd_bkå
 > 0) {

1003 i‡(
dev
->
ˇ±uª_mëhod
 =
METEOR_CAP_CONTINOUS
) {

1004 
dev
->
fd_tu√r
 = 
METEOR_CAP_STOP_CONT
;

1005 
	`io˘l
(
dev
->
fd_bkå
, 
METEORCAPTUR
, &dev->
fd_tu√r
);

1007 
	`˛o£
(
dev
->
fd_bkå
);

1008 
dev
->
fd_tu√r
 = -1;

1012 
	`munm≠
(
viddevs
->
v4l_buf„rs
[0], viddevs->
v4l_bufsize
);

1013 
viddevs
->
v4l_buf„rs
[0] = 
MAP_FAILED
;

1015 
dev
->
fd_bkå
 = -1;

1016 
	`±hªad_muãx_lock
(&
vid_muãx
);

1019 i‡(
¥ev
 =
NULL
)

1020 
viddevs
 = 
dev
->
√xt
;

1022 
¥ev
->
√xt
 = 
dev
->next;

1024 
	`±hªad_muãx_u∆ock
(&
vid_muãx
);

1026 
	`±hªad_muãx©å_de°roy
(&
dev
->
©å
);

1027 
	`±hªad_muãx_de°roy
(&
dev
->
muãx
);

1028 
	`‰ì
(
dev
);

1030 
	`mŸi⁄_log
(
LOG_INFO
, 0, "%s: Still %d users of video device %s, so we don't close itÇow",

1031 
__FUNCTION__
, 
dev
->
ußge_cou¡
, dev->
video_devi˚
);

1035 i‡(
dev
->
ow√r
 =
˙t
->
thªadƒ
) {

1036 
dev
->
‰ames
 = 0;

1037 
dev
->
ow√r
 = -1;

1038 
	`±hªad_muãx_u∆ock
(&
dev
->
muãx
);

1042 
	}
}

1046 
	$vid_°¨t
(
c⁄ãxt
 *
˙t
)

1048 
c⁄fig
 *
c⁄f
 = &
˙t
->conf;

1049 
fd_bkå
 = -1;

1051 i‡(
c⁄f
->
√tˇm_uæ
) {

1052 
fd_bkå
 = 
	`√tˇm_°¨t
(
˙t
);

1053 i‡(
fd_bkå
 < 0) {

1054 
	`√tˇm_˛ónup
(
˙t
->
√tˇm
, 1);

1055 
˙t
->
√tˇm
 = 
NULL
;

1058 #ifde‡
WITHOUT_V4L


1060 
	`mŸi⁄_log
(
LOG_ERR
, 0, "%s: You mu° sëu∞√tˇm_uæ", 
__FUNCTION__
);

1063 
video_dev
 *
dev
;

1064 
fd_tu√r
 = -1;

1065 
width
, 
height
, 
ˇ±uª_mëhod
;

1066 
öput
, 
n‹m
;

1067 
‰equícy
;

1070 
	`mŸi⁄_log
(-1, 0, "%s: [%s]", 
__FUNCTION__
, 
c⁄f
->
video_devi˚
);

1077 i‡(
c⁄f
->
width
 % 16) {

1078 
	`mŸi⁄_log
(
LOG_ERR
, 0,

1080 
__FUNCTION__
, 
c⁄f
->
width
);

1083 i‡(
c⁄f
->
height
 % 16) {

1084 
	`mŸi⁄_log
(
LOG_ERR
, 0,

1086 
__FUNCTION__
, 
c⁄f
->
height
);

1090 
width
 = 
c⁄f
->width;

1091 
height
 = 
c⁄f
->height;

1092 
öput
 = 
c⁄f
->input;

1093 
n‹m
 = 
c⁄f
->norm;

1094 
‰equícy
 = 
c⁄f
->frequency;

1095 
ˇ±uª_mëhod
 = 
METEOR_CAP_CONTINOUS
;

1097 
	`±hªad_muãx_lock
(&
vid_muãx
);

1103 
˙t
->
imgs
.
width
 = width;

1104 
˙t
->
imgs
.
height
 = height;

1111 
dev
 = 
viddevs
;

1112 
dev
) {

1113 i‡(!
	`°rcmp
(
c⁄f
->
video_devi˚
, 
dev
->video_device)) {

1114 
dummy
 = 
METEOR_CAP_STOP_CONT
;

1115 
dev
->
ußge_cou¡
++;

1116 
˙t
->
imgs
.
ty≥
 = 
dev
->
v4l_fmt
;

1118 i‡(
	`io˘l
(
dev
->
fd_bkå
, 
METEORCAPTUR
, &
dummy
) < 0) {

1119 
	`mŸi⁄_log
(
LOG_ERR
, 1, "%†St›pög c≠tuª", 
__FUNCTION__
);

1123 
	`mŸi⁄_log
(-1, 0, "%s Reusing [%s] inputs [%d,%d] Change capture method "

1124 "METEOR_CAP_SINGLE", 
__FUNCTION__
, 
dev
->
video_devi˚
,

1125 
dev
->
öput
, 
c⁄f
->input);

1127 
dev
->
ˇ±uª_mëhod
 = 
METEOR_CAP_SINGLE
;

1129 
˙t
->
imgs
.
ty≥
) {

1130 
VIDEO_PALETTE_GREY
:

1131 
˙t
->
imgs
.
mŸi⁄size
 = 
width
 * 
height
;

1132 
˙t
->
imgs
.
size
 = 
width
 * 
height
;

1134 
VIDEO_PALETTE_RGB24
:

1135 
VIDEO_PALETTE_YUV422
:

1136 
˙t
->
imgs
.
ty≥
 = 
VIDEO_PALETTE_YUV420P
;

1137 
VIDEO_PALETTE_YUV420P
:

1138 
	`mŸi⁄_log
(-1, 0,

1140 "™d imgs.mŸi⁄size", 
__FUNCTION__
);

1141 
˙t
->
imgs
.
mŸi⁄size
 = 
width
 * 
height
;

1142 
˙t
->
imgs
.
size
 = (
width
 * 
height
 * 3) / 2;

1145 
	`±hªad_muãx_u∆ock
(&
vid_muãx
);

1146  
dev
->
fd_bkå
;

1148 
dev
 = dev->
√xt
;

1152 
dev
 = 
	`mymÆloc
((
video_dev
));

1153 
	`mem£t
(
dev
, 0, (
video_dev
));

1155 
fd_bkå
 = 
	`›í
(
c⁄f
->
video_devi˚
, 
O_RDWR
);

1157 i‡(
fd_bkå
 < 0) {

1158 
	`mŸi⁄_log
(
LOG_ERR
, 1, "%s: o≥¿videÿdevi˚ %s", 
__FUNCTION__
, 
c⁄f
->
video_devi˚
);

1159 
	`‰ì
(
dev
);

1160 
	`±hªad_muãx_u∆ock
(&
vid_muãx
);

1166 i‡((
c⁄f
->
tu√r_devi˚
 !
NULL
Ë&& (
‰equícy
 > 0Ë&& (
öput
 =
IN_TV
)) {

1167 
fd_tu√r
 = 
	`›í
(
c⁄f
->
tu√r_devi˚
, 
O_RDWR
);

1168 i‡(
fd_tu√r
 < 0) {

1169 
	`mŸi⁄_log
(
LOG_ERR
, 1, "%s: openÅuner device %s",

1170 
__FUNCTION__
, 
c⁄f
->
tu√r_devi˚
);

1171 
	`‰ì
(
dev
);

1172 
	`±hªad_muãx_u∆ock
(&
vid_muãx
);

1177 
	`±hªad_muãx©å_öô
(&
dev
->
©å
);

1178 
	`±hªad_muãx_öô
(&
dev
->
muãx
, &dev->
©å
);

1180 
dev
->
ußge_cou¡
 = 1;

1181 
dev
->
video_devi˚
 = 
c⁄f
->video_device;

1182 
dev
->
tu√r_devi˚
 = 
c⁄f
->tuner_device;

1183 
dev
->
fd_bkå
 = fd_bktr;

1184 
dev
->
fd_tu√r
 = fd_tuner;

1185 
dev
->
öput
 = input;

1186 
dev
->
height
 = height;

1187 
dev
->
width
 = width;

1188 
dev
->
‰eq
 = 
‰equícy
;

1189 
dev
->
ow√r
 = -1;

1190 
dev
->
ˇ±uª_mëhod
 = capture_method;

1196 
dev
->
brighäess
 = 0;

1197 
dev
->
c⁄åa°
 = 0;

1198 
dev
->
ßtuøti⁄
 = 0;

1199 
dev
->
hue
 = 0;

1200 
dev
->
ow√r
 = -1;

1203 
dev
->
v4l_fmt
 = 
VIDEO_PALETTE_YUV420P
;

1204 
dev
->
v4l_curbuf„r
 = 0;

1205 
dev
->
v4l_maxbuf„r
 = 1;

1207 i‡(!
	`v4l_°¨t
(
dev
, 
width
, 
height
, 
öput
, 
n‹m
, 
‰equícy
)) {

1208 
	`˛o£
(
dev
->
fd_bkå
);

1209 
	`±hªad_muãx©å_de°roy
(&
dev
->
©å
);

1210 
	`±hªad_muãx_de°roy
(&
dev
->
muãx
);

1211 
	`‰ì
(
dev
);

1213 
	`±hªad_muãx_u∆ock
(&
vid_muãx
);

1217 
˙t
->
imgs
.
ty≥
 = 
dev
->
v4l_fmt
;

1219 
˙t
->
imgs
.
ty≥
) {

1220 
VIDEO_PALETTE_GREY
:

1221 
˙t
->
imgs
.
size
 = 
width
 * 
height
;

1222 
˙t
->
imgs
.
mŸi⁄size
 = 
width
 * 
height
;

1224 
VIDEO_PALETTE_RGB24
:

1225 
VIDEO_PALETTE_YUV422
:

1226 
˙t
->
imgs
.
ty≥
 = 
VIDEO_PALETTE_YUV420P
;

1227 
VIDEO_PALETTE_YUV420P
:

1228 
	`mŸi⁄_log
(-1, 0, "%s: VIDEO_PALETTE_YUV420P imgs.ty≥", 
__FUNCTION__
);

1229 
˙t
->
imgs
.
size
 = (
width
 * 
height
 * 3) / 2;

1230 
˙t
->
imgs
.
mŸi⁄size
 = 
width
 * 
height
;

1235 
dev
->
√xt
 = 
viddevs
;

1236 
viddevs
 = 
dev
;

1238 
	`±hªad_muãx_u∆ock
(&
vid_muãx
);

1243  
fd_bkå
;

1244 
	}
}

1260 
	$vid_√xt
(
c⁄ãxt
 *
˙t
, *
m≠
)

1262 
c⁄fig
 *
c⁄f
 = &
˙t
->conf;

1263 
ªt
 = -1;

1265 i‡(
c⁄f
->
√tˇm_uæ
) {

1266 i‡(
˙t
->
video_dev
 == -1)

1267  
NETCAM_GENERAL_ERROR
;

1269 
ªt
 = 
	`√tˇm_√xt
(
˙t
, 
m≠
);

1270  
ªt
;

1273 #i‚de‡
WITHOUT_V4L


1275 
video_dev
 *
dev
;

1276 
width
, 
height
;

1277 
dev_bkå
 = 
˙t
->
video_dev
;

1280 
width
 = 
˙t
->
rŸ©e_d©a
.
ˇp_width
;

1281 
height
 = 
˙t
->
rŸ©e_d©a
.
ˇp_height
;

1283 
	`±hªad_muãx_lock
(&
vid_muãx
);

1284 
dev
 = 
viddevs
;

1285 
dev
) {

1286 i‡(
dev
->
fd_bkå
 =
dev_bkå
)

1288 
dev
 = dev->
√xt
;

1291 
	`±hªad_muãx_u∆ock
(&
vid_muãx
);

1293 i‡(
dev
 =
NULL
)

1294  
V4L_FATAL_ERROR
;

1297 i‡(
dev
->
ow√r
 !
˙t
->
thªadƒ
) {

1298 
	`±hªad_muãx_lock
(&
dev
->
muãx
);

1299 
dev
->
ow√r
 = 
˙t
->
thªadƒ
;

1300 
dev
->
‰ames
 = 
c⁄f
->
roundrobö_‰ames
;

1304 
	`v4l_£t_öput
(
˙t
, 
dev
, 
m≠
, 
width
, 
height
, 
c⁄f
->
öput
, c⁄f->
n‹m
,

1305 
c⁄f
->
roundrobö_skù
, c⁄f->
‰equícy
);

1307 
ªt
 = 
	`v4l_√xt
(
dev
, 
m≠
, 
width
, 
height
);

1309 i‡(--
dev
->
‰ames
 <= 0) {

1310 
dev
->
ow√r
 = -1;

1311 
dev
->
‰ames
 = 0;

1312 
	`±hªad_muãx_u∆ock
(&
dev
->
muãx
);

1316 i‡(
˙t
->
rŸ©e_d©a
.
degªes
 > 0)

1317 
	`rŸ©e_m≠
(
˙t
, 
m≠
);

1320  
ªt
;

1321 
	}
}

	@video_freebsd.h

10 #i‚de‡
_INCLUDE_VIDEO_FREEBSD_H


11 
	#_INCLUDE_VIDEO_FREEBSD_H


	)

13 #i‚de‡
WITHOUT_V4L


15 #ifde‡
__NëBSD__


16 
	~<dev/ic/bt8xx.h
>

17 #ñi‡
__O≥nBSD__


18 
	~<dev/ic/bt8xx.h
>

19 #ñi‡
deföed
(
OLD_BKTR
)

20 
	~<machöe/io˘l_mëe‹.h
>

21 
	~<machöe/io˘l_bt848.h
>

23 
	~<dev/bkå/io˘l_mëe‹.h
>

24 
	~<dev/bkå/io˘l_bt848.h
>

43 
	#V4L_GENERAL_ERROR
 0x01

	)

44 
	#V4L_BTTVLOST_ERROR
 0x05

	)

45 
	#V4L_FATAL_ERROR
 -1

	)

47 
	#NORM_DEFAULT
 0x00800

	)

48 
	#NORM_PAL
 0x00200

	)

49 
	#NORM_NTSC
 0x00100

	)

50 
	#NORM_SECAM
 0x00400

	)

51 
	#NORM_PAL_NC
 0x00200

	)

53 
	#NORM_DEFAULT_NEW
 
BT848_IFORM_F_AUTO


	)

54 
	#NORM_PAL_NEW
 
BT848_IFORM_F_PALBDGHI


	)

55 
	#NORM_NTSC_NEW
 
BT848_IFORM_F_NTSCM


	)

56 
	#NORM_SECAM_NEW
 
BT848_IFORM_F_SECAM


	)

57 
	#NORM_PAL_NC_NEW
 
BT848_IFORM_F_AUTO


	)

59 
	#PAL
 0

	)

60 
	#NTSC
 1

	)

61 
	#SECAM
 2

	)

62 
	#PAL_NC
 3

	)

64 
	#PAL_HEIGHT
 576

	)

65 
	#SECAM_HEIGHT
 576

	)

66 
	#NTSC_HEIGHT
 480

	)

68 
	#BSD_VIDFMT_NONE
 0

	)

69 
	#BSD_VIDFMT_YV12
 1

	)

70 
	#BSD_VIDFMT_I420
 2

	)

71 
	#BSD_VIDFMT_YV16
 3

	)

72 
	#BSD_VIDFMT_YUY2
 4

	)

73 
	#BSD_VIDFMT_UYVY
 5

	)

74 
	#BSD_VIDFMT_RV15
 6

	)

75 
	#BSD_VIDFMT_RV16
 7

	)

76 
	#BSD_VIDFMT_LAST
 8

	)

79 
	#IN_DEFAULT
 0

	)

80 
	#IN_COMPOSITE
 0

	)

81 
	#IN_TV
 1

	)

82 
	#IN_COMPOSITE2
 2

	)

83 
	#IN_SVIDEO
 3

	)

85 
	#CAPTURE_SINGLE
 0

	)

86 
	#CAPTURE_CONTINOUS
 1

	)

88 
	#VIDEO_DEVICE
 "/dev/bkå0"

	)

89 
	#TUNER_DEVICE
 "/dev/tu√r0"

	)

91 
	svideo_dev
 {

92 
video_dev
 *
	m√xt
;

93 
	mußge_cou¡
;

94 
	mfd_bkå
;

95 
	mfd_tu√r
;

96 c⁄° *
	mvideo_devi˚
;

97 c⁄° *
	mtu√r_devi˚
;

98 
	möput
;

99 
	mn‹m
;

100 
	mwidth
;

101 
	mheight
;

102 
	mc⁄åa°
;

103 
	mßtuøti⁄
;

104 
	mhue
;

105 
	mbrighäess
;

106 
	mch™√l
;

107 
	mch™√l£t
;

108 
	m‰eq
;

110 
±hªad_muãx_t
 
	mmuãx
;

111 
±hªad_muãx©å_t
 
	m©å
;

112 
	mow√r
;

113 
	m‰ames
;

116 #i‚de‡
WITHOUT_V4L


117 
	mˇ±uª_mëhod
;

118 
	mv4l_fmt
;

119 *
	mv4l_buf„rs
[2];

120 
	mv4l_curbuf„r
;

121 
	mv4l_maxbuf„r
;

122 
	mv4l_bufsize
;

127 
vid_°¨t
(
c⁄ãxt
 *);

128 
vid_√xt
(
c⁄ãxt
 *, *);

129 
vid_˛o£
(
c⁄ãxt
 *);

131 #i‚de‡
WITHOUT_V4L


132 
vid_öô
();

133 
vid_˛ónup
();

	@webcam.c

21 
	~"pi˘uª.h
"

22 
	~<sys/sockë.h
>

23 
	~<√töë/ö.h
>

24 
	~<¨∑/öë.h
>

25 
	~<˘y≥.h
>

26 
	~<sys/f˙é.h
>

35 
	$hâp_bödsock
(
p‹t
, 
loˇl
)

37 
¶
, 
›tvÆ
 = 1;

38 
sockaddr_ö
 
sö
;

40 i‡((
¶
 = 
	`sockë
(
PF_INET
, 
SOCK_STREAM
, 0)) < 0) {

41 
	`mŸi⁄_log
(
LOG_ERR
, 1, "socket()");

45 
	`mem£t
(&
sö
, 0, (
sockaddr_ö
));

46 
sö
.
sö_Ámûy
=
AF_INET
;

47 
sö
.
sö_p‹t
=
	`ht⁄s
(
p‹t
);

49 i‡(
loˇl
)

50 
sö
.
sö_addr
.
s_addr
=
	`ht⁄l
(
INADDR_LOOPBACK
);

52 
sö
.
sö_addr
.
s_addr
=
	`ht⁄l
(
INADDR_ANY
);

54 
	`£tsock›t
(
¶
, 
SOL_SOCKET
, 
SO_REUSEADDR
, &
›tvÆ
, (optval));

56 i‡(
	`böd
(
¶
, (
sockaddr
 *)&
sö
, (
sockaddr_ö
)) == -1) {

57 
	`mŸi⁄_log
(
LOG_ERR
, 1, "bind()");

58 
	`˛o£
(
¶
);

62 i‡(
	`li°í
(
¶
, 
DEF_MAXWEBQUEUE
) == -1) {

63 
	`mŸi⁄_log
(
LOG_ERR
, 1, "listen()");

64 
	`˛o£
(
¶
);

68  
¶
;

69 
	}
}

72 
	$hâp_ac˚±sock
(
¶
)

74 
sc
;

75 
i
;

76 
sockaddr_ö
 
sö
;

77 
sockÀn_t
 
addæí
 = (
sockaddr_ö
);

79 i‡((
sc
 = 
	`ac˚±
(
¶
, (
sockaddr
 *)&
sö
, &
addæí
)) >= 0) {

80 
i
 = 1;

81 
	`io˘l
(
sc
, 
FIONBIO
, &
i
);

82  
sc
;

85 
	`mŸi⁄_log
(
LOG_ERR
, 1, "accept()");

88 
	}
}

96 
	$webˇm_Êush
(
webˇm
 *
li°
, *
°ªam_cou¡
, 
lim
)

98 
wrôãn
;

99 
webˇm
 *
˛õ¡
;

100 
w‹kd⁄e
 = 0;

103 
˛õ¡
 = 
li°
->
√xt
;

105 
˛õ¡
) {

108 i‡(
˛õ¡
->
tmpbuf„r
) {

116 i‡(
˛õ¡
->
fûïos
 < clõ¡->
tmpbuf„r
->
size
) {

125 
wrôãn
 = 
	`wrôe
(
˛õ¡
->
sockë
,

126 
˛õ¡
->
tmpbuf„r
->
±r
 + clõ¡->
fûïos
,

127 
˛õ¡
->
tmpbuf„r
->
size
 - clõ¡->
fûïos
);

132 i‡(
wrôãn
 > 0) {

133 
˛õ¡
->
fûïos
 +
wrôãn
;

134 
w‹kd⁄e
 = 1;

137 
wrôãn
 = 0;

144 i‡((
˛õ¡
->
fûïos
 >˛õ¡->
tmpbuf„r
->
size
) ||

145 (
wrôãn
 < 0 && 
î∫o
 !
EAGAIN
)) {

147 i‡(--
˛õ¡
->
tmpbuf„r
->
ªf
 <= 0) {

148 
	`‰ì
(
˛õ¡
->
tmpbuf„r
->
±r
);

149 
	`‰ì
(
˛õ¡
->
tmpbuf„r
);

153 
˛õ¡
->
tmpbuf„r
 = 
NULL
;

154 
˛õ¡
->
ƒ
++;

162 i‡((
wrôãn
 < 0 && 
î∫o
 !
EAGAIN
) ||

163 (
lim
 && !
˛õ¡
->
tmpbuf„r
 && clõ¡->
ƒ
 >Üim)) {

164 *
tmp
;

166 
	`˛o£
(
˛õ¡
->
sockë
);

168 i‡(
˛õ¡
->
√xt
)

169 
˛õ¡
->
√xt
->
¥ev
 = client->prev;

171 
˛õ¡
->
¥ev
->
√xt
 = client->next;

172 
tmp
 = 
˛õ¡
;

173 
˛õ¡
 = clõ¡->
¥ev
;

174 
	`‰ì
(
tmp
);

175 (*
°ªam_cou¡
)--;

184 
˛õ¡
 = clõ¡->
√xt
;

185 i‡(!
˛õ¡
 && 
w‹kd⁄e
) {

186 
˛õ¡
 = 
li°
->
√xt
;

187 
w‹kd⁄e
 = 0;

190 
	}
}

195 
webˇm_buf„r
 *
	$webˇm_tmpbuf„r
(
size
)

197 
webˇm_buf„r
 *
tmpbuf„r
=
	`mymÆloc
((webcam_buffer));

198 
tmpbuf„r
->
ªf
 = 0;

199 
tmpbuf„r
->
±r
 = 
	`mymÆloc
(
size
);

201  
tmpbuf„r
;

202 
	}
}

205 
	$webˇm_add_˛õ¡
(
webˇm
 *
li°
, 
sc
)

207 
webˇm
 *
√w
 = 
	`mymÆloc
((webcam));

208 c⁄° 
hódî
[] = "HTTP/1.0 200 OK\r\n"

209 "Sîvî: MŸi⁄/"
VERSION
"\r\n"

217 
	`mem£t
(
√w
, 0, (
webˇm
));

218 
√w
->
sockë
 = 
sc
;

220 i‡((
√w
->
tmpbuf„r
 = 
	`webˇm_tmpbuf„r
((
hódî
))Ë=
NULL
) {

221 
	`mŸi⁄_log
(
LOG_ERR
, 1, "Error creatingÅmpbuffer in webcam_add_client");

223 
	`mem˝y
(
√w
->
tmpbuf„r
->
±r
, 
hódî
, (header)-1);

224 
√w
->
tmpbuf„r
->
size
 = (
hódî
)-1;

227 
√w
->
¥ev
 = 
li°
;

228 
√w
->
√xt
 = 
li°
->next;

230 i‡(
√w
->
√xt
)

231 
√w
->
√xt
->
¥ev
=new;

233 
li°
->
√xt
 = 
√w
;

234 
	}
}

237 
	$webˇm_add_wrôe
(
webˇm
 *
li°
, 
webˇm_buf„r
 *
tmpbuf„r
, 
Âs
)

239 
timevÆ
 
cuπimevÆ
;

240 
cuπime
;

242 
	`gëtimeofday
(&
cuπimevÆ
, 
NULL
);

243 
cuπime
 = 
cuπimevÆ
.
tv_u£c
 + 1000000L * cuπimevÆ.
tv_£c
;

245 
li°
->
√xt
) {

246 
li°
 =Üi°->
√xt
;

248 i‡(
li°
->
tmpbuf„r
 =
NULL
 && ((
cuπime
-li°->
œ°
Ë>1000000L / 
Âs
)) {

249 
li°
->
œ°
 = 
cuπime
;

250 
li°
->
tmpbuf„r
 =Åmpbuffer;

251 
tmpbuf„r
->
ªf
++;

252 
li°
->
fûïos
 = 0;

256 i‡(
tmpbuf„r
->
ªf
 <= 0) {

257 
	`‰ì
(
tmpbuf„r
->
±r
);

258 
	`‰ì
(
tmpbuf„r
);

260 
	}
}

268 
	$webˇm_check_wrôe
(
webˇm
 *
li°
)

270 
li°
->
√xt
) {

271 
li°
 =Üi°->
√xt
;

273 i‡(
li°
->
tmpbuf„r
 =
NULL
)

277 
	}
}

284 
	$webˇm_öô
(
c⁄ãxt
 *
˙t
)

286 
˙t
->
webˇm
.
sockë
 = 
	`hâp_bödsock
(˙t->
c⁄f
.
webˇm_p‹t
, c¡->c⁄f.
webˇm_loˇlho°
);

287 
˙t
->
webˇm
.
√xt
 = 
NULL
;

288 
˙t
->
webˇm
.
¥ev
 = 
NULL
;

289  
˙t
->
webˇm
.
sockë
;

290 
	}
}

295 
	$webˇm_°›
(
c⁄ãxt
 *
˙t
)

297 
webˇm
 *
li°
;

298 
webˇm
 *
√xt
 = 
˙t
->webcam.next;

300 i‡(
˙t
->
c⁄f
.
£tup_mode
)

301 
	`mŸi⁄_log
(-1, 0, "Closing webcamÜisten socket");

303 
	`˛o£
(
˙t
->
webˇm
.
sockë
);

304 
˙t
->
webˇm
.
sockë
 = -1;

306 i‡(
˙t
->
c⁄f
.
£tup_mode
)

307 
	`mŸi⁄_log
(
LOG_INFO
, 0, "Closingáctive webcam sockets");

309 
√xt
) {

310 
li°
 = 
√xt
;

311 
√xt
 = 
li°
->next;

313 i‡(
li°
->
tmpbuf„r
) {

314 
	`‰ì
(
li°
->
tmpbuf„r
->
±r
);

315 
	`‰ì
(
li°
->
tmpbuf„r
);

318 
	`˛o£
(
li°
->
sockë
);

319 
	`‰ì
(
li°
);

321 
	}
}

337 
	$webˇm_put
(
c⁄ãxt
 *
˙t
, *
image
)

339 
timevÆ
 
timeout
;

340 
webˇm_buf„r
 *
tmpbuf„r
;

341 
fd_£t
 
fdªad
;

342 
¶
=
˙t
->
webˇm
.
sockë
;

343 
sc
;

345 c⁄° 
j≥ghód
[] = "--BoundaryString\r\n"

348 
hódÀngth
 = (
j≥ghód
) - 1;

349 
Àn
[20];

354 
timeout
.
tv_£c
 = 0;

355 
timeout
.
tv_u£c
 = 0;

356 
	`FD_ZERO
(&
fdªad
);

357 
	`FD_SET
(
˙t
->
webˇm
.
sockë
, &
fdªad
);

365 i‡((
˙t
->
°ªam_cou¡
 < 
DEF_MAXSTREAMS
) &&

366 (
	`£À˘
(
¶
+1, &
fdªad
, 
NULL
, NULL, &
timeout
) > 0)) {

367 
sc
 = 
	`hâp_ac˚±sock
(
¶
);

368 
	`webˇm_add_˛õ¡
(&
˙t
->
webˇm
, 
sc
);

369 
˙t
->
°ªam_cou¡
++;

373 
	`webˇm_Êush
(&
˙t
->
webˇm
, &˙t->
°ªam_cou¡
, c¡->
c⁄f
.
webˇm_limô
);

376 i‡(
	`webˇm_check_wrôe
(&
˙t
->
webˇm
)) {

382 
tmpbuf„r
 = 
	`webˇm_tmpbuf„r
(
˙t
->
imgs
.
size
);

385 i‡(
tmpbuf„r
) {

386 
imgsize
;

393 *
w±r
 = 
tmpbuf„r
->
±r
;

399 
	`mem˝y
(
w±r
, 
j≥ghód
, 
hódÀngth
);

402 
w±r
 +
hódÀngth
;

405 
tmpbuf„r
->
size
 = 
	`put_pi˘uª_mem‹y
(
˙t
, 
w±r
, c¡->
imgs
.size, 
image
,

406 
˙t
->
c⁄f
.
webˇm_quÆôy
);

409 
imgsize
 = 
	`•rötf
(
Àn
, "%9ld\r\n\r\n", 
tmpbuf„r
->
size
);

410 
	`mem˝y
(
w±r
 - 
imgsize
, 
Àn
, imgsize);

413 
	`mem˝y
(
w±r
 + 
tmpbuf„r
->
size
, "\r\n", 2);

419 
tmpbuf„r
->
size
 +
hódÀngth
 + 2;

424 
	`webˇm_add_wrôe
(&
˙t
->
webˇm
, 
tmpbuf„r
, c¡->
c⁄f
.
webˇm_maxøã
);

426 
	`mŸi⁄_log
(
LOG_ERR
, 1, "Error creatingÅmpbuffer");

433 
	`webˇm_Êush
(&
˙t
->
webˇm
, &˙t->
°ªam_cou¡
, c¡->
c⁄f
.
webˇm_limô
);

436 
	}
}

	@webcam.h

21 #i‚de‡
_INCLUDE_WEBCAM_H_


22 
	#_INCLUDE_WEBCAM_H_


	)

24 
	swebˇm_buf„r
 {

25 *
	m±r
;

26 
	mªf
;

27 
	msize
;

30 
	swebˇm
 {

31 
	msockë
;

32 
FILE
 *
	mfwrôe
;

33 
webˇm_buf„r
 *
	mtmpbuf„r
;

34 
	mfûïos
;

35 
	mƒ
;

36 
	mœ°
;

37 
webˇm
 *
	m¥ev
;

38 
webˇm
 *
	m√xt
;

41 
webˇm_öô
(
c⁄ãxt
 *);

42 
webˇm_put
(
c⁄ãxt
 *, *);

43 
webˇm_°›
(
c⁄ãxt
 *);

	@webhttpd.c

13 
	~"webhâpd.h
"

14 
	~<√töë/ö.h
>

15 
	~<¨∑/öë.h
>

16 
	~<√tdb.h
>

17 
	~<°ddef.h
>

19 
±hªad_muãx_t
 
	ghâpd_muãx
;

21 
	gw¨nögkûl
;

23 c⁄° * 
	göi_ãm∂©e
 =

24 "<html><hód><tôÀ>MŸi⁄ "
VERSION
"</title></head>\n"

27 c⁄° *
	g£t_ãm∂©e
 =

32 "}</s¸ùt>\n<tôÀ>MŸi⁄ "
VERSION
"</title>\n"

35 c⁄° * 
	gíd_ãm∂©e
 =

39 c⁄° * 
	gok_ª•⁄£
 =

41 "Sîvî: MŸi⁄-hâpd/"
VERSION
"\r\n"

50 c⁄° * 
	gok_ª•⁄£_øw
 =

52 "Sîvî: MŸi⁄-hâpd/"
VERSION
"\r\n"

62 c⁄° * 
	gbad_ªque°_ª•⁄£
 =

72 c⁄° * 
	gbad_ªque°_ª•⁄£_øw
 =

77 c⁄° * 
	gnŸ_found_ª•⁄£_ãm∂©e
 =

87 c⁄° * 
	gnŸ_found_ª•⁄£_ãm∂©e_øw
 =

92 c⁄° * 
	gnŸ_found_ª•⁄£_vÆid
 =

102 c⁄° * 
	gnŸ_found_ª•⁄£_vÆid_øw
 =

107 c⁄° * 
	gnŸ_vÆid_sy¡ax
 =

116 c⁄° * 
	gnŸ_vÆid_sy¡ax_øw
 =

121 c⁄° * 
	gnŸ_åack
 =

128 c⁄° * 
	gnŸ_åack_øw
 =

133 c⁄° * 
	gåack_îr‹
 =

140 c⁄° * 
	gåack_îr‹_øw
 =

145 c⁄° * 
	gîr‹_vÆue
 =

152 c⁄° * 
	gîr‹_vÆue_øw
 =

157 c⁄° * 
	gnŸ_found_ª•⁄£_vÆid_comm™d
 =

167 c⁄° * 
	gnŸ_found_ª•⁄£_vÆid_comm™d_øw
 =

172 c⁄° * 
	gbad_mëhod_ª•⁄£_ãm∂©e
 =

182 c⁄° * 
	gbad_mëhod_ª•⁄£_ãm∂©e_øw
 =

187 c⁄° *
	gªque°_auth_ª•⁄£_ãm∂©e
=

191 
	$£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
, c⁄° * 
ãm∂©e
)

193 
ssize_t
 
nwrôe
 = 0;

194 
nwrôe
 = 
	`wrôe
(
˛õ¡_sockë
, 
ok_ª•⁄£
, 
	`°æí
 (ok_response));

195 
nwrôe
 +
	`wrôe
(
˛õ¡_sockë
, 
ãm∂©e
, 
	`°æí
(template));

196 i‡(
nwrôe
 !(
ssize_t
)(
	`°æí
(
ok_ª•⁄£
Ë+ såÀn(
ãm∂©e
)))

197 
	`mŸi⁄_log
(
LOG_ERR
, 1, "httpd send_template_ini_client");

198 
	}
}

200 
	$£nd_ãm∂©e_öi_˛õ¡_øw
(
˛õ¡_sockë
)

202 
ssize_t
 
nwrôe
 = 0;

203 
nwrôe
 = 
	`wrôe
(
˛õ¡_sockë
, 
ok_ª•⁄£_øw
, 
	`°æí
 (ok_response_raw));

204 i‡(
nwrôe
 !(
ssize_t
)
	`°æí
(
ok_ª•⁄£_øw
))

205 
	`mŸi⁄_log
(
LOG_ERR
, 1, "httpd send_template_ini_client_raw");

206 
	}
}

208 
	$£nd_ãm∂©e
(
˛õ¡_sockë
, *
ªs
)

210 
ssize_t
 
nwrôe
 = 0;

211 
nwrôe
 = 
	`wrôe
(
˛õ¡_sockë
, 
ªs
, 
	`°æí
(res));

212 i‡(
nwrôe
 !(
ssize_t
)
	`°æí
(
ªs
))

213 
	`mŸi⁄_log
(
LOG_ERR
, 1, "httpd send_template failure write");

214 
	}
}

216 
	$£nd_ãm∂©e_øw
(
˛õ¡_sockë
, *
ªs
)

218 
ssize_t
 
nwrôe
 = 0;

219 
nwrôe
 = 
	`wrôe
(
˛õ¡_sockë
, 
ªs
, 
	`°æí
(res));

220 
	}
}

222 
	$£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
)

224 
ssize_t
 
nwrôe
 = 0;

225 
nwrôe
 = 
	`wrôe
(
˛õ¡_sockë
, 
íd_ãm∂©e
, 
	`°æí
(end_template));

226 
	}
}

228 
	$ª•⁄£_˛õ¡
(
˛õ¡_sockë
, c⁄° * 
ãm∂©e
, *
back
)

230 
ssize_t
 
nwrôe
 = 0;

231 
nwrôe
 = 
	`wrôe
(
˛õ¡_sockë
, 
ãm∂©e
, 
	`°æí
(template));

232 i‡(
back
 !
NULL
) {

233 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
back
);

234 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

236 
	}
}

239 *
	$ª∂a˚
(c⁄° *
°r
, c⁄° *
ﬁd
, c⁄° *
√w
)

241 *
ªt
, *
r
;

242 c⁄° *
p
, *
q
;

243 
size_t
 
ﬁdÀn
 = 
	`°æí
(
ﬁd
);

244 
size_t
 
cou¡
, 
ªéí
, 
√wÀn
 = 
	`°æí
(
√w
);

246 i‡(
ﬁdÀn
 !
√wÀn
) {

247 
cou¡
 = 0, 
p
 = 
°r
; (
q
 = 
	`°r°r
’, 
ﬁd
)Ë!
NULL
;Ö = q + 
ﬁdÀn
)

248 
cou¡
++;

250 
ªéí
 = 
p
 - 
°r
 + 
	`°æí
’Ë+ 
cou¡
 * (
√wÀn
 - 
ﬁdÀn
);

252 
ªéí
 = 
	`°æí
(
°r
);

255 
ªt
 = 
	`mÆloc
(
ªéí
 + 1);

257 
r
 = 
ªt
, 
p
 = 
°r
; (
q
 = 
	`°r°r
’, 
ﬁd
)Ë!
NULL
;Ö = q + 
ﬁdÀn
) {

259 
±rdiff_t
 
l
 = 
q
 - 
p
;

260 
	`mem˝y
(
r
, 
p
, 
l
);

261 
r
 +
l
;

262 
	`mem˝y
(
r
, 
√w
, 
√wÀn
);

263 
r
 +
√wÀn
;

265 
	`°r˝y
(
r
, 
p
);

267  
ªt
;

268 
	}
}

274 
	$uæ_decode
(*
uæícoded
, 
size_t
 
Àngth
)

276 *
d©a
=
uæícoded
;

277 *
uædecoded
=
uæícoded
;

279 
Àngth
 > 0) {

280 i‡(*
d©a
 == '%') {

281 
c
[3];

282 
i
;

283 
d©a
++;

284 
Àngth
--;

285 
c
[0] = *
d©a
++;

286 
Àngth
--;

287 
c
[1] = *
d©a
;

288 
c
[2] = 0;

289 
w¨nögkûl
 = 
	`ssˇnf
(
c
, "%x", &
i
);

290 i‡(
i
 < 128)

291 *
uædecoded
++ = ()
i
;

293 *
uædecoded
++ = '%';

294 *
uædecoded
++ = 
c
[0];

295 *
uædecoded
++ = 
c
[1];

297 } i‡(*
d©a
=='+') {

298 *
uædecoded
++=' ';

300 *
uædecoded
++=*
d©a
;

302 
d©a
++;

303 
Àngth
--;

305 *
uædecoded
 = '\0';

306 
	}
}

315 
	$c⁄fig
(*
poöãr
, *
ªs
, 
Àngth_uri
,

316 
thªad
, 
˛õ¡_sockë
, *
u£rd©a
)

318 
que°i⁄
 = '\0';

319 
comm™d
[256] = {'\0'};

320 
i
;

321 
c⁄ãxt
 **
˙t
 = 
u£rd©a
;

323 
w¨nögkûl
 = 
	`ssˇnf
 (
poöãr
, "%255[a-z]%c", 
comm™d
 , &
que°i⁄
);

324 i‡(!
	`°rcmp
(
comm™d
,"list")) {

325 
poöãr
 =Öointer + 4;

326 
Àngth_uri
 =Üength_uri - 4;

327 i‡(
Àngth_uri
 == 0) {

328 c⁄° *
vÆue
 = 
NULL
;

329 *
ªtvÆ
 = 
NULL
;

331 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

332 
	`£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
, 
öi_ãm∂©e
);

333 
	`•rötf
(
ªs
, "<®hªf=/%hu/c⁄fig>&…;&ndash; back</a><br><br>\n<b>Thªad %hu</b>\n<ul>", 
thªad
,Åhread);

334 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

336 
i
 = 0; 
c⁄fig_∑øms
[i].
∑øm_«me
 !
NULL
; i++) {

338 i‡((
thªad
 !0Ë&& (
c⁄fig_∑øms
[
i
].
maö_thªad
))

341 
vÆue
 = 
c⁄fig_∑øms
[
i
].
	`¥öt
(
˙t
, 
NULL
, i, 
thªad
);

343 i‡(
vÆue
 =
NULL
) {

344 
ªtvÆ
=
NULL
;

347 i‡(
thªad
 == 0)

348 
c⁄fig_∑øms
[
i
].
	`¥öt
(
˙t
, &
ªtvÆ
, i, 
thªad
);

352 i‡(
ªtvÆ
) {

354 i‡(!
	`°rcmp
(
ªtvÆ
,"")) {

355 
	`‰ì
(
ªtvÆ
);

356 
ªtvÆ
 = 
	`°rdup
("NoÅhreads");

358 *
ãmp
=
ªtvÆ
;

359 
size_t
 
ªtvÆ_miss
 = 0;

360 
size_t
 
ªtvÆ_Àn
 = 
	`°æí
(
ªtvÆ
);

361 
öd
=0;

362 
thªad_°rögs
[1024]={'\0'};

364 
ªtvÆ_miss
 !
ªtvÆ_Àn
) {

365 *
ãmp
 != '\n') {

366 
thªad_°rögs
[
öd
++] = *
ãmp
;

367 
ªtvÆ_miss
++;

368 
ãmp
++;

370 
ãmp
++;

371 
thªad_°rögs
[
öd
++] = '<';

372 
thªad_°rögs
[
öd
++] = 'b';

373 
thªad_°rögs
[
öd
++] = 'r';

374 
thªad_°rögs
[
öd
++] = '>';

375 
ªtvÆ_miss
++;

377 
	`‰ì
(
ªtvÆ
);

378 
ªtvÆ
 = 
NULL
;

379 
ªtvÆ
 = 
	`°rdup
(
thªad_°rögs
);

382 
	`•rötf
(
ªs
, "<li><®hªf=/%hu/c⁄fig/£t?%s>%s</a> = %s</li>\n", 
thªad
,

383 
c⁄fig_∑øms
[
i
].
∑øm_«me
, c⁄fig_∑øms[i].∑øm_«me, 
ªtvÆ
);

384 
	`‰ì
(
ªtvÆ
);

385 } i‡(
thªad
 != 0) {

387 
vÆue
 = 
c⁄fig_∑øms
[
i
].
	`¥öt
(
˙t
, 
NULL
, i, 0);

389 
	`•rötf
(
ªs
, "<li><®hªf=/%hu/c⁄fig/£t?%s>%s</a> = %s</li>\n", 
thªad
,

390 
c⁄fig_∑øms
[
i
].
∑øm_«me
, config_params[i].param_name,

391 
vÆue
 ? value : "(not defined)");

393 
	`•rötf
(
ªs
, "<li><®hªf=/%hu/c⁄fig/£t?%s>%s</a> = %s</li>\n", 
thªad
,

394 
c⁄fig_∑øms
[
i
].
∑øm_«me
, config_params[i].param_name,

399 
	`•rötf
(
ªs
, "<li><®hªf=/%hu/c⁄fig/£t?%s>%s</a> = %s</li>\n",
thªad
,

400 
c⁄fig_∑øms
[
i
].
∑øm_«me
, c⁄fig_∑øms[i].∑øm_«me, 
vÆue
);

402 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

405 
	`•rötf
(
ªs
, "</ul><®hªf=/%hu/c⁄fig>&…;&ndash; back</a>",
thªad
);

406 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

407 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

409 
	`£nd_ãm∂©e_öi_˛õ¡_øw
(
˛õ¡_sockë
);

410 
i
=0; 
c⁄fig_∑øms
[i].
∑øm_«me
 !
NULL
; i++) {

411 
vÆue
=
c⁄fig_∑øms
[
i
].
	`¥öt
(
˙t
, 
NULL
, i, 
thªad
);

412 i‡(
vÆue
 =
NULL
)

413 
vÆue
=
c⁄fig_∑øms
[
i
].
	`¥öt
(
˙t
, 
NULL
, i, 0);

414 
	`•rötf
(
ªs
, "%†%s\n", 
c⁄fig_∑øms
[
i
].
∑øm_«me
, 
vÆue
);

415 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

420 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

421 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d
, 
NULL
);

423 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d_øw
, 
NULL
);

425 } i‡(!
	`°rcmp
(
comm™d
,"set")) {

427 
poöãr
 =Öointer + 3;

428 
Àngth_uri
 =Üength_uri - 3;

429 i‡((
Àngth_uri
 !0Ë&& (
que°i⁄
 == '?')) {

430 
poöãr
++;

431 
Àngth_uri
--;

432 
w¨nögkûl
 = 
	`ssˇnf
(
poöãr
,"%255[-0-9a-z_]%c", 
comm™d
, &
que°i⁄
);

434 i‡((
que°i⁄
 ='='Ë&& (
comm™d
[0]!='\0')) {

435 
Àngth_uri
 =Üígth_urò- 
	`°æí
(
comm™d
) - 1;

436 
poöãr
 =Öoöã∏+ 
	`°æí
(
comm™d
) + 1;

438 
i
 = 0;

439 
c⁄fig_∑øms
[
i
].
∑øm_«me
 !
NULL
) {

440 i‡((
thªad
 !0Ë&& (
c⁄fig_∑øms
[
i
].
maö_thªad
)){

441 
i
++;

445 i‡(!
	`°rˇ£cmp
(
comm™d
, 
c⁄fig_∑øms
[
i
].
∑øm_«me
))

447 
i
++;

450 i‡(
c⁄fig_∑øms
[
i
].
∑øm_«me
) {

451 i‡(
Àngth_uri
 > 0) {

452 
VÆue
[1024]={'\0'};

453 
w¨nögkûl
 = 
	`ssˇnf
(
poöãr
,"%1023s", 
VÆue
);

454 
Àngth_uri
 =Üígth_urò- 
	`°æí
(
VÆue
);

455 i‡((
Àngth_uri
 =0Ë&& (
	`°æí
(
VÆue
) > 0) ) {

457 
	`uæ_decode
(
VÆue
,
	`°æí
(Value));

458 
	`c⁄f_cmd∑r£
(
˙t
 + 
thªad
, 
c⁄fig_∑øms
[
i
].
∑øm_«me
, 
VÆue
);

459 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

460 
	`•rötf
(
ªs
,

465 
thªad
,Åhªad,Åhªad,
c⁄fig_∑øms
[
i
].
∑øm_«me
,

466 
c⁄fig_∑øms
[
i
].
∑øm_«me
, 
VÆue
);

468 
	`£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
, 
öi_ãm∂©e
);

469 
	`£nd_ãm∂©e
(
˛õ¡_sockë
,
ªs
);

470 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

472 
	`£nd_ãm∂©e_öi_˛õ¡_øw
(
˛õ¡_sockë
);

473 
	`•rötf
(
ªs
, "%†%s\nD⁄e\n", 
c⁄fig_∑øms
[
i
].
∑øm_«me
, 
VÆue
);

474 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

478 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

479 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_vÆid_sy¡ax
, 
NULL
);

481 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_vÆid_sy¡ax_øw
, 
NULL
);

484 *
ty≥
 = 
NULL
;

485 
ty≥
 = 
	`°rdup
(
	`c⁄fig_ty≥
(&
c⁄fig_∑øms
[
i
]));

487 i‡(!
	`°rcmp
(
ty≥
,"string")) {

488 *
vÆue
 = 
NULL
;

489 
	`c⁄f_cmd∑r£
(
˙t
+
thªad
, 
c⁄fig_∑øms
[
i
].
∑øm_«me
, 
vÆue
);

490 
	`‰ì
(
ty≥
);

491 
ty≥
 = 
	`°rdup
("(null)");

492 } i‡(!
	`°rcmp
(
ty≥
,"int")) {

493 
	`‰ì
(
ty≥
);

494 
ty≥
 = 
	`°rdup
("0");

495 
	`c⁄f_cmd∑r£
(
˙t
+
thªad
, 
c⁄fig_∑øms
[
i
].
∑øm_«me
, 
ty≥
);

496 } i‡(!
	`°rcmp
(
ty≥
,"short")) {

497 
	`‰ì
(
ty≥
);

498 
ty≥
 = 
	`°rdup
("0");

499 
	`c⁄f_cmd∑r£
(
˙t
+
thªad
, 
c⁄fig_∑øms
[
i
].
∑øm_«me
, 
ty≥
);

500 } i‡(!
	`°rcmp
(
ty≥
,"bool")) {

501 
	`‰ì
(
ty≥
);

502 
ty≥
 = 
	`°rdup
("off");

503 
	`c⁄f_cmd∑r£
(
˙t
+
thªad
, 
c⁄fig_∑øms
[
i
].
∑øm_«me
, 
ty≥
);

505 
	`‰ì
(
ty≥
);

506 
ty≥
 = 
	`°rdup
("unknown");

509 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

510 
	`•rötf
(
ªs
,

513 "%s</li></ul><br><b>D⁄e</b>", 
thªad
,Åhread,Åhread,

514 
c⁄fig_∑øms
[
i
].
∑øm_«me
, c⁄fig_∑øms[i].∑øm_«me, 
ty≥
);

516 
	`£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
, 
öi_ãm∂©e
);

517 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

518 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

520 
	`£nd_ãm∂©e_öi_˛õ¡_øw
(
˛õ¡_sockë
);

521 
	`•rötf
(
ªs
, "%†%s\nD⁄e\n", 
c⁄fig_∑øms
[
i
].
∑øm_«me
,
ty≥
);

522 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

524 
	`‰ì
(
ty≥
);

529 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

530 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d
, 
NULL
);

532 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d_øw
, 
NULL
);

536 i‡((
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
Ë&& (
comm™d
[0]!='\0') &&

537 (((
Àngth_uri
 =Üígth_urò- 
	`°æí
(
comm™d
)) == 0 )) ) {

538 
i
 = 0;

539 
c⁄fig_∑øms
[
i
].
∑øm_«me
 !
NULL
) {

540 i‡((
thªad
 !0Ë&& (
c⁄fig_∑øms
[
i
].
maö_thªad
)){

541 
i
++;

545 i‡(!
	`°rˇ£cmp
(
comm™d
, 
c⁄fig_∑øms
[
i
].
∑øm_«me
))

547 
i
++;

550 i‡(
c⁄fig_∑øms
[
i
].
∑øm_«me
) {

551 c⁄° *
vÆue
 = 
NULL
;

552 *
ãxt_hñp
 = 
NULL
;

553 *
sh¨p
 = 
NULL
;

555 
vÆue
 = 
c⁄fig_∑øms
[
i
].
	`¥öt
(
˙t
, 
NULL
, i, 
thªad
);

557 
sh¨p
 = 
	`°r°r
(
c⁄fig_∑øms
[
i
].
∑øm_hñp
, "#\n\n#");

558 i‡(
sh¨p
 =
NULL
)

559 
sh¨p
 = 
	`°r°r
(
c⁄fig_∑øms
[
i
].
∑øm_hñp
, "#");

560 
sh¨p
++;

562 
ãxt_hñp
 = 
	`ª∂a˚
(
sh¨p
, "\n#", "<br>");

564 
	`£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
, 
öi_ãm∂©e
);

565 i‡(!
	`°rcmp
 ("boﬁ",
	`c⁄fig_ty≥
(&
c⁄fig_∑øms
[
i
])) ){

566 
›ti⁄
[80] = {'\0'};

568 i‡((
vÆue
 =
NULL
Ë&& (
thªad
 != 0))

569 
vÆue
 = 
c⁄fig_∑øms
[
i
].
	`¥öt
(
˙t
, 
NULL
, i, 0);

571 i‡(!
	`°rcmp
 ("⁄", 
vÆue
))

572 
	`•rötf
(
›ti⁄
, "<option value='on' selected>on</option>\n"

575 
	`•rötf
(
›ti⁄
, "<option value='on'>on</option>\n"

578 
	`•rötf
(
ªs
, "<a href=/%hu/config/list>&lt;&ndash; back</a><br><br>\n"

586 "</f‹m>\n<hr><i>%s</i>", 
thªad
,Åhread,

587 
c⁄fig_∑øms
[
i
].
∑øm_«me
, config_params[i].param_name,

588 
›ti⁄
, 
FOSWIKI_URL
,
c⁄fig_∑øms
[
i
].
∑øm_«me
, 
ãxt_hñp
);

591 i‡(
vÆue
 =
NULL
){

592 i‡(
thªad
 != 0)

594 
vÆue
 = 
c⁄fig_∑øms
[
i
].
	`¥öt
(
˙t
, 
NULL
, i, 0);

595 i‡(
vÆue
 =
NULL
) value = "";

597 
	`•rötf
(
ªs
, "<a href=/%hu/config/list>&lt;&ndash; back</a><br><br>\n"

603 "</f‹m>\n<hr><i>%s</i>", 
thªad
,Åhread,

604 
c⁄fig_∑øms
[
i
].
∑øm_«me
, config_params[i].param_name,

605 
vÆue
, 
FOSWIKI_URL
, 
c⁄fig_∑øms
[
i
].
∑øm_«me
, 
ãxt_hñp
);

608 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

609 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

610 
	`‰ì
(
ãxt_hñp
);

612 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

613 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d
, 
NULL
);

615 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d_øw
, 
NULL
);

618 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

619 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d
, 
NULL
);

621 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d_øw
, 
NULL
);

624 } i‡(
Àngth_uri
 == 0) {

625 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

626 
	`£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
, 
£t_ãm∂©e
);

627 
	`•rötf
(
ªs
, "<a href=/%hu/config>&lt;&ndash; back</a><br><br>\n<b>Thread %hu</b>\n"

628 "<f‹mÇame='n'>\n<£À˘Çame='⁄ames'>\n", 
thªad
,Åhread );

630 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

631 
i
 = 0; 
c⁄fig_∑øms
[i].
∑øm_«me
 !
NULL
; i++) {

632 i‡((
thªad
 !0Ë&& (
c⁄fig_∑øms
[
i
].
maö_thªad
))

634 
	`•rötf
(
ªs
, "<option value='%s'>%s</option>\n",

635 
c⁄fig_∑øms
[
i
].
∑øm_«me
, config_params[i].param_name);

636 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

638 
	`•rötf
(
ªs
, "</select>\n</form>\n"

644 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

645 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

647 
	`£nd_ãm∂©e_öi_˛õ¡_øw
(
˛õ¡_sockë
);

648 
	`•rötf
(
ªs
, "setÇeedsÖaram_name=value\n");

649 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

653 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

654 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d
, 
NULL
);

656 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d_øw
, 
NULL
);

658 } i‡(!
	`°rcmp
(
comm™d
,"get")) {

660 
poöãr
 =Öointer + 3;

661 
Àngth_uri
 =Üength_uri - 3;

663 i‡((
Àngth_uri
 > 7Ë&& (
que°i⁄
 == '?')) {

665 
poöãr
++;

666 
Àngth_uri
--;

667 
w¨nögkûl
 = 
	`ssˇnf
(
poöãr
,"%255[-0-9a-z]%c", 
comm™d
, &
que°i⁄
);

669 i‡((
que°i⁄
 ='='Ë&& (!
	`°rcmp
(
comm™d
,"query")) ) {

670 
poöãr
 =Öointer + 6;

671 
Àngth_uri
 =Üength_uri - 6;

672 
w¨nögkûl
 = 
	`ssˇnf
(
poöãr
, "%255[-0-9a-z_]", 
comm™d
);

674 
Àngth_uri
 =Üígth_uri-
	`°æí
(
comm™d
);

676 i‡(
Àngth_uri
 == 0) {

677 c⁄° *
vÆue
 = 
NULL
;

678 
i
 = 0;

679 
c⁄fig_∑øms
[
i
].
∑øm_«me
 !
NULL
) {

680 i‡((
thªad
 !0Ë&& (
c⁄fig_∑øms
[
i
].
maö_thªad
)){

681 
i
++;

685 i‡(!
	`°rˇ£cmp
(
comm™d
, 
c⁄fig_∑øms
[
i
].
∑øm_«me
))

687 
i
++;

692 i‡(
c⁄fig_∑øms
[
i
].
∑øm_«me
) {

693 c⁄° *
ty≥
=
NULL
;

694 
ty≥
 = 
	`c⁄fig_ty≥
(&
c⁄fig_∑øms
[
i
]);

695 i‡(!
	`°rcmp
(
ty≥
,"unknown")) {

697 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

698 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d
, 
NULL
);

700 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d_øw
, 
NULL
);

703 *
ãxt_hñp
 = 
NULL
;

704 *
sh¨p
 = 
NULL
;

706 
vÆue
 = 
c⁄fig_∑øms
[
i
].
	`¥öt
(
˙t
, 
NULL
, i, 
thªad
);

708 
sh¨p
 = 
	`°r°r
(
c⁄fig_∑øms
[
i
].
∑øm_hñp
, "#\n\n#");

709 i‡(
sh¨p
 =
NULL
)

710 
sh¨p
 = 
	`°r°r
(
c⁄fig_∑øms
[
i
].
∑øm_hñp
, "#");

711 
sh¨p
++;

713 
ãxt_hñp
 = 
	`ª∂a˚
(
sh¨p
, "\n#", "<br>");

715 i‡(
vÆue
 =
NULL
)

716 
vÆue
=
c⁄fig_∑øms
[
i
].
	`¥öt
(
˙t
, 
NULL
, i, 0);

718 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

719 
	`£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
,
öi_ãm∂©e
);

720 
	`•rötf
(
ªs
, "<a href=/%hu/config/get>&lt;&ndash; back</a><br><br>\n"

724 
thªad
,Åhªad, 
c⁄fig_∑øms
[
i
].
∑øm_«me
, 
vÆue
,

725 
FOSWIKI_URL
, 
c⁄fig_∑øms
[
i
].
∑øm_«me
, 
ãxt_hñp
);

727 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

728 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

730 
	`‰ì
(
ãxt_hñp
);

732 
	`£nd_ãm∂©e_öi_˛õ¡_øw
(
˛õ¡_sockë
);

733 
	`•rötf
(
ªs
, "%†%s\nD⁄e\n", 
c⁄fig_∑øms
[
i
].
∑øm_«me
,
vÆue
);

734 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

739 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

740 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d
, 
NULL
);

742 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d_øw
, 
NULL
);

746 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

747 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d
, 
NULL
);

749 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d_øw
, 
NULL
);

752 } i‡(
Àngth_uri
 == 0) {

753 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

754 
	`£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
, 
öi_ãm∂©e
);

755 
	`•rötf
(
ªs
, "<a href=/%hu/config>&lt;&ndash; back</a><br><br>\n<b>Thread %hu</b><br>\n"

757 "<£À˘Çame='quîy'>\n", 
thªad
,Åhread);

758 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

760 
i
 = 0; 
c⁄fig_∑øms
[i].
∑øm_«me
 !
NULL
; i++) {

761 i‡((
thªad
 !0Ë&& (
c⁄fig_∑øms
[
i
].
maö_thªad
))

763 
	`•rötf
(
ªs
, "<option value='%s'>%s</option>\n",

764 
c⁄fig_∑øms
[
i
].
∑øm_«me
, config_params[i].param_name);

765 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

768 
	`•rötf
(
ªs
, "</select>\n"

771 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

772 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

774 
	`£nd_ãm∂©e_öi_˛õ¡_øw
(
˛õ¡_sockë
);

775 
	`•rötf
(
ªs
, "getÇeedsÖaram_name\n");

776 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

780 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

781 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_vÆid_sy¡ax
, 
NULL
);

783 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_vÆid_sy¡ax_øw
, 
NULL
);

785 } i‡(!
	`°rcmp
(
comm™d
,"write")) {

786 
poöãr
 =Öointer + 5;

787 
Àngth_uri
 =Üength_uri - 5;

788 i‡(
Àngth_uri
 == 0) {

789 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

790 
	`£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
, 
öi_ãm∂©e
);

791 
	`•rötf
(
ªs
, "<a href=/%hu/config>&lt;&ndash; back</a><br><br>"

792 "Aª you suª? <®hªf=/%hu/c⁄fig/wrôeyes>Yes</a>\n", 
thªad
,Åhread);

793 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

794 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

796 
	`c⁄f_¥öt
(
˙t
);

797 
	`£nd_ãm∂©e_öi_˛õ¡_øw
(
˛õ¡_sockë
);

798 
	`•rötf
(
ªs
, "Thªad %hu wrôe\nD⁄e\n", 
thªad
);

799 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

803 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

804 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d
, 
NULL
);

806 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d_øw
, 
NULL
);

809 } i‡(!
	`°rcmp
(
comm™d
, "writeyes")) {

810 
poöãr
 =Öointer + 8;

811 
Àngth_uri
 =Üength_uri - 8;

812 i‡(
Àngth_uri
 == 0) {

813 
	`c⁄f_¥öt
(
˙t
);

814 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

815 
	`£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
, 
öi_ãm∂©e
);

816 
	`•rötf
(
ªs
, "<a href=/%hu/config>&lt;&ndash; back</a><br><br>\n<b>Thread %hu</b> write done !\n",

817 
thªad
,Åhread);

818 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

819 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

821 
	`£nd_ãm∂©e_öi_˛õ¡_øw
(
˛õ¡_sockë
);

822 
	`•rötf
(
ªs
, "Thªad %hu wrôe\nD⁄e\n", 
thªad
);

823 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

827 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

828 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d
, 
NULL
);

830 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d_øw
, 
NULL
);

835 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

836 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d
, 
NULL
);

838 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d_øw
, 
NULL
);

842 
	}
}

852 
	$a˘i⁄
(*
poöãr
, *
ªs
, 
Àngth_uri
,

853 
thªad
, 
˛õ¡_sockë
, *
u£rd©a
)

856 
comm™d
[256] = {'\0'};

857 
c⁄ãxt
 **
˙t
 = 
u£rd©a
;

858 
i
 = 0;

860 
w¨nögkûl
 = 
	`ssˇnf
 (
poöãr
, "%255[a-z]" , 
comm™d
);

861 i‡(!
	`°rcmp
(
comm™d
,"makemovie")) {

862 
poöãr
 =Öointer + 9;

863 
Àngth_uri
 =Üength_uri - 9;

864 i‡(
Àngth_uri
 == 0) {

867 i‡(
thªad
 == 0) {

868 
˙t
[++
i
])

869 
˙t
[
i
]->
makemovõ
 = 1;

871 
˙t
[
thªad
]->
makemovõ
 = 1;

874 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

875 
	`£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
, 
öi_ãm∂©e
);

876 
	`•rötf
(
ªs
, "<a href=/%hu/action>&lt;&ndash; back</a><br><br>\n"

877 "makemovõ f‹Åhªad %hu d⁄e<br>\n", 
thªad
,Åhread);

878 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

879 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

881 
	`£nd_ãm∂©e_öi_˛õ¡_øw
(
˛õ¡_sockë
);

882 
	`•rötf
(
ªs
, "makemovõ f‹Åhªad %hu\nD⁄e\n", 
thªad
);

883 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

887 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

888 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
,
nŸ_found_ª•⁄£_vÆid_comm™d
,
NULL
);

890 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
,
nŸ_found_ª•⁄£_vÆid_comm™d_øw
,
NULL
);

892 } i‡(!
	`°rcmp
(
comm™d
,"snapshot")) {

893 
poöãr
 =Öointer + 8;

894 
Àngth_uri
 =Üength_uri - 8;

895 i‡(
Àngth_uri
 == 0) {

898 i‡(
thªad
 == 0) {

899 
˙t
[++
i
])

900 
˙t
[
i
]->
¢≠shŸ
=1;

902 
˙t
[
thªad
]->
¢≠shŸ
=1;

905 
˙t
[
thªad
]->
¢≠shŸ
 = 1;

906 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

907 
	`£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
, 
öi_ãm∂©e
);

908 
	`•rötf
(
ªs
, "<a href=/%hu/action>&lt;&ndash; back</a><br><br>\n"

909 "¢≠shŸ f‹Åhªad %hu d⁄e<br>\n", 
thªad
,Åhread);

910 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

911 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

913 
	`£nd_ãm∂©e_öi_˛õ¡_øw
(
˛õ¡_sockë
);

914 
	`•rötf
(
ªs
, "¢≠shŸ f‹Åhªad %hu\nD⁄e\n", 
thªad
);

915 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

919 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

920 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d
, 
NULL
);

922 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d_øw
, 
NULL
);

924 } i‡(!
	`°rcmp
(
comm™d
, "restart")) {

925 
poöãr
 =Öointer + 7;

926 
Àngth_uri
 =Üength_uri - 7;

927 i‡(
Àngth_uri
 == 0) {

930 i‡(
thªad
 == 0) {

931 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "httpdÑestart");

932 
	`kûl
(
	`gëpid
(),
SIGHUP
);

933 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

934 
	`£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
, 
öi_ãm∂©e
);

935 
	`•rötf
(
ªs
, "restart inÖrogress ... bye<br>\n<a href='/'>Home</a>");

936 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

937 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

939 
	`£nd_ãm∂©e_öi_˛õ¡_øw
(
˛õ¡_sockë
);

940 
	`•rötf
(
ªs
, "restart inÖrogress ...\nDone\n");

941 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

945 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "hâpdÑe°¨àthªad %d", 
thªad
);

946 i‡(
˙t
[
thªad
]->
ru¬ög
) {

947 
˙t
[
thªad
]->
makemovõ
=1;

948 
˙t
[
thªad
]->
föish
=1;

950 
˙t
[
thªad
]->
ª°¨t
=1;

951 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

952 
	`£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
, 
öi_ãm∂©e
);

953 
	`•rötf
(
ªs
, "<a href=/%hu/action>&lt;&ndash; back</a><br><br>\n"

954 "ª°¨àf‹Åhªad %hu d⁄e<br>\n", 
thªad
,Åhread);

955 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

956 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

958 
	`£nd_ãm∂©e_öi_˛õ¡_øw
(
˛õ¡_sockë
);

959 
	`•rötf
(
ªs
, "ª°¨àf‹Åhªad %hu\nD⁄e\n", 
thªad
);

960 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

964 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

965 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
,
nŸ_found_ª•⁄£_vÆid_comm™d
,
NULL
);

967 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
,
nŸ_found_ª•⁄£_vÆid_comm™d_øw
,
NULL
);

969 } i‡(!
	`°rcmp
(
comm™d
,"quit")) {

970 
poöãr
 =Öointer + 4;

971 
Àngth_uri
 =Üength_uri - 4;

972 i‡(
Àngth_uri
 == 0) {

975 i‡(
thªad
 == 0) {

976 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "httpd quit");

977 
	`kûl
(
	`gëpid
(),
SIGQUIT
);

978 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

979 
	`£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
, 
öi_ãm∂©e
);

980 
	`•rötf
(
ªs
, "quit inÖrogress ... bye");

981 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

982 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

984 
	`£nd_ãm∂©e_öi_˛õ¡_øw
(
˛õ¡_sockë
);

985 
	`•rötf
(
ªs
,"quit inÖrogress ... bye\nDone\n");

986 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

991 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "hâpd quôÅhªad %d", 
thªad
);

992 
˙t
[
thªad
]->
ª°¨t
=0;

993 
˙t
[
thªad
]->
makemovõ
=1;

994 
˙t
[
thªad
]->
föish
=1;

995 
˙t
[
thªad
]->
w©chdog
=
WATCHDOG_OFF
;

996 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

997 
	`£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
, 
öi_ãm∂©e
);

998 
	`•rötf
(
ªs
, "<a href=/%hu/action>&lt;&ndash; back</a><br><br>\n"

999 "quô f‹Åhªad %hu d⁄e<br>\n", 
thªad
,Åhread);

1000 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

1001 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

1003 
	`£nd_ãm∂©e_öi_˛õ¡_øw
(
˛õ¡_sockë
);

1004 
	`•rötf
(
ªs
, "quô f‹Åhªad %hu\nD⁄e\n", 
thªad
);

1005 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

1010 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

1011 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d
, 
NULL
);

1013 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d_øw
, 
NULL
);

1016 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

1017 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d
, 
NULL
);

1019 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d_øw
, 
NULL
);

1023 
	}
}

1031 
	$dëe˘i⁄
(*
poöãr
, *
ªs
, 
Àngth_uri
, 
thªad
,

1032 
˛õ¡_sockë
, *
u£rd©a
)

1034 
comm™d
[256]={'\0'};

1035 
c⁄ãxt
 **
˙t
 = 
u£rd©a
;

1036 
i
 = 0;

1038 
w¨nögkûl
 = 
	`ssˇnf
 (
poöãr
, "%255[a-z]" , 
comm™d
);

1039 i‡(!
	`°rcmp
(
comm™d
,"status")) {

1040 
poöãr
 =Öointer + 6;

1041 
Àngth_uri
 =Üength_uri - 6;

1042 i‡(
Àngth_uri
 == 0) {

1045 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

1046 
	`£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
, 
öi_ãm∂©e
);

1047 
	`•rötf
(
ªs
, "<a href=/%hu/detection>&lt;&ndash; back</a><br><br><b>Thread %hu</b>"

1048 " Dëe˘i⁄ sètu†%s\n", 
thªad
,Åhread,

1049 (!
˙t
[
thªad
]->
ru¬ög
)? "NOT RUNNING": (˙t[thªad]->
∑u£
)? "PAUSE":"ACTIVE");

1050 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

1051 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

1053 
	`•rötf
(
ªs
, "Thªad %hu Dëe˘i⁄ sètu†%s\n",
thªad
,

1054 (!
˙t
[
thªad
]->
ru¬ög
)? "NOT RUNNING": (˙t[thªad]->
∑u£
)? "PAUSE":"ACTIVE");

1055 
	`£nd_ãm∂©e_öi_˛õ¡_øw
(
˛õ¡_sockë
);

1056 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

1060 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

1061 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d
, 
NULL
);

1063 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d_øw
, 
NULL
);

1065 } i‡(!
	`°rcmp
(
comm™d
, "start")) {

1066 
poöãr
 =Öointer + 5;

1067 
Àngth_uri
 =Üength_uri - 5;

1068 i‡(
Àngth_uri
 == 0) {

1071 i‡(
thªad
 == 0) {

1073 
˙t
[
i
]->
∑u£
 = 0;

1074 } 
˙t
[++
i
]);

1076 
˙t
[
thªad
]->
∑u£
 = 0;

1079 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

1080 
	`£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
,
öi_ãm∂©e
);

1081 
	`•rötf
(
ªs
, "<a href=/%hu/detection>&lt;&ndash; back</a><br><br>\n<b>Thread %hu</b>"

1082 " Dëe˘i⁄Ñesumed\n", 
thªad
,Åhread);

1083 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

1084 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

1086 
	`£nd_ãm∂©e_öi_˛õ¡_øw
(
˛õ¡_sockë
);

1087 
	`•rötf
(
ªs
, "Thªad %hu Dëe˘i⁄Ñesumed\nD⁄e\n", 
thªad
);

1088 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

1092 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

1093 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d
, 
NULL
);

1095 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d_øw
, 
NULL
);

1097 } i‡(!
	`°rcmp
(
comm™d
,"pause")){

1098 
poöãr
 =Öointer + 5;

1099 
Àngth_uri
 =Üength_uri - 5;

1100 i‡(
Àngth_uri
 == 0) {

1103 i‡(
thªad
 == 0) {

1105 
˙t
[
i
]->
∑u£
 = 1;

1106 } 
˙t
[++
i
]);

1108 
˙t
[
thªad
]->
∑u£
 = 1;

1111 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

1112 
	`£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
, 
öi_ãm∂©e
);

1113 
	`•rötf
(
ªs
, "<a href=/%hu/detection>&lt;&ndash; back</a><br><br>\n<b>Thread %hu</b>"

1114 " Dëe˘i⁄Öau£d\n", 
thªad
,Åhread);

1115 
	`£nd_ãm∂©e
(
˛õ¡_sockë
,
ªs
);

1116 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

1118 
	`£nd_ãm∂©e_öi_˛õ¡_øw
(
˛õ¡_sockë
);

1119 
	`•rötf
(
ªs
, "<b>Thªad %hu</b> Dëe˘i⁄Öau£d\nD⁄e\n", 
thªad
);

1120 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

1124 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

1125 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d
, 
NULL
);

1127 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d_øw
, 
NULL
);

1129 } i‡(!
	`°rcmp
(
comm™d
,"connection")){

1130 
poöãr
 =Öointer + 10;

1131 
Àngth_uri
 =Üength_uri - 10;

1132 i‡(
Àngth_uri
 == 0) {

1135 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

1136 
	`£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
, 
öi_ãm∂©e
);

1137 
	`•rötf
(
ªs
, "<®hªf=/%hu/dëe˘i⁄>&…;&ndash; back</a><br><br>\n", 
thªad
);

1138 
	`£nd_ãm∂©e
(
˛õ¡_sockë
,
ªs
);

1139 i‡(
thªad
 == 0) {

1141 
	`•rötf
(
ªs
, "<b>Thªad %hu</b> %s<br>\n",
i
,

1142 (!
˙t
[
i
]->
ru¬ög
)? "NOT RUNNING" :

1143 (
˙t
[
i
]->
lo°_c⁄√˘i⁄
)?
CONNECTION_KO
:
CONNECTION_OK
);

1144 
	`£nd_ãm∂©e
(
˛õ¡_sockë
,
ªs
);

1145 } 
˙t
[++
i
]);

1147 
	`•rötf
(
ªs
, "<b>Thªad %hu</b> %s\n", 
thªad
,

1148 (!
˙t
[
thªad
]->
ru¬ög
)? "NOT RUNNING" :

1149 (
˙t
[
thªad
]->
lo°_c⁄√˘i⁄
)? 
CONNECTION_KO
: 
CONNECTION_OK
);

1150 
	`£nd_ãm∂©e
(
˛õ¡_sockë
,
ªs
);

1152 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

1154 
	`£nd_ãm∂©e_öi_˛õ¡_øw
(
˛õ¡_sockë
);

1155 i‡(
thªad
 == 0){

1157 
	`•rötf
(
ªs
, "Thªad %hu %s\n", 
i
,

1158 (!
˙t
[
i
]->
ru¬ög
)? "NOT RUNNING" :

1159 (
˙t
[
i
]->
lo°_c⁄√˘i⁄
)? 
CONNECTION_KO
: 
CONNECTION_OK
);

1160 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

1161 } 
˙t
[++
i
]);

1163 
	`•rötf
(
ªs
, "Thªad %hu %s\n", 
thªad
,

1164 (!
˙t
[
thªad
]->
ru¬ög
)? "NOT RUNNING" :

1165 (
˙t
[
thªad
]->
lo°_c⁄√˘i⁄
)? 
CONNECTION_KO
: 
CONNECTION_OK
);

1166 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

1172 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

1173 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d
, 
NULL
);

1175 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d_øw
, 
NULL
);

1178 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

1179 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d
, 
NULL
);

1181 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d_øw
, 
NULL
);

1185 
	}
}

1194 
	$åack
(*
poöãr
, *
ªs
, 
Àngth_uri
, 
thªad
,

1195 
˛õ¡_sockë
, *
u£rd©a
)

1197 
que°i⁄
 = '\0';

1198 
comm™d
[256] = {'\0'};

1199 
c⁄ãxt
 **
˙t
 = 
u£rd©a
;

1201 
w¨nögkûl
 = 
	`ssˇnf
(
poöãr
, "%255[a-z]%c", 
comm™d
, &
que°i⁄
);

1202 i‡(!
	`°rcmp
(
comm™d
, "set")) {

1203 
poöãr
ıoöãr+3;
Àngth_uri
=length_uri-3;

1208 i‡((
que°i⁄
 ='?'Ë&& (
Àngth_uri
 > 2)) {

1209 
∑nvÆue
[12] = {'\0'}, 
tûtvÆue
[12] = {'\0'};

1210 
x_vÆue
[12] = {'\0'}, 
y_vÆue
[12] = {'\0'};

1211 
c⁄ãxt
 *
£t˙t
;

1212 
∑n
 = 0, 
tût
 = 0, 
X
 = 0 , 
Y
 = 0;

1214 
poöãr
++;

1215 
Àngth_uri
--;

1220 
w¨nögkûl
 = 
	`ssˇnf
 (
poöãr
, "%255[a-z]%c" , 
comm™d
, &
que°i⁄
);

1222 i‡(–
que°i⁄
 !'=' ) || (
comm™d
[0] == '\0')) {

1224 
	`mŸi⁄_log
(
LOG_WARNING
, 0, "httpd debugÑace 1");

1225 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

1226 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_vÆid_sy¡ax
, 
NULL
);

1228 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_vÆid_sy¡ax_øw
, 
NULL
);

1232 
poöãr
++;

1233 
Àngth_uri
--;

1237 i‡(!
	`°rcmp
(
comm™d
, "pan")) {

1238 
poöãr
 =Öointer + 3;

1239 
Àngth_uri
 =Üength_uri - 3;

1240 
∑n
 = 1;

1241 i‡((
w¨nögkûl
 = 
	`ssˇnf
(
poöãr
, "%10[-0-9]", 
∑nvÆue
))){

1242 
poöãr
 =Öoöã∏+ 
	`°æí
(
∑nvÆue
);

1243 
Àngth_uri
 =Üígth_urò- 
	`°æí
(
∑nvÆue
);

1246 i‡(!
	`°rcmp
(
comm™d
, "tilt")) {

1247 
poöãr
 =Öointer + 4;

1248 
Àngth_uri
 =Üength_uri - 4;

1249 
tût
 = 1;

1250 i‡((
w¨nögkûl
 = 
	`ssˇnf
(
poöãr
, "%10[-0-9]", 
tûtvÆue
))){

1251 
poöãr
 =Öoöã∏+ 
	`°æí
(
tûtvÆue
);

1252 
Àngth_uri
 =Üígth_urò- 
	`°æí
(
tûtvÆue
);

1255 i‡(!
	`°rcmp
(
comm™d
, "x")) {

1256 
poöãr
++;

1257 
Àngth_uri
--;

1258 
X
 = 1;

1259 i‡((
w¨nögkûl
 = 
	`ssˇnf
(
poöãr
, "%10[-0-9]", 
x_vÆue
))){

1260 
poöãr
 =Öoöã∏+ 
	`°æí
(
x_vÆue
);

1261 
Àngth_uri
 =Üígth_urò- 
	`°æí
(
x_vÆue
);

1264 i‡(!
	`°rcmp
(
comm™d
, "y")) {

1265 
poöãr
++;

1266 
Àngth_uri
--;

1267 
Y
 = 1;

1268 i‡((
w¨nögkûl
 = 
	`ssˇnf
 (
poöãr
, "%10[-0-9]" , 
y_vÆue
))){

1269 
poöãr
 =Öoöã∏+ 
	`°æí
(
y_vÆue
);

1270 
Àngth_uri
 =Üígth_urò- 
	`°æí
(
y_vÆue
);

1274 
	`mŸi⁄_log
(
LOG_WARNING
, 0, "httpd debugÑace 2");

1275 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

1276 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_vÆid_sy¡ax
, 
NULL
);

1278 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_vÆid_sy¡ax_øw
, 
NULL
);

1286 i‡(!
w¨nögkûl
) {

1287 
	`mŸi⁄_log
(
LOG_WARNING
, 0, "httpd debugÑace 3");

1289 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

1290 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
îr‹_vÆue
, 
NULL
);

1292 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
îr‹_vÆue_øw
, 
NULL
);

1299 i‡(
Àngth_uri
 == 0) {

1300 i‡(
∑n
) {

1301 
co‹d
 
˚¡
;

1302 
c⁄ãxt
 *
∑n˙t
;

1306 
∑n˙t
 = 
˙t
[
thªad
];

1307 
˚¡
.
width
 = 
∑n˙t
->
imgs
.width;

1308 
˚¡
.
height
 = 
∑n˙t
->
imgs
.height;

1309 
˚¡
.
y
 = 0;

1310 
˚¡
.
x
 = 
	`©oi
(
∑nvÆue
);

1312 
˙t
[
thªad
]->
moved
 = 
	`åack_move
(
∑n˙t
,Ö™˙t->
video_dev
, &
˚¡
, &∑n˙t->
imgs
, 1);

1313 i‡(
˙t
[
thªad
]->
moved
) {

1314 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

1315 
	`£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
, 
öi_ãm∂©e
);

1316 
	`•rötf
(
ªs
, "<a href=/%hu/track>&lt;&ndash; back</a><br><br>"

1319 
thªad
,Åhªad, 
∑nvÆue
);

1320 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

1321 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

1323 
	`£nd_ãm∂©e_öi_˛õ¡_øw
(
˛õ¡_sockë
);

1324 
	`•rötf
(
ªs
, "åack sëÑñ©ivê∑n=%s\nD⁄e\n", 
∑nvÆue
);

1325 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

1329 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

1330 
	`•rötf
(
ªs
, "<a href=/%hu/track>&lt;&ndash; back</a><br><br>"

1331 "<b>Thªad %hu</b>\n", 
thªad
,Åhread);

1332 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
åack_îr‹
, 
ªs
);

1335 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
åack_îr‹_øw
, 
NULL
);

1337 } i‡(
tût
) {

1338 
co‹d
 
˚¡
;

1339 
c⁄ãxt
 *
tût˙t
;

1343 
tût˙t
 = 
˙t
[
thªad
];

1344 
˚¡
.
width
 = 
tût˙t
->
imgs
.width;

1345 
˚¡
.
height
 = 
tût˙t
->
imgs
.height;

1346 
˚¡
.
x
 = 0;

1347 
˚¡
.
y
 = 
	`©oi
(
tûtvÆue
);

1349 
˙t
[
thªad
]->
moved
=
	`åack_move
(
tût˙t
,Åût˙t->
video_dev
, &
˚¡
, &tût˙t->
imgs
, 1);

1350 i‡(
˙t
[
thªad
]->
moved
){

1351 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

1352 
	`£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
, 
öi_ãm∂©e
);

1353 
	`•rötf
(
ªs
, "<a href=/%hu/track>&lt;&ndash; back</a><br><br>"

1356 
thªad
,Åhªad, 
tûtvÆue
);

1357 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

1358 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

1360 
	`£nd_ãm∂©e_öi_˛õ¡_øw
(
˛õ¡_sockë
);

1361 
	`•rötf
(
ªs
, "åack sëÑñ©ivêtût=%s\nD⁄e\n",
tûtvÆue
);

1362 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

1366 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

1367 
	`•rötf
(
ªs
, "<a href=/%hu/track>&lt;&ndash; back</a><br><br>"

1368 "<b>Thªad %hu</b>\n", 
thªad
,Åhread);

1369 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
åack_îr‹
, 
ªs
);

1372 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
åack_îr‹_øw
, 
NULL
);

1374 } i‡(
X
) {

1376 
£t˙t
 = 
˙t
[
thªad
];

1378 
˙t
[
thªad
]->
moved
 = 
	`åack_˚¡î
(
£t˙t
, së˙t->
video_dev
, 1, 
	`©oi
(
x_vÆue
), 1000);

1379 i‡(
˙t
[
thªad
]->
moved
) {

1380 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

1381 
	`£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
, 
öi_ãm∂©e
);

1382 
	`•rötf
(
ªs
, "<a href=/%hu/track>&lt;&ndash; back</a><br><br>"

1385 
thªad
,Åhªad, 
x_vÆue
);

1386 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

1387 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

1389 
	`£nd_ãm∂©e_öi_˛õ¡_øw
(
˛õ¡_sockë
);

1390 
	`•rötf
(
ªs
, "åack sëábsﬁuã x=%s\nD⁄e\n", 
x_vÆue
);

1391 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

1395 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

1396 
	`•rötf
(
ªs
, "<a href=/%hu/track>&lt;&ndash; back</a><br><br>"

1397 "<b>Thªad %hu</b>\n", 
thªad
,Åhread);

1398 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
åack_îr‹
, 
ªs
);

1401 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
åack_îr‹_øw
, 
NULL
);

1406 
£t˙t
 = 
˙t
[
thªad
];

1408 
˙t
[
thªad
]->
moved
 = 
	`åack_˚¡î
(
£t˙t
, së˙t->
video_dev
, 1, 1000, 
	`©oi
(
y_vÆue
));

1409 i‡(
˙t
[
thªad
]->
moved
) {

1410 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

1411 
	`£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
, 
öi_ãm∂©e
);

1412 
	`•rötf
(
ªs
, "<a href=/%hu/track>&lt;&ndash; back</a><br><br>"

1415 
thªad
,Åhªad, 
y_vÆue
);

1416 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

1417 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

1419 
	`£nd_ãm∂©e_öi_˛õ¡_øw
(
˛õ¡_sockë
);

1420 
	`•rötf
(
ªs
, "åack sëábsﬁuã y=%s\nD⁄e\n", 
y_vÆue
);

1421 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

1425 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

1426 
	`•rötf
(
ªs
, "<a href=/%hu/track>&lt;&ndash; back</a><br><br>"

1427 "<b>Thªad %hu</b>\n", 
thªad
,Åhread);

1428 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
åack_îr‹
, 
ªs
);

1430 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
åack_îr‹_øw
, 
NULL
);

1440 
w¨nögkûl
 = 
	`ssˇnf
 (
poöãr
, "%c%255[a-z]" ,&
que°i⁄
, 
comm™d
);

1441 i‡(–
que°i⁄
 !'&' ) || (
comm™d
[0] == '\0') ){

1442 
	`mŸi⁄_log
(
LOG_WARNING
, 0, "httpd debugÑace 4");

1443 i‡(
	`°r°r
(
poöãr
,"&")){

1444 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

1445 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
îr‹_vÆue
, 
NULL
);

1447 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
îr‹_vÆue_øw
, 
NULL
);

1449 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

1450 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_vÆid_sy¡ax
, 
NULL
);

1452 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_vÆid_sy¡ax_øw
, 
NULL
);

1457 
poöãr
++;

1458 
Àngth_uri
--;

1460 i‡(!
	`°rcmp
(
comm™d
, "pan")){

1461 
poöãr
 =Öointer + 3;

1462 
Àngth_uri
 =Üength_uri - 3;

1463 i‡(
∑n
 || !
tût
 || 
X
 || 
Y
 ) {

1464 
	`mŸi⁄_log
(
LOG_WARNING
, 0, "httpd debugÑace 5");

1466 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

1467 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_vÆid_sy¡ax
, 
NULL
);

1469 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_vÆid_sy¡ax_øw
, 
NULL
);

1472 
∑n
=2;

1473 
w¨nögkûl
 = 
	`ssˇnf
 (
poöãr
, "%c%10[-0-9]" ,&
que°i⁄
, 
∑nvÆue
);

1475 i‡(!
	`°rcmp
(
comm™d
, "tilt")) {

1476 
poöãr
 =Öointer + 4;

1477 
Àngth_uri
 =Üength_uri - 4;

1479 i‡(
tût
 || !
∑n
 || 
X
 || 
Y
) {

1481 
	`mŸi⁄_log
(
LOG_WARNING
, 0, "httpd debugÑace 6");

1482 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

1483 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_vÆid_sy¡ax
, 
NULL
);

1485 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_vÆid_sy¡ax_øw
, 
NULL
);

1488 
tût
 = 2;

1489 
w¨nögkûl
 = 
	`ssˇnf
 (
poöãr
, "%c%10[-0-9]" ,&
que°i⁄
, 
tûtvÆue
);

1490 } i‡(!
	`°rcmp
(
comm™d
, "x")) {

1491 
poöãr
++;

1492 
Àngth_uri
--;

1493 i‡(
X
 || !
Y
 || 
∑n
 || 
tût
) {

1494 
	`mŸi⁄_log
(
LOG_WARNING
, 0, "httpd debugÑace 7");

1497 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

1498 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_vÆid_sy¡ax
, 
NULL
);

1500 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_vÆid_sy¡ax_øw
, 
NULL
);

1503 
X
 = 2;

1504 
w¨nögkûl
 = 
	`ssˇnf
 (
poöãr
, "%c%10[-0-9]" ,&
que°i⁄
, 
x_vÆue
);

1505 } i‡(!
	`°rcmp
(
comm™d
, "y")) {

1506 
poöãr
++;

1507 
Àngth_uri
--;

1508 i‡(
Y
 || !
X
 || 
∑n
 || 
tût
){

1509 
	`mŸi⁄_log
(
LOG_WARNING
, 0, "httpd debugÑace 8");

1511 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

1512 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_vÆid_sy¡ax
, 
NULL
);

1514 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_vÆid_sy¡ax_øw
, 
NULL
);

1517 
Y
 = 2;

1518 
w¨nögkûl
 = 
	`ssˇnf
 (
poöãr
, "%c%10[-0-9]" ,&
que°i⁄
, 
y_vÆue
);

1520 
	`mŸi⁄_log
(
LOG_WARNING
, 0, "httpd debugÑace 9");

1522 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

1523 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_vÆid_sy¡ax
, 
NULL
);

1525 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_vÆid_sy¡ax_øw
, 
NULL
);

1531 i‡((
w¨nögkûl
 < 2Ë&& (
que°i⁄
 != '=')) {

1532 
	`mŸi⁄_log
(
LOG_WARNING
, 0, "httpd debugÑace 10");

1534 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

1535 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_vÆid_sy¡ax
, 
NULL
);

1537 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_vÆid_sy¡ax_øw
, 
NULL
);

1539 } i‡(–
que°i⁄
 ='='Ë&& ( 
w¨nögkûl
 == 1)) {

1540 
	`mŸi⁄_log
(
LOG_WARNING
, 0, "httpd debugÑace 11");

1541 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

1542 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
îr‹_vÆue
, 
NULL
);

1544 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
îr‹_vÆue_øw
, 
NULL
);

1549 i‡(
∑n
 == 2) {

1550 
poöãr
 =Öoöã∏+ 
	`°æí
(
∑nvÆue
) + 1;

1551 
Àngth_uri
 =Üígth_urò- 
	`°æí
(
∑nvÆue
) - 1;

1552 } i‡(
tût
 == 2) {

1553 
poöãr
 =Öoöã∏+ 
	`°æí
(
tûtvÆue
) + 1;

1554 
Àngth_uri
 =Üígth_urò- 
	`°æí
(
tûtvÆue
) - 1;

1555 } i‡(
X
 == 2) {

1556 
poöãr
 =Öoöã∏+ 
	`°æí
(
x_vÆue
) + 1;

1557 
Àngth_uri
 =Üígth_urò- 
	`°æí
(
x_vÆue
) - 1;

1559 
poöãr
 =Öoöã∏+ 
	`°æí
(
y_vÆue
) + 1;

1560 
Àngth_uri
 =Üígth_urò- 
	`°æí
(
y_vÆue
) - 1;

1565 i‡(
Àngth_uri
 != 0) {

1566 
	`mŸi⁄_log
(
LOG_WARNING
, 0, "httpd debugÑace 12");

1567 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

1568 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
îr‹_vÆue
, 
NULL
);

1570 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
îr‹_vÆue_øw
, 
NULL
);

1577 i‡(
X
 && 
Y
) {

1578 
£t˙t
 = 
˙t
[
thªad
];

1579 
˙t
[
thªad
]->
moved
 = 
	`åack_˚¡î
(
£t˙t
, së˙t->
video_dev
, 1, 
	`©oi
(
x_vÆue
),átoi(
y_vÆue
));

1580 i‡(
˙t
[
thªad
]->
moved
) {

1581 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
){

1582 
	`£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
, 
öi_ãm∂©e
);

1583 
	`•rötf
(
ªs
, "<a href=/%hu/track>&lt;&ndash; back</a><br><br>"

1586 
thªad
,Åhªad, 
x_vÆue
, 
y_vÆue
);

1587 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

1588 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

1590 
	`£nd_ãm∂©e_öi_˛õ¡_øw
(
˛õ¡_sockë
);

1591 
	`•rötf
(
ªs
, "åackábsﬁuã së x=%†y=%s\nD⁄e\n", 
x_vÆue
, 
y_vÆue
);

1592 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

1596 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

1597 
	`•rötf
(
ªs
, "<a href=/%hu/track>&lt;&ndash; back</a><br><br>"

1598 "<b>Thªad %hu</b>\n", 
thªad
,Åhread);

1599 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
åack_îr‹
, 
ªs
);

1601 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
åack_îr‹_øw
, 
NULL
);

1606 
co‹d
 
˚¡
;

1607 
c⁄ãxt
 *
ªœtive˙t
;

1611 
ªœtive˙t
 = 
˙t
[
thªad
];

1612 
˚¡
.
width
 = 
ªœtive˙t
->
imgs
.width;

1613 
˚¡
.
height
 = 
ªœtive˙t
->
imgs
.height;

1614 
˚¡
.
y
 = 0;

1615 
˚¡
.
x
 = 
	`©oi
(
∑nvÆue
);

1617 
˙t
[
thªad
]->
moved
 = 
	`åack_move
(
ªœtive˙t
,Ññ©ive˙t->
video_dev
, &
˚¡
, &ªœtive˙t->
imgs
, 1);

1619 i‡(
˙t
[
thªad
]->
moved
) {

1621 
ªœtive˙t
 = 
˙t
[
thªad
];

1622 
˚¡
.
width
 = 
ªœtive˙t
->
imgs
.width;

1623 
˚¡
.
height
 = 
ªœtive˙t
->
imgs
.height;

1624 
˚¡
.
x
 = 0;

1625 
˚¡
.
y
 = 
	`©oi
(
tûtvÆue
);

1626 
	`SLEEP
(1,0);

1627 
˙t
[
thªad
]->
moved
 = 
	`åack_move
(
ªœtive˙t
,Ññ©ive˙t->
video_dev
, &
˚¡
, &ªœtive˙t->
imgs
, 1);

1629 i‡(
˙t
[
thªad
]->
moved
) {

1630 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

1631 
	`£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
, 
öi_ãm∂©e
);

1632 
	`•rötf
(
ªs
, "<a href=/%hu/track>&lt;&ndash; back</a><br><br>"

1635 
thªad
,Åhªad, 
∑nvÆue
, 
tûtvÆue
);

1636 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

1637 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

1639 
	`£nd_ãm∂©e_öi_˛õ¡_øw
(
˛õ¡_sockë
);

1640 
	`•rötf
(
ªs
, "åackÑñ©ivê∑n=%†tût=%s\nD⁄e\n", 
∑nvÆue
, 
tûtvÆue
);

1641 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

1646 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

1647 
	`•rötf
(
ªs
, "<a href=/%hu/track>&lt;&ndash; back</a><br><br>"

1648 "<b>Thªad %hu</b>\n", 
thªad
,Åhread);

1649 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
åack_îr‹
, 
ªs
);

1651 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
åack_îr‹_øw
, 
NULL
);

1657 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

1658 
	`•rötf
(
ªs
, "<a href=/%hu/track>&lt;&ndash; back</a><br><br><b>Thread %hu</b>\n",

1659 
thªad
,Åhread);

1660 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
åack_îr‹
, 
ªs
);

1662 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
åack_îr‹_øw
, 
NULL
);

1664 } i‡(
Àngth_uri
 == 0) {

1665 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

1666 
	`£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
, 
öi_ãm∂©e
);

1667 
	`•rötf
(
ªs
, "<a href=/%hu/track>&lt;&ndash; back</a><br><br>\n<b>Thread %hu</b><br>\n"

1677 "</f‹m>\n", 
thªad
,Åhread);

1678 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

1679 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

1681 
	`£nd_ãm∂©e_öi_˛õ¡_øw
(
˛õ¡_sockë
);

1682 
	`•rötf
(
ªs
, "setÇeedsáÖan/tilt or x/y values\n");

1683 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

1687 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

1688 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d
, 
NULL
);

1690 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d_øw
, 
NULL
);

1692 } i‡(!
	`°rcmp
(
comm™d
,"status")) {

1693 
poöãr
 =Öointer+6;

1694 
Àngth_uri
 =Üength_uri-6;

1695 i‡(
Àngth_uri
==0) {

1696 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

1697 
	`£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
, 
öi_ãm∂©e
);

1698 
	`•rötf
(
ªs
, "<a href=/%hu/track>&lt;&ndash; back</a><br><br>\n<b>Thread %hu</b>"

1699 "<br>åackáutÿ%s", 
thªad
,Åhread,

1700 (
˙t
[
thªad
]->
åack
.
a˘ive
)? "enabled":"disabled");

1701 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

1702 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

1704 
	`•rötf
(
ªs
, "Thªad %hu\¿åackáutÿ%s\nD⁄e\n",
thªad
,

1705 (
˙t
[
thªad
]->
åack
.
a˘ive
)? "enabled":"disabled");

1706 
	`£nd_ãm∂©e_öi_˛õ¡_øw
(
˛õ¡_sockë
);

1707 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

1711 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

1712 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d
, 
NULL
);

1714 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d_øw
, 
NULL
);

1716 } i‡(!
	`°rcmp
(
comm™d
,"auto")) {

1717 
poöãr
 =Öointer + 4;

1718 
Àngth_uri
 =Üength_uri - 4;

1719 i‡((
que°i⁄
 ='?'Ë&& (
Àngth_uri
 > 0)) {

1720 
quîy
[256] = {'\0'};

1721 
poöãr
++;

1722 
Àngth_uri
--;

1725 
w¨nögkûl
 = 
	`ssˇnf
 (
poöãr
, "%255[a-z]%c",
quîy
,&
que°i⁄
);

1726 i‡((
que°i⁄
 ='='Ë&& (!
	`°rcmp
(
quîy
,"value")) ) {

1727 
poöãr
 =Öointer + 6;

1728 
Àngth_uri
 =Üength_uri - 6;

1729 
w¨nögkûl
 = 
	`ssˇnf
 (
poöãr
, "%255[-0-9a-z]" , 
comm™d
);

1730 i‡((
comm™d
!=
NULL
Ë&& (
	`°æí
(command) > 0)) {

1731 
c⁄ãxt
 *
auto˙t
;

1735 i‡(!
	`°rcmp
(
comm™d
,"status")) {

1736 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

1737 
	`£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
, 
öi_ãm∂©e
);

1738 
	`•rötf
(
ªs
, "<a href=/%hu/track>&lt;&ndash; back</a><br><br>"

1740 "åackáutÿ%s", 
thªad
,Åhread,

1741 (
˙t
[
thªad
]->
åack
.
a˘ive
)? "enabled":"disabled");

1742 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

1743 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

1745 
	`•rötf
(
ªs
, "Thªad %hu\¿åackáutÿ%s\nD⁄e\n", 
thªad
,

1746 (
˙t
[
thªad
]->
åack
.
a˘ive
)? "enabled":"disabled");

1747 
	`£nd_ãm∂©e_öi_˛õ¡_øw
(
˛õ¡_sockë
);

1748 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

1751 
a˘ive
;

1752 
a˘ive
 = 
	`©oi
(
comm™d
);

1754 i‡(
a˘ive
 > -1 &&áctive < 2) {

1755 
auto˙t
 = 
˙t
[
thªad
];

1756 
auto˙t
->
åack
.
a˘ive
 =áctive;

1757 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

1758 
	`£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
, 
öi_ãm∂©e
);

1759 
	`•rötf
(
ªs
, "<a href=/%hu/track>&lt;&ndash; back</a><br><br>"

1761 "<br>åackáutÿ%s<br>", 
thªad
,Åhread,

1762 
a˘ive
 ? "enabled":"disabled");

1763 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

1764 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

1766 
	`£nd_ãm∂©e_öi_˛õ¡_øw
(
˛õ¡_sockë
);

1767 
	`•rötf
(
ªs
, "åackáutÿ%s\nD⁄e\n",
a˘ive
 ? "enabled":"disabled");

1768 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

1771 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

1772 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d
, 
NULL
);

1774 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d_øw
, 
NULL
);

1778 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

1779 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d
, 
NULL
);

1781 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d_øw
, 
NULL
);

1784 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

1785 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d
, 
NULL
);

1787 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d_øw
, 
NULL
);

1790 i‡(
Àngth_uri
 == 0) {

1792 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

1793 
	`£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
, 
öi_ãm∂©e
);

1794 
	`•rötf
(
ªs
, "<a href=/%hu/track>&lt;&ndash; back</a><br><br>\n<b>Thread %hu</b>\n"

1799 "</f‹m>\n",
thªad
,Åhªad, (
˙t
[thªad]->
åack
.
a˘ive
) ? "selected":"",

1800 (
˙t
[
thªad
]->
åack
.
a˘ive
) ? "selected":"" );

1801 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

1802 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

1804 
	`£nd_ãm∂©e_öi_˛õ¡_øw
(
˛õ¡_sockë
);

1805 
	`•rötf
(
ªs
, "autoáccepts only 0,1 or statusás valid value\n");

1806 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

1809 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

1810 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d
, 
NULL
);

1812 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d_øw
, 
NULL
);

1815 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

1816 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d
, 
NULL
);

1818 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d_øw
, 
NULL
);

1822 
	}
}

1834 
	$h™dÀ_gë
(
˛õ¡_sockë
, c⁄° * 
uæ
, *
u£rd©a
)

1836 
c⁄ãxt
 **
˙t
=
u£rd©a
;

1838 i‡(*
uæ
 == '/' ) {

1839 
i
 = 0;

1840 *
ªs
=
NULL
;

1841 
ªs
 = 
	`mÆloc
(2048);

1844 
˙t
[++
i
]);

1846 i‡(! (
	`°rcmp
 (
uæ
, "/"))) {

1847 
y
;

1848 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

1849 
	`£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
,
öi_ãm∂©e
);

1850 
	`•rötf
(
ªs
, "<b>MŸi⁄ "
VERSION
" Running [%hu] Threads</b><br>\n"

1851 "<®hªf='/0/'>AŒ</a><br>\n", 
i
);

1852 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

1853 
y
=1; y<
i
; y++) {

1854 
	`•rötf
(
ªs
, "<®hªf='/%hu/'>Thªad %hu</a><br>\n", 
y
, y);

1855 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

1857 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

1859 
	`£nd_ãm∂©e_öi_˛õ¡_øw
(
˛õ¡_sockë
);

1860 
	`•rötf
(
ªs
, "MŸi⁄ "
VERSION
" Ru¬ög [%hu] Thªads\n0\n", 
i
);

1861 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

1862 
y
=1; y<
i
; y++) {

1863 
	`•rötf
(
ªs
, "%hu\n", 
y
);

1864 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

1869 
comm™d
[256] = {'\0'};

1870 
¶ash
;

1871 
thªad
 = -1;

1872 
size_t
 
Àngth_uri
 = 0;

1873 *
poöãr
 = (*)
uæ
;

1875 
Àngth_uri
 = 
	`°æí
(
uæ
);

1877 
poöãr
++;

1878 
Àngth_uri
--;

1879 
w¨nögkûl
 = 
	`ssˇnf
 (
poöãr
, "%hd%c", &
thªad
, &
¶ash
);

1881 i‡((
thªad
 !-1Ë&& (thªad < 
i
)) {

1883 i‡(
thªad
 > 9) {

1884 
poöãr
 =Öointer + 2;

1885 
Àngth_uri
 =Üength_uri - 2;

1887 
poöãr
++;

1888 
Àngth_uri
--;

1891 i‡(
¶ash
 == '/') {

1892 
poöãr
++;

1893 
Àngth_uri
--;

1896 i‡(
Àngth_uri
 != 0) {

1897 
w¨nögkûl
 = 
	`ssˇnf
 (
poöãr
, "%255[a-z]%c" , 
comm™d
 , &
¶ash
);

1900 i‡(!
	`°rcmp
(
comm™d
,"config")) {

1901 
poöãr
 =Öointer + 6;

1902 
Àngth_uri
 =Üength_uri - 6;

1903 i‡(
Àngth_uri
 == 0) {

1904 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

1905 
	`£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
, 
öi_ãm∂©e
);

1906 
	`•rötf
(
ªs
, "<a href=/%hd/>&lt;&ndash; back</a><br><br>\n"

1912 
thªad
,Åhread,Åhread,Åhread,Åhread,Åhread);

1913 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

1914 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

1916 
	`£nd_ãm∂©e_öi_˛õ¡_øw
(
˛õ¡_sockë
);

1917 
	`•rötf
(
ªs
, "Thªad %hd\∆i°\nwrôe\n£t\ngë\n", 
thªad
);

1918 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

1920 } i‡((
¶ash
 ='/'Ë&& (
Àngth_uri
 >= 4)) {

1922 
poöãr
++;

1923 
Àngth_uri
--;

1924 
	`c⁄fig
(
poöãr
, 
ªs
, 
Àngth_uri
, 
thªad
, 
˛õ¡_sockë
, 
˙t
);

1926 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

1927 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d
, 
NULL
);

1929 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d_øw
, 
NULL
);

1933 i‡(!
	`°rcmp
(
comm™d
,"action")) {

1934 
poöãr
 =Öointer + 6;

1935 
Àngth_uri
 =Üength_uri - 6;

1937 i‡(
Àngth_uri
 == 0) {

1938 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

1939 
	`£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
, 
öi_ãm∂©e
);

1940 
	`•rötf
(
ªs
, "<a href=/%hd/>&lt;&ndash; back</a><br><br>\n"

1946 
thªad
,thread,thread,thread,thread,thread);

1947 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

1948 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

1950 
	`£nd_ãm∂©e_öi_˛õ¡_øw
(
˛õ¡_sockë
);

1951 
	`•rötf
(
ªs
, "Thªad %hd\nmakemovõ\n¢≠shŸ\ƒe°¨t\nquô\n", 
thªad
);

1952 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

1954 } i‡((
¶ash
 ='/'Ë&& (
Àngth_uri
 > 4)) {

1955 
ªt
 = 1;

1956 
poöãr
++;

1957 
Àngth_uri
--;

1958 
ªt
 = 
	`a˘i⁄
(
poöãr
, 
ªs
, 
Àngth_uri
, 
thªad
, 
˛õ¡_sockë
, 
˙t
);

1959 
	`‰ì
(
ªs
);

1960  
ªt
;

1963 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

1964 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d
,
NULL
);

1966 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d_øw
,
NULL
);

1970 i‡(!
	`°rcmp
(
comm™d
,"detection")) {

1971 
poöãr
 =Öointer + 9;

1972 
Àngth_uri
 =Üength_uri - 9;

1973 i‡(
Àngth_uri
 == 0) {

1974 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

1975 
	`£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
, 
öi_ãm∂©e
);

1976 
	`•rötf
(
ªs
, "<a href=/%hd/>&lt;&ndash; back</a><br><br>\n"

1982 
thªad
,Åhread,Åhread,Åhread,Åhread,Åhread);

1983 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

1984 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

1986 
	`£nd_ãm∂©e_öi_˛õ¡_øw
(
˛õ¡_sockë
);

1987 
	`•rötf
(
ªs
, "Thªad %hd\n°©us\n°¨t\≈au£\nc⁄√˘i⁄\n", 
thªad
);

1988 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

1990 } i‡((
¶ash
 ='/'Ë&& (
Àngth_uri
 > 5)) {

1991 
poöãr
++;

1992 
Àngth_uri
--;

1994 
	`dëe˘i⁄
(
poöãr
, 
ªs
, 
Àngth_uri
, 
thªad
, 
˛õ¡_sockë
, 
˙t
);

1996 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

1997 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d
, 
NULL
);

1999 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d_øw
, 
NULL
);

2003 i‡(!
	`°rcmp
(
comm™d
,"track")) {

2004 
poöãr
 =Öointer + 5;

2005 
Àngth_uri
 =Üength_uri - 5;

2006 i‡(
Àngth_uri
 == 0) {

2007 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

2008 
	`£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
, 
öi_ãm∂©e
);

2009 
	`•rötf
(
ªs
, "<a href=/%hd/>&lt;&ndash; back</a><br><br>\n"

2014 
thªad
,Åhread,Åhread,Åhread,Åhread);

2015 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

2016 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

2018 
	`£nd_ãm∂©e_öi_˛õ¡_øw
(
˛õ¡_sockë
);

2019 
	`•rötf
(
ªs
, "Thªad %hd\n£à∑n/tût\«uto\n°©us\n", 
thªad
);

2020 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

2023 i‡((
¶ash
 ='/'Ë&& (
Àngth_uri
 >= 4)) {

2024 
poöãr
++;

2025 
Àngth_uri
--;

2027 i‡(
˙t
[
thªad
]->
åack
.
ty≥
) {

2028 
	`åack
(
poöãr
, 
ªs
, 
Àngth_uri
, 
thªad
, 
˛õ¡_sockë
, 
˙t
);

2031 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

2032 
	`•rötf
(
ªs
, "<®hªf=/%hd/>&…;&ndash; back</a>\n", 
thªad
);

2033 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_åack
,
ªs
);

2036 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_åack_øw
,
NULL
);

2039 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

2040 
	`•rötf
(
ªs
, "<®hªf=/%hd/>&…;&ndash; back</a>\n", 
thªad
);

2041 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d
, 
ªs
);

2044 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d_øw
, 
NULL
);

2047 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

2048 
	`•rötf
(
ªs
, "<®hªf=/%hd/>&…;&ndash; back</a>\n", 
thªad
);

2049 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d
, 
ªs
);

2052 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_comm™d_øw
, 
NULL
);

2056 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

2057 
	`£nd_ãm∂©e_öi_˛õ¡
(
˛õ¡_sockë
,
öi_ãm∂©e
);

2058 
	`•rötf
(
ªs
, "<a href=/>&lt;&ndash; back</a><br><br>\n<b>Thread %hd</b><br>\n"

2063 
thªad
,Åhread,Åhread,Åhread,Åhread);

2064 
	`£nd_ãm∂©e
(
˛õ¡_sockë
, 
ªs
);

2065 
	`£nd_ãm∂©e_íd_˛õ¡
(
˛õ¡_sockë
);

2067 
	`£nd_ãm∂©e_öi_˛õ¡_øw
(
˛õ¡_sockë
);

2068 
	`•rötf
(
ªs
, "Thªad %hd\nc⁄fig\«˘i⁄\ndëe˘i⁄\¡øck\n", 
thªad
);

2069 
	`£nd_ãm∂©e_øw
(
˛õ¡_sockë
, 
ªs
);

2073 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
) {

2074 
	`•rötf
(
ªs
, "<a href=/>&lt;&ndash; back</a>\n");

2075 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid
, 
ªs
);

2077 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_vÆid_øw
, 
NULL
);

2081 
	`‰ì
(
ªs
);

2083 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

2084 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_ãm∂©e
,
NULL
);

2086 
	`ª•⁄£_˛õ¡
(
˛õ¡_sockë
, 
nŸ_found_ª•⁄£_ãm∂©e_øw
,
NULL
);

2090 
	}
}

2101 
	$ªad_˛õ¡
(
˛õ¡_sockë
, *
u£rd©a
, *
auth
)

2103 
Æive
 = 1;

2104 
ªt
 = 1;

2105 
buf„r
[1024] = {'\0'};

2106 
Àngth
 = 1023;

2107 
c⁄ãxt
 **
˙t
 = 
u£rd©a
;

2110 
	`±hªad_muãx_lock
(&
hâpd_muãx
);

2112 
Æive
) {

2113 
ssize_t
 
ƒód
 = 0, 
ªadb
 = -1;

2115 
ƒód
 = 
	`ªad
 (
˛õ¡_sockë
, 
buf„r
, 
Àngth
);

2117 i‡(
ƒód
 <= 0) {

2118 
	`mŸi⁄_log
(
LOG_ERR
, 1, "httpd FirstÑead");

2119 
	`±hªad_muãx_u∆ock
(&
hâpd_muãx
);

2122 
mëhod
[10]={'\0'};

2123 
uæ
[512]={'\0'};

2124 
¥Ÿocﬁ
[10]={'\0'};

2125 *
authítiˇti⁄
=
NULL
;

2127 
buf„r
[
ƒód
] = '\0';

2129 
w¨nögkûl
 = 
	`ssˇnf
 (
buf„r
, "%9†%511†%9s", 
mëhod
, 
uæ
, 
¥Ÿocﬁ
);

2131 (
	`°r°r
 (
buf„r
, "\r\n\r\n"Ë=
NULL
Ë&& (
ªadb
 !0Ë&& (
ƒód
 < 
Àngth
)) {

2132 
ªadb
 = 
	`ªad
 (
˛õ¡_sockë
, 
buf„r
+
ƒód
,  (buffer) -Çread);

2134 i‡(
ªadb
 == -1) {

2135 
ƒód
 = -1;

2139 
ƒód
 +=
ªadb
;

2141 i‡(
ƒód
 > 
Àngth
) {

2142 
	`mŸi⁄_log
(
LOG_ERR
, 1, "httpd End bufferÑeached waiting for bufferÉnding");

2145 
buf„r
[
ƒód
] = '\0';

2150 i‡(
ƒód
 == -1) {

2151 
	`mŸi⁄_log
(
LOG_ERR
, 1, "httpd READ");

2152 
	`±hªad_muãx_u∆ock
(&
hâpd_muãx
);

2155 
Æive
 = 0;

2158 i‡(
	`°rcmp
 (
¥Ÿocﬁ
, "HTTP/1.0") && strcmp (protocol, "HTTP/1.1")) {

2160 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

2161 
w¨nögkûl
 = 
	`wrôe
 (
˛õ¡_sockë
, 
bad_ªque°_ª•⁄£
,  (bad_request_response));

2163 
w¨nögkûl
 = 
	`wrôe
 (
˛õ¡_sockë
, 
bad_ªque°_ª•⁄£_øw
,  (bad_request_response_raw));

2165 
	`±hªad_muãx_u∆ock
(&
hâpd_muãx
);

2169 i‡(
	`°rcmp
 (
mëhod
, "GET")) {

2172 
ª•⁄£
[1024];

2173 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_html_ouçut
)

2174 
	`¢¥ötf
 (
ª•⁄£
,  (ª•⁄£),
bad_mëhod_ª•⁄£_ãm∂©e
, 
mëhod
);

2176 
	`¢¥ötf
 (
ª•⁄£
,  (ª•⁄£),
bad_mëhod_ª•⁄£_ãm∂©e_øw
, 
mëhod
);

2177 
w¨nögkûl
 = 
	`wrôe
 (
˛õ¡_sockë
, 
ª•⁄£
, 
	`°æí
 (response));

2178 
	`±hªad_muãx_u∆ock
(&
hâpd_muãx
);

2182 i‡(
auth
 !
NULL
) {

2183 i‡((
authítiˇti⁄
 = 
	`°r°r
(
buf„r
,"Basic")) ) {

2184 *
íd_auth
 = 
NULL
;

2185 
authítiˇti⁄
 =áuthentication + 6;

2187 i‡((
íd_auth
 = 
	`°r°r
(
authítiˇti⁄
,"\r\n")) ) {

2188 
authítiˇti⁄
[
íd_auth
 -áuthentication] = '\0';

2190 
ª•⁄£
[1024];

2191 
	`¢¥ötf
 (
ª•⁄£
,  (ª•⁄£),
ªque°_auth_ª•⁄£_ãm∂©e
, 
mëhod
);

2192 
w¨nögkûl
 = 
	`wrôe
 (
˛õ¡_sockë
, 
ª•⁄£
, 
	`°æí
 (response));

2193 
	`±hªad_muãx_u∆ock
(&
hâpd_muãx
);

2197 i‡(
	`°rcmp
(
auth
, 
authítiˇti⁄
)) {

2198 
ª•⁄£
[1024]={'\0'};

2199 
	`¢¥ötf
(
ª•⁄£
,  (ª•⁄£), 
ªque°_auth_ª•⁄£_ãm∂©e
, 
mëhod
);

2200 
w¨nögkûl
 = 
	`wrôe
 (
˛õ¡_sockë
, 
ª•⁄£
, 
	`°æí
 (response));

2201 
	`±hªad_muãx_u∆ock
(&
hâpd_muãx
);

2204 
ªt
 = 
	`h™dÀ_gë
 (
˛õ¡_sockë
, 
uæ
, 
˙t
);

2209 
ª•⁄£
[1024]={'\0'};

2210 
	`¢¥ötf
 (
ª•⁄£
,  (ª•⁄£),
ªque°_auth_ª•⁄£_ãm∂©e
, 
mëhod
);

2211 
w¨nögkûl
 = 
	`wrôe
 (
˛õ¡_sockë
, 
ª•⁄£
, 
	`°æí
 (response));

2212 
	`±hªad_muãx_u∆ock
(&
hâpd_muãx
);

2216 
ªt
 = 
	`h™dÀ_gë
(
˛õ¡_sockë
, 
uæ
, 
˙t
);

2221 
	`±hªad_muãx_u∆ock
(&
hâpd_muãx
);

2223  
ªt
;

2224 
	}
}

2236 
	$ac˚±n⁄blockög
(
£rvîfd
, 
timeout
)

2238 
curfd
;

2239 
sockÀn_t
 
«mñí
 = (
sockaddr_ö
);

2240 
sockaddr_ö
 
˛õ¡
;

2241 
timevÆ
 
tm
;

2242 
fd_£t
 
fds
;

2244 
tm
.
tv_£c
 = 
timeout
;

2245 
tm
.
tv_u£c
 = 0;

2246 
	`FD_ZERO
(&
fds
);

2247 
	`FD_SET
(
£rvîfd
,&
fds
);

2249 i‡(
	`£À˘
 (
£rvîfd
 + 1, &
fds
, 
NULL
, NULL, &
tm
) > 0) {

2250 i‡(
	`FD_ISSET
(
£rvîfd
, &
fds
)) {

2251 i‡((
curfd
 = 
	`ac˚±
(
£rvîfd
, (
sockaddr
*)&
˛õ¡
, &
«mñí
)) > 0)

2252  
curfd
;

2257 
	}
}

2264 
	$hâpd_run
(
c⁄ãxt
 **
˙t
)

2266 
sd
, 
˛õ¡_sockë_fd
, 
vÆ
 = 1;

2267 
˛õ¡_£¡_quô_mesßge
 = 1, 
˛o£hâpd
 = 0;

2268 
sockaddr_ö
 
£rvAddr
;

2269 
siga˘i⁄
 
a˘
;

2270 *
authítiˇti⁄
 = 
NULL
;

2273 
	`±hªad_muãx_öô
(&
hâpd_muãx
, 
NULL
);

2277 
	`mem£t
(&
a˘
,0,(act));

2278 
	`sigem±y£t
(&
a˘
.
ß_mask
);

2279 
a˘
.
ß_h™dÀr
 = 
SIG_IGN
;

2280 
	`siga˘i⁄
(
SIGPIPE
,&
a˘
,
NULL
);

2281 
	`siga˘i⁄
(
SIGCHLD
,&
a˘
,
NULL
);

2284 
sd
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

2286 i‡(
sd
 < 0) {

2287 
	`mŸi⁄_log
(
LOG_ERR
, 1, "httpd socket");

2288 
	`±hªad_muãx_de°roy
(&
hâpd_muãx
);

2293 
£rvAddr
.
sö_Ámûy
 = 
AF_INET
;

2294 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_loˇlho°
)

2295 
£rvAddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_LOOPBACK
);

2297 
£rvAddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

2298 
£rvAddr
.
sö_p‹t
 = 
	`ht⁄s
(
˙t
[0]->
c⁄f
.
c⁄åﬁ_p‹t
);

2302 
	`£tsock›t
(
sd
, 
SOL_SOCKET
, 
SO_REUSEADDR
, &
vÆ
, ()) ;

2304 i‡(
	`böd
(
sd
, (
sockaddr
 *Ë&
£rvAddr
, (servAddr)) < 0) {

2305 
	`mŸi⁄_log
(
LOG_ERR
, 1, "httpd bind()");

2306 
	`˛o£
(
sd
);

2307 
	`±hªad_muãx_de°roy
(&
hâpd_muãx
);

2311 i‡(
	`li°í
(
sd
,5) == -1) {

2312 
	`mŸi⁄_log
(
LOG_ERR
, 1, "httpdÜisten()");

2313 
	`˛o£
(
sd
);

2314 
	`±hªad_muãx_de°roy
(&
hâpd_muãx
);

2318 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "mŸi⁄-hâpd/"
VERSION
"Ñunning,áccepting connections");

2319 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "mŸi⁄-hâpd: waôög f‹ d©®⁄Ö‹àTCP %d", 
˙t
[0]->
c⁄f
.
c⁄åﬁ_p‹t
);

2321 i‡(
˙t
[0]->
c⁄f
.
c⁄åﬁ_authítiˇti⁄
 !
NULL
) {

2322 *
u£Ωass
 = 
NULL
;

2323 
size_t
 
auth_size
 = 
	`°æí
(
˙t
[0]->
c⁄f
.
c⁄åﬁ_authítiˇti⁄
);

2325 
authítiˇti⁄
 = (*Ë
	`mymÆloc
(
	`BASE64_LENGTH
(
auth_size
) + 1);

2326 
u£Ωass
 = 
	`mymÆloc
(
auth_size
 + 4);

2328 
	`mem£t
(
u£Ωass
, 0, 
auth_size
 + 4);

2329 
	`°r˝y
(
u£Ωass
, 
˙t
[0]->
c⁄f
.
c⁄åﬁ_authítiˇti⁄
);

2330 
	`ba£64_ícode
(
u£Ωass
, 
authítiˇti⁄
, 
auth_size
);

2331 
	`‰ì
(
u£Ωass
);

2334 (
˛õ¡_£¡_quô_mesßge
Ë&& (!
˛o£hâpd
)) {

2336 
˛õ¡_sockë_fd
 = 
	`ac˚±n⁄blockög
(
sd
, 1);

2338 i‡(
˛õ¡_sockë_fd
 < 0) {

2339 i‡((!
˙t
[0]Ë|| (˙t[0]->
föish
)){

2340 
	`mŸi⁄_log
(-1, 0, "httpd - Finishing");

2341 
˛o£hâpd
 = 1;

2345 
˛õ¡_£¡_quô_mesßge
 = 
	`ªad_˛õ¡
 (
˛õ¡_sockë_fd
, 
˙t
, 
authítiˇti⁄
);

2346 
	`mŸi⁄_log
(-1, 0, "httpd - Read from client");

2349 i‡(
˛õ¡_sockë_fd
)

2350 
	`˛o£
(
˛õ¡_sockë_fd
);

2355 i‡(
authítiˇti⁄
 !
NULL
)

2356 
	`‰ì
(
authítiˇti⁄
);

2357 
	`˛o£
(
sd
);

2358 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "httpd Closing");

2359 
	`±hªad_muãx_de°roy
(&
hâpd_muãx
);

2360 
	}
}

2362 *
	$mŸi⁄_web_c⁄åﬁ
(*
¨g
)

2364 
c⁄ãxt
 **
˙t
=
¨g
;

2365 
	`hâpd_run
(
˙t
);

2366 
	`mŸi⁄_log
(
LOG_DEBUG
, 0, "httpdÅhreadÉxit");

2367 
	`±hªad_exô
(
NULL
);

2368 
	}
}

	@webhttpd.h

13 #i‚de‡
_INCLUDE_WEBHTTPD_H_


14 
	#_INCLUDE_WEBHTTPD_H_


	)

16 
	~"mŸi⁄.h
"

18 
	#FOSWIKI_URL
 "hâp://www.œvr£n.dk/foswiki/bö/võw/MŸi⁄/MŸi⁄GuideAÕhabëiˇlO±i⁄Re„ªn˚M™uÆ"

	)

20 * 
mŸi⁄_web_c⁄åﬁ
(*
¨g
);

21 
hâpd_run
(
c⁄ãxt
 **);

	@/usr/include/ansidecl.h

115 #i‚def 
_ANSIDECL_H


116 
	#_ANSIDECL_H
 1

	)

118 #ifde‡
__˝lu•lus


140 #i‚de‡
GCC_VERSION


141 
	#GCC_VERSION
 (
__GNUC__
 * 1000 + 
__GNUC_MINOR__
)

	)

144 #i‡
deföed
 (
__STDC__
Ë|| deföed(
__˝lu•lus
Ë|| deföed (
_AIX
Ë|| (deföed (
__mùs
Ë&& deföed (
_SYSTYPE_SVR4
)Ë|| deföed(
_WIN32
)

152 
	#ANSI_PROTOTYPES
 1

	)

153 
	#PTR
 *

	)

154 
	#PTRCONST
 *c⁄°

	)

155 
	#LONG_DOUBLE
 

	)

159 #i‚de‡
PARAMS


160 
	#PARAMS
(
ARGS
Ë
	)
ARGS

163 
	#VPARAMS
(
ARGS
Ë
	)
ARGS

164 
	#VA_START
(
VA_LIST
, 
VAR
Ë
	`va_°¨t
(VA_LIST, VAR)

	)

170 
	#VA_OPEN
(
AP
, 
VAR
Ë{ 
va_li°
 AP; 
	`va_°¨t
(AP, VAR); { 
Qdmy


	)

171 
	#VA_CLOSE
(
AP
Ë} 
	`va_íd
(AP); }

	)

172 
	#VA_FIXEDARG
(
AP
, 
T
, 
N
Ë
Qdmy


	)

180 #unde‡
ölöe


181 #i‡
__STDC_VERSION__
 > 199901L || 
deföed
(
__˝lu•lus
)

184 #i‡
GCC_VERSION
 >= 2007

185 
	#ölöe
 
__ölöe__


	)

187 
	#ölöe


	)

192 #i‚de‡
IN_GCC


193 
	#CONST
 c⁄°

	)

194 
	#VOLATILE
 vﬁ©ûe

	)

195 
	#SIGNED
 sig√d

	)

197 
	#PROTO
(
ty≥
, 
«me
, 
¨gli°
Ëty≥Çamê
	)
arglist

198 
	#EXFUN
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

199 
	#DEFUN
(
«me
, 
¨gli°
, 
¨gs
Ë
	`«me
◊rgs)

	)

200 
	#DEFUN_VOID
(
«me
Ë
	`«me
()

	)

201 
	#AND
 ,

	)

202 
	#DOTS
 , ...

	)

203 
	#NOARGS
 

	)

208 #unde‡
ANSI_PROTOTYPES


209 
	#PTR
 *

	)

210 
	#PTRCONST
 
PTR


	)

211 
	#LONG_DOUBLE
 

	)

213 
	#PARAMS
(
¨gs
Ë()

	)

214 
	#VPARAMS
(
¨gs
Ë(
va_Æi°
Ë
va_d˛


	)

215 
	#VA_START
(
va_li°
, 
v¨
Ë
	`va_°¨t
(va_li°)

	)

217 
	#VA_OPEN
(
AP
, 
VAR
Ë{ 
va_li°
 AP; 
	`va_°¨t
(AP); { 
Qdmy


	)

218 
	#VA_CLOSE
(
AP
Ë} 
	`va_íd
(AP); }

	)

219 
	#VA_FIXEDARG
(
AP
, 
TYPE
, 
NAME
ËTYPE NAME = 
	`va_¨g
(AP, TYPE)

	)

225 #unde‡
ölöe


226 c⁄°

	)

227 vﬁ©ûe

	)

228 sig√d

	)

229 
	#ölöe


	)

231 #i‚de‡
IN_GCC


232 
	#CONST


	)

233 
	#VOLATILE


	)

234 
	#SIGNED


	)

236 
	#PROTO
(
ty≥
, 
«me
, 
¨gli°
Ëty≥ 
	`«me
 ()

	)

237 
	#EXFUN
(
«me
, 
¥Ÿo
Ë
	`«me
()

	)

238 
	#DEFUN
(
«me
, 
¨gli°
, 
¨gs
Ë«mê¨gli°árgs;

	)

239 
	#DEFUN_VOID
(
«me
Ë
	`«me
()

	)

240 
	#AND
 ;

	)

241 
	#DOTS


	)

242 
	#NOARGS


	)

251 #i‡(
GCC_VERSION
 < 2007)

252 
	#__©åibuã__
(
x
)

	)

256 #i‚de‡
ATTRIBUTE_MALLOC


257 #i‡(
GCC_VERSION
 >= 2096)

258 
	#ATTRIBUTE_MALLOC
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

260 
	#ATTRIBUTE_MALLOC


	)

266 #i‚de‡
ATTRIBUTE_UNUSED_LABEL


267 #i‚de‡
__˝lu•lus


268 #i‡
GCC_VERSION
 >= 2093

269 
	#ATTRIBUTE_UNUSED_LABEL
 
ATTRIBUTE_UNUSED


	)

271 
	#ATTRIBUTE_UNUSED_LABEL


	)

274 #i‡
GCC_VERSION
 >= 4005

275 
	#ATTRIBUTE_UNUSED_LABEL
 
ATTRIBUTE_UNUSED
 ;

	)

277 
	#ATTRIBUTE_UNUSED_LABEL


	)

282 #i‚de‡
ATTRIBUTE_UNUSED


283 
	#ATTRIBUTE_UNUSED
 
	`__©åibuã__
 ((
__unu£d__
))

	)

288 #i‡! 
deföed
(
__˝lu•lus
Ë|| (
GCC_VERSION
 >= 3004)

289 
	#ARG_UNUSED
(
NAME
ËNAME 
ATTRIBUTE_UNUSED


	)

291 
	#ARG_UNUSED
(
NAME
Ë
	)
NAME

294 #i‚de‡
ATTRIBUTE_NORETURN


295 
	#ATTRIBUTE_NORETURN
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

	)

299 #i‚de‡
ATTRIBUTE_NONNULL


300 #i‡(
GCC_VERSION
 >= 3003)

301 
	#ATTRIBUTE_NONNULL
(
m
Ë
	`__©åibuã__
 ((
	`__n⁄nuŒ__
 (m)))

	)

303 
	#ATTRIBUTE_NONNULL
(
m
)

	)

308 #i‚de‡
ATTRIBUTE_PURE


309 #i‡(
GCC_VERSION
 >= 3000)

310 
	#ATTRIBUTE_PURE
 
	`__©åibuã__
 ((
__puª__
))

	)

312 
	#ATTRIBUTE_PURE


	)

320 #i‚de‡
ATTRIBUTE_PRINTF


321 
	#ATTRIBUTE_PRINTF
(
m
, 
n
Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, m,Ç))Ë
	`ATTRIBUTE_NONNULL
(m)

	)

322 
	#ATTRIBUTE_PRINTF_1
 
	`ATTRIBUTE_PRINTF
(1, 2)

	)

323 
	#ATTRIBUTE_PRINTF_2
 
	`ATTRIBUTE_PRINTF
(2, 3)

	)

324 
	#ATTRIBUTE_PRINTF_3
 
	`ATTRIBUTE_PRINTF
(3, 4)

	)

325 
	#ATTRIBUTE_PRINTF_4
 
	`ATTRIBUTE_PRINTF
(4, 5)

	)

326 
	#ATTRIBUTE_PRINTF_5
 
	`ATTRIBUTE_PRINTF
(5, 6)

	)

332 #i‚de‡
ATTRIBUTE_FPTR_PRINTF


333 #i‡(
GCC_VERSION
 >= 3001)

334 
	#ATTRIBUTE_FPTR_PRINTF
(
m
, 
n
Ë
	`ATTRIBUTE_PRINTF
(m,Ç)

	)

336 
	#ATTRIBUTE_FPTR_PRINTF
(
m
, 
n
)

	)

338 
	#ATTRIBUTE_FPTR_PRINTF_1
 
	`ATTRIBUTE_FPTR_PRINTF
(1, 2)

	)

339 
	#ATTRIBUTE_FPTR_PRINTF_2
 
	`ATTRIBUTE_FPTR_PRINTF
(2, 3)

	)

340 
	#ATTRIBUTE_FPTR_PRINTF_3
 
	`ATTRIBUTE_FPTR_PRINTF
(3, 4)

	)

341 
	#ATTRIBUTE_FPTR_PRINTF_4
 
	`ATTRIBUTE_FPTR_PRINTF
(4, 5)

	)

342 
	#ATTRIBUTE_FPTR_PRINTF_5
 
	`ATTRIBUTE_FPTR_PRINTF
(5, 6)

	)

347 #i‚de‡
ATTRIBUTE_NULL_PRINTF


348 #i‡(
GCC_VERSION
 >= 3003)

349 
	#ATTRIBUTE_NULL_PRINTF
(
m
, 
n
Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, m,Ç)))

	)

351 
	#ATTRIBUTE_NULL_PRINTF
(
m
, 
n
)

	)

353 
	#ATTRIBUTE_NULL_PRINTF_1
 
	`ATTRIBUTE_NULL_PRINTF
(1, 2)

	)

354 
	#ATTRIBUTE_NULL_PRINTF_2
 
	`ATTRIBUTE_NULL_PRINTF
(2, 3)

	)

355 
	#ATTRIBUTE_NULL_PRINTF_3
 
	`ATTRIBUTE_NULL_PRINTF
(3, 4)

	)

356 
	#ATTRIBUTE_NULL_PRINTF_4
 
	`ATTRIBUTE_NULL_PRINTF
(4, 5)

	)

357 
	#ATTRIBUTE_NULL_PRINTF_5
 
	`ATTRIBUTE_NULL_PRINTF
(5, 6)

	)

361 #i‚de‡
ATTRIBUTE_SENTINEL


362 #i‡(
GCC_VERSION
 >= 3005)

363 
	#ATTRIBUTE_SENTINEL
 
	`__©åibuã__
 ((
__£¡öñ__
))

	)

365 
	#ATTRIBUTE_SENTINEL


	)

370 #i‚de‡
ATTRIBUTE_ALIGNED_ALIGNOF


371 #i‡(
GCC_VERSION
 >= 3000)

372 
	#ATTRIBUTE_ALIGNED_ALIGNOF
(
m
Ë
	`__©åibuã__
 ((
	`__Æig√d__
 (
	`__Æignof__
 (m))))

	)

374 
	#ATTRIBUTE_ALIGNED_ALIGNOF
(
m
)

	)

380 #i‚de‡
ATTRIBUTE_PACKED


381 
	#ATTRIBUTE_PACKED
 
	`__©åibuã__
 ((
∑cked
))

	)

385 #i‚de‡
ATTRIBUTE_COLD


386 #i‡(
GCC_VERSION
 >= 4003)

387 
	#ATTRIBUTE_COLD
 
	`__©åibuã__
 ((
__cﬁd__
))

	)

389 
	#ATTRIBUTE_COLD


	)

392 #i‚de‡
ATTRIBUTE_HOT


393 #i‡(
GCC_VERSION
 >= 4003)

394 
	#ATTRIBUTE_HOT
 
	`__©åibuã__
 ((
__hŸ__
))

	)

396 
	#ATTRIBUTE_HOT


	)

403 #i‡
GCC_VERSION
 < 2008

404 
	#__exãnsi⁄__


	)

413 #ifde‡
__˝lu•lus


414 
	#EXPORTED_CONST
 c⁄°

	)

416 
	#EXPORTED_CONST
 c⁄°

	)

419 #ifde‡
__˝lu•lus


	@/usr/include/arpa/inet.h

19 #i‚de‡
_ARPA_INET_H


20 
	#_ARPA_INET_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<√töë/ö.h
>

26 #i‚de‡
__sockÀn_t_deföed


27 
__sockÀn_t
 
	tsockÀn_t
;

28 
	#__sockÀn_t_deföed


	)

31 
__BEGIN_DECLS


35 
ö_addr_t
 
	$öë_addr
 (
__c⁄°
 *
__˝
Ë
__THROW
;

38 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

42 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

43 
__THROW
;

46 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

50 
ö_addr_t
 
	$öë_√tw‹k
 (
__c⁄°
 *
__˝
Ë
__THROW
;

54 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

59 
	$öë_±⁄
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

60 *
__ª°ri˘
 
__buf
Ë
__THROW
;

65 
__c⁄°
 *
	$öë_¡›
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

66 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

67 
__THROW
;

71 #ifde‡
__USE_MISC


74 
	$öë_©⁄
 (
__c⁄°
 *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

78 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

83 *
	$öë_√t_¡›
 (
__af
, 
__c⁄°
 *
__˝
, 
__bôs
,

84 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

89 
	$öë_√t_±⁄
 (
__af
, 
__c⁄°
 *
__˝
,

90 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

95 
	$öë_nßp_addr
 (
__c⁄°
 *
__˝
,

96 *
__buf
, 
__Àn
Ë
__THROW
;

100 *
	$öë_nßp_¡ﬂ
 (
__Àn
, 
__c⁄°
 *
__˝
,

101 *
__buf
Ë
__THROW
;

104 
__END_DECLS


	@/usr/include/assert.h

24 #ifdef 
_ASSERT_H


26 #unde‡
_ASSERT_H


27 #unde‡
as£π


28 #unde‡
__ASSERT_VOID_CAST


30 #ifdef 
__USE_GNU


31 #unde‡
as£π_≥º‹


36 
	#_ASSERT_H
 1

	)

37 
	~<„©uªs.h
>

39 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

40 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

42 
	#__ASSERT_VOID_CAST
 ()

	)

50 #ifdef 
NDEBUG


52 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

60 #ifdef 
__USE_GNU


61 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (
__c⁄°
 *
__as£πi⁄
, __c⁄° *
__fûe
,

70 
__löe
, 
__c⁄°
 *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, 
__c⁄°
 *
__fûe
,

75 
__löe
,

76 
__c⁄°
 *
__fun˘i⁄
)

77 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

82 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

83 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

86 
__END_DECLS


88 
	#as£π
(
ex¥
) \

89 ((
ex¥
) \

90 ? 
	`__ASSERT_VOID_CAST
 (0) \

91 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

105 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

106 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

108 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

109 
	#__ASSERT_FUNCTION
 
__func__


	)

111 
	#__ASSERT_FUNCTION
 ((
__c⁄°
 *Ë0)

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__exã∫_ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__exã∫_ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_XOPEN2K8


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/dirent.h

23 #i‚def 
_DIRENT_H


24 
	#_DIRENT_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifde‡
__USE_XOPEN


33 #i‚de‡
__öo_t_deföed


34 #i‚de‡
__USE_FILE_OFFSET64


35 
__öo_t
 
	töo_t
;

37 
__öo64_t
 
	töo_t
;

39 
	#__öo_t_deföed


	)

41 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


42 
__öo64_t
 
	töo64_t
;

43 
	#__öo64_t_deföed


	)

62 
	~<bôs/dúít.h
>

64 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
Ë&& !deföed 
d_fûío


65 
	#d_öo
 
d_fûío


	)

82 #ifde‡
_DIRENT_HAVE_D_NAMLEN


83 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

84 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

86 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

87 #ifde‡
_DIRENT_HAVE_D_RECLEN


88 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

90 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name : \

91 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

96 #ifde‡
__USE_BSD


100 
	mDT_UNKNOWN
 = 0,

101 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

102 
	mDT_FIFO
 = 1,

103 
	#DT_FIFO
 
DT_FIFO


	)

104 
	mDT_CHR
 = 2,

105 
	#DT_CHR
 
DT_CHR


	)

106 
	mDT_DIR
 = 4,

107 
	#DT_DIR
 
DT_DIR


	)

108 
	mDT_BLK
 = 6,

109 
	#DT_BLK
 
DT_BLK


	)

110 
	mDT_REG
 = 8,

111 
	#DT_REG
 
DT_REG


	)

112 
	mDT_LNK
 = 10,

113 
	#DT_LNK
 
DT_LNK


	)

114 
	mDT_SOCK
 = 12,

115 
	#DT_SOCK
 
DT_SOCK


	)

116 
	mDT_WHT
 = 14

117 
	#DT_WHT
 
DT_WHT


	)

121 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

122 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

128 
__dú°ªam
 
	tDIR
;

135 
DIR
 *
	$›ídú
 (
__c⁄°
 *
__«me
Ë
	`__n⁄nuŒ
 ((1));

137 #ifde‡
__USE_XOPEN2K8


142 
DIR
 *
	`fd›ídú
 (
__fd
);

150 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

162 #i‚de‡
__USE_FILE_OFFSET64


163 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

165 #ifde‡
__REDIRECT


166 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

167 
	`__n⁄nuŒ
 ((1));

169 
	#ªaddú
 
ªaddú64


	)

173 #ifde‡
__USE_LARGEFILE64


174 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

177 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


183 #i‚de‡
__USE_FILE_OFFSET64


184 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

185 
dúít
 *
__ª°ri˘
 
__íåy
,

186 
dúít
 **
__ª°ri˘
 
__ªsu…
)

187 
	`__n⁄nuŒ
 ((1, 2, 3));

189 #ifde‡
__REDIRECT


190 
	`__REDIRECT
 (
ªaddú_r
,

191 (
DIR
 *
__ª°ri˘
 
__dúp
,

192 
dúít
 *
__ª°ri˘
 
__íåy
,

193 
dúít
 **
__ª°ri˘
 
__ªsu…
),

194 
ªaddú64_r
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

196 
	#ªaddú_r
 
ªaddú64_r


	)

200 #ifde‡
__USE_LARGEFILE64


201 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

202 
dúít64
 *
__ª°ri˘
 
__íåy
,

203 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

204 
	`__n⁄nuŒ
 ((1, 2, 3));

209 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


212 
	~<bôs/ty≥s.h
>

215 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

218 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

221 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


224 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

226 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


227 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

230 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


231 #i‚de‡
MAXNAMLEN


233 
	~<bôs/posix1_lim.h
>

236 #ifde‡
NAME_MAX


237 
	#MAXNAMLEN
 
NAME_MAX


	)

239 
	#MAXNAMLEN
 255

	)

244 
	#__√ed_size_t


	)

245 
	~<°ddef.h
>

251 #i‚de‡
__USE_FILE_OFFSET64


252 
	`sˇndú
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

253 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

254 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

255 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

256 
__c⁄°
 
dúít
 **))

257 
	`__n⁄nuŒ
 ((1, 2));

259 #ifde‡
__REDIRECT


260 
	`__REDIRECT
 (
sˇndú
,

261 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

262 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

263 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

264 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

265 
__c⁄°
 
dúít
 **)),

266 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

268 
	#sˇndú
 
sˇndú64


	)

272 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


275 
	`sˇndú64
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

276 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

277 (*
__£À˘‹
Ë(
__c⁄°
 
dúít64
 *),

278 (*
__cmp
Ë(
__c⁄°
 
dúít64
 **,

279 
__c⁄°
 
dúít64
 **))

280 
	`__n⁄nuŒ
 ((1, 2));

284 #i‚de‡
__USE_FILE_OFFSET64


285 
	$Æphas‹t
 (
__c⁄°
 
dúít
 **
__e1
,

286 
__c⁄°
 
dúít
 **
__e2
)

287 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 #ifde‡
__REDIRECT


290 
	`__REDIRECT_NTH
 (
Æphas‹t
,

291 (
__c⁄°
 
dúít
 **
__e1
,

292 
__c⁄°
 
dúít
 **
__e2
),

293 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

295 
	#Æphas‹t
 
Æphas‹t64


	)

299 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


300 
	$Æphas‹t64
 (
__c⁄°
 
dúít64
 **
__e1
,

301 
__c⁄°
 
dúít64
 **
__e2
)

302 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

307 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


312 #i‚de‡
__USE_FILE_OFFSET64


313 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

314 
size_t
 
__nbyãs
,

315 
__off_t
 *
__ª°ri˘
 
__ba£p
)

316 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

318 #ifde‡
__REDIRECT


319 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

320 (
__fd
, *
__ª°ri˘
 
__buf
,

321 
size_t
 
__nbyãs
,

322 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

323 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

325 
	#gëdúíåõs
 
gëdúíåõs64


	)

329 #ifde‡
__USE_LARGEFILE64


330 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

331 
size_t
 
__nbyãs
,

332 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

333 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

337 #ifde‡
__USE_GNU


339 #i‚de‡
__USE_FILE_OFFSET64


340 
	$vîsi⁄s‹t
 (
__c⁄°
 
dúít
 **
__e1
,

341 
__c⁄°
 
dúít
 **
__e2
)

342 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

344 #ifde‡
__REDIRECT


345 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

346 (
__c⁄°
 
dúít
 **
__e1
,

347 
__c⁄°
 
dúít
 **
__e2
),

348 
vîsi⁄s‹t64
)

349 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

351 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

355 #ifde‡
__USE_LARGEFILE64


356 
	$vîsi⁄s‹t64
 (
__c⁄°
 
dúít64
 **
__e1
,

357 
__c⁄°
 
dúít64
 **
__e2
)

358 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

362 
__END_DECLS


	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

24 #i‚def 
_FCNTL_H


25 
	#_FCNTL_H
 1

	)

27 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/f˙é.h
>

37 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


38 
	~<bôs/ty≥s.h
>

39 
	#__√ed_time•ec


	)

40 
	~<time.h
>

41 
	~<bôs/°©.h
>

43 
	#S_IFMT
 
__S_IFMT


	)

44 
	#S_IFDIR
 
__S_IFDIR


	)

45 
	#S_IFCHR
 
__S_IFCHR


	)

46 
	#S_IFBLK
 
__S_IFBLK


	)

47 
	#S_IFREG
 
__S_IFREG


	)

48 #ifde‡
__S_IFIFO


49 
	#S_IFIFO
 
__S_IFIFO


	)

51 #ifde‡
__S_IFLNK


52 
	#S_IFLNK
 
__S_IFLNK


	)

54 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


55 
	#S_IFSOCK
 
__S_IFSOCK


	)

60 
	#S_ISUID
 
__S_ISUID


	)

61 
	#S_ISGID
 
__S_ISGID


	)

63 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


65 
	#S_ISVTX
 
__S_ISVTX


	)

68 
	#S_IRUSR
 
__S_IREAD


	)

69 
	#S_IWUSR
 
__S_IWRITE


	)

70 
	#S_IXUSR
 
__S_IEXEC


	)

72 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

74 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

75 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

76 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

78 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

80 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

81 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

82 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

84 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

87 #ifdef 
__USE_MISC


88 #i‚de‡
R_OK


91 
	#R_OK
 4

	)

92 
	#W_OK
 2

	)

93 
	#X_OK
 1

	)

94 
	#F_OK
 0

	)

99 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


100 
	#SEEK_SET
 0

	)

101 
	#SEEK_CUR
 1

	)

102 
	#SEEK_END
 2

	)

105 #ifde‡
__USE_ATFILE


106 
	#AT_FDCWD
 -100

	)

109 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

110 
	#AT_REMOVEDIR
 0x200

	)

112 
	#AT_SYMLINK_FOLLOW
 0x400

	)

113 
	#AT_EACCESS
 0x200

	)

122 
f˙é
 (
__fd
, 
__cmd
, ...);

130 #i‚de‡
__USE_FILE_OFFSET64


131 
	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

133 #ifde‡
__REDIRECT


134 
	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...), 
›í64
)

135 
	`__n⁄nuŒ
 ((1));

137 
	#›í
 
›í64


	)

140 #ifde‡
__USE_LARGEFILE64


141 
	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

144 #ifde‡
__USE_ATFILE


154 #i‚de‡
__USE_FILE_OFFSET64


155 
	$›í©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

156 
	`__n⁄nuŒ
 ((2));

158 #ifde‡
__REDIRECT


159 
	`__REDIRECT
 (
›í©
, (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
,

160 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

162 
	#›í©
 
›í©64


	)

165 #ifde‡
__USE_LARGEFILE64


166 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

167 
	`__n⁄nuŒ
 ((2));

176 #i‚de‡
__USE_FILE_OFFSET64


177 
	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

179 #ifde‡
__REDIRECT


180 
	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
),

181 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

183 
	#¸ót
 
¸ót64


	)

186 #ifde‡
__USE_LARGEFILE64


187 
	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

190 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

191 && !
deföed
 
__USE_POSIX
))

200 
	#F_ULOCK
 0

	)

201 
	#F_LOCK
 1

	)

202 
	#F_TLOCK
 2

	)

203 
	#F_TEST
 3

	)

205 #i‚de‡
__USE_FILE_OFFSET64


206 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

208 #ifde‡
__REDIRECT


209 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

211 
	#lockf
 
lockf64


	)

214 #ifde‡
__USE_LARGEFILE64


215 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

219 #ifde‡
__USE_XOPEN2K


222 #i‚de‡
__USE_FILE_OFFSET64


223 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
,

224 
__advi£
Ë
__THROW
;

226 #ifde‡
__REDIRECT_NTH


227 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

228 
__off64_t
 
__Àn
, 
__advi£
),

229 
posix_Ádvi£64
);

231 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

234 #ifde‡
__USE_LARGEFILE64


235 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
,

236 
__advi£
Ë
__THROW
;

244 #i‚de‡
__USE_FILE_OFFSET64


245 
	`posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
);

247 #ifde‡
__REDIRECT


248 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

249 
__off64_t
 
__Àn
),

250 
posix_ÁŒoˇã64
);

252 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

255 #ifde‡
__USE_LARGEFILE64


256 
	`posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
);

262 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
 \

263 && 
deföed
 
__va_¨g_∑ck_Àn


264 
	~<bôs/f˙é2.h
>

267 
__END_DECLS


	@/usr/include/jerror.h

22 #i‚de‡
JMESSAGE


23 #i‚de‡
JERROR_H


25 
	#JMAKE_ENUM_LIST


	)

28 
	#JMESSAGE
(
code
,
°rög
)

	)

32 #ifde‡
JMAKE_ENUM_LIST


36 
	#JMESSAGE
(
code
,
°rög
Ëcodê,

	)

40 
JMESSAGE
(
JMSG_NOMESSAGE
, "Bogus message code %d")

43 #i‡
JPEG_LIB_VERSION
 < 70

44 
JMESSAGE
(
JERR_ARITH_NOTIMPL
,

47 
JMESSAGE
(
JERR_BAD_ALIGN_TYPE
, "ALIGN_TYPE is wrong,Ölease fix")

48 
JMESSAGE
(
JERR_BAD_ALLOC_CHUNK
, "MAX_ALLOC_CHUNK is wrong,Ölease fix")

49 
JMESSAGE
(
JERR_BAD_BUFFER_MODE
, "Bogus buffer control mode")

50 
JMESSAGE
(
JERR_BAD_COMPONENT_ID
, "Invalid component ID %d in SOS")

51 #i‡
JPEG_LIB_VERSION
 >= 70

52 
JMESSAGE
(
JERR_BAD_CROP_SPEC
, "Invalid cropÑequest")

54 
JMESSAGE
(
JERR_BAD_DCT_COEF
, "DCT coefficient out ofÑange")

55 
JMESSAGE
(
JERR_BAD_DCTSIZE
, "IDCT output block size %dÇot supported")

56 #i‡
JPEG_LIB_VERSION
 >= 70

57 
JMESSAGE
(
JERR_BAD_DROP_SAMPLING
,

60 
JMESSAGE
(
JERR_BAD_HUFF_TABLE
, "Bogus HuffmanÅable definition")

61 
JMESSAGE
(
JERR_BAD_IN_COLORSPACE
, "Bogus input colorspace")

62 
JMESSAGE
(
JERR_BAD_J_COLORSPACE
, "Bogus JPEG colorspace")

63 
JMESSAGE
(
JERR_BAD_LENGTH
, "Bogus markerÜength")

64 
JMESSAGE
(
JERR_BAD_LIB_VERSION
,

66 
JMESSAGE
(
JERR_BAD_MCU_SIZE
, "Sampling factorsÅooÜarge for interleaved scan")

67 
JMESSAGE
(
JERR_BAD_POOL_ID
, "Invalid memoryÖool code %d")

68 
JMESSAGE
(
JERR_BAD_PRECISION
, "Unsupported JPEG dataÖrecision %d")

69 
JMESSAGE
(
JERR_BAD_PROGRESSION
,

71 
JMESSAGE
(
JERR_BAD_PROG_SCRIPT
,

73 
JMESSAGE
(
JERR_BAD_SAMPLING
, "Bogus sampling factors")

74 
JMESSAGE
(
JERR_BAD_SCAN_SCRIPT
, "Invalid scan scriptátÉntry %d")

75 
JMESSAGE
(
JERR_BAD_STATE
, "Improper callÅo JPEGÜibrary in state %d")

76 
JMESSAGE
(
JERR_BAD_STRUCT_SIZE
,

78 
JMESSAGE
(
JERR_BAD_VIRTUAL_ACCESS
, "Bogus virtualárrayáccess")

79 
JMESSAGE
(
JERR_BUFFER_SIZE
, "BufferÖassedÅo JPEGÜibrary isÅoo small")

80 
JMESSAGE
(
JERR_CANT_SUSPEND
, "SuspensionÇotállowed here")

81 
JMESSAGE
(
JERR_CCIR601_NOTIMPL
, "CCIR601 samplingÇot implemented yet")

82 
JMESSAGE
(
JERR_COMPONENT_COUNT
, "Too many color components: %d, max %d")

83 
JMESSAGE
(
JERR_CONVERSION_NOTIMPL
, "Unsupported color conversionÑequest")

84 
JMESSAGE
(
JERR_DAC_INDEX
, "Bogus DAC index %d")

85 
JMESSAGE
(
JERR_DAC_VALUE
, "Bogus DAC value 0x%x")

86 
JMESSAGE
(
JERR_DHT_INDEX
, "Bogus DHT index %d")

87 
JMESSAGE
(
JERR_DQT_INDEX
, "Bogus DQT index %d")

88 
JMESSAGE
(
JERR_EMPTY_IMAGE
, "Empty JPEG image (DNLÇot supported)")

89 
JMESSAGE
(
JERR_EMS_READ
, "Read from EMS failed")

90 
JMESSAGE
(
JERR_EMS_WRITE
, "WriteÅo EMS failed")

91 
JMESSAGE
(
JERR_EOI_EXPECTED
, "Didn'tÉxpect moreÅhan one scan")

92 
JMESSAGE
(
JERR_FILE_READ
, "Input fileÑeadÉrror")

93 
JMESSAGE
(
JERR_FILE_WRITE
, "Output file writeÉrror --- out of disk space?")

94 
JMESSAGE
(
JERR_FRACT_SAMPLE_NOTIMPL
, "Fractional samplingÇot implemented yet")

95 
JMESSAGE
(
JERR_HUFF_CLEN_OVERFLOW
, "Huffman code sizeÅable overflow")

96 
JMESSAGE
(
JERR_HUFF_MISSING_CODE
, "Missing Huffman codeÅableÉntry")

97 
JMESSAGE
(
JERR_IMAGE_TOO_BIG
, "Maximum supported image dimension is %uÖixels")

98 
JMESSAGE
(
JERR_INPUT_EMPTY
, "Empty input file")

99 
JMESSAGE
(
JERR_INPUT_EOF
, "PrematureÉnd of input file")

100 
JMESSAGE
(
JERR_MISMATCHED_QUANT_TABLE
,

102 
JMESSAGE
(
JERR_MISSING_DATA
, "Scan script doesÇotÅransmitáll data")

103 
JMESSAGE
(
JERR_MODE_CHANGE
, "Invalid color quantization mode change")

104 
JMESSAGE
(
JERR_NOTIMPL
, "Not implemented yet")

105 
JMESSAGE
(
JERR_NOT_COMPILED
, "Requested feature was omittedát compileÅime")

106 #i‡
JPEG_LIB_VERSION
 >= 70

107 
JMESSAGE
(
JERR_NO_ARITH_TABLE
, "ArithmeticÅable 0x%02x wasÇot defined")

109 
JMESSAGE
(
JERR_NO_BACKING_STORE
, "Backing storeÇot supported")

110 
JMESSAGE
(
JERR_NO_HUFF_TABLE
, "HuffmanÅable 0x%02x wasÇot defined")

111 
JMESSAGE
(
JERR_NO_IMAGE
, "JPEG datastream containsÇo image")

112 
JMESSAGE
(
JERR_NO_QUANT_TABLE
, "QuantizationÅable 0x%02x wasÇot defined")

113 
JMESSAGE
(
JERR_NO_SOI
, "Notá JPEG file: starts with 0x%02x 0x%02x")

114 
JMESSAGE
(
JERR_OUT_OF_MEMORY
, "Insufficient memory (case %d)")

115 
JMESSAGE
(
JERR_QUANT_COMPONENTS
,

117 
JMESSAGE
(
JERR_QUANT_FEW_COLORS
, "Cannot quantizeÅo fewerÅhan %d colors")

118 
JMESSAGE
(
JERR_QUANT_MANY_COLORS
, "Cannot quantizeÅo moreÅhan %d colors")

119 
JMESSAGE
(
JERR_SOF_DUPLICATE
, "Invalid JPEG file structure:Åwo SOF markers")

120 
JMESSAGE
(
JERR_SOF_NO_SOS
, "Invalid JPEG file structure: missing SOS marker")

121 
JMESSAGE
(
JERR_SOF_UNSUPPORTED
, "Unsupported JPEGÖrocess: SOFÅype 0x%02x")

122 
JMESSAGE
(
JERR_SOI_DUPLICATE
, "Invalid JPEG file structure:Åwo SOI markers")

123 
JMESSAGE
(
JERR_SOS_NO_SOF
, "Invalid JPEG file structure: SOS before SOF")

124 
JMESSAGE
(
JERR_TFILE_CREATE
, "FailedÅo createÅemporary file %s")

125 
JMESSAGE
(
JERR_TFILE_READ
, "Read failed onÅemporary file")

126 
JMESSAGE
(
JERR_TFILE_SEEK
, "Seek failed onÅemporary file")

127 
JMESSAGE
(
JERR_TFILE_WRITE
,

129 
JMESSAGE
(
JERR_TOO_LITTLE_DATA
, "ApplicationÅransferredÅoo few scanlines")

130 
JMESSAGE
(
JERR_UNKNOWN_MARKER
, "Unsupported markerÅype 0x%02x")

131 
JMESSAGE
(
JERR_VIRTUAL_BUG
, "Virtualárray controller messed up")

132 
JMESSAGE
(
JERR_WIDTH_OVERFLOW
, "ImageÅoo wide forÅhis implementation")

133 
JMESSAGE
(
JERR_XMS_READ
, "Read from XMS failed")

134 
JMESSAGE
(
JERR_XMS_WRITE
, "WriteÅo XMS failed")

135 
JMESSAGE
(
JMSG_COPYRIGHT
, 
JCOPYRIGHT
)

136 
JMESSAGE
(
JMSG_VERSION
, 
JVERSION
)

137 
JMESSAGE
(
JTRC_16BIT_TABLES
,

139 
JMESSAGE
(
JTRC_ADOBE
,

141 
JMESSAGE
(
JTRC_APP0
, "Unknown APP0 marker (not JFIF),Üength %u")

142 
JMESSAGE
(
JTRC_APP14
, "Unknown APP14 marker (not Adobe),Üength %u")

143 
JMESSAGE
(
JTRC_DAC
, "Define Arithmetic Table 0x%02x: 0x%02x")

144 
JMESSAGE
(
JTRC_DHT
, "Define Huffman Table 0x%02x")

145 
JMESSAGE
(
JTRC_DQT
, "Define Quantization Table %dÖrecision %d")

146 
JMESSAGE
(
JTRC_DRI
, "Define Restart Interval %u")

147 
JMESSAGE
(
JTRC_EMS_CLOSE
, "Freed EMS handle %u")

148 
JMESSAGE
(
JTRC_EMS_OPEN
, "Obtained EMS handle %u")

149 
JMESSAGE
(
JTRC_EOI
, "End Of Image")

150 
JMESSAGE
(
JTRC_HUFFBITS
, " %3d %3d %3d %3d %3d %3d %3d %3d")

151 
JMESSAGE
(
JTRC_JFIF
, "JFIF APP0 marker: version %d.%02d, density %dx%d %d")

152 
JMESSAGE
(
JTRC_JFIF_BADTHUMBNAILSIZE
,

154 
JMESSAGE
(
JTRC_JFIF_EXTENSION
,

156 
JMESSAGE
(
JTRC_JFIF_THUMBNAIL
, " with %d x %dÅhumbnail image")

157 
JMESSAGE
(
JTRC_MISC_MARKER
, "Miscellaneous marker 0x%02x,Üength %u")

158 
JMESSAGE
(
JTRC_PARMLESS_MARKER
, "Unexpected marker 0x%02x")

159 
JMESSAGE
(
JTRC_QUANTVALS
, " %4u %4u %4u %4u %4u %4u %4u %4u")

160 
JMESSAGE
(
JTRC_QUANT_3_NCOLORS
, "QuantizingÅo %d = %d*%d*%d colors")

161 
JMESSAGE
(
JTRC_QUANT_NCOLORS
, "QuantizingÅo %d colors")

162 
JMESSAGE
(
JTRC_QUANT_SELECTED
, "Selected %d colors for quantization")

163 
JMESSAGE
(
JTRC_RECOVERY_ACTION
, "At marker 0x%02x,Ñecoveryáction %d")

164 
JMESSAGE
(
JTRC_RST
, "RST%d")

165 
JMESSAGE
(
JTRC_SMOOTH_NOTIMPL
,

167 
JMESSAGE
(
JTRC_SOF
, "Start Of Frame 0x%02x: width=%u, height=%u, components=%d")

168 
JMESSAGE
(
JTRC_SOF_COMPONENT
, " Component %d: %dhx%dv q=%d")

169 
JMESSAGE
(
JTRC_SOI
, "Start of Image")

170 
JMESSAGE
(
JTRC_SOS
, "Start Of Scan: %d components")

171 
JMESSAGE
(
JTRC_SOS_COMPONENT
, " Component %d: dc=%dác=%d")

172 
JMESSAGE
(
JTRC_SOS_PARAMS
, " Ss=%d, Se=%d, Ah=%d, Al=%d")

173 
JMESSAGE
(
JTRC_TFILE_CLOSE
, "ClosedÅemporary file %s")

174 
JMESSAGE
(
JTRC_TFILE_OPEN
, "OpenedÅemporary file %s")

175 
JMESSAGE
(
JTRC_THUMB_JPEG
,

177 
JMESSAGE
(
JTRC_THUMB_PALETTE
,

179 
JMESSAGE
(
JTRC_THUMB_RGB
,

181 
JMESSAGE
(
JTRC_UNKNOWN_IDS
,

183 
JMESSAGE
(
JTRC_XMS_CLOSE
, "Freed XMS handle %u")

184 
JMESSAGE
(
JTRC_XMS_OPEN
, "Obtained XMS handle %u")

185 
JMESSAGE
(
JWRN_ADOBE_XFORM
, "Unknown Adobe colorÅransform code %d")

186 #i‡
JPEG_LIB_VERSION
 >= 70

187 
JMESSAGE
(
JWRN_ARITH_BAD_CODE
, "Corrupt JPEG data: badárithmetic code")

189 
JMESSAGE
(
JWRN_BOGUS_PROGRESSION
,

191 
JMESSAGE
(
JWRN_EXTRANEOUS_DATA
,

193 
JMESSAGE
(
JWRN_HIT_MARKER
, "Corrupt JPEG data:ÖrematureÉnd of data segment")

194 
JMESSAGE
(
JWRN_HUFF_BAD_CODE
, "Corrupt JPEG data: bad Huffman code")

195 
JMESSAGE
(
JWRN_JFIF_MAJOR
, "Warning: unknown JFIFÑevisionÇumber %d.%02d")

196 
JMESSAGE
(
JWRN_JPEG_EOF
, "PrematureÉnd of JPEG file")

197 
JMESSAGE
(
JWRN_MUST_RESYNC
,

199 
JMESSAGE
(
JWRN_NOT_SEQUENTIAL
, "Invalid SOSÖarameters for sequential JPEG")

200 
JMESSAGE
(
JWRN_TOO_MUCH_DATA
, "ApplicationÅransferredÅoo many scanlines")

201 #i‡
JPEG_LIB_VERSION
 < 70

202 
JMESSAGE
(
JERR_BAD_CROP_SPEC
, "Invalid cropÑequest")

203 #i‡
deföed
(
C_ARITH_CODING_SUPPORTED
Ë|| deföed(
D_ARITH_CODING_SUPPORTED
)

204 
JMESSAGE
(
JERR_NO_ARITH_TABLE
, "ArithmeticÅable 0x%02x wasÇot defined")

205 
JMESSAGE
(
JWRN_ARITH_BAD_CODE
, "Corrupt JPEG data: badárithmetic code")

209 #ifde‡
JMAKE_ENUM_LIST


211 
	mJMSG_LASTMSGCODE


212 } 
	tJ_MESSAGE_CODE
;

214 #unde‡
JMAKE_ENUM_LIST


218 #unde‡
JMESSAGE


221 #i‚de‡
JERROR_H


222 
	#JERROR_H


	)

228 
	#ERREXIT
(
cöfo
,
code
) \

229 ((
cöfo
)->
îr
->
msg_code
 = (
code
), \

230 (*(
cöfo
)->
îr
->
îr‹_exô
Ë((
j_comm⁄_±r
Ë(cöfo)))

	)

231 
	#ERREXIT1
(
cöfo
,
code
,
p1
) \

232 ((
cöfo
)->
îr
->
msg_code
 = (
code
), \

233 (
cöfo
)->
îr
->
msg_∑rm
.
i
[0] = (
p1
), \

234 (*(
cöfo
)->
îr
->
îr‹_exô
Ë((
j_comm⁄_±r
Ë(cöfo)))

	)

235 
	#ERREXIT2
(
cöfo
,
code
,
p1
,
p2
) \

236 ((
cöfo
)->
îr
->
msg_code
 = (
code
), \

237 (
cöfo
)->
îr
->
msg_∑rm
.
i
[0] = (
p1
), \

238 (
cöfo
)->
îr
->
msg_∑rm
.
i
[1] = (
p2
), \

239 (*(
cöfo
)->
îr
->
îr‹_exô
Ë((
j_comm⁄_±r
Ë(cöfo)))

	)

240 
	#ERREXIT3
(
cöfo
,
code
,
p1
,
p2
,
p3
) \

241 ((
cöfo
)->
îr
->
msg_code
 = (
code
), \

242 (
cöfo
)->
îr
->
msg_∑rm
.
i
[0] = (
p1
), \

243 (
cöfo
)->
îr
->
msg_∑rm
.
i
[1] = (
p2
), \

244 (
cöfo
)->
îr
->
msg_∑rm
.
i
[2] = (
p3
), \

245 (*(
cöfo
)->
îr
->
îr‹_exô
Ë((
j_comm⁄_±r
Ë(cöfo)))

	)

246 
	#ERREXIT4
(
cöfo
,
code
,
p1
,
p2
,
p3
,
p4
) \

247 ((
cöfo
)->
îr
->
msg_code
 = (
code
), \

248 (
cöfo
)->
îr
->
msg_∑rm
.
i
[0] = (
p1
), \

249 (
cöfo
)->
îr
->
msg_∑rm
.
i
[1] = (
p2
), \

250 (
cöfo
)->
îr
->
msg_∑rm
.
i
[2] = (
p3
), \

251 (
cöfo
)->
îr
->
msg_∑rm
.
i
[3] = (
p4
), \

252 (*(
cöfo
)->
îr
->
îr‹_exô
Ë((
j_comm⁄_±r
Ë(cöfo)))

	)

253 
	#ERREXITS
(
cöfo
,
code
,
°r
) \

254 ((
cöfo
)->
îr
->
msg_code
 = (
code
), \

255 
	`°∫˝y
((
cöfo
)->
îr
->
msg_∑rm
.
s
, (
°r
), 
JMSG_STR_PARM_MAX
), \

256 (*(
cöfo
)->
îr
->
îr‹_exô
Ë((
j_comm⁄_±r
Ë(cöfo)))

	)

258 
	#MAKESTMT
(
°uff
Ëdÿ{ stuf‡} 0)

	)

261 
	#WARNMS
(
cöfo
,
code
) \

262 ((
cöfo
)->
îr
->
msg_code
 = (
code
), \

263 (*(
cöfo
)->
îr
->
emô_mesßge
Ë((
j_comm⁄_±r
Ë(cöfo), -1))

	)

264 
	#WARNMS1
(
cöfo
,
code
,
p1
) \

265 ((
cöfo
)->
îr
->
msg_code
 = (
code
), \

266 (
cöfo
)->
îr
->
msg_∑rm
.
i
[0] = (
p1
), \

267 (*(
cöfo
)->
îr
->
emô_mesßge
Ë((
j_comm⁄_±r
Ë(cöfo), -1))

	)

268 
	#WARNMS2
(
cöfo
,
code
,
p1
,
p2
) \

269 ((
cöfo
)->
îr
->
msg_code
 = (
code
), \

270 (
cöfo
)->
îr
->
msg_∑rm
.
i
[0] = (
p1
), \

271 (
cöfo
)->
îr
->
msg_∑rm
.
i
[1] = (
p2
), \

272 (*(
cöfo
)->
îr
->
emô_mesßge
Ë((
j_comm⁄_±r
Ë(cöfo), -1))

	)

275 
	#TRACEMS
(
cöfo
,
lvl
,
code
) \

276 ((
cöfo
)->
îr
->
msg_code
 = (
code
), \

277 (*(
cöfo
)->
îr
->
emô_mesßge
Ë((
j_comm⁄_±r
Ë(cöfo), (
lvl
)))

	)

278 
	#TRACEMS1
(
cöfo
,
lvl
,
code
,
p1
) \

279 ((
cöfo
)->
îr
->
msg_code
 = (
code
), \

280 (
cöfo
)->
îr
->
msg_∑rm
.
i
[0] = (
p1
), \

281 (*(
cöfo
)->
îr
->
emô_mesßge
Ë((
j_comm⁄_±r
Ë(cöfo), (
lvl
)))

	)

282 
	#TRACEMS2
(
cöfo
,
lvl
,
code
,
p1
,
p2
) \

283 ((
cöfo
)->
îr
->
msg_code
 = (
code
), \

284 (
cöfo
)->
îr
->
msg_∑rm
.
i
[0] = (
p1
), \

285 (
cöfo
)->
îr
->
msg_∑rm
.
i
[1] = (
p2
), \

286 (*(
cöfo
)->
îr
->
emô_mesßge
Ë((
j_comm⁄_±r
Ë(cöfo), (
lvl
)))

	)

287 
	#TRACEMS3
(
cöfo
,
lvl
,
code
,
p1
,
p2
,
p3
) \

288 
	`MAKESTMT
(* 
_mp
 = (
cöfo
)->
îr
->
msg_∑rm
.
i
; \

289 
_mp
[0] = (
p1
); _mp[1] = (
p2
); _mp[2] = (
p3
); \

290 (
cöfo
)->
îr
->
msg_code
 = (
code
); \

291 (*(
cöfo
)->
îr
->
emô_mesßge
Ë((
j_comm⁄_±r
Ë(cöfo), (
lvl
)); )

	)

292 
	#TRACEMS4
(
cöfo
,
lvl
,
code
,
p1
,
p2
,
p3
,
p4
) \

293 
	`MAKESTMT
(* 
_mp
 = (
cöfo
)->
îr
->
msg_∑rm
.
i
; \

294 
_mp
[0] = (
p1
); _mp[1] = (
p2
); _mp[2] = (
p3
); _mp[3] = (
p4
); \

295 (
cöfo
)->
îr
->
msg_code
 = (
code
); \

296 (*(
cöfo
)->
îr
->
emô_mesßge
Ë((
j_comm⁄_±r
Ë(cöfo), (
lvl
)); )

	)

297 
	#TRACEMS5
(
cöfo
,
lvl
,
code
,
p1
,
p2
,
p3
,
p4
,
p5
) \

298 
	`MAKESTMT
(* 
_mp
 = (
cöfo
)->
îr
->
msg_∑rm
.
i
; \

299 
_mp
[0] = (
p1
); _mp[1] = (
p2
); _mp[2] = (
p3
); _mp[3] = (
p4
); \

300 
_mp
[4] = (
p5
); \

301 (
cöfo
)->
îr
->
msg_code
 = (
code
); \

302 (*(
cöfo
)->
îr
->
emô_mesßge
Ë((
j_comm⁄_±r
Ë(cöfo), (
lvl
)); )

	)

303 
	#TRACEMS8
(
cöfo
,
lvl
,
code
,
p1
,
p2
,
p3
,
p4
,
p5
,
p6
,
p7
,
p8
) \

304 
	`MAKESTMT
(* 
_mp
 = (
cöfo
)->
îr
->
msg_∑rm
.
i
; \

305 
_mp
[0] = (
p1
); _mp[1] = (
p2
); _mp[2] = (
p3
); _mp[3] = (
p4
); \

306 
_mp
[4] = (
p5
); _mp[5] = (
p6
); _mp[6] = (
p7
); _mp[7] = (
p8
); \

307 (
cöfo
)->
îr
->
msg_code
 = (
code
); \

308 (*(
cöfo
)->
îr
->
emô_mesßge
Ë((
j_comm⁄_±r
Ë(cöfo), (
lvl
)); )

	)

309 
	#TRACEMSS
(
cöfo
,
lvl
,
code
,
°r
) \

310 ((
cöfo
)->
îr
->
msg_code
 = (
code
), \

311 
	`°∫˝y
((
cöfo
)->
îr
->
msg_∑rm
.
s
, (
°r
), 
JMSG_STR_PARM_MAX
), \

312 (*(
cöfo
)->
îr
->
emô_mesßge
Ë((
j_comm⁄_±r
Ë(cöfo), (
lvl
)))

	)

	@/usr/include/jpeglib.h

15 #i‚de‡
JPEGLIB_H


16 
	#JPEGLIB_H


	)

25 #i‚de‡
JCONFIG_INCLUDED


26 
	~"jc⁄fig.h
"

28 
	~"jm‹ecfg.h
"

31 #ifde‡
__˝lu•lus


32 #i‚de‡
DONT_USE_EXTERN_C


43 
	#DCTSIZE
 8

	)

44 
	#DCTSIZE2
 64

	)

45 
	#NUM_QUANT_TBLS
 4

	)

46 
	#NUM_HUFF_TBLS
 4

	)

47 
	#NUM_ARITH_TBLS
 16

	)

48 
	#MAX_COMPS_IN_SCAN
 4

	)

49 
	#MAX_SAMP_FACTOR
 4

	)

57 
	#C_MAX_BLOCKS_IN_MCU
 10

	)

58 #i‚de‡
D_MAX_BLOCKS_IN_MCU


59 
	#D_MAX_BLOCKS_IN_MCU
 10

	)

68 
JSAMPLE
 
	tFAR
 *
	tJSAMPROW
;

69 
JSAMPROW
 *
	tJSAMPARRAY
;

70 
JSAMPARRAY
 *
	tJSAMPIMAGE
;

72 
JCOEF
 
	tJBLOCK
[
DCTSIZE2
];

73 
JBLOCK
 
	tFAR
 *
	tJBLOCKROW
;

74 
JBLOCKROW
 *
	tJBLOCKARRAY
;

75 
JBLOCKARRAY
 *
	tJBLOCKIMAGE
;

77 
JCOEF
 
	tFAR
 *
	tJCOEFPTR
;

90 
UINT16
 
qu™tvÆ
[
DCTSIZE2
];

96 
boﬁón
 
£¡_èbÀ
;

97 } 
	tJQUANT_TBL
;

104 
UINT8
 
bôs
[17];

106 
UINT8
 
huffvÆ
[256];

112 
boﬁón
 
£¡_èbÀ
;

113 } 
	tJHUFF_TBL
;

122 
comp⁄ít_id
;

123 
comp⁄ít_ödex
;

124 
h_ßmp_Á˘‹
;

125 
v_ßmp_Á˘‹
;

126 
qu™t_tbl_no
;

131 
dc_tbl_no
;

132 
ac_tbl_no
;

141 
JDIMENSION
 
width_ö_blocks
;

142 
JDIMENSION
 
height_ö_blocks
;

149 #i‡
JPEG_LIB_VERSION
 >= 70

150 
DCT_h_sˇÀd_size
;

151 
DCT_v_sˇÀd_size
;

153 
DCT_sˇÀd_size
;

161 
JDIMENSION
 
downßm∂ed_width
;

162 
JDIMENSION
 
downßm∂ed_height
;

167 
boﬁón
 
comp⁄ít_√eded
;

171 
MCU_width
;

172 
MCU_height
;

173 
MCU_blocks
;

174 
MCU_ßm∂e_width
;

175 
œ°_cﬁ_width
;

176 
œ°_row_height
;

182 
JQUANT_TBL
 * 
qu™t_èbÀ
;

185 * 
d˘_èbÀ
;

186 } 
	tj≥g_comp⁄ít_öfo
;

192 
comps_ö_sˇn
;

193 
comp⁄ít_ödex
[
MAX_COMPS_IN_SCAN
];

194 
Ss
, 
Se
;

195 
Ah
, 
Al
;

196 } 
	tj≥g_sˇn_öfo
;

200 
j≥g_m¨kî_°ru˘
 
	tFAR
 * 
	tj≥g_ßved_m¨kî_±r
;

202 
	sj≥g_m¨kî_°ru˘
 {

203 
j≥g_ßved_m¨kî_±r
 
√xt
;

204 
UINT8
 
m¨kî
;

205 
‹igöÆ_Àngth
;

206 
d©a_Àngth
;

207 
JOCTET
 
FAR
 * 
d©a
;

213 
	#JCS_EXTENSIONS
 1

	)

214 
	#JCS_ALPHA_EXTENSIONS
 1

	)

217 
JCS_UNKNOWN
,

218 
JCS_GRAYSCALE
,

219 
JCS_RGB
,

221 
JCS_YCbCr
,

222 
JCS_CMYK
,

223 
JCS_YCCK
,

224 
JCS_EXT_RGB
,

225 
JCS_EXT_RGBX
,

226 
JCS_EXT_BGR
,

227 
JCS_EXT_BGRX
,

228 
JCS_EXT_XBGR
,

229 
JCS_EXT_XRGB
,

237 
JCS_EXT_RGBA
,

238 
JCS_EXT_BGRA
,

239 
JCS_EXT_ABGR
,

240 
JCS_EXT_ARGB


241 } 
	tJ_COLOR_SPACE
;

246 
JDCT_ISLOW
,

247 
JDCT_IFAST
,

248 
JDCT_FLOAT


249 } 
	tJ_DCT_METHOD
;

251 #i‚de‡
JDCT_DEFAULT


252 
	#JDCT_DEFAULT
 
JDCT_ISLOW


	)

254 #i‚de‡
JDCT_FASTEST


255 
	#JDCT_FASTEST
 
JDCT_IFAST


	)

261 
JDITHER_NONE
,

262 
JDITHER_ORDERED
,

263 
JDITHER_FS


264 } 
	tJ_DITHER_MODE
;

269 
	#j≥g_comm⁄_fõlds
 \

270 
j≥g_îr‹_mgr
 * 
îr
; \

271 
j≥g_mem‹y_mgr
 * 
mem
; \

272 
j≥g_¥ogªss_mgr
 * 
¥ogªss
; \

273 * 
˛õ¡_d©a
; \

274 
boﬁón
 
is_decom¥ess‹
; \

275 
globÆ_°©e


	)

281 
	sj≥g_comm⁄_°ru˘
 {

282 
j≥g_comm⁄_fõlds
;

289 
j≥g_comm⁄_°ru˘
 * 
	tj_comm⁄_±r
;

290 
j≥g_com¥ess_°ru˘
 * 
	tj_com¥ess_±r
;

291 
j≥g_decom¥ess_°ru˘
 * 
	tj_decom¥ess_±r
;

296 
	sj≥g_com¥ess_°ru˘
 {

297 
j≥g_comm⁄_fõlds
;

300 
j≥g_de°ö©i⁄_mgr
 * 
de°
;

307 
JDIMENSION
 
image_width
;

308 
JDIMENSION
 
image_height
;

309 
öput_comp⁄íts
;

310 
J_COLOR_SPACE
 
ö_cﬁ‹_•a˚
;

312 
öput_gamma
;

322 #i‡
JPEG_LIB_VERSION
 >= 70

323 
sˇÀ_num
, 
sˇÀ_díom
;

325 
JDIMENSION
 
j≥g_width
;

326 
JDIMENSION
 
j≥g_height
;

335 
d©a_¥ecisi⁄
;

337 
num_comp⁄íts
;

338 
J_COLOR_SPACE
 
j≥g_cﬁ‹_•a˚
;

340 
j≥g_comp⁄ít_öfo
 * 
comp_öfo
;

343 
JQUANT_TBL
 * 
qu™t_tbl_±rs
[
NUM_QUANT_TBLS
];

344 #i‡
JPEG_LIB_VERSION
 >= 70

345 
q_sˇÀ_Á˘‹
[
NUM_QUANT_TBLS
];

351 
JHUFF_TBL
 * 
dc_huff_tbl_±rs
[
NUM_HUFF_TBLS
];

352 
JHUFF_TBL
 * 
ac_huff_tbl_±rs
[
NUM_HUFF_TBLS
];

355 
UINT8
 
¨ôh_dc_L
[
NUM_ARITH_TBLS
];

356 
UINT8
 
¨ôh_dc_U
[
NUM_ARITH_TBLS
];

357 
UINT8
 
¨ôh_ac_K
[
NUM_ARITH_TBLS
];

359 
num_sˇns
;

360 c⁄° 
j≥g_sˇn_öfo
 * 
sˇn_öfo
;

366 
boﬁón
 
øw_d©a_ö
;

367 
boﬁón
 
¨ôh_code
;

368 
boﬁón
 
›timize_codög
;

369 
boﬁón
 
CCIR601_ßm∂ög
;

370 #i‡
JPEG_LIB_VERSION
 >= 70

371 
boﬁón
 
do_Áncy_downßm∂ög
;

373 
smoŸhög_Á˘‹
;

374 
J_DCT_METHOD
 
d˘_mëhod
;

381 
ª°¨t_öãrvÆ
;

382 
ª°¨t_ö_rows
;

386 
boﬁón
 
wrôe_JFIF_hódî
;

387 
UINT8
 
JFIF_maj‹_vîsi⁄
;

388 
UINT8
 
JFIF_mö‹_vîsi⁄
;

393 
UINT8
 
dísôy_unô
;

394 
UINT16
 
X_dísôy
;

395 
UINT16
 
Y_dísôy
;

396 
boﬁón
 
wrôe_Adobe_m¨kî
;

403 
JDIMENSION
 
√xt_sˇ∆öe
;

412 
boﬁón
 
¥ogªssive_mode
;

413 
max_h_ßmp_Á˘‹
;

414 
max_v_ßmp_Á˘‹
;

416 #i‡
JPEG_LIB_VERSION
 >= 70

417 
mö_DCT_h_sˇÀd_size
;

418 
mö_DCT_v_sˇÀd_size
;

421 
JDIMENSION
 
tŸÆ_iMCU_rows
;

432 
comps_ö_sˇn
;

433 
j≥g_comp⁄ít_öfo
 * 
cur_comp_öfo
[
MAX_COMPS_IN_SCAN
];

436 
JDIMENSION
 
MCUs_≥r_row
;

437 
JDIMENSION
 
MCU_rows_ö_sˇn
;

439 
blocks_ö_MCU
;

440 
MCU_membîshù
[
C_MAX_BLOCKS_IN_MCU
];

444 
Ss
, 
Se
, 
Ah
, 
Al
;

446 #i‡
JPEG_LIB_VERSION
 >= 80

447 
block_size
;

448 c⁄° * 
«tuøl_‹dî
;

449 
lim_Se
;

455 
j≥g_comp_ma°î
 * 
ma°î
;

456 
j≥g_c_maö_c⁄åﬁÀr
 * 
maö
;

457 
j≥g_c_¥ï_c⁄åﬁÀr
 * 
¥ï
;

458 
j≥g_c_c€f_c⁄åﬁÀr
 * 
c€f
;

459 
j≥g_m¨kî_wrôî
 * 
m¨kî
;

460 
j≥g_cﬁ‹_c⁄vîãr
 * 
cc⁄vît
;

461 
j≥g_downßm∂î
 * 
downßm∂e
;

462 
j≥g_f‹w¨d_d˘
 * 
fd˘
;

463 
j≥g_íå›y_ícodî
 * 
íå›y
;

464 
j≥g_sˇn_öfo
 * 
s¸ùt_•a˚
;

465 
s¸ùt_•a˚_size
;

471 
	sj≥g_decom¥ess_°ru˘
 {

472 
j≥g_comm⁄_fõlds
;

475 
j≥g_sour˚_mgr
 * 
§c
;

480 
JDIMENSION
 
image_width
;

481 
JDIMENSION
 
image_height
;

482 
num_comp⁄íts
;

483 
J_COLOR_SPACE
 
j≥g_cﬁ‹_•a˚
;

490 
J_COLOR_SPACE
 
out_cﬁ‹_•a˚
;

492 
sˇÀ_num
, 
sˇÀ_díom
;

494 
ouçut_gamma
;

496 
boﬁón
 
buf„ªd_image
;

497 
boﬁón
 
øw_d©a_out
;

499 
J_DCT_METHOD
 
d˘_mëhod
;

500 
boﬁón
 
do_Áncy_upßm∂ög
;

501 
boﬁón
 
do_block_smoŸhög
;

503 
boﬁón
 
qu™tize_cﬁ‹s
;

505 
J_DITHER_MODE
 
dôhî_mode
;

506 
boﬁón
 
two_∑ss_qu™tize
;

507 
desúed_numbî_of_cﬁ‹s
;

509 
boﬁón
 
íabÀ_1∑ss_qu™t
;

510 
boﬁón
 
íabÀ_exã∫Æ_qu™t
;

511 
boﬁón
 
íabÀ_2∑ss_qu™t
;

519 
JDIMENSION
 
ouçut_width
;

520 
JDIMENSION
 
ouçut_height
;

521 
out_cﬁ‹_comp⁄íts
;

522 
ouçut_comp⁄íts
;

526 
ªc_outbuf_height
;

538 
a˘uÆ_numbî_of_cﬁ‹s
;

539 
JSAMPARRAY
 
cﬁ‹m≠
;

549 
JDIMENSION
 
ouçut_sˇ∆öe
;

554 
öput_sˇn_numbî
;

555 
JDIMENSION
 
öput_iMCU_row
;

561 
ouçut_sˇn_numbî
;

562 
JDIMENSION
 
ouçut_iMCU_row
;

571 (*
c€f_bôs
)[
DCTSIZE2
];

582 
JQUANT_TBL
 * 
qu™t_tbl_±rs
[
NUM_QUANT_TBLS
];

585 
JHUFF_TBL
 * 
dc_huff_tbl_±rs
[
NUM_HUFF_TBLS
];

586 
JHUFF_TBL
 * 
ac_huff_tbl_±rs
[
NUM_HUFF_TBLS
];

593 
d©a_¥ecisi⁄
;

595 
j≥g_comp⁄ít_öfo
 * 
comp_öfo
;

598 #i‡
JPEG_LIB_VERSION
 >= 80

599 
boﬁón
 
is_ba£löe
;

601 
boﬁón
 
¥ogªssive_mode
;

602 
boﬁón
 
¨ôh_code
;

604 
UINT8
 
¨ôh_dc_L
[
NUM_ARITH_TBLS
];

605 
UINT8
 
¨ôh_dc_U
[
NUM_ARITH_TBLS
];

606 
UINT8
 
¨ôh_ac_K
[
NUM_ARITH_TBLS
];

608 
ª°¨t_öãrvÆ
;

613 
boﬁón
 
ßw_JFIF_m¨kî
;

615 
UINT8
 
JFIF_maj‹_vîsi⁄
;

616 
UINT8
 
JFIF_mö‹_vîsi⁄
;

617 
UINT8
 
dísôy_unô
;

618 
UINT16
 
X_dísôy
;

619 
UINT16
 
Y_dísôy
;

620 
boﬁón
 
ßw_Adobe_m¨kî
;

621 
UINT8
 
Adobe_å™sf‹m
;

623 
boﬁón
 
CCIR601_ßm∂ög
;

629 
j≥g_ßved_m¨kî_±r
 
m¨kî_li°
;

638 
max_h_ßmp_Á˘‹
;

639 
max_v_ßmp_Á˘‹
;

641 #i‡
JPEG_LIB_VERSION
 >= 70

642 
mö_DCT_h_sˇÀd_size
;

643 
mö_DCT_v_sˇÀd_size
;

645 
mö_DCT_sˇÀd_size
;

648 
JDIMENSION
 
tŸÆ_iMCU_rows
;

657 
JSAMPLE
 * 
ßm∂e_ønge_limô
;

664 
comps_ö_sˇn
;

665 
j≥g_comp⁄ít_öfo
 * 
cur_comp_öfo
[
MAX_COMPS_IN_SCAN
];

668 
JDIMENSION
 
MCUs_≥r_row
;

669 
JDIMENSION
 
MCU_rows_ö_sˇn
;

671 
blocks_ö_MCU
;

672 
MCU_membîshù
[
D_MAX_BLOCKS_IN_MCU
];

676 
Ss
, 
Se
, 
Ah
, 
Al
;

678 #i‡
JPEG_LIB_VERSION
 >= 80

681 
block_size
;

682 c⁄° * 
«tuøl_‹dî
;

683 
lim_Se
;

690 
uƒód_m¨kî
;

695 
j≥g_decomp_ma°î
 * 
ma°î
;

696 
j≥g_d_maö_c⁄åﬁÀr
 * 
maö
;

697 
j≥g_d_c€f_c⁄åﬁÀr
 * 
c€f
;

698 
j≥g_d_po°_c⁄åﬁÀr
 * 
po°
;

699 
j≥g_öput_c⁄åﬁÀr
 * 
öput˘l
;

700 
j≥g_m¨kî_ªadî
 * 
m¨kî
;

701 
j≥g_íå›y_decodî
 * 
íå›y
;

702 
j≥g_övî£_d˘
 * 
id˘
;

703 
j≥g_upßm∂î
 * 
upßm∂e
;

704 
j≥g_cﬁ‹_dec⁄vîãr
 * 
cc⁄vît
;

705 
j≥g_cﬁ‹_qu™tizî
 * 
cqu™tize
;

719 
	sj≥g_îr‹_mgr
 {

721 
JMETHOD
(, 
îr‹_exô
, (
j_comm⁄_±r
 
cöfo
));

723 
JMETHOD
(, 
emô_mesßge
, (
j_comm⁄_±r
 
cöfo
, 
msg_Àvñ
));

725 
JMETHOD
(, 
ouçut_mesßge
, (
j_comm⁄_±r
 
cöfo
));

727 
JMETHOD
(, 
f‹m©_mesßge
, (
j_comm⁄_±r
 
cöfo
, * 
buf„r
));

728 
	#JMSG_LENGTH_MAX
 200

	)

730 
JMETHOD
(, 
ª£t_îr‹_mgr
, (
j_comm⁄_±r
 
cöfo
));

735 
msg_code
;

736 
	#JMSG_STR_PARM_MAX
 80

	)

738 
i
[8];

739 
s
[
JMSG_STR_PARM_MAX
];

740 } 
msg_∑rm
;

744 
åa˚_Àvñ
;

752 
num_w¨nögs
;

764 c⁄° * c⁄° * 
j≥g_mesßge_èbÀ
;

765 
œ°_j≥g_mesßge
;

769 c⁄° * c⁄° * 
add⁄_mesßge_èbÀ
;

770 
fú°_add⁄_mesßge
;

771 
œ°_add⁄_mesßge
;

777 
	sj≥g_¥ogªss_mgr
 {

778 
JMETHOD
(, 
¥ogªss_m⁄ô‹
, (
j_comm⁄_±r
 
cöfo
));

780 
∑ss_cou¡î
;

781 
∑ss_limô
;

782 
com∂ëed_∑s£s
;

783 
tŸÆ_∑s£s
;

789 
	sj≥g_de°ö©i⁄_mgr
 {

790 
JOCTET
 * 
√xt_ouçut_byã
;

791 
size_t
 
‰ì_ö_buf„r
;

793 
JMETHOD
(, 
öô_de°ö©i⁄
, (
j_com¥ess_±r
 
cöfo
));

794 
JMETHOD
(
boﬁón
, 
em±y_ouçut_buf„r
, (
j_com¥ess_±r
 
cöfo
));

795 
JMETHOD
(, 
ãrm_de°ö©i⁄
, (
j_com¥ess_±r
 
cöfo
));

801 
	sj≥g_sour˚_mgr
 {

802 c⁄° 
JOCTET
 * 
√xt_öput_byã
;

803 
size_t
 
byãs_ö_buf„r
;

805 
JMETHOD
(, 
öô_sour˚
, (
j_decom¥ess_±r
 
cöfo
));

806 
JMETHOD
(
boﬁón
, 
fûl_öput_buf„r
, (
j_decom¥ess_±r
 
cöfo
));

807 
JMETHOD
(, 
skù_öput_d©a
, (
j_decom¥ess_±r
 
cöfo
, 
num_byãs
));

808 
JMETHOD
(
boﬁón
, 
ªsync_to_ª°¨t
, (
j_decom¥ess_±r
 
cöfo
, 
desúed
));

809 
JMETHOD
(, 
ãrm_sour˚
, (
j_decom¥ess_±r
 
cöfo
));

824 
	#JPOOL_PERMANENT
 0

	)

825 
	#JPOOL_IMAGE
 1

	)

826 
	#JPOOL_NUMPOOLS
 2

	)

828 
jvút_ßºay_c⁄åﬁ
 * 
	tjvút_ßºay_±r
;

829 
jvút_b¨øy_c⁄åﬁ
 * 
	tjvút_b¨øy_±r
;

832 
	sj≥g_mem‹y_mgr
 {

834 
JMETHOD
(*, 
Æloc_smÆl
, (
j_comm⁄_±r
 
cöfo
, 
poﬁ_id
,

835 
size_t
 
sizeofobje˘
));

836 
JMETHOD
(
FAR
 *, 
Æloc_œrge
, (
j_comm⁄_±r
 
cöfo
, 
poﬁ_id
,

837 
size_t
 
sizeofobje˘
));

838 
JMETHOD
(
JSAMPARRAY
, 
Æloc_ßºay
, (
j_comm⁄_±r
 
cöfo
, 
poﬁ_id
,

839 
JDIMENSION
 
ßm∂e•îrow
,

840 
JDIMENSION
 
numrows
));

841 
JMETHOD
(
JBLOCKARRAY
, 
Æloc_b¨øy
, (
j_comm⁄_±r
 
cöfo
, 
poﬁ_id
,

842 
JDIMENSION
 
block•îrow
,

843 
JDIMENSION
 
numrows
));

844 
JMETHOD
(
jvút_ßºay_±r
, 
ªque°_vút_ßºay
, (
j_comm⁄_±r
 
cöfo
,

845 
poﬁ_id
,

846 
boﬁón
 
¥e_zîo
,

847 
JDIMENSION
 
ßm∂e•îrow
,

848 
JDIMENSION
 
numrows
,

849 
JDIMENSION
 
maxac˚ss
));

850 
JMETHOD
(
jvút_b¨øy_±r
, 
ªque°_vút_b¨øy
, (
j_comm⁄_±r
 
cöfo
,

851 
poﬁ_id
,

852 
boﬁón
 
¥e_zîo
,

853 
JDIMENSION
 
block•îrow
,

854 
JDIMENSION
 
numrows
,

855 
JDIMENSION
 
maxac˚ss
));

856 
JMETHOD
(, 
ªÆize_vút_¨øys
, (
j_comm⁄_±r
 
cöfo
));

857 
JMETHOD
(
JSAMPARRAY
, 
ac˚ss_vút_ßºay
, (
j_comm⁄_±r
 
cöfo
,

858 
jvút_ßºay_±r
 
±r
,

859 
JDIMENSION
 
°¨t_row
,

860 
JDIMENSION
 
num_rows
,

861 
boﬁón
 
wrôabÀ
));

862 
JMETHOD
(
JBLOCKARRAY
, 
ac˚ss_vút_b¨øy
, (
j_comm⁄_±r
 
cöfo
,

863 
jvút_b¨øy_±r
 
±r
,

864 
JDIMENSION
 
°¨t_row
,

865 
JDIMENSION
 
num_rows
,

866 
boﬁón
 
wrôabÀ
));

867 
JMETHOD
(, 
‰ì_poﬁ
, (
j_comm⁄_±r
 
cöfo
, 
poﬁ_id
));

868 
JMETHOD
(, 
£lf_de°ru˘
, (
j_comm⁄_±r
 
cöfo
));

875 
max_mem‹y_to_u£
;

878 
max_Æloc_chunk
;

885 
JMETHOD
(
	tboﬁón
, 
	tj≥g_m¨kî_∑r£r_mëhod
, (
	tj_decom¥ess_±r
 
	tcöfo
));

893 #ifde‡
HAVE_PROTOTYPES


894 
	#JPP
(
¨gli°
Ë
	)
arglist

896 
	#JPP
(
¨gli°
Ë()

	)

907 #ifde‡
NEED_SHORT_EXTERNAL_NAMES


908 
	#j≥g_°d_îr‹
 
jStdEº‹


	)

909 
	#j≥g_Cª©eCom¥ess
 
jCªaCom¥ess


	)

910 
	#j≥g_Cª©eDecom¥ess
 
jCªaDecom¥ess


	)

911 
	#j≥g_de°roy_com¥ess
 
jDe°Com¥ess


	)

912 
	#j≥g_de°roy_decom¥ess
 
jDe°Decom¥ess


	)

913 
	#j≥g_°dio_de°
 
jStdDe°


	)

914 
	#j≥g_°dio_§c
 
jStdSrc


	)

915 #i‡
JPEG_LIB_VERSION
 >= 80

916 
	#j≥g_mem_de°
 
jMemDe°


	)

917 
	#j≥g_mem_§c
 
jMemSrc


	)

919 
	#j≥g_£t_deÁu…s
 
jSëDeÁu…s


	)

920 
	#j≥g_£t_cﬁ‹•a˚
 
jSëCﬁ‹•a˚


	)

921 
	#j≥g_deÁu…_cﬁ‹•a˚
 
jDefCﬁ‹•a˚


	)

922 
	#j≥g_£t_quÆôy
 
jSëQuÆôy


	)

923 
	#j≥g_£t_löór_quÆôy
 
jSëLQuÆôy


	)

924 #i‡
JPEG_LIB_VERSION
 >= 70

925 
	#j≥g_deÁu…_qèbÀs
 
jDefQTabÀs


	)

927 
	#j≥g_add_qu™t_èbÀ
 
jAddQu™tTabÀ


	)

928 
	#j≥g_quÆôy_sˇlög
 
jQuÆôySˇlög


	)

929 
	#j≥g_sim∂e_¥ogªssi⁄
 
jSimProgªss


	)

930 
	#j≥g_suµªss_èbÀs
 
jSuµªssTabÀs


	)

931 
	#j≥g_Æloc_qu™t_èbÀ
 
jAlcQTabÀ


	)

932 
	#j≥g_Æloc_huff_èbÀ
 
jAlcHTabÀ


	)

933 
	#j≥g_°¨t_com¥ess
 
jSåtCom¥ess


	)

934 
	#j≥g_wrôe_sˇ∆öes
 
jWπSˇ∆öes


	)

935 
	#j≥g_föish_com¥ess
 
jFöCom¥ess


	)

936 #i‡
JPEG_LIB_VERSION
 >= 70

937 
	#j≥g_ˇlc_j≥g_dimísi⁄s
 
jCj≥gDimísi⁄s


	)

939 
	#j≥g_wrôe_øw_d©a
 
jWπRawD©a


	)

940 
	#j≥g_wrôe_m¨kî
 
jWπM¨kî


	)

941 
	#j≥g_wrôe_m_hódî
 
jWπMHódî


	)

942 
	#j≥g_wrôe_m_byã
 
jWπMByã


	)

943 
	#j≥g_wrôe_èbÀs
 
jWπTabÀs


	)

944 
	#j≥g_ªad_hódî
 
jRódHódî


	)

945 
	#j≥g_°¨t_decom¥ess
 
jSåtDecom¥ess


	)

946 
	#j≥g_ªad_sˇ∆öes
 
jRódSˇ∆öes


	)

947 
	#j≥g_föish_decom¥ess
 
jFöDecom¥ess


	)

948 
	#j≥g_ªad_øw_d©a
 
jRódRawD©a


	)

949 
	#j≥g_has_mu…ùÀ_sˇns
 
jHasMu…S˙


	)

950 
	#j≥g_°¨t_ouçut
 
jSåtOuçut


	)

951 
	#j≥g_föish_ouçut
 
jFöOuçut


	)

952 
	#j≥g_öput_com∂ëe
 
jInCom∂ëe


	)

953 
	#j≥g_√w_cﬁ‹m≠
 
jNewCM≠


	)

954 
	#j≥g_c⁄sume_öput
 
jC⁄sumeI≈ut


	)

955 #i‡
JPEG_LIB_VERSION
 >= 80

956 
	#j≥g_c‹e_ouçut_dimísi⁄s
 
jC‹eDimísi⁄s


	)

958 
	#j≥g_ˇlc_ouçut_dimísi⁄s
 
jCÆcDimísi⁄s


	)

959 
	#j≥g_ßve_m¨kîs
 
jSaveM¨kîs


	)

960 
	#j≥g_£t_m¨kî_¥o˚ss‹
 
jSëM¨kî


	)

961 
	#j≥g_ªad_c€fficõ¡s
 
jRódC€fs


	)

962 
	#j≥g_wrôe_c€fficõ¡s
 
jWπC€fs


	)

963 
	#j≥g_c›y_¸ôiˇl_∑ømëîs
 
jC›yCrô


	)

964 
	#j≥g_ab‹t_com¥ess
 
jAbπCom¥ess


	)

965 
	#j≥g_ab‹t_decom¥ess
 
jAbπDecom¥ess


	)

966 
	#j≥g_ab‹t
 
jAb‹t


	)

967 
	#j≥g_de°roy
 
jDe°roy


	)

968 
	#j≥g_ªsync_to_ª°¨t
 
jResyncRe°¨t


	)

973 
EXTERN
(
j≥g_îr‹_mgr
 *Ë
j≥g_°d_îr‹


974 
JPP
((
j≥g_îr‹_mgr
 * 
îr
));

983 
	#j≥g_¸óã_com¥ess
(
cöfo
) \

984 
	`j≥g_Cª©eCom¥ess
((
cöfo
), 
JPEG_LIB_VERSION
, \

985 (
size_t
Ë(
j≥g_com¥ess_°ru˘
))

	)

986 
	#j≥g_¸óã_decom¥ess
(
cöfo
) \

987 
	`j≥g_Cª©eDecom¥ess
((
cöfo
), 
JPEG_LIB_VERSION
, \

988 (
size_t
Ë(
j≥g_decom¥ess_°ru˘
))

	)

989 
EXTERN
(Ë
j≥g_Cª©eCom¥ess
 
JPP
((
j_com¥ess_±r
 
cöfo
,

990 
vîsi⁄
, 
size_t
 
°ru˘size
));

991 
EXTERN
(Ë
j≥g_Cª©eDecom¥ess
 
JPP
((
j_decom¥ess_±r
 
cöfo
,

992 
vîsi⁄
, 
size_t
 
°ru˘size
));

994 
EXTERN
(Ë
j≥g_de°roy_com¥ess
 
JPP
((
j_com¥ess_±r
 
cöfo
));

995 
EXTERN
(Ë
j≥g_de°roy_decom¥ess
 
JPP
((
j_decom¥ess_±r
 
cöfo
));

999 
EXTERN
(Ë
j≥g_°dio_de°
 
JPP
((
j_com¥ess_±r
 
cöfo
, 
FILE
 * 
outfûe
));

1000 
EXTERN
(Ë
j≥g_°dio_§c
 
JPP
((
j_decom¥ess_±r
 
cöfo
, 
FILE
 * 
öfûe
));

1002 #i‡
JPEG_LIB_VERSION
 >= 80

1004 
EXTERN
(Ë
j≥g_mem_de°
 
JPP
((
j_com¥ess_±r
 
cöfo
,

1005 ** 
outbuf„r
,

1006 * 
outsize
));

1007 
EXTERN
(Ë
j≥g_mem_§c
 
JPP
((
j_decom¥ess_±r
 
cöfo
,

1008 * 
öbuf„r
,

1009 
ösize
));

1013 
EXTERN
(Ë
j≥g_£t_deÁu…s
 
JPP
((
j_com¥ess_±r
 
cöfo
));

1015 
EXTERN
(Ë
j≥g_£t_cﬁ‹•a˚
 
JPP
((
j_com¥ess_±r
 
cöfo
,

1016 
J_COLOR_SPACE
 
cﬁ‹•a˚
));

1017 
EXTERN
(Ë
j≥g_deÁu…_cﬁ‹•a˚
 
JPP
((
j_com¥ess_±r
 
cöfo
));

1018 
EXTERN
(Ë
j≥g_£t_quÆôy
 
JPP
((
j_com¥ess_±r
 
cöfo
, 
quÆôy
,

1019 
boﬁón
 
f‹˚_ba£löe
));

1020 
EXTERN
(Ë
j≥g_£t_löór_quÆôy
 
JPP
((
j_com¥ess_±r
 
cöfo
,

1021 
sˇÀ_Á˘‹
,

1022 
boﬁón
 
f‹˚_ba£löe
));

1023 #i‡
JPEG_LIB_VERSION
 >= 70

1024 
EXTERN
(Ë
j≥g_deÁu…_qèbÀs
 
JPP
((
j_com¥ess_±r
 
cöfo
,

1025 
boﬁón
 
f‹˚_ba£löe
));

1027 
EXTERN
(Ë
j≥g_add_qu™t_èbÀ
 
JPP
((
j_com¥ess_±r
 
cöfo
, 
which_tbl
,

1028 c⁄° *
basic_èbÀ
,

1029 
sˇÀ_Á˘‹
,

1030 
boﬁón
 
f‹˚_ba£löe
));

1031 
EXTERN
(Ë
j≥g_quÆôy_sˇlög
 
JPP
((
quÆôy
));

1032 
EXTERN
(Ë
j≥g_sim∂e_¥ogªssi⁄
 
JPP
((
j_com¥ess_±r
 
cöfo
));

1033 
EXTERN
(Ë
j≥g_suµªss_èbÀs
 
JPP
((
j_com¥ess_±r
 
cöfo
,

1034 
boﬁón
 
suµªss
));

1035 
EXTERN
(
JQUANT_TBL
 *Ë
j≥g_Æloc_qu™t_èbÀ
 
JPP
((
j_comm⁄_±r
 
cöfo
));

1036 
EXTERN
(
JHUFF_TBL
 *Ë
j≥g_Æloc_huff_èbÀ
 
JPP
((
j_comm⁄_±r
 
cöfo
));

1039 
EXTERN
(Ë
j≥g_°¨t_com¥ess
 
JPP
((
j_com¥ess_±r
 
cöfo
,

1040 
boﬁón
 
wrôe_Æl_èbÀs
));

1041 
EXTERN
(
JDIMENSION
Ë
j≥g_wrôe_sˇ∆öes
 
JPP
((
j_com¥ess_±r
 
cöfo
,

1042 
JSAMPARRAY
 
sˇ∆öes
,

1043 
JDIMENSION
 
num_löes
));

1044 
EXTERN
(Ë
j≥g_föish_com¥ess
 
JPP
((
j_com¥ess_±r
 
cöfo
));

1046 #i‡
JPEG_LIB_VERSION
 >= 70

1048 
EXTERN
(Ë
j≥g_ˇlc_j≥g_dimísi⁄s
 
JPP
((
j_com¥ess_±r
 
cöfo
));

1052 
EXTERN
(
JDIMENSION
Ë
j≥g_wrôe_øw_d©a
 
JPP
((
j_com¥ess_±r
 
cöfo
,

1053 
JSAMPIMAGE
 
d©a
,

1054 
JDIMENSION
 
num_löes
));

1057 
EXTERN
(Ë
j≥g_wrôe_m¨kî


1058 
JPP
((
j_com¥ess_±r
 
cöfo
, 
m¨kî
,

1059 c⁄° 
JOCTET
 * 
d©≠å
, 
d©Æí
));

1061 
EXTERN
(Ë
j≥g_wrôe_m_hódî


1062 
JPP
((
j_com¥ess_±r
 
cöfo
, 
m¨kî
, 
d©Æí
));

1063 
EXTERN
(Ë
j≥g_wrôe_m_byã


1064 
JPP
((
j_com¥ess_±r
 
cöfo
, 
vÆ
));

1067 
EXTERN
(Ë
j≥g_wrôe_èbÀs
 
JPP
((
j_com¥ess_±r
 
cöfo
));

1070 
EXTERN
(Ë
j≥g_ªad_hódî
 
JPP
((
j_decom¥ess_±r
 
cöfo
,

1071 
boﬁón
 
ªquúe_image
));

1073 
	#JPEG_SUSPENDED
 0

	)

1074 
	#JPEG_HEADER_OK
 1

	)

1075 
	#JPEG_HEADER_TABLES_ONLY
 2

	)

1083 
EXTERN
(
boﬁón
Ë
j≥g_°¨t_decom¥ess
 
JPP
((
j_decom¥ess_±r
 
cöfo
));

1084 
EXTERN
(
JDIMENSION
Ë
j≥g_ªad_sˇ∆öes
 
JPP
((
j_decom¥ess_±r
 
cöfo
,

1085 
JSAMPARRAY
 
sˇ∆öes
,

1086 
JDIMENSION
 
max_löes
));

1087 
EXTERN
(
boﬁón
Ë
j≥g_föish_decom¥ess
 
JPP
((
j_decom¥ess_±r
 
cöfo
));

1090 
EXTERN
(
JDIMENSION
Ë
j≥g_ªad_øw_d©a
 
JPP
((
j_decom¥ess_±r
 
cöfo
,

1091 
JSAMPIMAGE
 
d©a
,

1092 
JDIMENSION
 
max_löes
));

1095 
EXTERN
(
boﬁón
Ë
j≥g_has_mu…ùÀ_sˇns
 
JPP
((
j_decom¥ess_±r
 
cöfo
));

1096 
EXTERN
(
boﬁón
Ë
j≥g_°¨t_ouçut
 
JPP
((
j_decom¥ess_±r
 
cöfo
,

1097 
sˇn_numbî
));

1098 
EXTERN
(
boﬁón
Ë
j≥g_föish_ouçut
 
JPP
((
j_decom¥ess_±r
 
cöfo
));

1099 
EXTERN
(
boﬁón
Ë
j≥g_öput_com∂ëe
 
JPP
((
j_decom¥ess_±r
 
cöfo
));

1100 
EXTERN
(Ë
j≥g_√w_cﬁ‹m≠
 
JPP
((
j_decom¥ess_±r
 
cöfo
));

1101 
EXTERN
(Ë
j≥g_c⁄sume_öput
 
JPP
((
j_decom¥ess_±r
 
cöfo
));

1104 
	#JPEG_REACHED_SOS
 1

	)

1105 
	#JPEG_REACHED_EOI
 2

	)

1106 
	#JPEG_ROW_COMPLETED
 3

	)

1107 
	#JPEG_SCAN_COMPLETED
 4

	)

1110 #i‡
JPEG_LIB_VERSION
 >= 80

1111 
EXTERN
(Ë
j≥g_c‹e_ouçut_dimísi⁄s
 
JPP
((
j_decom¥ess_±r
 
cöfo
));

1113 
EXTERN
(Ë
j≥g_ˇlc_ouçut_dimísi⁄s
 
JPP
((
j_decom¥ess_±r
 
cöfo
));

1116 
EXTERN
(Ë
j≥g_ßve_m¨kîs


1117 
JPP
((
j_decom¥ess_±r
 
cöfo
, 
m¨kî_code
,

1118 
Àngth_limô
));

1121 
EXTERN
(Ë
j≥g_£t_m¨kî_¥o˚ss‹


1122 
JPP
((
j_decom¥ess_±r
 
cöfo
, 
m¨kî_code
,

1123 
j≥g_m¨kî_∑r£r_mëhod
 
routöe
));

1126 
EXTERN
(
jvút_b¨øy_±r
 *Ë
j≥g_ªad_c€fficõ¡s
 
JPP
((
j_decom¥ess_±r
 
cöfo
));

1127 
EXTERN
(Ë
j≥g_wrôe_c€fficõ¡s
 
JPP
((
j_com¥ess_±r
 
cöfo
,

1128 
jvút_b¨øy_±r
 * 
c€f_¨øys
));

1129 
EXTERN
(Ë
j≥g_c›y_¸ôiˇl_∑ømëîs
 
JPP
((
j_decom¥ess_±r
 
§cöfo
,

1130 
j_com¥ess_±r
 
d°öfo
));

1138 
EXTERN
(Ë
j≥g_ab‹t_com¥ess
 
JPP
((
j_com¥ess_±r
 
cöfo
));

1139 
EXTERN
(Ë
j≥g_ab‹t_decom¥ess
 
JPP
((
j_decom¥ess_±r
 
cöfo
));

1144 
EXTERN
(Ë
j≥g_ab‹t
 
JPP
((
j_comm⁄_±r
 
cöfo
));

1145 
EXTERN
(Ë
j≥g_de°roy
 
JPP
((
j_comm⁄_±r
 
cöfo
));

1148 
EXTERN
(
boﬁón
Ë
j≥g_ªsync_to_ª°¨t
 
JPP
((
j_decom¥ess_±r
 
cöfo
,

1149 
desúed
));

1156 
	#JPEG_RST0
 0xD0

	)

1157 
	#JPEG_EOI
 0xD9

	)

1158 
	#JPEG_APP0
 0xE0

	)

1159 
	#JPEG_COM
 0xFE

	)

1167 #ifde‡
INCOMPLETE_TYPES_BROKEN


1168 #i‚de‡
JPEG_INTERNALS


1169 
	sjvút_ßºay_c⁄åﬁ
 { 
dummy
; };

1170 
	sjvút_b¨øy_c⁄åﬁ
 { 
dummy
; };

1171 
	sj≥g_comp_ma°î
 { 
dummy
; };

1172 
	sj≥g_c_maö_c⁄åﬁÀr
 { 
dummy
; };

1173 
	sj≥g_c_¥ï_c⁄åﬁÀr
 { 
dummy
; };

1174 
	sj≥g_c_c€f_c⁄åﬁÀr
 { 
dummy
; };

1175 
	sj≥g_m¨kî_wrôî
 { 
dummy
; };

1176 
	sj≥g_cﬁ‹_c⁄vîãr
 { 
dummy
; };

1177 
	sj≥g_downßm∂î
 { 
dummy
; };

1178 
	sj≥g_f‹w¨d_d˘
 { 
dummy
; };

1179 
	sj≥g_íå›y_ícodî
 { 
dummy
; };

1180 
	sj≥g_decomp_ma°î
 { 
dummy
; };

1181 
	sj≥g_d_maö_c⁄åﬁÀr
 { 
dummy
; };

1182 
	sj≥g_d_c€f_c⁄åﬁÀr
 { 
dummy
; };

1183 
	sj≥g_d_po°_c⁄åﬁÀr
 { 
dummy
; };

1184 
	sj≥g_öput_c⁄åﬁÀr
 { 
dummy
; };

1185 
	sj≥g_m¨kî_ªadî
 { 
dummy
; };

1186 
	sj≥g_íå›y_decodî
 { 
dummy
; };

1187 
	sj≥g_övî£_d˘
 { 
dummy
; };

1188 
	sj≥g_upßm∂î
 { 
dummy
; };

1189 
	sj≥g_cﬁ‹_dec⁄vîãr
 { 
dummy
; };

1190 
	sj≥g_cﬁ‹_qu™tizî
 { 
dummy
; };

1202 #ifde‡
JPEG_INTERNALS


1203 
	~"j≥göt.h
"

1204 
	~"jîr‹.h
"

1207 #ifde‡
__˝lu•lus


1208 #i‚de‡
DONT_USE_EXTERN_C


	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/linux/time.h

1 #i‚de‡
_LINUX_TIME_H


2 
	#_LINUX_TIME_H


	)

4 
	~<löux/ty≥s.h
>

7 #i‚de‡
_STRUCT_TIMESPEC


8 
	#_STRUCT_TIMESPEC


	)

9 
	stime•ec
 {

10 
__kî√l_time_t
 
	mtv_£c
;

11 
	mtv_n£c
;

15 
	stimevÆ
 {

16 
__kî√l_time_t
 
	mtv_£c
;

17 
__kî√l_su£c⁄ds_t
 
	mtv_u£c
;

20 
	stimez⁄e
 {

21 
	mtz_möuãswe°
;

22 
	mtz_d°time
;

26 
	#NFDBITS
 
__NFDBITS


	)

28 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

29 
	#FD_SET
(
fd
,
fd£ç
Ë
	`__FD_SET
(fd,fd£ç)

	)

30 
	#FD_CLR
(
fd
,
fd£ç
Ë
	`__FD_CLR
(fd,fd£ç)

	)

31 
	#FD_ISSET
(
fd
,
fd£ç
Ë
	`__FD_ISSET
(fd,fd£ç)

	)

32 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
(fd£ç)

	)

38 
	#ITIMER_REAL
 0

	)

39 
	#ITIMER_VIRTUAL
 1

	)

40 
	#ITIMER_PROF
 2

	)

42 
	sôimî•ec
 {

43 
time•ec
 
	mô_öãrvÆ
;

44 
time•ec
 
	mô_vÆue
;

47 
	sôimîvÆ
 {

48 
timevÆ
 
	mô_öãrvÆ
;

49 
timevÆ
 
	mô_vÆue
;

55 
	#CLOCK_REALTIME
 0

	)

56 
	#CLOCK_MONOTONIC
 1

	)

57 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

58 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

59 
	#CLOCK_MONOTONIC_RAW
 4

	)

60 
	#CLOCK_REALTIME_COARSE
 5

	)

61 
	#CLOCK_MONOTONIC_COARSE
 6

	)

66 
	#CLOCK_SGI_CYCLE
 10

	)

67 
	#MAX_CLOCKS
 16

	)

68 
	#CLOCKS_MASK
 (
CLOCK_REALTIME
 | 
CLOCK_MONOTONIC
)

	)

69 
	#CLOCKS_MONO
 
CLOCK_MONOTONIC


	)

74 
	#TIMER_ABSTIME
 0x01

	)

	@/usr/include/linux/types.h

1 #i‚de‡
_LINUX_TYPES_H


2 
	#_LINUX_TYPES_H


	)

4 
	~<asm/ty≥s.h
>

6 #i‚de‡
__ASSEMBLY__


8 
	~<löux/posix_ty≥s.h
>

16 #ifde‡
__CHECKER__


17 
	#__bôwi£__
 
	`__©åibuã__
((
bôwi£
))

	)

19 
	#__bôwi£__


	)

21 #ifde‡
__CHECK_ENDIAN__


22 
	#__bôwi£
 
__bôwi£__


	)

24 
	#__bôwi£


	)

27 
__u16
 
	t__bôwi£
 
	t__À16
;

28 
__u16
 
	t__bôwi£
 
	t__be16
;

29 
__u32
 
	t__bôwi£
 
	t__À32
;

30 
__u32
 
	t__bôwi£
 
	t__be32
;

31 
__u64
 
	t__bôwi£
 
	t__À64
;

32 
__u64
 
	t__bôwi£
 
	t__be64
;

34 
__u16
 
	t__bôwi£
 
	t__sum16
;

35 
__u32
 
	t__bôwi£
 
	t__wsum
;

38 
	#__Æig√d_u64
 
__u64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

39 
	#__Æig√d_be64
 
__be64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

40 
	#__Æig√d_À64
 
__À64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

	@/usr/include/linux/version.h

1 
	#LINUX_VERSION_CODE
 132640

	)

2 
	#KERNEL_VERSION
(
a
,
b
,
c
Ë((◊Ë<< 16Ë+ ((bË<< 8Ë+ (c))

	)

3 
	#RHEL_MAJOR
 6

	)

4 
	#RHEL_MINOR
 5

	)

5 
	#RHEL_RELEASE_VERSION
(
a
,
b
Ë((◊Ë<< 8Ë+ (b))

	)

6 
	#RHEL_RELEASE_CODE
 1541

	)

7 
	#RHEL_RELEASE
 "430"

	)

	@/usr/include/linux/videodev.h

12 #i‚de‡
__LINUX_VIDEODEV_H


13 
	#__LINUX_VIDEODEV_H


	)

15 
	~<löux/ty≥s.h
>

16 
	~<löux/io˘l.h
>

17 
	~<löux/videodev2.h
>

20 
	#VID_TYPE_CAPTURE
 1

	)

21 
	#VID_TYPE_TUNER
 2

	)

22 
	#VID_TYPE_TELETEXT
 4

	)

23 
	#VID_TYPE_OVERLAY
 8

	)

24 
	#VID_TYPE_CHROMAKEY
 16

	)

25 
	#VID_TYPE_CLIPPING
 32

	)

26 
	#VID_TYPE_FRAMERAM
 64

	)

27 
	#VID_TYPE_SCALES
 128

	)

28 
	#VID_TYPE_MONOCHROME
 256

	)

29 
	#VID_TYPE_SUBCAPTURE
 512

	)

30 
	#VID_TYPE_MPEG_DECODER
 1024

	)

31 
	#VID_TYPE_MPEG_ENCODER
 2048

	)

32 
	#VID_TYPE_MJPEG_DECODER
 4096

	)

33 
	#VID_TYPE_MJPEG_ENCODER
 8192

	)

35 
	svideo_ˇ∑bûôy


37 
	m«me
[32];

38 
	mty≥
;

39 
	mch™√ls
;

40 
	maudios
;

41 
	mmaxwidth
;

42 
	mmaxheight
;

43 
	mmöwidth
;

44 
	mmöheight
;

48 
	svideo_ch™√l


50 
	mch™√l
;

51 
	m«me
[32];

52 
	mtu√rs
;

53 
__u32
 
	mÊags
;

54 
	#VIDEO_VC_TUNER
 1

	)

55 
	#VIDEO_VC_AUDIO
 2

	)

56 
__u16
 
	mty≥
;

57 
	#VIDEO_TYPE_TV
 1

	)

58 
	#VIDEO_TYPE_CAMERA
 2

	)

59 
__u16
 
	mn‹m
;

62 
	svideo_tu√r


64 
	mtu√r
;

65 
	m«me
[32];

66 
	møngñow
, 
	møngehigh
;

67 
__u32
 
	mÊags
;

68 
	#VIDEO_TUNER_PAL
 1

	)

69 
	#VIDEO_TUNER_NTSC
 2

	)

70 
	#VIDEO_TUNER_SECAM
 4

	)

71 
	#VIDEO_TUNER_LOW
 8

	)

72 
	#VIDEO_TUNER_NORM
 16

	)

73 
	#VIDEO_TUNER_STEREO_ON
 128

	)

74 
	#VIDEO_TUNER_RDS_ON
 256

	)

75 
	#VIDEO_TUNER_MBS_ON
 512

	)

76 
__u16
 
	mmode
;

77 
	#VIDEO_MODE_PAL
 0

	)

78 
	#VIDEO_MODE_NTSC
 1

	)

79 
	#VIDEO_MODE_SECAM
 2

	)

80 
	#VIDEO_MODE_AUTO
 3

	)

81 
__u16
 
	msig«l
;

84 
	svideo_pi˘uª


86 
__u16
 
	mbrighäess
;

87 
__u16
 
	mhue
;

88 
__u16
 
	mcﬁour
;

89 
__u16
 
	mc⁄åa°
;

90 
__u16
 
	mwhôíess
;

91 
__u16
 
	mdïth
;

92 
__u16
 
	m∑Àâe
;

93 
	#VIDEO_PALETTE_GREY
 1

	)

94 
	#VIDEO_PALETTE_HI240
 2

	)

95 
	#VIDEO_PALETTE_RGB565
 3

	)

96 
	#VIDEO_PALETTE_RGB24
 4

	)

97 
	#VIDEO_PALETTE_RGB32
 5

	)

98 
	#VIDEO_PALETTE_RGB555
 6

	)

99 
	#VIDEO_PALETTE_YUV422
 7

	)

100 
	#VIDEO_PALETTE_YUYV
 8

	)

101 
	#VIDEO_PALETTE_UYVY
 9

	)

102 
	#VIDEO_PALETTE_YUV420
 10

	)

103 
	#VIDEO_PALETTE_YUV411
 11

	)

104 
	#VIDEO_PALETTE_RAW
 12

	)

105 
	#VIDEO_PALETTE_YUV422P
 13

	)

106 
	#VIDEO_PALETTE_YUV411P
 14

	)

107 
	#VIDEO_PALETTE_YUV420P
 15

	)

108 
	#VIDEO_PALETTE_YUV410P
 16

	)

109 
	#VIDEO_PALETTE_PLANAR
 13

	)

110 
	#VIDEO_PALETTE_COMPONENT
 7

	)

113 
	svideo_audio


115 
	maudio
;

116 
__u16
 
	mvﬁume
;

117 
__u16
 
	mbass
, 
	måebÀ
;

118 
__u32
 
	mÊags
;

119 
	#VIDEO_AUDIO_MUTE
 1

	)

120 
	#VIDEO_AUDIO_MUTABLE
 2

	)

121 
	#VIDEO_AUDIO_VOLUME
 4

	)

122 
	#VIDEO_AUDIO_BASS
 8

	)

123 
	#VIDEO_AUDIO_TREBLE
 16

	)

124 
	#VIDEO_AUDIO_BALANCE
 32

	)

125 
	m«me
[16];

126 
	#VIDEO_SOUND_MONO
 1

	)

127 
	#VIDEO_SOUND_STEREO
 2

	)

128 
	#VIDEO_SOUND_LANG1
 4

	)

129 
	#VIDEO_SOUND_LANG2
 8

	)

130 
__u16
 
	mmode
;

131 
__u16
 
	mbÆ™˚
;

132 
__u16
 
	m°ï
;

135 
	svideo_˛ù


137 
__s32
 
	mx
,
	my
;

138 
__s32
 
	mwidth
, 
	mheight
;

139 
video_˛ù
 *
	m√xt
;

142 
	svideo_wödow


144 
__u32
 
	mx
,
	my
;

145 
__u32
 
	mwidth
,
	mheight
;

146 
__u32
 
	mchromakey
;

147 
__u32
 
	mÊags
;

148 
video_˛ù
 *
	m˛ùs
;

149 
	m˛ùcou¡
;

150 
	#VIDEO_WINDOW_INTERLACE
 1

	)

151 
	#VIDEO_WINDOW_CHROMAKEY
 16

	)

152 
	#VIDEO_CLIP_BITMAP
 -1

	)

154 
	#VIDEO_CLIPMAP_SIZE
 (128 * 625)

	)

157 
	svideo_ˇ±uª


159 
__u32
 
	mx
,
	my
;

160 
__u32
 
	mwidth
, 
	mheight
;

161 
__u16
 
	mdecim©i⁄
;

162 
__u16
 
	mÊags
;

163 
	#VIDEO_CAPTURE_ODD
 0

	)

164 
	#VIDEO_CAPTURE_EVEN
 1

	)

167 
	svideo_buf„r


169 *
	mba£
;

170 
	mheight
,
	mwidth
;

171 
	mdïth
;

172 
	mbyã•îlöe
;

175 
	svideo_mm≠


177 
	m‰ame
;

178 
	mheight
,
	mwidth
;

179 
	mf‹m©
;

182 
	svideo_key


184 
__u8
 
	mkey
[8];

185 
__u32
 
	mÊags
;

188 
	svideo_mbuf


190 
	msize
;

191 
	m‰ames
;

192 
	moff£ts
[
VIDEO_MAX_FRAME
];

195 
	#VIDEO_NO_UNIT
 (-1)

	)

197 
	svideo_unô


199 
	mvideo
;

200 
	mvbi
;

201 
	mødio
;

202 
	maudio
;

203 
	mãÀãxt
;

206 
	svbi_f‹m©
 {

207 
__u32
 
	mßm∂ög_øã
;

208 
__u32
 
	mßm∂es_≥r_löe
;

209 
__u32
 
	mßm∂e_f‹m©
;

210 
__s32
 
	m°¨t
[2];

211 
__u32
 
	mcou¡
[2];

212 
__u32
 
	mÊags
;

213 
	#VBI_UNSYNC
 1

	)

214 
	#VBI_INTERLACED
 2

	)

219 
	svideo_öfo


221 
__u32
 
	m‰ame_cou¡
;

222 
__u32
 
	mh_size
;

223 
__u32
 
	mv_size
;

224 
__u32
 
	msm±e_timecode
;

225 
__u32
 
	mpi˘uª_ty≥
;

226 
__u32
 
	mãmp‹Æ_ª„ªn˚
;

227 
__u8
 
	mu£r_d©a
[256];

232 
	svideo_∂ay_mode


234 
	mmode
;

235 
	mp1
;

236 
	mp2
;

240 
	svideo_code


242 
	mlﬂdwh©
[16];

243 
	md©asize
;

244 
__u8
 *
	md©a
;

247 
	#VIDIOCGCAP
 
	`_IOR
('v',1,
video_ˇ∑bûôy
Ë

	)

248 
	#VIDIOCGCHAN
 
	`_IOWR
('v',2,
video_ch™√l
Ë

	)

249 
	#VIDIOCSCHAN
 
	`_IOW
('v',3,
video_ch™√l
Ë

	)

250 
	#VIDIOCGTUNER
 
	`_IOWR
('v',4,
video_tu√r
Ë

	)

251 
	#VIDIOCSTUNER
 
	`_IOW
('v',5,
video_tu√r
Ë

	)

252 
	#VIDIOCGPICT
 
	`_IOR
('v',6,
video_pi˘uª
Ë

	)

253 
	#VIDIOCSPICT
 
	`_IOW
('v',7,
video_pi˘uª
Ë

	)

254 
	#VIDIOCCAPTURE
 
	`_IOW
('v',8,Ë

	)

255 
	#VIDIOCGWIN
 
	`_IOR
('v',9, 
video_wödow
Ë

	)

256 
	#VIDIOCSWIN
 
	`_IOW
('v',10, 
video_wödow
Ë

	)

257 
	#VIDIOCGFBUF
 
	`_IOR
('v',11, 
video_buf„r
Ë

	)

258 
	#VIDIOCSFBUF
 
	`_IOW
('v',12, 
video_buf„r
Ë

	)

259 
	#VIDIOCKEY
 
	`_IOR
('v',13, 
video_key
Ë

	)

260 
	#VIDIOCGFREQ
 
	`_IOR
('v',14, Ë

	)

261 
	#VIDIOCSFREQ
 
	`_IOW
('v',15, Ë

	)

262 
	#VIDIOCGAUDIO
 
	`_IOR
('v',16, 
video_audio
Ë

	)

263 
	#VIDIOCSAUDIO
 
	`_IOW
('v',17, 
video_audio
Ë

	)

264 
	#VIDIOCSYNC
 
	`_IOW
('v',18, Ë

	)

265 
	#VIDIOCMCAPTURE
 
	`_IOW
('v',19, 
video_mm≠
Ë

	)

266 
	#VIDIOCGMBUF
 
	`_IOR
('v',20, 
video_mbuf
Ë

	)

267 
	#VIDIOCGUNIT
 
	`_IOR
('v',21, 
video_unô
Ë

	)

268 
	#VIDIOCGCAPTURE
 
	`_IOR
('v',22, 
video_ˇ±uª
Ë

	)

269 
	#VIDIOCSCAPTURE
 
	`_IOW
('v',23, 
video_ˇ±uª
Ë

	)

270 
	#VIDIOCSPLAYMODE
 
	`_IOW
('v',24, 
video_∂ay_mode
Ë

	)

271 
	#VIDIOCSWRITEMODE
 
	`_IOW
('v',25, Ë

	)

272 
	#VIDIOCGPLAYINFO
 
	`_IOR
('v',26, 
video_öfo
Ë

	)

273 
	#VIDIOCSMICROCODE
 
	`_IOW
('v',27, 
video_code
Ë

	)

274 
	#VIDIOCGVBIFMT
 
	`_IOR
('v',28, 
vbi_f‹m©
Ë

	)

275 
	#VIDIOCSVBIFMT
 
	`_IOW
('v',29, 
vbi_f‹m©
Ë

	)

278 
	#BASE_VIDIOCPRIVATE
 192

	)

281 
	#VID_WRITE_MPEG_AUD
 0

	)

282 
	#VID_WRITE_MPEG_VID
 1

	)

283 
	#VID_WRITE_OSD
 2

	)

284 
	#VID_WRITE_TTX
 3

	)

285 
	#VID_WRITE_CC
 4

	)

286 
	#VID_WRITE_MJPEG
 5

	)

289 
	#VID_PLAY_VID_OUT_MODE
 0

	)

291 
	#VID_PLAY_GENLOCK
 1

	)

294 
	#VID_PLAY_NORMAL
 2

	)

295 
	#VID_PLAY_PAUSE
 3

	)

296 
	#VID_PLAY_SINGLE_FRAME
 4

	)

297 
	#VID_PLAY_FAST_FORWARD
 5

	)

298 
	#VID_PLAY_SLOW_MOTION
 6

	)

299 
	#VID_PLAY_IMMEDIATE_NORMAL
 7

	)

300 
	#VID_PLAY_SWITCH_CHANNELS
 8

	)

301 
	#VID_PLAY_FREEZE_FRAME
 9

	)

302 
	#VID_PLAY_STILL_MODE
 10

	)

303 
	#VID_PLAY_MASTER_MODE
 11

	)

305 
	#VID_PLAY_MASTER_NONE
 1

	)

306 
	#VID_PLAY_MASTER_VIDEO
 2

	)

307 
	#VID_PLAY_MASTER_AUDIO
 3

	)

308 
	#VID_PLAY_ACTIVE_SCANLINES
 12

	)

310 
	#VID_PLAY_RESET
 13

	)

311 
	#VID_PLAY_END_MARK
 14

	)

	@/usr/include/linux/videodev2.h

56 #i‚de‡
__LINUX_VIDEODEV2_H


57 
	#__LINUX_VIDEODEV2_H


	)

59 
	~<sys/time.h
>

61 
	~<löux/io˘l.h
>

62 
	~<löux/ty≥s.h
>

68 
	#VIDEO_MAX_FRAME
 32

	)

74 
	#VID_TYPE_CAPTURE
 1

	)

75 
	#VID_TYPE_TUNER
 2

	)

76 
	#VID_TYPE_TELETEXT
 4

	)

77 
	#VID_TYPE_OVERLAY
 8

	)

78 
	#VID_TYPE_CHROMAKEY
 16

	)

79 
	#VID_TYPE_CLIPPING
 32

	)

80 
	#VID_TYPE_FRAMERAM
 64

	)

81 
	#VID_TYPE_SCALES
 128

	)

82 
	#VID_TYPE_MONOCHROME
 256

	)

83 
	#VID_TYPE_SUBCAPTURE
 512

	)

84 
	#VID_TYPE_MPEG_DECODER
 1024

	)

85 
	#VID_TYPE_MPEG_ENCODER
 2048

	)

86 
	#VID_TYPE_MJPEG_DECODER
 4096

	)

87 
	#VID_TYPE_MJPEG_ENCODER
 8192

	)

94 
	#v4l2_fourcc
(
a
, 
b
, 
c
, 
d
)\

95 ((
__u32
)(
a
Ë| ((__u32)(
b
Ë<< 8Ë| ((__u32)(
c
Ë<< 16Ë| ((__u32)(
d
Ë<< 24))

	)

100 
	ev4l2_fõld
 {

101 
	mV4L2_FIELD_ANY
 = 0,

105 
	mV4L2_FIELD_NONE
 = 1,

106 
	mV4L2_FIELD_TOP
 = 2,

107 
	mV4L2_FIELD_BOTTOM
 = 3,

108 
	mV4L2_FIELD_INTERLACED
 = 4,

109 
	mV4L2_FIELD_SEQ_TB
 = 5,

111 
	mV4L2_FIELD_SEQ_BT
 = 6,

112 
	mV4L2_FIELD_ALTERNATE
 = 7,

114 
	mV4L2_FIELD_INTERLACED_TB
 = 8,

117 
	mV4L2_FIELD_INTERLACED_BT
 = 9,

121 
	#V4L2_FIELD_HAS_TOP
(
fõld
) \

122 ((
fõld
Ë=
V4L2_FIELD_TOP
 ||\

123 (
fõld
Ë=
V4L2_FIELD_INTERLACED
 ||\

124 (
fõld
Ë=
V4L2_FIELD_INTERLACED_TB
 ||\

125 (
fõld
Ë=
V4L2_FIELD_INTERLACED_BT
 ||\

126 (
fõld
Ë=
V4L2_FIELD_SEQ_TB
 ||\

127 (
fõld
Ë=
V4L2_FIELD_SEQ_BT
)

	)

128 
	#V4L2_FIELD_HAS_BOTTOM
(
fõld
) \

129 ((
fõld
Ë=
V4L2_FIELD_BOTTOM
 ||\

130 (
fõld
Ë=
V4L2_FIELD_INTERLACED
 ||\

131 (
fõld
Ë=
V4L2_FIELD_INTERLACED_TB
 ||\

132 (
fõld
Ë=
V4L2_FIELD_INTERLACED_BT
 ||\

133 (
fõld
Ë=
V4L2_FIELD_SEQ_TB
 ||\

134 (
fõld
Ë=
V4L2_FIELD_SEQ_BT
)

	)

135 
	#V4L2_FIELD_HAS_BOTH
(
fõld
) \

136 ((
fõld
Ë=
V4L2_FIELD_INTERLACED
 ||\

137 (
fõld
Ë=
V4L2_FIELD_INTERLACED_TB
 ||\

138 (
fõld
Ë=
V4L2_FIELD_INTERLACED_BT
 ||\

139 (
fõld
Ë=
V4L2_FIELD_SEQ_TB
 ||\

140 (
fõld
Ë=
V4L2_FIELD_SEQ_BT
)

	)

142 
	ev4l2_buf_ty≥
 {

143 
	mV4L2_BUF_TYPE_VIDEO_CAPTURE
 = 1,

144 
	mV4L2_BUF_TYPE_VIDEO_OUTPUT
 = 2,

145 
	mV4L2_BUF_TYPE_VIDEO_OVERLAY
 = 3,

146 
	mV4L2_BUF_TYPE_VBI_CAPTURE
 = 4,

147 
	mV4L2_BUF_TYPE_VBI_OUTPUT
 = 5,

148 
	mV4L2_BUF_TYPE_SLICED_VBI_CAPTURE
 = 6,

149 
	mV4L2_BUF_TYPE_SLICED_VBI_OUTPUT
 = 7,

152 
	mV4L2_BUF_TYPE_VIDEO_OUTPUT_OVERLAY
 = 8,

154 
	mV4L2_BUF_TYPE_PRIVATE
 = 0x80,

157 
	ev4l2_tu√r_ty≥
 {

158 
	mV4L2_TUNER_RADIO
 = 1,

159 
	mV4L2_TUNER_ANALOG_TV
 = 2,

160 
	mV4L2_TUNER_DIGITAL_TV
 = 3,

163 
	ev4l2_mem‹y
 {

164 
	mV4L2_MEMORY_MMAP
 = 1,

165 
	mV4L2_MEMORY_USERPTR
 = 2,

166 
	mV4L2_MEMORY_OVERLAY
 = 3,

170 
	ev4l2_cﬁ‹•a˚
 {

172 
	mV4L2_COLORSPACE_SMPTE170M
 = 1,

175 
	mV4L2_COLORSPACE_SMPTE240M
 = 2,

178 
	mV4L2_COLORSPACE_REC709
 = 3,

181 
	mV4L2_COLORSPACE_BT878
 = 4,

184 
	mV4L2_COLORSPACE_470_SYSTEM_M
 = 5,

185 
	mV4L2_COLORSPACE_470_SYSTEM_BG
 = 6,

191 
	mV4L2_COLORSPACE_JPEG
 = 7,

194 
	mV4L2_COLORSPACE_SRGB
 = 8,

197 
	ev4l2_¥i‹ôy
 {

198 
	mV4L2_PRIORITY_UNSET
 = 0,

199 
	mV4L2_PRIORITY_BACKGROUND
 = 1,

200 
	mV4L2_PRIORITY_INTERACTIVE
 = 2,

201 
	mV4L2_PRIORITY_RECORD
 = 3,

202 
	mV4L2_PRIORITY_DEFAULT
 = 
V4L2_PRIORITY_INTERACTIVE
,

205 
	sv4l2_ª˘
 {

206 
__s32
 
	mÀ·
;

207 
__s32
 
	mt›
;

208 
__s32
 
	mwidth
;

209 
__s32
 
	mheight
;

212 
	sv4l2_‰a˘
 {

213 
__u32
 
	mnumî©‹
;

214 
__u32
 
	mdíomö©‹
;

220 
	sv4l2_ˇ∑bûôy
 {

221 
__u8
 
	mdrivî
[16];

222 
__u8
 
	mˇrd
[32];

223 
__u8
 
	mbus_öfo
[32];

224 
__u32
 
	mvîsi⁄
;

225 
__u32
 
	mˇ∑bûôõs
;

226 
__u32
 
	mª£rved
[4];

230 
	#V4L2_CAP_VIDEO_CAPTURE
 0x00000001

	)

231 
	#V4L2_CAP_VIDEO_OUTPUT
 0x00000002

	)

232 
	#V4L2_CAP_VIDEO_OVERLAY
 0x00000004

	)

233 
	#V4L2_CAP_VBI_CAPTURE
 0x00000010

	)

234 
	#V4L2_CAP_VBI_OUTPUT
 0x00000020

	)

235 
	#V4L2_CAP_SLICED_VBI_CAPTURE
 0x00000040

	)

236 
	#V4L2_CAP_SLICED_VBI_OUTPUT
 0x00000080

	)

237 
	#V4L2_CAP_RDS_CAPTURE
 0x00000100

	)

238 
	#V4L2_CAP_VIDEO_OUTPUT_OVERLAY
 0x00000200

	)

239 
	#V4L2_CAP_HW_FREQ_SEEK
 0x00000400

	)

240 
	#V4L2_CAP_RDS_OUTPUT
 0x00000800

	)

242 
	#V4L2_CAP_TUNER
 0x00010000

	)

243 
	#V4L2_CAP_AUDIO
 0x00020000

	)

244 
	#V4L2_CAP_RADIO
 0x00040000

	)

245 
	#V4L2_CAP_MODULATOR
 0x00080000

	)

247 
	#V4L2_CAP_READWRITE
 0x01000000

	)

248 
	#V4L2_CAP_ASYNCIO
 0x02000000

	)

249 
	#V4L2_CAP_STREAMING
 0x04000000

	)

254 
	sv4l2_pix_f‹m©
 {

255 
__u32
 
	mwidth
;

256 
__u32
 
	mheight
;

257 
__u32
 
	mpixñf‹m©
;

258 
v4l2_fõld
 
	mfõld
;

259 
__u32
 
	mbyã•îlöe
;

260 
__u32
 
	msizeimage
;

261 
v4l2_cﬁ‹•a˚
 
	mcﬁ‹•a˚
;

262 
__u32
 
	m¥iv
;

268 
	#V4L2_PIX_FMT_RGB332
 
	`v4l2_fourcc
('R', 'G', 'B', '1'Ë

	)

269 
	#V4L2_PIX_FMT_RGB444
 
	`v4l2_fourcc
('R', '4', '4', '4'Ë

	)

270 
	#V4L2_PIX_FMT_RGB555
 
	`v4l2_fourcc
('R', 'G', 'B', 'O'Ë

	)

271 
	#V4L2_PIX_FMT_RGB565
 
	`v4l2_fourcc
('R', 'G', 'B', 'P'Ë

	)

272 
	#V4L2_PIX_FMT_RGB555X
 
	`v4l2_fourcc
('R', 'G', 'B', 'Q'Ë

	)

273 
	#V4L2_PIX_FMT_RGB565X
 
	`v4l2_fourcc
('R', 'G', 'B', 'R'Ë

	)

274 
	#V4L2_PIX_FMT_BGR666
 
	`v4l2_fourcc
('B', 'G', 'R', 'H'Ë

	)

275 
	#V4L2_PIX_FMT_BGR24
 
	`v4l2_fourcc
('B', 'G', 'R', '3'Ë

	)

276 
	#V4L2_PIX_FMT_RGB24
 
	`v4l2_fourcc
('R', 'G', 'B', '3'Ë

	)

277 
	#V4L2_PIX_FMT_BGR32
 
	`v4l2_fourcc
('B', 'G', 'R', '4'Ë

	)

278 
	#V4L2_PIX_FMT_RGB32
 
	`v4l2_fourcc
('R', 'G', 'B', '4'Ë

	)

281 
	#V4L2_PIX_FMT_GREY
 
	`v4l2_fourcc
('G', 'R', 'E', 'Y'Ë

	)

282 
	#V4L2_PIX_FMT_Y4
 
	`v4l2_fourcc
('Y', '0', '4', ' 'Ë

	)

283 
	#V4L2_PIX_FMT_Y6
 
	`v4l2_fourcc
('Y', '0', '6', ' 'Ë

	)

284 
	#V4L2_PIX_FMT_Y10
 
	`v4l2_fourcc
('Y', '1', '0', ' 'Ë

	)

285 
	#V4L2_PIX_FMT_Y16
 
	`v4l2_fourcc
('Y', '1', '6', ' 'Ë

	)

288 
	#V4L2_PIX_FMT_PAL8
 
	`v4l2_fourcc
('P', 'A', 'L', '8'Ë

	)

291 
	#V4L2_PIX_FMT_YVU410
 
	`v4l2_fourcc
('Y', 'V', 'U', '9'Ë

	)

292 
	#V4L2_PIX_FMT_YVU420
 
	`v4l2_fourcc
('Y', 'V', '1', '2'Ë

	)

293 
	#V4L2_PIX_FMT_YUYV
 
	`v4l2_fourcc
('Y', 'U', 'Y', 'V'Ë

	)

294 
	#V4L2_PIX_FMT_YYUV
 
	`v4l2_fourcc
('Y', 'Y', 'U', 'V'Ë

	)

295 
	#V4L2_PIX_FMT_YVYU
 
	`v4l2_fourcc
('Y', 'V', 'Y', 'U'Ë

	)

296 
	#V4L2_PIX_FMT_UYVY
 
	`v4l2_fourcc
('U', 'Y', 'V', 'Y'Ë

	)

297 
	#V4L2_PIX_FMT_VYUY
 
	`v4l2_fourcc
('V', 'Y', 'U', 'Y'Ë

	)

298 
	#V4L2_PIX_FMT_YUV422P
 
	`v4l2_fourcc
('4', '2', '2', 'P'Ë

	)

299 
	#V4L2_PIX_FMT_YUV411P
 
	`v4l2_fourcc
('4', '1', '1', 'P'Ë

	)

300 
	#V4L2_PIX_FMT_Y41P
 
	`v4l2_fourcc
('Y', '4', '1', 'P'Ë

	)

301 
	#V4L2_PIX_FMT_YUV444
 
	`v4l2_fourcc
('Y', '4', '4', '4'Ë

	)

302 
	#V4L2_PIX_FMT_YUV555
 
	`v4l2_fourcc
('Y', 'U', 'V', 'O'Ë

	)

303 
	#V4L2_PIX_FMT_YUV565
 
	`v4l2_fourcc
('Y', 'U', 'V', 'P'Ë

	)

304 
	#V4L2_PIX_FMT_YUV32
 
	`v4l2_fourcc
('Y', 'U', 'V', '4'Ë

	)

305 
	#V4L2_PIX_FMT_YUV410
 
	`v4l2_fourcc
('Y', 'U', 'V', '9'Ë

	)

306 
	#V4L2_PIX_FMT_YUV420
 
	`v4l2_fourcc
('Y', 'U', '1', '2'Ë

	)

307 
	#V4L2_PIX_FMT_HI240
 
	`v4l2_fourcc
('H', 'I', '2', '4'Ë

	)

308 
	#V4L2_PIX_FMT_HM12
 
	`v4l2_fourcc
('H', 'M', '1', '2'Ë

	)

311 
	#V4L2_PIX_FMT_NV12
 
	`v4l2_fourcc
('N', 'V', '1', '2'Ë

	)

312 
	#V4L2_PIX_FMT_NV21
 
	`v4l2_fourcc
('N', 'V', '2', '1'Ë

	)

313 
	#V4L2_PIX_FMT_NV16
 
	`v4l2_fourcc
('N', 'V', '1', '6'Ë

	)

314 
	#V4L2_PIX_FMT_NV61
 
	`v4l2_fourcc
('N', 'V', '6', '1'Ë

	)

317 
	#V4L2_PIX_FMT_SBGGR8
 
	`v4l2_fourcc
('B', 'A', '8', '1'Ë

	)

318 
	#V4L2_PIX_FMT_SGBRG8
 
	`v4l2_fourcc
('G', 'B', 'R', 'G'Ë

	)

319 
	#V4L2_PIX_FMT_SGRBG8
 
	`v4l2_fourcc
('G', 'R', 'B', 'G'Ë

	)

320 
	#V4L2_PIX_FMT_SRGGB8
 
	`v4l2_fourcc
('R', 'G', 'G', 'B'Ë

	)

321 
	#V4L2_PIX_FMT_SBGGR10
 
	`v4l2_fourcc
('B', 'G', '1', '0'Ë

	)

322 
	#V4L2_PIX_FMT_SGBRG10
 
	`v4l2_fourcc
('G', 'B', '1', '0'Ë

	)

323 
	#V4L2_PIX_FMT_SGRBG10
 
	`v4l2_fourcc
('B', 'A', '1', '0'Ë

	)

324 
	#V4L2_PIX_FMT_SRGGB10
 
	`v4l2_fourcc
('R', 'G', '1', '0'Ë

	)

326 
	#V4L2_PIX_FMT_SGRBG10DPCM8
 
	`v4l2_fourcc
('B', 'D', '1', '0')

	)

331 
	#V4L2_PIX_FMT_SBGGR16
 
	`v4l2_fourcc
('B', 'Y', 'R', '2'Ë

	)

334 
	#V4L2_PIX_FMT_MJPEG
 
	`v4l2_fourcc
('M', 'J', 'P', 'G'Ë

	)

335 
	#V4L2_PIX_FMT_JPEG
 
	`v4l2_fourcc
('J', 'P', 'E', 'G'Ë

	)

336 
	#V4L2_PIX_FMT_DV
 
	`v4l2_fourcc
('d', 'v', 's', 'd'Ë

	)

337 
	#V4L2_PIX_FMT_MPEG
 
	`v4l2_fourcc
('M', 'P', 'E', 'G'Ë

	)

340 
	#V4L2_PIX_FMT_CPIA1
 
	`v4l2_fourcc
('C', 'P', 'I', 'A'Ë

	)

341 
	#V4L2_PIX_FMT_WNVA
 
	`v4l2_fourcc
('W', 'N', 'V', 'A'Ë

	)

342 
	#V4L2_PIX_FMT_SN9C10X
 
	`v4l2_fourcc
('S', '9', '1', '0'Ë

	)

343 
	#V4L2_PIX_FMT_SN9C20X_I420
 
	`v4l2_fourcc
('S', '9', '2', '0'Ë

	)

344 
	#V4L2_PIX_FMT_PWC1
 
	`v4l2_fourcc
('P', 'W', 'C', '1'Ë

	)

345 
	#V4L2_PIX_FMT_PWC2
 
	`v4l2_fourcc
('P', 'W', 'C', '2'Ë

	)

346 
	#V4L2_PIX_FMT_ET61X251
 
	`v4l2_fourcc
('E', '6', '2', '5'Ë

	)

347 
	#V4L2_PIX_FMT_SPCA501
 
	`v4l2_fourcc
('S', '5', '0', '1'Ë

	)

348 
	#V4L2_PIX_FMT_SPCA505
 
	`v4l2_fourcc
('S', '5', '0', '5'Ë

	)

349 
	#V4L2_PIX_FMT_SPCA508
 
	`v4l2_fourcc
('S', '5', '0', '8'Ë

	)

350 
	#V4L2_PIX_FMT_SPCA561
 
	`v4l2_fourcc
('S', '5', '6', '1'Ë

	)

351 
	#V4L2_PIX_FMT_PAC207
 
	`v4l2_fourcc
('P', '2', '0', '7'Ë

	)

352 
	#V4L2_PIX_FMT_MR97310A
 
	`v4l2_fourcc
('M', '3', '1', '0'Ë

	)

353 
	#V4L2_PIX_FMT_SN9C2028
 
	`v4l2_fourcc
('S', 'O', 'N', 'X'Ë

	)

354 
	#V4L2_PIX_FMT_SQ905C
 
	`v4l2_fourcc
('9', '0', '5', 'C'Ë

	)

355 
	#V4L2_PIX_FMT_PJPG
 
	`v4l2_fourcc
('P', 'J', 'P', 'G'Ë

	)

356 
	#V4L2_PIX_FMT_OV511
 
	`v4l2_fourcc
('O', '5', '1', '1'Ë

	)

357 
	#V4L2_PIX_FMT_OV518
 
	`v4l2_fourcc
('O', '5', '1', '8'Ë

	)

358 
	#V4L2_PIX_FMT_STV0680
 
	`v4l2_fourcc
('S', '6', '8', '0'Ë

	)

359 
	#V4L2_PIX_FMT_TM6000
 
	`v4l2_fourcc
('T', 'M', '6', '0'Ë

	)

360 
	#V4L2_PIX_FMT_CIT_YYVYUY
 
	`v4l2_fourcc
('C', 'I', 'T', 'V'Ë

	)

361 
	#V4L2_PIX_FMT_KONICA420
 
	`v4l2_fourcc
('K', 'O', 'N', 'I'Ë

	)

366 
	sv4l2_fmtdesc
 {

367 
__u32
 
	mödex
;

368 
v4l2_buf_ty≥
 
	mty≥
;

369 
__u32
 
	mÊags
;

370 
__u8
 
	mdes¸ùti⁄
[32];

371 
__u32
 
	mpixñf‹m©
;

372 
__u32
 
	mª£rved
[4];

375 
	#V4L2_FMT_FLAG_COMPRESSED
 0x0001

	)

376 
	#V4L2_FMT_FLAG_EMULATED
 0x0002

	)

383 
	ev4l2_‰msizëy≥s
 {

384 
	mV4L2_FRMSIZE_TYPE_DISCRETE
 = 1,

385 
	mV4L2_FRMSIZE_TYPE_CONTINUOUS
 = 2,

386 
	mV4L2_FRMSIZE_TYPE_STEPWISE
 = 3,

389 
	sv4l2_‰msize_dis¸ëe
 {

390 
__u32
 
	mwidth
;

391 
__u32
 
	mheight
;

394 
	sv4l2_‰msize_°ïwi£
 {

395 
__u32
 
	mmö_width
;

396 
__u32
 
	mmax_width
;

397 
__u32
 
	m°ï_width
;

398 
__u32
 
	mmö_height
;

399 
__u32
 
	mmax_height
;

400 
__u32
 
	m°ï_height
;

403 
	sv4l2_‰msizìnum
 {

404 
__u32
 
	mödex
;

405 
__u32
 
	mpixñ_f‹m©
;

406 
__u32
 
	mty≥
;

409 
v4l2_‰msize_dis¸ëe
 
	mdis¸ëe
;

410 
v4l2_‰msize_°ïwi£
 
	m°ïwi£
;

413 
__u32
 
	mª£rved
[2];

419 
	ev4l2_‰mivÆty≥s
 {

420 
	mV4L2_FRMIVAL_TYPE_DISCRETE
 = 1,

421 
	mV4L2_FRMIVAL_TYPE_CONTINUOUS
 = 2,

422 
	mV4L2_FRMIVAL_TYPE_STEPWISE
 = 3,

425 
	sv4l2_‰mivÆ_°ïwi£
 {

426 
v4l2_‰a˘
 
	mmö
;

427 
v4l2_‰a˘
 
	mmax
;

428 
v4l2_‰a˘
 
	m°ï
;

431 
	sv4l2_‰mivÆíum
 {

432 
__u32
 
	mödex
;

433 
__u32
 
	mpixñ_f‹m©
;

434 
__u32
 
	mwidth
;

435 
__u32
 
	mheight
;

436 
__u32
 
	mty≥
;

439 
v4l2_‰a˘
 
	mdis¸ëe
;

440 
v4l2_‰mivÆ_°ïwi£
 
	m°ïwi£
;

443 
__u32
 
	mª£rved
[2];

450 
	sv4l2_timecode
 {

451 
__u32
 
	mty≥
;

452 
__u32
 
	mÊags
;

453 
__u8
 
	m‰ames
;

454 
__u8
 
	m£c⁄ds
;

455 
__u8
 
	mmöuãs
;

456 
__u8
 
	mhours
;

457 
__u8
 
	mu£rbôs
[4];

461 
	#V4L2_TC_TYPE_24FPS
 1

	)

462 
	#V4L2_TC_TYPE_25FPS
 2

	)

463 
	#V4L2_TC_TYPE_30FPS
 3

	)

464 
	#V4L2_TC_TYPE_50FPS
 4

	)

465 
	#V4L2_TC_TYPE_60FPS
 5

	)

468 
	#V4L2_TC_FLAG_DROPFRAME
 0x0001

	)

469 
	#V4L2_TC_FLAG_COLORFRAME
 0x0002

	)

470 
	#V4L2_TC_USERBITS_fõld
 0x000C

	)

471 
	#V4L2_TC_USERBITS_USERDEFINED
 0x0000

	)

472 
	#V4L2_TC_USERBITS_8BITCHARS
 0x0008

	)

475 
	sv4l2_j≥gcom¥essi⁄
 {

476 
	mquÆôy
;

478 
	mAPPn
;

480 
	mAPP_Àn
;

481 
	mAPP_d©a
[60];

483 
	mCOM_Àn
;

484 
	mCOM_d©a
[60];

486 
__u32
 
	mj≥g_m¨kîs
;

496 
	#V4L2_JPEG_MARKER_DHT
 (1<<3Ë

	)

497 
	#V4L2_JPEG_MARKER_DQT
 (1<<4Ë

	)

498 
	#V4L2_JPEG_MARKER_DRI
 (1<<5Ë

	)

499 
	#V4L2_JPEG_MARKER_COM
 (1<<6Ë

	)

500 
	#V4L2_JPEG_MARKER_APP
 (1<<7Ë

	)

507 
	sv4l2_ªque°buf„rs
 {

508 
__u32
 
	mcou¡
;

509 
v4l2_buf_ty≥
 
	mty≥
;

510 
v4l2_mem‹y
 
	mmem‹y
;

511 
__u32
 
	mª£rved
[2];

514 
	sv4l2_buf„r
 {

515 
__u32
 
	mödex
;

516 
v4l2_buf_ty≥
 
	mty≥
;

517 
__u32
 
	mbyãsu£d
;

518 
__u32
 
	mÊags
;

519 
v4l2_fõld
 
	mfõld
;

520 
timevÆ
 
	mtime°amp
;

521 
v4l2_timecode
 
	mtimecode
;

522 
__u32
 
	m£quí˚
;

525 
v4l2_mem‹y
 
	mmem‹y
;

527 
__u32
 
	moff£t
;

528 
	mu£Ωå
;

529 } 
	mm
;

530 
__u32
 
	mÀngth
;

531 
__u32
 
	möput
;

532 
__u32
 
	mª£rved
;

536 
	#V4L2_BUF_FLAG_MAPPED
 0x0001

	)

537 
	#V4L2_BUF_FLAG_QUEUED
 0x0002

	)

538 
	#V4L2_BUF_FLAG_DONE
 0x0004

	)

539 
	#V4L2_BUF_FLAG_KEYFRAME
 0x0008

	)

540 
	#V4L2_BUF_FLAG_PFRAME
 0x0010

	)

541 
	#V4L2_BUF_FLAG_BFRAME
 0x0020

	)

543 
	#V4L2_BUF_FLAG_ERROR
 0x0040

	)

544 
	#V4L2_BUF_FLAG_TIMECODE
 0x0100

	)

545 
	#V4L2_BUF_FLAG_INPUT
 0x0200

	)

550 
	sv4l2_‰amebuf„r
 {

551 
__u32
 
	mˇ∑bûôy
;

552 
__u32
 
	mÊags
;

555 *
	mba£
;

556 
v4l2_pix_f‹m©
 
	mfmt
;

559 
	#V4L2_FBUF_CAP_EXTERNOVERLAY
 0x0001

	)

560 
	#V4L2_FBUF_CAP_CHROMAKEY
 0x0002

	)

561 
	#V4L2_FBUF_CAP_LIST_CLIPPING
 0x0004

	)

562 
	#V4L2_FBUF_CAP_BITMAP_CLIPPING
 0x0008

	)

563 
	#V4L2_FBUF_CAP_LOCAL_ALPHA
 0x0010

	)

564 
	#V4L2_FBUF_CAP_GLOBAL_ALPHA
 0x0020

	)

565 
	#V4L2_FBUF_CAP_LOCAL_INV_ALPHA
 0x0040

	)

566 
	#V4L2_FBUF_CAP_SRC_CHROMAKEY
 0x0080

	)

568 
	#V4L2_FBUF_FLAG_PRIMARY
 0x0001

	)

569 
	#V4L2_FBUF_FLAG_OVERLAY
 0x0002

	)

570 
	#V4L2_FBUF_FLAG_CHROMAKEY
 0x0004

	)

571 
	#V4L2_FBUF_FLAG_LOCAL_ALPHA
 0x0008

	)

572 
	#V4L2_FBUF_FLAG_GLOBAL_ALPHA
 0x0010

	)

573 
	#V4L2_FBUF_FLAG_LOCAL_INV_ALPHA
 0x0020

	)

574 
	#V4L2_FBUF_FLAG_SRC_CHROMAKEY
 0x0040

	)

576 
	sv4l2_˛ù
 {

577 
v4l2_ª˘
 
	mc
;

578 
v4l2_˛ù
 *
	m√xt
;

581 
	sv4l2_wödow
 {

582 
v4l2_ª˘
 
	mw
;

583 
v4l2_fõld
 
	mfõld
;

584 
__u32
 
	mchromakey
;

585 
v4l2_˛ù
 *
	m˛ùs
;

586 
__u32
 
	m˛ùcou¡
;

587 *
	mbôm≠
;

588 
__u8
 
	mglobÆ_Æpha
;

594 
	sv4l2_ˇ±uª∑rm
 {

595 
__u32
 
	mˇ∑bûôy
;

596 
__u32
 
	mˇ±uªmode
;

597 
v4l2_‰a˘
 
	mtimïî‰ame
;

598 
__u32
 
	mexãndedmode
;

599 
__u32
 
	mªadbuf„rs
;

600 
__u32
 
	mª£rved
[4];

604 
	#V4L2_MODE_HIGHQUALITY
 0x0001

	)

605 
	#V4L2_CAP_TIMEPERFRAME
 0x1000

	)

607 
	sv4l2_ouçuç¨m
 {

608 
__u32
 
	mˇ∑bûôy
;

609 
__u32
 
	mouçutmode
;

610 
v4l2_‰a˘
 
	mtimïî‰ame
;

611 
__u32
 
	mexãndedmode
;

612 
__u32
 
	mwrôebuf„rs
;

613 
__u32
 
	mª£rved
[4];

619 
	sv4l2_¸›ˇp
 {

620 
v4l2_buf_ty≥
 
	mty≥
;

621 
v4l2_ª˘
 
	mbounds
;

622 
v4l2_ª˘
 
	mde‰e˘
;

623 
v4l2_‰a˘
 
	mpixña•e˘
;

626 
	sv4l2_¸›
 {

627 
v4l2_buf_ty≥
 
	mty≥
;

628 
v4l2_ª˘
 
	mc
;

635 
__u64
 
	tv4l2_°d_id
;

638 
	#V4L2_STD_PAL_B
 ((
v4l2_°d_id
)0x00000001)

	)

639 
	#V4L2_STD_PAL_B1
 ((
v4l2_°d_id
)0x00000002)

	)

640 
	#V4L2_STD_PAL_G
 ((
v4l2_°d_id
)0x00000004)

	)

641 
	#V4L2_STD_PAL_H
 ((
v4l2_°d_id
)0x00000008)

	)

642 
	#V4L2_STD_PAL_I
 ((
v4l2_°d_id
)0x00000010)

	)

643 
	#V4L2_STD_PAL_D
 ((
v4l2_°d_id
)0x00000020)

	)

644 
	#V4L2_STD_PAL_D1
 ((
v4l2_°d_id
)0x00000040)

	)

645 
	#V4L2_STD_PAL_K
 ((
v4l2_°d_id
)0x00000080)

	)

647 
	#V4L2_STD_PAL_M
 ((
v4l2_°d_id
)0x00000100)

	)

648 
	#V4L2_STD_PAL_N
 ((
v4l2_°d_id
)0x00000200)

	)

649 
	#V4L2_STD_PAL_Nc
 ((
v4l2_°d_id
)0x00000400)

	)

650 
	#V4L2_STD_PAL_60
 ((
v4l2_°d_id
)0x00000800)

	)

652 
	#V4L2_STD_NTSC_M
 ((
v4l2_°d_id
)0x00001000)

	)

653 
	#V4L2_STD_NTSC_M_JP
 ((
v4l2_°d_id
)0x00002000)

	)

654 
	#V4L2_STD_NTSC_443
 ((
v4l2_°d_id
)0x00004000)

	)

655 
	#V4L2_STD_NTSC_M_KR
 ((
v4l2_°d_id
)0x00008000)

	)

657 
	#V4L2_STD_SECAM_B
 ((
v4l2_°d_id
)0x00010000)

	)

658 
	#V4L2_STD_SECAM_D
 ((
v4l2_°d_id
)0x00020000)

	)

659 
	#V4L2_STD_SECAM_G
 ((
v4l2_°d_id
)0x00040000)

	)

660 
	#V4L2_STD_SECAM_H
 ((
v4l2_°d_id
)0x00080000)

	)

661 
	#V4L2_STD_SECAM_K
 ((
v4l2_°d_id
)0x00100000)

	)

662 
	#V4L2_STD_SECAM_K1
 ((
v4l2_°d_id
)0x00200000)

	)

663 
	#V4L2_STD_SECAM_L
 ((
v4l2_°d_id
)0x00400000)

	)

664 
	#V4L2_STD_SECAM_LC
 ((
v4l2_°d_id
)0x00800000)

	)

667 
	#V4L2_STD_ATSC_8_VSB
 ((
v4l2_°d_id
)0x01000000)

	)

668 
	#V4L2_STD_ATSC_16_VSB
 ((
v4l2_°d_id
)0x02000000)

	)

680 
	#V4L2_STD_MN
 (
V4L2_STD_PAL_M
|
V4L2_STD_PAL_N
|
V4L2_STD_PAL_Nc
|
V4L2_STD_NTSC
)

	)

681 
	#V4L2_STD_B
 (
V4L2_STD_PAL_B
|
V4L2_STD_PAL_B1
|
V4L2_STD_SECAM_B
)

	)

682 
	#V4L2_STD_GH
 (
V4L2_STD_PAL_G
|
V4L2_STD_PAL_H
|
V4L2_STD_SECAM_G
|
V4L2_STD_SECAM_H
)

	)

683 
	#V4L2_STD_DK
 (
V4L2_STD_PAL_DK
|
V4L2_STD_SECAM_DK
)

	)

686 
	#V4L2_STD_PAL_BG
 (
V4L2_STD_PAL_B
 |\

687 
V4L2_STD_PAL_B1
 |\

688 
V4L2_STD_PAL_G
)

	)

689 
	#V4L2_STD_PAL_DK
 (
V4L2_STD_PAL_D
 |\

690 
V4L2_STD_PAL_D1
 |\

691 
V4L2_STD_PAL_K
)

	)

692 
	#V4L2_STD_PAL
 (
V4L2_STD_PAL_BG
 |\

693 
V4L2_STD_PAL_DK
 |\

694 
V4L2_STD_PAL_H
 |\

695 
V4L2_STD_PAL_I
)

	)

696 
	#V4L2_STD_NTSC
 (
V4L2_STD_NTSC_M
 |\

697 
V4L2_STD_NTSC_M_JP
 |\

698 
V4L2_STD_NTSC_M_KR
)

	)

699 
	#V4L2_STD_SECAM_DK
 (
V4L2_STD_SECAM_D
 |\

700 
V4L2_STD_SECAM_K
 |\

701 
V4L2_STD_SECAM_K1
)

	)

702 
	#V4L2_STD_SECAM
 (
V4L2_STD_SECAM_B
 |\

703 
V4L2_STD_SECAM_G
 |\

704 
V4L2_STD_SECAM_H
 |\

705 
V4L2_STD_SECAM_DK
 |\

706 
V4L2_STD_SECAM_L
 |\

707 
V4L2_STD_SECAM_LC
)

	)

709 
	#V4L2_STD_525_60
 (
V4L2_STD_PAL_M
 |\

710 
V4L2_STD_PAL_60
 |\

711 
V4L2_STD_NTSC
 |\

712 
V4L2_STD_NTSC_443
)

	)

713 
	#V4L2_STD_625_50
 (
V4L2_STD_PAL
 |\

714 
V4L2_STD_PAL_N
 |\

715 
V4L2_STD_PAL_Nc
 |\

716 
V4L2_STD_SECAM
)

	)

717 
	#V4L2_STD_ATSC
 (
V4L2_STD_ATSC_8_VSB
 |\

718 
V4L2_STD_ATSC_16_VSB
)

	)

720 
	#V4L2_STD_UNKNOWN
 0

	)

721 
	#V4L2_STD_ALL
 (
V4L2_STD_525_60
 |\

722 
V4L2_STD_625_50
)

	)

724 
	sv4l2_°™d¨d
 {

725 
__u32
 
	mödex
;

726 
v4l2_°d_id
 
	mid
;

727 
__u8
 
	m«me
[24];

728 
v4l2_‰a˘
 
	m‰amïîiod
;

729 
__u32
 
	m‰amñöes
;

730 
__u32
 
	mª£rved
[4];

736 
	sv4l2_dv_¥e£t
 {

737 
__u32
 
	m¥e£t
;

738 
__u32
 
	mª£rved
[4];

744 
	sv4l2_dv_íum_¥e£t
 {

745 
__u32
 
	mödex
;

746 
__u32
 
	m¥e£t
;

747 
__u8
 
	m«me
[32];

748 
__u32
 
	mwidth
;

749 
__u32
 
	mheight
;

750 
__u32
 
	mª£rved
[4];

756 
	#V4L2_DV_INVALID
 0

	)

757 
	#V4L2_DV_480P59_94
 1

	)

758 
	#V4L2_DV_576P50
 2

	)

759 
	#V4L2_DV_720P24
 3

	)

760 
	#V4L2_DV_720P25
 4

	)

761 
	#V4L2_DV_720P30
 5

	)

762 
	#V4L2_DV_720P50
 6

	)

763 
	#V4L2_DV_720P59_94
 7

	)

764 
	#V4L2_DV_720P60
 8

	)

765 
	#V4L2_DV_1080I29_97
 9

	)

766 
	#V4L2_DV_1080I30
 10

	)

767 
	#V4L2_DV_1080I25
 11

	)

768 
	#V4L2_DV_1080I50
 12

	)

769 
	#V4L2_DV_1080I60
 13

	)

770 
	#V4L2_DV_1080P24
 14

	)

771 
	#V4L2_DV_1080P25
 15

	)

772 
	#V4L2_DV_1080P30
 16

	)

773 
	#V4L2_DV_1080P50
 17

	)

774 
	#V4L2_DV_1080P60
 18

	)

781 
	sv4l2_bt_timögs
 {

782 
__u32
 
	mwidth
;

783 
__u32
 
	mheight
;

784 
__u32
 
	möãæa˚d
;

785 
__u32
 
	mpﬁ¨ôõs
;

786 
__u64
 
	mpixñ˛ock
;

787 
__u32
 
	mh‰⁄ç‹ch
;

788 
__u32
 
	mhsync
;

789 
__u32
 
	mhbackp‹ch
;

790 
__u32
 
	mv‰⁄ç‹ch
;

791 
__u32
 
	mvsync
;

792 
__u32
 
	mvbackp‹ch
;

793 
__u32
 
	mû_v‰⁄ç‹ch
;

796 
__u32
 
	mû_vsync
;

799 
__u32
 
	mû_vbackp‹ch
;

802 
__u32
 
	mª£rved
[16];

803 } 
__©åibuã__
 ((
∑cked
));

806 
	#V4L2_DV_PROGRESSIVE
 0

	)

807 
	#V4L2_DV_INTERLACED
 1

	)

810 
	#V4L2_DV_VSYNC_POS_POL
 0x00000001

	)

811 
	#V4L2_DV_HSYNC_POS_POL
 0x00000002

	)

815 
	sv4l2_dv_timögs
 {

816 
__u32
 
	mty≥
;

818 
v4l2_bt_timögs
 
	mbt
;

819 
__u32
 
	mª£rved
[32];

821 } 
__©åibuã__
 ((
∑cked
));

824 
	#V4L2_DV_BT_656_1120
 0

	)

829 
	sv4l2_öput
 {

830 
__u32
 
	mödex
;

831 
__u8
 
	m«me
[32];

832 
__u32
 
	mty≥
;

833 
__u32
 
	maudio£t
;

834 
__u32
 
	mtu√r
;

835 
v4l2_°d_id
 
	m°d
;

836 
__u32
 
	m°©us
;

837 #i‚de‡
__GENKSYMS__


838 
__u32
 
	mˇ∑bûôõs
;

839 
__u32
 
	mª£rved
[3];

841 
__u32
 
	mª£rved
[4];

846 
	#V4L2_INPUT_TYPE_TUNER
 1

	)

847 
	#V4L2_INPUT_TYPE_CAMERA
 2

	)

850 
	#V4L2_IN_ST_NO_POWER
 0x00000001

	)

851 
	#V4L2_IN_ST_NO_SIGNAL
 0x00000002

	)

852 
	#V4L2_IN_ST_NO_COLOR
 0x00000004

	)

856 
	#V4L2_IN_ST_HFLIP
 0x00000010

	)

857 
	#V4L2_IN_ST_VFLIP
 0x00000020

	)

860 
	#V4L2_IN_ST_NO_H_LOCK
 0x00000100

	)

861 
	#V4L2_IN_ST_COLOR_KILL
 0x00000200

	)

864 
	#V4L2_IN_ST_NO_SYNC
 0x00010000

	)

865 
	#V4L2_IN_ST_NO_EQU
 0x00020000

	)

866 
	#V4L2_IN_ST_NO_CARRIER
 0x00040000

	)

869 
	#V4L2_IN_ST_MACROVISION
 0x01000000

	)

870 
	#V4L2_IN_ST_NO_ACCESS
 0x02000000

	)

871 
	#V4L2_IN_ST_VTR
 0x04000000

	)

874 
	#V4L2_IN_CAP_PRESETS
 0x00000001

	)

875 
	#V4L2_IN_CAP_CUSTOM_TIMINGS
 0x00000002

	)

876 
	#V4L2_IN_CAP_STD
 0x00000004

	)

881 
	sv4l2_ouçut
 {

882 
__u32
 
	mödex
;

883 
__u8
 
	m«me
[32];

884 
__u32
 
	mty≥
;

885 
__u32
 
	maudio£t
;

886 
__u32
 
	mmoduœt‹
;

887 
v4l2_°d_id
 
	m°d
;

888 #i‚de‡
__GENKSYMS__


889 
__u32
 
	mˇ∑bûôõs
;

890 
__u32
 
	mª£rved
[3];

892 
__u32
 
	mª£rved
[4];

896 
	#V4L2_OUTPUT_TYPE_MODULATOR
 1

	)

897 
	#V4L2_OUTPUT_TYPE_ANALOG
 2

	)

898 
	#V4L2_OUTPUT_TYPE_ANALOGVGAOVERLAY
 3

	)

901 
	#V4L2_OUT_CAP_PRESETS
 0x00000001

	)

902 
	#V4L2_OUT_CAP_CUSTOM_TIMINGS
 0x00000002

	)

903 
	#V4L2_OUT_CAP_STD
 0x00000004

	)

908 
	sv4l2_c⁄åﬁ
 {

909 
__u32
 
	mid
;

910 
__s32
 
	mvÆue
;

913 
	sv4l2_ext_c⁄åﬁ
 {

914 
__u32
 
	mid
;

915 
__u32
 
	msize
;

916 
__u32
 
	mª£rved2
[1];

918 
__s32
 
	mvÆue
;

919 
__s64
 
	mvÆue64
;

920 *
	m°rög
;

922 } 
__©åibuã__
 ((
∑cked
));

924 
	sv4l2_ext_c⁄åﬁs
 {

925 
__u32
 
	m˘æ_˛ass
;

926 
__u32
 
	mcou¡
;

927 
__u32
 
	mîr‹_idx
;

928 
__u32
 
	mª£rved
[2];

929 
v4l2_ext_c⁄åﬁ
 *
	mc⁄åﬁs
;

933 
	#V4L2_CTRL_CLASS_USER
 0x00980000

	)

934 
	#V4L2_CTRL_CLASS_MPEG
 0x00990000

	)

935 
	#V4L2_CTRL_CLASS_CAMERA
 0x009a0000

	)

936 
	#V4L2_CTRL_CLASS_FM_TX
 0x009b0000

	)

938 
	#V4L2_CTRL_ID_MASK
 (0x0fffffff)

	)

939 
	#V4L2_CTRL_ID2CLASS
(
id
Ë((idË& 0x0fff0000UL)

	)

940 
	#V4L2_CTRL_DRIVER_PRIV
(
id
Ë(((idË& 0xffffË>0x1000)

	)

942 
	ev4l2_˘æ_ty≥
 {

943 
	mV4L2_CTRL_TYPE_INTEGER
 = 1,

944 
	mV4L2_CTRL_TYPE_BOOLEAN
 = 2,

945 
	mV4L2_CTRL_TYPE_MENU
 = 3,

946 
	mV4L2_CTRL_TYPE_BUTTON
 = 4,

947 
	mV4L2_CTRL_TYPE_INTEGER64
 = 5,

948 
	mV4L2_CTRL_TYPE_CTRL_CLASS
 = 6,

949 
	mV4L2_CTRL_TYPE_STRING
 = 7,

953 
	sv4l2_quîy˘æ
 {

954 
__u32
 
	mid
;

955 
v4l2_˘æ_ty≥
 
	mty≥
;

956 
__u8
 
	m«me
[32];

957 
__s32
 
	mmöimum
;

958 
__s32
 
	mmaximum
;

959 
__s32
 
	m°ï
;

960 
__s32
 
	mdeÁu…_vÆue
;

961 
__u32
 
	mÊags
;

962 
__u32
 
	mª£rved
[2];

966 
	sv4l2_quîymíu
 {

967 
__u32
 
	mid
;

968 
__u32
 
	mödex
;

969 
__u8
 
	m«me
[32];

970 
__u32
 
	mª£rved
;

974 
	#V4L2_CTRL_FLAG_DISABLED
 0x0001

	)

975 
	#V4L2_CTRL_FLAG_GRABBED
 0x0002

	)

976 
	#V4L2_CTRL_FLAG_READ_ONLY
 0x0004

	)

977 
	#V4L2_CTRL_FLAG_UPDATE
 0x0008

	)

978 
	#V4L2_CTRL_FLAG_INACTIVE
 0x0010

	)

979 
	#V4L2_CTRL_FLAG_SLIDER
 0x0020

	)

980 
	#V4L2_CTRL_FLAG_WRITE_ONLY
 0x0040

	)

983 
	#V4L2_CTRL_FLAG_NEXT_CTRL
 0x80000000

	)

986 
	#V4L2_CID_BASE
 (
V4L2_CTRL_CLASS_USER
 | 0x900)

	)

987 
	#V4L2_CID_USER_BASE
 
V4L2_CID_BASE


	)

989 
	#V4L2_CID_PRIVATE_BASE
 0x08000000

	)

991 
	#V4L2_CID_USER_CLASS
 (
V4L2_CTRL_CLASS_USER
 | 1)

	)

992 
	#V4L2_CID_BRIGHTNESS
 (
V4L2_CID_BASE
+0)

	)

993 
	#V4L2_CID_CONTRAST
 (
V4L2_CID_BASE
+1)

	)

994 
	#V4L2_CID_SATURATION
 (
V4L2_CID_BASE
+2)

	)

995 
	#V4L2_CID_HUE
 (
V4L2_CID_BASE
+3)

	)

996 
	#V4L2_CID_AUDIO_VOLUME
 (
V4L2_CID_BASE
+5)

	)

997 
	#V4L2_CID_AUDIO_BALANCE
 (
V4L2_CID_BASE
+6)

	)

998 
	#V4L2_CID_AUDIO_BASS
 (
V4L2_CID_BASE
+7)

	)

999 
	#V4L2_CID_AUDIO_TREBLE
 (
V4L2_CID_BASE
+8)

	)

1000 
	#V4L2_CID_AUDIO_MUTE
 (
V4L2_CID_BASE
+9)

	)

1001 
	#V4L2_CID_AUDIO_LOUDNESS
 (
V4L2_CID_BASE
+10)

	)

1002 
	#V4L2_CID_BLACK_LEVEL
 (
V4L2_CID_BASE
+11Ë

	)

1003 
	#V4L2_CID_AUTO_WHITE_BALANCE
 (
V4L2_CID_BASE
+12)

	)

1004 
	#V4L2_CID_DO_WHITE_BALANCE
 (
V4L2_CID_BASE
+13)

	)

1005 
	#V4L2_CID_RED_BALANCE
 (
V4L2_CID_BASE
+14)

	)

1006 
	#V4L2_CID_BLUE_BALANCE
 (
V4L2_CID_BASE
+15)

	)

1007 
	#V4L2_CID_GAMMA
 (
V4L2_CID_BASE
+16)

	)

1008 
	#V4L2_CID_WHITENESS
 (
V4L2_CID_GAMMA
Ë

	)

1009 
	#V4L2_CID_EXPOSURE
 (
V4L2_CID_BASE
+17)

	)

1010 
	#V4L2_CID_AUTOGAIN
 (
V4L2_CID_BASE
+18)

	)

1011 
	#V4L2_CID_GAIN
 (
V4L2_CID_BASE
+19)

	)

1012 
	#V4L2_CID_HFLIP
 (
V4L2_CID_BASE
+20)

	)

1013 
	#V4L2_CID_VFLIP
 (
V4L2_CID_BASE
+21)

	)

1016 
	#V4L2_CID_HCENTER
 (
V4L2_CID_BASE
+22)

	)

1017 
	#V4L2_CID_VCENTER
 (
V4L2_CID_BASE
+23)

	)

1019 
	#V4L2_CID_POWER_LINE_FREQUENCY
 (
V4L2_CID_BASE
+24)

	)

1020 
	ev4l2_powî_löe_‰equícy
 {

1021 
	mV4L2_CID_POWER_LINE_FREQUENCY_DISABLED
 = 0,

1022 
	mV4L2_CID_POWER_LINE_FREQUENCY_50HZ
 = 1,

1023 
	mV4L2_CID_POWER_LINE_FREQUENCY_60HZ
 = 2,

1025 
	#V4L2_CID_HUE_AUTO
 (
V4L2_CID_BASE
+25)

	)

1026 
	#V4L2_CID_WHITE_BALANCE_TEMPERATURE
 (
V4L2_CID_BASE
+26)

	)

1027 
	#V4L2_CID_SHARPNESS
 (
V4L2_CID_BASE
+27)

	)

1028 
	#V4L2_CID_BACKLIGHT_COMPENSATION
 (
V4L2_CID_BASE
+28)

	)

1029 
	#V4L2_CID_CHROMA_AGC
 (
V4L2_CID_BASE
+29)

	)

1030 
	#V4L2_CID_COLOR_KILLER
 (
V4L2_CID_BASE
+30)

	)

1031 
	#V4L2_CID_COLORFX
 (
V4L2_CID_BASE
+31)

	)

1032 
	ev4l2_cﬁ‹fx
 {

1033 
	mV4L2_COLORFX_NONE
 = 0,

1034 
	mV4L2_COLORFX_BW
 = 1,

1035 
	mV4L2_COLORFX_SEPIA
 = 2,

1036 
	mV4L2_COLORFX_NEGATIVE
 = 3,

1037 
	mV4L2_COLORFX_EMBOSS
 = 4,

1038 
	mV4L2_COLORFX_SKETCH
 = 5,

1039 
	mV4L2_COLORFX_SKY_BLUE
 = 6,

1040 
	mV4L2_COLORFX_GRASS_GREEN
 = 7,

1041 
	mV4L2_COLORFX_SKIN_WHITEN
 = 8,

1042 
	mV4L2_COLORFX_VIVID
 = 9,

1044 
	#V4L2_CID_AUTOBRIGHTNESS
 (
V4L2_CID_BASE
+32)

	)

1045 
	#V4L2_CID_BAND_STOP_FILTER
 (
V4L2_CID_BASE
+33)

	)

1047 
	#V4L2_CID_ROTATE
 (
V4L2_CID_BASE
+34)

	)

1048 
	#V4L2_CID_BG_COLOR
 (
V4L2_CID_BASE
+35)

	)

1050 
	#V4L2_CID_CHROMA_GAIN
 (
V4L2_CID_BASE
+36)

	)

1052 
	#V4L2_CID_ILLUMINATORS_1
 (
V4L2_CID_BASE
+37)

	)

1053 
	#V4L2_CID_ILLUMINATORS_2
 (
V4L2_CID_BASE
+38)

	)

1056 
	#V4L2_CID_LASTP1
 (
V4L2_CID_BASE
+39)

	)

1059 
	#V4L2_CID_MPEG_BASE
 (
V4L2_CTRL_CLASS_MPEG
 | 0x900)

	)

1060 
	#V4L2_CID_MPEG_CLASS
 (
V4L2_CTRL_CLASS_MPEG
 | 1)

	)

1063 
	#V4L2_CID_MPEG_STREAM_TYPE
 (
V4L2_CID_MPEG_BASE
+0)

	)

1064 
	ev4l2_m≥g_°ªam_ty≥
 {

1065 
	mV4L2_MPEG_STREAM_TYPE_MPEG2_PS
 = 0,

1066 
	mV4L2_MPEG_STREAM_TYPE_MPEG2_TS
 = 1,

1067 
	mV4L2_MPEG_STREAM_TYPE_MPEG1_SS
 = 2,

1068 
	mV4L2_MPEG_STREAM_TYPE_MPEG2_DVD
 = 3,

1069 
	mV4L2_MPEG_STREAM_TYPE_MPEG1_VCD
 = 4,

1070 
	mV4L2_MPEG_STREAM_TYPE_MPEG2_SVCD
 = 5,

1072 
	#V4L2_CID_MPEG_STREAM_PID_PMT
 (
V4L2_CID_MPEG_BASE
+1)

	)

1073 
	#V4L2_CID_MPEG_STREAM_PID_AUDIO
 (
V4L2_CID_MPEG_BASE
+2)

	)

1074 
	#V4L2_CID_MPEG_STREAM_PID_VIDEO
 (
V4L2_CID_MPEG_BASE
+3)

	)

1075 
	#V4L2_CID_MPEG_STREAM_PID_PCR
 (
V4L2_CID_MPEG_BASE
+4)

	)

1076 
	#V4L2_CID_MPEG_STREAM_PES_ID_AUDIO
 (
V4L2_CID_MPEG_BASE
+5)

	)

1077 
	#V4L2_CID_MPEG_STREAM_PES_ID_VIDEO
 (
V4L2_CID_MPEG_BASE
+6)

	)

1078 
	#V4L2_CID_MPEG_STREAM_VBI_FMT
 (
V4L2_CID_MPEG_BASE
+7)

	)

1079 
	ev4l2_m≥g_°ªam_vbi_fmt
 {

1080 
	mV4L2_MPEG_STREAM_VBI_FMT_NONE
 = 0,

1081 
	mV4L2_MPEG_STREAM_VBI_FMT_IVTV
 = 1,

1085 
	#V4L2_CID_MPEG_AUDIO_SAMPLING_FREQ
 (
V4L2_CID_MPEG_BASE
+100)

	)

1086 
	ev4l2_m≥g_audio_ßm∂ög_‰eq
 {

1087 
	mV4L2_MPEG_AUDIO_SAMPLING_FREQ_44100
 = 0,

1088 
	mV4L2_MPEG_AUDIO_SAMPLING_FREQ_48000
 = 1,

1089 
	mV4L2_MPEG_AUDIO_SAMPLING_FREQ_32000
 = 2,

1091 
	#V4L2_CID_MPEG_AUDIO_ENCODING
 (
V4L2_CID_MPEG_BASE
+101)

	)

1092 
	ev4l2_m≥g_audio_ícodög
 {

1093 
	mV4L2_MPEG_AUDIO_ENCODING_LAYER_1
 = 0,

1094 
	mV4L2_MPEG_AUDIO_ENCODING_LAYER_2
 = 1,

1095 
	mV4L2_MPEG_AUDIO_ENCODING_LAYER_3
 = 2,

1096 
	mV4L2_MPEG_AUDIO_ENCODING_AAC
 = 3,

1097 
	mV4L2_MPEG_AUDIO_ENCODING_AC3
 = 4,

1099 
	#V4L2_CID_MPEG_AUDIO_L1_BITRATE
 (
V4L2_CID_MPEG_BASE
+102)

	)

1100 
	ev4l2_m≥g_audio_l1_bôøã
 {

1101 
	mV4L2_MPEG_AUDIO_L1_BITRATE_32K
 = 0,

1102 
	mV4L2_MPEG_AUDIO_L1_BITRATE_64K
 = 1,

1103 
	mV4L2_MPEG_AUDIO_L1_BITRATE_96K
 = 2,

1104 
	mV4L2_MPEG_AUDIO_L1_BITRATE_128K
 = 3,

1105 
	mV4L2_MPEG_AUDIO_L1_BITRATE_160K
 = 4,

1106 
	mV4L2_MPEG_AUDIO_L1_BITRATE_192K
 = 5,

1107 
	mV4L2_MPEG_AUDIO_L1_BITRATE_224K
 = 6,

1108 
	mV4L2_MPEG_AUDIO_L1_BITRATE_256K
 = 7,

1109 
	mV4L2_MPEG_AUDIO_L1_BITRATE_288K
 = 8,

1110 
	mV4L2_MPEG_AUDIO_L1_BITRATE_320K
 = 9,

1111 
	mV4L2_MPEG_AUDIO_L1_BITRATE_352K
 = 10,

1112 
	mV4L2_MPEG_AUDIO_L1_BITRATE_384K
 = 11,

1113 
	mV4L2_MPEG_AUDIO_L1_BITRATE_416K
 = 12,

1114 
	mV4L2_MPEG_AUDIO_L1_BITRATE_448K
 = 13,

1116 
	#V4L2_CID_MPEG_AUDIO_L2_BITRATE
 (
V4L2_CID_MPEG_BASE
+103)

	)

1117 
	ev4l2_m≥g_audio_l2_bôøã
 {

1118 
	mV4L2_MPEG_AUDIO_L2_BITRATE_32K
 = 0,

1119 
	mV4L2_MPEG_AUDIO_L2_BITRATE_48K
 = 1,

1120 
	mV4L2_MPEG_AUDIO_L2_BITRATE_56K
 = 2,

1121 
	mV4L2_MPEG_AUDIO_L2_BITRATE_64K
 = 3,

1122 
	mV4L2_MPEG_AUDIO_L2_BITRATE_80K
 = 4,

1123 
	mV4L2_MPEG_AUDIO_L2_BITRATE_96K
 = 5,

1124 
	mV4L2_MPEG_AUDIO_L2_BITRATE_112K
 = 6,

1125 
	mV4L2_MPEG_AUDIO_L2_BITRATE_128K
 = 7,

1126 
	mV4L2_MPEG_AUDIO_L2_BITRATE_160K
 = 8,

1127 
	mV4L2_MPEG_AUDIO_L2_BITRATE_192K
 = 9,

1128 
	mV4L2_MPEG_AUDIO_L2_BITRATE_224K
 = 10,

1129 
	mV4L2_MPEG_AUDIO_L2_BITRATE_256K
 = 11,

1130 
	mV4L2_MPEG_AUDIO_L2_BITRATE_320K
 = 12,

1131 
	mV4L2_MPEG_AUDIO_L2_BITRATE_384K
 = 13,

1133 
	#V4L2_CID_MPEG_AUDIO_L3_BITRATE
 (
V4L2_CID_MPEG_BASE
+104)

	)

1134 
	ev4l2_m≥g_audio_l3_bôøã
 {

1135 
	mV4L2_MPEG_AUDIO_L3_BITRATE_32K
 = 0,

1136 
	mV4L2_MPEG_AUDIO_L3_BITRATE_40K
 = 1,

1137 
	mV4L2_MPEG_AUDIO_L3_BITRATE_48K
 = 2,

1138 
	mV4L2_MPEG_AUDIO_L3_BITRATE_56K
 = 3,

1139 
	mV4L2_MPEG_AUDIO_L3_BITRATE_64K
 = 4,

1140 
	mV4L2_MPEG_AUDIO_L3_BITRATE_80K
 = 5,

1141 
	mV4L2_MPEG_AUDIO_L3_BITRATE_96K
 = 6,

1142 
	mV4L2_MPEG_AUDIO_L3_BITRATE_112K
 = 7,

1143 
	mV4L2_MPEG_AUDIO_L3_BITRATE_128K
 = 8,

1144 
	mV4L2_MPEG_AUDIO_L3_BITRATE_160K
 = 9,

1145 
	mV4L2_MPEG_AUDIO_L3_BITRATE_192K
 = 10,

1146 
	mV4L2_MPEG_AUDIO_L3_BITRATE_224K
 = 11,

1147 
	mV4L2_MPEG_AUDIO_L3_BITRATE_256K
 = 12,

1148 
	mV4L2_MPEG_AUDIO_L3_BITRATE_320K
 = 13,

1150 
	#V4L2_CID_MPEG_AUDIO_MODE
 (
V4L2_CID_MPEG_BASE
+105)

	)

1151 
	ev4l2_m≥g_audio_mode
 {

1152 
	mV4L2_MPEG_AUDIO_MODE_STEREO
 = 0,

1153 
	mV4L2_MPEG_AUDIO_MODE_JOINT_STEREO
 = 1,

1154 
	mV4L2_MPEG_AUDIO_MODE_DUAL
 = 2,

1155 
	mV4L2_MPEG_AUDIO_MODE_MONO
 = 3,

1157 
	#V4L2_CID_MPEG_AUDIO_MODE_EXTENSION
 (
V4L2_CID_MPEG_BASE
+106)

	)

1158 
	ev4l2_m≥g_audio_mode_exãnsi⁄
 {

1159 
	mV4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_4
 = 0,

1160 
	mV4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_8
 = 1,

1161 
	mV4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_12
 = 2,

1162 
	mV4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_16
 = 3,

1164 
	#V4L2_CID_MPEG_AUDIO_EMPHASIS
 (
V4L2_CID_MPEG_BASE
+107)

	)

1165 
	ev4l2_m≥g_audio_emphasis
 {

1166 
	mV4L2_MPEG_AUDIO_EMPHASIS_NONE
 = 0,

1167 
	mV4L2_MPEG_AUDIO_EMPHASIS_50_DIV_15_uS
 = 1,

1168 
	mV4L2_MPEG_AUDIO_EMPHASIS_CCITT_J17
 = 2,

1170 
	#V4L2_CID_MPEG_AUDIO_CRC
 (
V4L2_CID_MPEG_BASE
+108)

	)

1171 
	ev4l2_m≥g_audio_¸c
 {

1172 
	mV4L2_MPEG_AUDIO_CRC_NONE
 = 0,

1173 
	mV4L2_MPEG_AUDIO_CRC_CRC16
 = 1,

1175 
	#V4L2_CID_MPEG_AUDIO_MUTE
 (
V4L2_CID_MPEG_BASE
+109)

	)

1176 
	#V4L2_CID_MPEG_AUDIO_AAC_BITRATE
 (
V4L2_CID_MPEG_BASE
+110)

	)

1177 
	#V4L2_CID_MPEG_AUDIO_AC3_BITRATE
 (
V4L2_CID_MPEG_BASE
+111)

	)

1178 
	ev4l2_m≥g_audio_ac3_bôøã
 {

1179 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_32K
 = 0,

1180 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_40K
 = 1,

1181 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_48K
 = 2,

1182 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_56K
 = 3,

1183 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_64K
 = 4,

1184 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_80K
 = 5,

1185 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_96K
 = 6,

1186 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_112K
 = 7,

1187 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_128K
 = 8,

1188 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_160K
 = 9,

1189 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_192K
 = 10,

1190 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_224K
 = 11,

1191 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_256K
 = 12,

1192 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_320K
 = 13,

1193 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_384K
 = 14,

1194 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_448K
 = 15,

1195 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_512K
 = 16,

1196 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_576K
 = 17,

1197 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_640K
 = 18,

1201 
	#V4L2_CID_MPEG_VIDEO_ENCODING
 (
V4L2_CID_MPEG_BASE
+200)

	)

1202 
	ev4l2_m≥g_video_ícodög
 {

1203 
	mV4L2_MPEG_VIDEO_ENCODING_MPEG_1
 = 0,

1204 
	mV4L2_MPEG_VIDEO_ENCODING_MPEG_2
 = 1,

1205 
	mV4L2_MPEG_VIDEO_ENCODING_MPEG_4_AVC
 = 2,

1207 
	#V4L2_CID_MPEG_VIDEO_ASPECT
 (
V4L2_CID_MPEG_BASE
+201)

	)

1208 
	ev4l2_m≥g_video_a•e˘
 {

1209 
	mV4L2_MPEG_VIDEO_ASPECT_1x1
 = 0,

1210 
	mV4L2_MPEG_VIDEO_ASPECT_4x3
 = 1,

1211 
	mV4L2_MPEG_VIDEO_ASPECT_16x9
 = 2,

1212 
	mV4L2_MPEG_VIDEO_ASPECT_221x100
 = 3,

1214 
	#V4L2_CID_MPEG_VIDEO_B_FRAMES
 (
V4L2_CID_MPEG_BASE
+202)

	)

1215 
	#V4L2_CID_MPEG_VIDEO_GOP_SIZE
 (
V4L2_CID_MPEG_BASE
+203)

	)

1216 
	#V4L2_CID_MPEG_VIDEO_GOP_CLOSURE
 (
V4L2_CID_MPEG_BASE
+204)

	)

1217 
	#V4L2_CID_MPEG_VIDEO_PULLDOWN
 (
V4L2_CID_MPEG_BASE
+205)

	)

1218 
	#V4L2_CID_MPEG_VIDEO_BITRATE_MODE
 (
V4L2_CID_MPEG_BASE
+206)

	)

1219 
	ev4l2_m≥g_video_bôøã_mode
 {

1220 
	mV4L2_MPEG_VIDEO_BITRATE_MODE_VBR
 = 0,

1221 
	mV4L2_MPEG_VIDEO_BITRATE_MODE_CBR
 = 1,

1223 
	#V4L2_CID_MPEG_VIDEO_BITRATE
 (
V4L2_CID_MPEG_BASE
+207)

	)

1224 
	#V4L2_CID_MPEG_VIDEO_BITRATE_PEAK
 (
V4L2_CID_MPEG_BASE
+208)

	)

1225 
	#V4L2_CID_MPEG_VIDEO_TEMPORAL_DECIMATION
 (
V4L2_CID_MPEG_BASE
+209)

	)

1226 
	#V4L2_CID_MPEG_VIDEO_MUTE
 (
V4L2_CID_MPEG_BASE
+210)

	)

1227 
	#V4L2_CID_MPEG_VIDEO_MUTE_YUV
 (
V4L2_CID_MPEG_BASE
+211)

	)

1230 
	#V4L2_CID_MPEG_CX2341X_BASE
 (
V4L2_CTRL_CLASS_MPEG
 | 0x1000)

	)

1231 
	#V4L2_CID_MPEG_CX2341X_VIDEO_SPATIAL_FILTER_MODE
 (
V4L2_CID_MPEG_CX2341X_BASE
+0)

	)

1232 
	ev4l2_m≥g_cx2341x_video_•©ül_fûãr_mode
 {

1233 
	mV4L2_MPEG_CX2341X_VIDEO_SPATIAL_FILTER_MODE_MANUAL
 = 0,

1234 
	mV4L2_MPEG_CX2341X_VIDEO_SPATIAL_FILTER_MODE_AUTO
 = 1,

1236 
	#V4L2_CID_MPEG_CX2341X_VIDEO_SPATIAL_FILTER
 (
V4L2_CID_MPEG_CX2341X_BASE
+1)

	)

1237 
	#V4L2_CID_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE
 (
V4L2_CID_MPEG_CX2341X_BASE
+2)

	)

1238 
	ev4l2_m≥g_cx2341x_video_luma_•©ül_fûãr_ty≥
 {

1239 
	mV4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_OFF
 = 0,

1240 
	mV4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_1D_HOR
 = 1,

1241 
	mV4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_1D_VERT
 = 2,

1242 
	mV4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_2D_HV_SEPARABLE
 = 3,

1243 
	mV4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_2D_SYM_NON_SEPARABLE
 = 4,

1245 
	#V4L2_CID_MPEG_CX2341X_VIDEO_CHROMA_SPATIAL_FILTER_TYPE
 (
V4L2_CID_MPEG_CX2341X_BASE
+3)

	)

1246 
	ev4l2_m≥g_cx2341x_video_chroma_•©ül_fûãr_ty≥
 {

1247 
	mV4L2_MPEG_CX2341X_VIDEO_CHROMA_SPATIAL_FILTER_TYPE_OFF
 = 0,

1248 
	mV4L2_MPEG_CX2341X_VIDEO_CHROMA_SPATIAL_FILTER_TYPE_1D_HOR
 = 1,

1250 
	#V4L2_CID_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER_MODE
 (
V4L2_CID_MPEG_CX2341X_BASE
+4)

	)

1251 
	ev4l2_m≥g_cx2341x_video_ãmp‹Æ_fûãr_mode
 {

1252 
	mV4L2_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER_MODE_MANUAL
 = 0,

1253 
	mV4L2_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER_MODE_AUTO
 = 1,

1255 
	#V4L2_CID_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER
 (
V4L2_CID_MPEG_CX2341X_BASE
+5)

	)

1256 
	#V4L2_CID_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE
 (
V4L2_CID_MPEG_CX2341X_BASE
+6)

	)

1257 
	ev4l2_m≥g_cx2341x_video_medün_fûãr_ty≥
 {

1258 
	mV4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_OFF
 = 0,

1259 
	mV4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_HOR
 = 1,

1260 
	mV4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_VERT
 = 2,

1261 
	mV4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_HOR_VERT
 = 3,

1262 
	mV4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_DIAG
 = 4,

1264 
	#V4L2_CID_MPEG_CX2341X_VIDEO_LUMA_MEDIAN_FILTER_BOTTOM
 (
V4L2_CID_MPEG_CX2341X_BASE
+7)

	)

1265 
	#V4L2_CID_MPEG_CX2341X_VIDEO_LUMA_MEDIAN_FILTER_TOP
 (
V4L2_CID_MPEG_CX2341X_BASE
+8)

	)

1266 
	#V4L2_CID_MPEG_CX2341X_VIDEO_CHROMA_MEDIAN_FILTER_BOTTOM
 (
V4L2_CID_MPEG_CX2341X_BASE
+9)

	)

1267 
	#V4L2_CID_MPEG_CX2341X_VIDEO_CHROMA_MEDIAN_FILTER_TOP
 (
V4L2_CID_MPEG_CX2341X_BASE
+10)

	)

1268 
	#V4L2_CID_MPEG_CX2341X_STREAM_INSERT_NAV_PACKETS
 (
V4L2_CID_MPEG_CX2341X_BASE
+11)

	)

1271 
	#V4L2_CID_CAMERA_CLASS_BASE
 (
V4L2_CTRL_CLASS_CAMERA
 | 0x900)

	)

1272 
	#V4L2_CID_CAMERA_CLASS
 (
V4L2_CTRL_CLASS_CAMERA
 | 1)

	)

1274 
	#V4L2_CID_EXPOSURE_AUTO
 (
V4L2_CID_CAMERA_CLASS_BASE
+1)

	)

1275 
	ev4l2_exposuª_auto_ty≥
 {

1276 
	mV4L2_EXPOSURE_AUTO
 = 0,

1277 
	mV4L2_EXPOSURE_MANUAL
 = 1,

1278 
	mV4L2_EXPOSURE_SHUTTER_PRIORITY
 = 2,

1279 
	mV4L2_EXPOSURE_APERTURE_PRIORITY
 = 3

1281 
	#V4L2_CID_EXPOSURE_ABSOLUTE
 (
V4L2_CID_CAMERA_CLASS_BASE
+2)

	)

1282 
	#V4L2_CID_EXPOSURE_AUTO_PRIORITY
 (
V4L2_CID_CAMERA_CLASS_BASE
+3)

	)

1284 
	#V4L2_CID_PAN_RELATIVE
 (
V4L2_CID_CAMERA_CLASS_BASE
+4)

	)

1285 
	#V4L2_CID_TILT_RELATIVE
 (
V4L2_CID_CAMERA_CLASS_BASE
+5)

	)

1286 
	#V4L2_CID_PAN_RESET
 (
V4L2_CID_CAMERA_CLASS_BASE
+6)

	)

1287 
	#V4L2_CID_TILT_RESET
 (
V4L2_CID_CAMERA_CLASS_BASE
+7)

	)

1289 
	#V4L2_CID_PAN_ABSOLUTE
 (
V4L2_CID_CAMERA_CLASS_BASE
+8)

	)

1290 
	#V4L2_CID_TILT_ABSOLUTE
 (
V4L2_CID_CAMERA_CLASS_BASE
+9)

	)

1292 
	#V4L2_CID_FOCUS_ABSOLUTE
 (
V4L2_CID_CAMERA_CLASS_BASE
+10)

	)

1293 
	#V4L2_CID_FOCUS_RELATIVE
 (
V4L2_CID_CAMERA_CLASS_BASE
+11)

	)

1294 
	#V4L2_CID_FOCUS_AUTO
 (
V4L2_CID_CAMERA_CLASS_BASE
+12)

	)

1296 
	#V4L2_CID_ZOOM_ABSOLUTE
 (
V4L2_CID_CAMERA_CLASS_BASE
+13)

	)

1297 
	#V4L2_CID_ZOOM_RELATIVE
 (
V4L2_CID_CAMERA_CLASS_BASE
+14)

	)

1298 
	#V4L2_CID_ZOOM_CONTINUOUS
 (
V4L2_CID_CAMERA_CLASS_BASE
+15)

	)

1300 
	#V4L2_CID_PRIVACY
 (
V4L2_CID_CAMERA_CLASS_BASE
+16)

	)

1302 
	#V4L2_CID_IRIS_ABSOLUTE
 (
V4L2_CID_CAMERA_CLASS_BASE
+17)

	)

1303 
	#V4L2_CID_IRIS_RELATIVE
 (
V4L2_CID_CAMERA_CLASS_BASE
+18)

	)

1306 
	#V4L2_CID_FM_TX_CLASS_BASE
 (
V4L2_CTRL_CLASS_FM_TX
 | 0x900)

	)

1307 
	#V4L2_CID_FM_TX_CLASS
 (
V4L2_CTRL_CLASS_FM_TX
 | 1)

	)

1309 
	#V4L2_CID_RDS_TX_DEVIATION
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 1)

	)

1310 
	#V4L2_CID_RDS_TX_PI
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 2)

	)

1311 
	#V4L2_CID_RDS_TX_PTY
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 3)

	)

1312 
	#V4L2_CID_RDS_TX_PS_NAME
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 5)

	)

1313 
	#V4L2_CID_RDS_TX_RADIO_TEXT
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 6)

	)

1315 
	#V4L2_CID_AUDIO_LIMITER_ENABLED
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 64)

	)

1316 
	#V4L2_CID_AUDIO_LIMITER_RELEASE_TIME
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 65)

	)

1317 
	#V4L2_CID_AUDIO_LIMITER_DEVIATION
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 66)

	)

1319 
	#V4L2_CID_AUDIO_COMPRESSION_ENABLED
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 80)

	)

1320 
	#V4L2_CID_AUDIO_COMPRESSION_GAIN
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 81)

	)

1321 
	#V4L2_CID_AUDIO_COMPRESSION_THRESHOLD
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 82)

	)

1322 
	#V4L2_CID_AUDIO_COMPRESSION_ATTACK_TIME
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 83)

	)

1323 
	#V4L2_CID_AUDIO_COMPRESSION_RELEASE_TIME
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 84)

	)

1325 
	#V4L2_CID_PILOT_TONE_ENABLED
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 96)

	)

1326 
	#V4L2_CID_PILOT_TONE_DEVIATION
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 97)

	)

1327 
	#V4L2_CID_PILOT_TONE_FREQUENCY
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 98)

	)

1329 
	#V4L2_CID_TUNE_PREEMPHASIS
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 112)

	)

1330 
	ev4l2_¥ìmphasis
 {

1331 
	mV4L2_PREEMPHASIS_DISABLED
 = 0,

1332 
	mV4L2_PREEMPHASIS_50_uS
 = 1,

1333 
	mV4L2_PREEMPHASIS_75_uS
 = 2,

1335 
	#V4L2_CID_TUNE_POWER_LEVEL
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 113)

	)

1336 
	#V4L2_CID_TUNE_ANTENNA_CAPACITOR
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 114)

	)

1341 
	sv4l2_tu√r
 {

1342 
__u32
 
	mödex
;

1343 
__u8
 
	m«me
[32];

1344 
v4l2_tu√r_ty≥
 
	mty≥
;

1345 
__u32
 
	mˇ∑bûôy
;

1346 
__u32
 
	møngñow
;

1347 
__u32
 
	møngehigh
;

1348 
__u32
 
	mrxsubch™s
;

1349 
__u32
 
	maudmode
;

1350 
__s32
 
	msig«l
;

1351 
__s32
 
	mafc
;

1352 
__u32
 
	mª£rved
[4];

1355 
	sv4l2_moduœt‹
 {

1356 
__u32
 
	mödex
;

1357 
__u8
 
	m«me
[32];

1358 
__u32
 
	mˇ∑bûôy
;

1359 
__u32
 
	møngñow
;

1360 
__u32
 
	møngehigh
;

1361 
__u32
 
	mtxsubch™s
;

1362 
__u32
 
	mª£rved
[4];

1366 
	#V4L2_TUNER_CAP_LOW
 0x0001

	)

1367 
	#V4L2_TUNER_CAP_NORM
 0x0002

	)

1368 
	#V4L2_TUNER_CAP_STEREO
 0x0010

	)

1369 
	#V4L2_TUNER_CAP_LANG2
 0x0020

	)

1370 
	#V4L2_TUNER_CAP_SAP
 0x0020

	)

1371 
	#V4L2_TUNER_CAP_LANG1
 0x0040

	)

1372 
	#V4L2_TUNER_CAP_RDS
 0x0080

	)

1373 
	#V4L2_TUNER_CAP_RDS_BLOCK_IO
 0x0100

	)

1374 
	#V4L2_TUNER_CAP_RDS_CONTROLS
 0x0200

	)

1377 
	#V4L2_TUNER_SUB_MONO
 0x0001

	)

1378 
	#V4L2_TUNER_SUB_STEREO
 0x0002

	)

1379 
	#V4L2_TUNER_SUB_LANG2
 0x0004

	)

1380 
	#V4L2_TUNER_SUB_SAP
 0x0004

	)

1381 
	#V4L2_TUNER_SUB_LANG1
 0x0008

	)

1382 
	#V4L2_TUNER_SUB_RDS
 0x0010

	)

1385 
	#V4L2_TUNER_MODE_MONO
 0x0000

	)

1386 
	#V4L2_TUNER_MODE_STEREO
 0x0001

	)

1387 
	#V4L2_TUNER_MODE_LANG2
 0x0002

	)

1388 
	#V4L2_TUNER_MODE_SAP
 0x0002

	)

1389 
	#V4L2_TUNER_MODE_LANG1
 0x0003

	)

1390 
	#V4L2_TUNER_MODE_LANG1_LANG2
 0x0004

	)

1392 
	sv4l2_‰equícy
 {

1393 
__u32
 
	mtu√r
;

1394 
v4l2_tu√r_ty≥
 
	mty≥
;

1395 
__u32
 
	m‰equícy
;

1396 
__u32
 
	mª£rved
[8];

1399 
	sv4l2_hw_‰eq_£ek
 {

1400 
__u32
 
	mtu√r
;

1401 
v4l2_tu√r_ty≥
 
	mty≥
;

1402 
__u32
 
	m£ek_upw¨d
;

1403 
__u32
 
	mwøp_¨ound
;

1404 #i‚de‡
__GENKSYMS__


1405 
__u32
 
	m•acög
;

1406 
__u32
 
	mª£rved
[7];

1408 
__u32
 
	mª£rved
[8];

1416 
	sv4l2_rds_d©a
 {

1417 
__u8
 
	mlsb
;

1418 
__u8
 
	mmsb
;

1419 
__u8
 
	mblock
;

1420 } 
__©åibuã__
 ((
∑cked
));

1422 
	#V4L2_RDS_BLOCK_MSK
 0x7

	)

1423 
	#V4L2_RDS_BLOCK_A
 0

	)

1424 
	#V4L2_RDS_BLOCK_B
 1

	)

1425 
	#V4L2_RDS_BLOCK_C
 2

	)

1426 
	#V4L2_RDS_BLOCK_D
 3

	)

1427 
	#V4L2_RDS_BLOCK_C_ALT
 4

	)

1428 
	#V4L2_RDS_BLOCK_INVALID
 7

	)

1430 
	#V4L2_RDS_BLOCK_CORRECTED
 0x40

	)

1431 
	#V4L2_RDS_BLOCK_ERROR
 0x80

	)

1436 
	sv4l2_audio
 {

1437 
__u32
 
	mödex
;

1438 
__u8
 
	m«me
[32];

1439 
__u32
 
	mˇ∑bûôy
;

1440 
__u32
 
	mmode
;

1441 
__u32
 
	mª£rved
[2];

1445 
	#V4L2_AUDCAP_STEREO
 0x00001

	)

1446 
	#V4L2_AUDCAP_AVL
 0x00002

	)

1449 
	#V4L2_AUDMODE_AVL
 0x00001

	)

1451 
	sv4l2_audioout
 {

1452 
__u32
 
	mödex
;

1453 
__u8
 
	m«me
[32];

1454 
__u32
 
	mˇ∑bûôy
;

1455 
__u32
 
	mmode
;

1456 
__u32
 
	mª£rved
[2];

1465 
	#V4L2_ENC_IDX_FRAME_I
 (0)

	)

1466 
	#V4L2_ENC_IDX_FRAME_P
 (1)

	)

1467 
	#V4L2_ENC_IDX_FRAME_B
 (2)

	)

1468 
	#V4L2_ENC_IDX_FRAME_MASK
 (0xf)

	)

1470 
	sv4l2_íc_idx_íåy
 {

1471 
__u64
 
	moff£t
;

1472 
__u64
 
	m±s
;

1473 
__u32
 
	mÀngth
;

1474 
__u32
 
	mÊags
;

1475 
__u32
 
	mª£rved
[2];

1478 
	#V4L2_ENC_IDX_ENTRIES
 (64)

	)

1479 
	sv4l2_íc_idx
 {

1480 
__u32
 
	míåõs
;

1481 
__u32
 
	míåõs_ˇp
;

1482 
__u32
 
	mª£rved
[4];

1483 
v4l2_íc_idx_íåy
 
	míåy
[
V4L2_ENC_IDX_ENTRIES
];

1487 
	#V4L2_ENC_CMD_START
 (0)

	)

1488 
	#V4L2_ENC_CMD_STOP
 (1)

	)

1489 
	#V4L2_ENC_CMD_PAUSE
 (2)

	)

1490 
	#V4L2_ENC_CMD_RESUME
 (3)

	)

1493 
	#V4L2_ENC_CMD_STOP_AT_GOP_END
 (1 << 0)

	)

1495 
	sv4l2_ícodî_cmd
 {

1496 
__u32
 
	mcmd
;

1497 
__u32
 
	mÊags
;

1500 
__u32
 
	md©a
[8];

1501 } 
	møw
;

1515 
	sv4l2_vbi_f‹m©
 {

1516 
__u32
 
	mßm∂ög_øã
;

1517 
__u32
 
	moff£t
;

1518 
__u32
 
	mßm∂es_≥r_löe
;

1519 
__u32
 
	mßm∂e_f‹m©
;

1520 
__s32
 
	m°¨t
[2];

1521 
__u32
 
	mcou¡
[2];

1522 
__u32
 
	mÊags
;

1523 
__u32
 
	mª£rved
[2];

1527 
	#V4L2_VBI_UNSYNC
 (1 << 0)

	)

1528 
	#V4L2_VBI_INTERLACED
 (1 << 1)

	)

1537 
	sv4l2_¶i˚d_vbi_f‹m©
 {

1538 
__u16
 
	m£rvi˚_£t
;

1543 
__u16
 
	m£rvi˚_löes
[2][24];

1544 
__u32
 
	mio_size
;

1545 
__u32
 
	mª£rved
[2];

1550 
	#V4L2_SLICED_TELETEXT_B
 (0x0001)

	)

1552 
	#V4L2_SLICED_VPS
 (0x0400)

	)

1554 
	#V4L2_SLICED_CAPTION_525
 (0x1000)

	)

1556 
	#V4L2_SLICED_WSS_625
 (0x4000)

	)

1558 
	#V4L2_SLICED_VBI_525
 (
V4L2_SLICED_CAPTION_525
)

	)

1559 
	#V4L2_SLICED_VBI_625
 (
V4L2_SLICED_TELETEXT_B
 | 
V4L2_SLICED_VPS
 | 
V4L2_SLICED_WSS_625
)

	)

1561 
	sv4l2_¶i˚d_vbi_ˇp
 {

1562 
__u16
 
	m£rvi˚_£t
;

1567 
__u16
 
	m£rvi˚_löes
[2][24];

1568 
v4l2_buf_ty≥
 
	mty≥
;

1569 
__u32
 
	mª£rved
[3];

1572 
	sv4l2_¶i˚d_vbi_d©a
 {

1573 
__u32
 
	mid
;

1574 
__u32
 
	mfõld
;

1575 
__u32
 
	mlöe
;

1576 
__u32
 
	mª£rved
;

1577 
__u8
 
	md©a
[48];

1597 
	#V4L2_MPEG_VBI_IVTV_TELETEXT_B
 (1)

	)

1598 
	#V4L2_MPEG_VBI_IVTV_CAPTION_525
 (4)

	)

1599 
	#V4L2_MPEG_VBI_IVTV_WSS_625
 (5)

	)

1600 
	#V4L2_MPEG_VBI_IVTV_VPS
 (7)

	)

1602 
	sv4l2_m≥g_vbi_ôv0_löe
 {

1603 
__u8
 
	mid
;

1604 
__u8
 
	md©a
[42];

1605 } 
__©åibuã__
 ((
∑cked
));

1607 
	sv4l2_m≥g_vbi_ôv0
 {

1608 
__À32
 
	mlöemask
[2];

1609 
v4l2_m≥g_vbi_ôv0_löe
 
	mlöe
[35];

1610 } 
__©åibuã__
 ((
∑cked
));

1612 
	sv4l2_m≥g_vbi_ITV0
 {

1613 
v4l2_m≥g_vbi_ôv0_löe
 
	mlöe
[36];

1614 } 
__©åibuã__
 ((
∑cked
));

1616 
	#V4L2_MPEG_VBI_IVTV_MAGIC0
 "ôv0"

	)

1617 
	#V4L2_MPEG_VBI_IVTV_MAGIC1
 "ITV0"

	)

1619 
	sv4l2_m≥g_vbi_fmt_ivtv
 {

1620 
__u8
 
	mmagic
[4];

1622 
v4l2_m≥g_vbi_ôv0
 
	môv0
;

1623 
v4l2_m≥g_vbi_ITV0
 
	mITV0
;

1625 } 
__©åibuã__
 ((
∑cked
));

1633 
	sv4l2_f‹m©
 {

1634 
v4l2_buf_ty≥
 
	mty≥
;

1636 
v4l2_pix_f‹m©
 
	mpix
;

1637 
v4l2_wödow
 
	mwö
;

1638 
v4l2_vbi_f‹m©
 
	mvbi
;

1639 
v4l2_¶i˚d_vbi_f‹m©
 
	m¶i˚d
;

1640 
__u8
 
	møw_d©a
[200];

1641 } 
	mfmt
;

1647 
	sv4l2_°ªam∑rm
 {

1648 
v4l2_buf_ty≥
 
	mty≥
;

1650 
v4l2_ˇ±uª∑rm
 
	mˇ±uª
;

1651 
v4l2_ouçuç¨m
 
	mouçut
;

1652 
__u8
 
	møw_d©a
[200];

1653 } 
	m∑rm
;

1660 
	#V4L2_EVENT_ALL
 0

	)

1661 
	#V4L2_EVENT_VSYNC
 1

	)

1662 
	#V4L2_EVENT_EOS
 2

	)

1663 
	#V4L2_EVENT_PRIVATE_START
 0x08000000

	)

1666 
	sv4l2_evít_vsync
 {

1668 
__u8
 
	mfõld
;

1669 } 
__©åibuã__
 ((
∑cked
));

1671 
	sv4l2_evít
 {

1672 
__u32
 
	mty≥
;

1674 
v4l2_evít_vsync
 
	mvsync
;

1675 
__u8
 
	md©a
[64];

1676 } 
	mu
;

1677 
__u32
 
	m≥ndög
;

1678 
__u32
 
	m£quí˚
;

1679 
time•ec
 
	mtime°amp
;

1680 
__u32
 
	mª£rved
[9];

1683 
	sv4l2_evít_subs¸ùti⁄
 {

1684 
__u32
 
	mty≥
;

1685 
__u32
 
	mª£rved
[7];

1697 
	#V4L2_CHIP_MATCH_HOST
 0

	)

1698 
	#V4L2_CHIP_MATCH_I2C_DRIVER
 1

	)

1699 
	#V4L2_CHIP_MATCH_I2C_ADDR
 2

	)

1700 
	#V4L2_CHIP_MATCH_AC97
 3

	)

1702 
	sv4l2_dbg_m©ch
 {

1703 
__u32
 
	mty≥
;

1705 
__u32
 
	maddr
;

1706 
	m«me
[32];

1708 } 
__©åibuã__
 ((
∑cked
));

1710 
	sv4l2_dbg_ªgi°î
 {

1711 
v4l2_dbg_m©ch
 
	mm©ch
;

1712 
__u32
 
	msize
;

1713 
__u64
 
	mªg
;

1714 
__u64
 
	mvÆ
;

1715 } 
__©åibuã__
 ((
∑cked
));

1718 
	sv4l2_dbg_chù_idít
 {

1719 
v4l2_dbg_m©ch
 
	mm©ch
;

1720 
__u32
 
	midít
;

1721 
__u32
 
	mªvisi⁄
;

1722 } 
__©åibuã__
 ((
∑cked
));

1728 
	#VIDIOC_QUERYCAP
 
	`_IOR
('V', 0, 
v4l2_ˇ∑bûôy
)

	)

1729 
	#VIDIOC_RESERVED
 
	`_IO
('V', 1)

	)

1730 
	#VIDIOC_ENUM_FMT
 
	`_IOWR
('V', 2, 
v4l2_fmtdesc
)

	)

1731 
	#VIDIOC_G_FMT
 
	`_IOWR
('V', 4, 
v4l2_f‹m©
)

	)

1732 
	#VIDIOC_S_FMT
 
	`_IOWR
('V', 5, 
v4l2_f‹m©
)

	)

1733 
	#VIDIOC_REQBUFS
 
	`_IOWR
('V', 8, 
v4l2_ªque°buf„rs
)

	)

1734 
	#VIDIOC_QUERYBUF
 
	`_IOWR
('V', 9, 
v4l2_buf„r
)

	)

1735 
	#VIDIOC_G_FBUF
 
	`_IOR
('V', 10, 
v4l2_‰amebuf„r
)

	)

1736 
	#VIDIOC_S_FBUF
 
	`_IOW
('V', 11, 
v4l2_‰amebuf„r
)

	)

1737 
	#VIDIOC_OVERLAY
 
	`_IOW
('V', 14, )

	)

1738 
	#VIDIOC_QBUF
 
	`_IOWR
('V', 15, 
v4l2_buf„r
)

	)

1739 
	#VIDIOC_DQBUF
 
	`_IOWR
('V', 17, 
v4l2_buf„r
)

	)

1740 
	#VIDIOC_STREAMON
 
	`_IOW
('V', 18, )

	)

1741 
	#VIDIOC_STREAMOFF
 
	`_IOW
('V', 19, )

	)

1742 
	#VIDIOC_G_PARM
 
	`_IOWR
('V', 21, 
v4l2_°ªam∑rm
)

	)

1743 
	#VIDIOC_S_PARM
 
	`_IOWR
('V', 22, 
v4l2_°ªam∑rm
)

	)

1744 
	#VIDIOC_G_STD
 
	`_IOR
('V', 23, 
v4l2_°d_id
)

	)

1745 
	#VIDIOC_S_STD
 
	`_IOW
('V', 24, 
v4l2_°d_id
)

	)

1746 
	#VIDIOC_ENUMSTD
 
	`_IOWR
('V', 25, 
v4l2_°™d¨d
)

	)

1747 
	#VIDIOC_ENUMINPUT
 
	`_IOWR
('V', 26, 
v4l2_öput
)

	)

1748 
	#VIDIOC_G_CTRL
 
	`_IOWR
('V', 27, 
v4l2_c⁄åﬁ
)

	)

1749 
	#VIDIOC_S_CTRL
 
	`_IOWR
('V', 28, 
v4l2_c⁄åﬁ
)

	)

1750 
	#VIDIOC_G_TUNER
 
	`_IOWR
('V', 29, 
v4l2_tu√r
)

	)

1751 
	#VIDIOC_S_TUNER
 
	`_IOW
('V', 30, 
v4l2_tu√r
)

	)

1752 
	#VIDIOC_G_AUDIO
 
	`_IOR
('V', 33, 
v4l2_audio
)

	)

1753 
	#VIDIOC_S_AUDIO
 
	`_IOW
('V', 34, 
v4l2_audio
)

	)

1754 
	#VIDIOC_QUERYCTRL
 
	`_IOWR
('V', 36, 
v4l2_quîy˘æ
)

	)

1755 
	#VIDIOC_QUERYMENU
 
	`_IOWR
('V', 37, 
v4l2_quîymíu
)

	)

1756 
	#VIDIOC_G_INPUT
 
	`_IOR
('V', 38, )

	)

1757 
	#VIDIOC_S_INPUT
 
	`_IOWR
('V', 39, )

	)

1758 
	#VIDIOC_G_OUTPUT
 
	`_IOR
('V', 46, )

	)

1759 
	#VIDIOC_S_OUTPUT
 
	`_IOWR
('V', 47, )

	)

1760 
	#VIDIOC_ENUMOUTPUT
 
	`_IOWR
('V', 48, 
v4l2_ouçut
)

	)

1761 
	#VIDIOC_G_AUDOUT
 
	`_IOR
('V', 49, 
v4l2_audioout
)

	)

1762 
	#VIDIOC_S_AUDOUT
 
	`_IOW
('V', 50, 
v4l2_audioout
)

	)

1763 
	#VIDIOC_G_MODULATOR
 
	`_IOWR
('V', 54, 
v4l2_moduœt‹
)

	)

1764 
	#VIDIOC_S_MODULATOR
 
	`_IOW
('V', 55, 
v4l2_moduœt‹
)

	)

1765 
	#VIDIOC_G_FREQUENCY
 
	`_IOWR
('V', 56, 
v4l2_‰equícy
)

	)

1766 
	#VIDIOC_S_FREQUENCY
 
	`_IOW
('V', 57, 
v4l2_‰equícy
)

	)

1767 
	#VIDIOC_CROPCAP
 
	`_IOWR
('V', 58, 
v4l2_¸›ˇp
)

	)

1768 
	#VIDIOC_G_CROP
 
	`_IOWR
('V', 59, 
v4l2_¸›
)

	)

1769 
	#VIDIOC_S_CROP
 
	`_IOW
('V', 60, 
v4l2_¸›
)

	)

1770 
	#VIDIOC_G_JPEGCOMP
 
	`_IOR
('V', 61, 
v4l2_j≥gcom¥essi⁄
)

	)

1771 
	#VIDIOC_S_JPEGCOMP
 
	`_IOW
('V', 62, 
v4l2_j≥gcom¥essi⁄
)

	)

1772 
	#VIDIOC_QUERYSTD
 
	`_IOR
('V', 63, 
v4l2_°d_id
)

	)

1773 
	#VIDIOC_TRY_FMT
 
	`_IOWR
('V', 64, 
v4l2_f‹m©
)

	)

1774 
	#VIDIOC_ENUMAUDIO
 
	`_IOWR
('V', 65, 
v4l2_audio
)

	)

1775 
	#VIDIOC_ENUMAUDOUT
 
	`_IOWR
('V', 66, 
v4l2_audioout
)

	)

1776 
	#VIDIOC_G_PRIORITY
 
	`_IOR
('V', 67, 
v4l2_¥i‹ôy
)

	)

1777 
	#VIDIOC_S_PRIORITY
 
	`_IOW
('V', 68, 
v4l2_¥i‹ôy
)

	)

1778 
	#VIDIOC_G_SLICED_VBI_CAP
 
	`_IOWR
('V', 69, 
v4l2_¶i˚d_vbi_ˇp
)

	)

1779 
	#VIDIOC_LOG_STATUS
 
	`_IO
('V', 70)

	)

1780 
	#VIDIOC_G_EXT_CTRLS
 
	`_IOWR
('V', 71, 
v4l2_ext_c⁄åﬁs
)

	)

1781 
	#VIDIOC_S_EXT_CTRLS
 
	`_IOWR
('V', 72, 
v4l2_ext_c⁄åﬁs
)

	)

1782 
	#VIDIOC_TRY_EXT_CTRLS
 
	`_IOWR
('V', 73, 
v4l2_ext_c⁄åﬁs
)

	)

1784 
	#VIDIOC_ENUM_FRAMESIZES
 
	`_IOWR
('V', 74, 
v4l2_‰msizìnum
)

	)

1785 
	#VIDIOC_ENUM_FRAMEINTERVALS
 
	`_IOWR
('V', 75, 
v4l2_‰mivÆíum
)

	)

1786 
	#VIDIOC_G_ENC_INDEX
 
	`_IOR
('V', 76, 
v4l2_íc_idx
)

	)

1787 
	#VIDIOC_ENCODER_CMD
 
	`_IOWR
('V', 77, 
v4l2_ícodî_cmd
)

	)

1788 
	#VIDIOC_TRY_ENCODER_CMD
 
	`_IOWR
('V', 78, 
v4l2_ícodî_cmd
)

	)

1795 
	#VIDIOC_DBG_S_REGISTER
 
	`_IOW
('V', 79, 
v4l2_dbg_ªgi°î
)

	)

1796 
	#VIDIOC_DBG_G_REGISTER
 
	`_IOWR
('V', 80, 
v4l2_dbg_ªgi°î
)

	)

1800 
	#VIDIOC_DBG_G_CHIP_IDENT
 
	`_IOWR
('V', 81, 
v4l2_dbg_chù_idít
)

	)

1803 
	#VIDIOC_S_HW_FREQ_SEEK
 
	`_IOW
('V', 82, 
v4l2_hw_‰eq_£ek
)

	)

1804 
	#VIDIOC_ENUM_DV_PRESETS
 
	`_IOWR
('V', 83, 
v4l2_dv_íum_¥e£t
)

	)

1805 
	#VIDIOC_S_DV_PRESET
 
	`_IOWR
('V', 84, 
v4l2_dv_¥e£t
)

	)

1806 
	#VIDIOC_G_DV_PRESET
 
	`_IOWR
('V', 85, 
v4l2_dv_¥e£t
)

	)

1807 
	#VIDIOC_QUERY_DV_PRESET
 
	`_IOR
('V', 86, 
v4l2_dv_¥e£t
)

	)

1808 
	#VIDIOC_S_DV_TIMINGS
 
	`_IOWR
('V', 87, 
v4l2_dv_timögs
)

	)

1809 
	#VIDIOC_G_DV_TIMINGS
 
	`_IOWR
('V', 88, 
v4l2_dv_timögs
)

	)

1810 
	#VIDIOC_DQEVENT
 
	`_IOR
('V', 89, 
v4l2_evít
)

	)

1811 
	#VIDIOC_SUBSCRIBE_EVENT
 
	`_IOW
('V', 90, 
v4l2_evít_subs¸ùti⁄
)

	)

1812 
	#VIDIOC_UNSUBSCRIBE_EVENT
 
	`_IOW
('V', 91, 
v4l2_evít_subs¸ùti⁄
)

	)

1817 #ifde‡
__OLD_VIDIOC_


1819 
	#VIDIOC_OVERLAY_OLD
 
	`_IOWR
('V', 14, )

	)

1820 
	#VIDIOC_S_PARM_OLD
 
	`_IOW
('V', 22, 
v4l2_°ªam∑rm
)

	)

1821 
	#VIDIOC_S_CTRL_OLD
 
	`_IOW
('V', 28, 
v4l2_c⁄åﬁ
)

	)

1822 
	#VIDIOC_G_AUDIO_OLD
 
	`_IOWR
('V', 33, 
v4l2_audio
)

	)

1823 
	#VIDIOC_G_AUDOUT_OLD
 
	`_IOWR
('V', 49, 
v4l2_audioout
)

	)

1824 
	#VIDIOC_CROPCAP_OLD
 
	`_IOR
('V', 58, 
v4l2_¸›ˇp
)

	)

1827 
	#BASE_VIDIOC_PRIVATE
 192

	)

	@/usr/include/math.h

25 #i‚def 
_MATH_H


26 
	#_MATH_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/huge_vÆ.h
>

35 #ifde‡
__USE_ISOC99


36 
	~<bôs/huge_vÆf.h
>

37 
	~<bôs/huge_vÆl.h
>

40 
	~<bôs/öf.h
>

43 
	~<bôs/«n.h
>

47 
	~<bôs/m©hdef.h
>

54 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

55 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

56 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

57 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

58 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

59 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

60 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

61 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

62 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

63 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

64 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

65 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

67 
	#_MdoubÀ_
 

	)

68 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

69 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

70 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

71 
	~<bôs/m©hˇŒs.h
>

72 #unde‡
_MdoubÀ_


73 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


74 #unde‡
_MdoubÀ_END_NAMESPACE


75 #unde‡
__MATH_PRECNAME


77 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


83 #i‚de‡
_MÊﬂt_


84 
	#_MÊﬂt_
 

	)

86 
	#_MdoubÀ_
 
_MÊﬂt_


	)

87 #ifde‡
__STDC__


88 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

90 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
f
 
	)
r

92 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

93 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

94 
	~<bôs/m©hˇŒs.h
>

95 #unde‡
_MdoubÀ_


96 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


97 #unde‡
_MdoubÀ_END_NAMESPACE


98 #unde‡
__MATH_PRECNAME


100 #i‡(
__STDC__
 - 0 || 
__GNUC__
 - 0) \

101 && (!
deföed
 
__NO_LONG_DOUBLE_MATH
 || deföed 
__LDBL_COMPAT
)

102 #ifde‡
__LDBL_COMPAT


104 #ifde‡
__USE_ISOC99


105 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

106 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

107 #ifde‡
__REDIRECT_NTH


108 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

109 
__∆dbl_√xâow¨df
)

110 
	`__©åibuã__
 ((
__c⁄°__
));

111 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

112 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

113 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

114 (
__x
, 
__y
),

115 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

122 #unde‡
__MATHDECL_1


123 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

124 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

125 
¨gs
, 
Æüs
)

	)

126 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

127 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

130 #i‚de‡
_Ml⁄g_doubÀ_


131 
	#_Ml⁄g_doubÀ_
 

	)

133 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

134 #ifde‡
__STDC__


135 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

137 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
l
 
	)
r

139 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

140 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

141 
	~<bôs/m©hˇŒs.h
>

142 #unde‡
_MdoubÀ_


143 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


144 #unde‡
_MdoubÀ_END_NAMESPACE


145 #unde‡
__MATH_PRECNAME


150 #unde‡
__MATHDECL_1


151 #unde‡
__MATHDECL


152 #unde‡
__MATHCALL


155 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


157 
signgam
;

162 #ifde‡
__USE_ISOC99


200 
FP_NAN
,

201 
	#FP_NAN
 
FP_NAN


	)

202 
FP_INFINITE
,

203 
	#FP_INFINITE
 
FP_INFINITE


	)

204 
FP_ZERO
,

205 
	#FP_ZERO
 
FP_ZERO


	)

206 
FP_SUBNORMAL
,

207 
	#FP_SUBNORMAL
 
FP_SUBNORMAL


	)

208 
FP_NORMAL


209 
	#FP_NORMAL
 
FP_NORMAL


	)

213 #ifde‡
__NO_LONG_DOUBLE_MATH


214 
	#Â˛assify
(
x
) \

215 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

217 
	#Â˛assify
(
x
) \

218 ( (
x
) ==  () \

219 ? 
	`__Â˛assifyf
 (
x
) \

220 :  (
x
) ==  () \

221 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

225 #ifde‡
__NO_LONG_DOUBLE_MATH


226 
	#signbô
(
x
) \

227 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

229 
	#signbô
(
x
) \

230 ( (
x
) ==  () \

231 ? 
	`__signbôf
 (
x
) \

232 :  (
x
) ==  () \

233 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

237 #ifde‡
__NO_LONG_DOUBLE_MATH


238 
	#isföôe
(
x
) \

239 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

241 
	#isföôe
(
x
) \

242 ( (
x
) ==  () \

243 ? 
	`__föôef
 (
x
) \

244 :  (
x
) ==  () \

245 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

249 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

253 #ifde‡
__NO_LONG_DOUBLE_MATH


254 
	#i¢™
(
x
) \

255 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

257 
	#i¢™
(
x
) \

258 ( (
x
) ==  () \

259 ? 
	`__i¢™f
 (
x
) \

260 :  (
x
) ==  () \

261 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

265 #ifde‡
__NO_LONG_DOUBLE_MATH


266 
	#isöf
(
x
) \

267 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

269 
	#isöf
(
x
) \

270 ( (
x
) ==  () \

271 ? 
	`__isöff
 (
x
) \

272 :  (
x
) ==  () \

273 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

277 
	#MATH_ERRNO
 1

	)

278 
	#MATH_ERREXCEPT
 2

	)

283 #i‚de‡
__FAST_MATH__


284 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

289 #ifdef 
__USE_MISC


293 
_IEEE_
 = -1,

294 
_SVID_
,

295 
_XOPEN_
,

296 
_POSIX_
,

297 
_ISOC_


298 } 
	t_LIB_VERSION_TYPE
;

303 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

307 #ifde‡
__USE_SVID


313 #ifde‡
__˝lu•lus


314 
__ex˚±i⁄


316 
ex˚±i⁄


319 
ty≥
;

320 *
«me
;

321 
¨g1
;

322 
¨g2
;

323 
ªtvÆ
;

324 
	}
};

326 #ifde‡
__˝lu•lus


327 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

329 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

332 
	#X_TLOSS
 1.41484755040568800000e+16

	)

335 
	#DOMAIN
 1

	)

336 
	#SING
 2

	)

337 
	#OVERFLOW
 3

	)

338 
	#UNDERFLOW
 4

	)

339 
	#TLOSS
 5

	)

340 
	#PLOSS
 6

	)

343 
	#HUGE
 3.40282347e+38F

	)

347 #ifde‡
__USE_XOPEN


349 
	#MAXFLOAT
 3.40282347e+38F

	)

356 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


357 
	#M_E
 2.7182818284590452354

	)

358 
	#M_LOG2E
 1.4426950408889634074

	)

359 
	#M_LOG10E
 0.43429448190325182765

	)

360 
	#M_LN2
 0.69314718055994530942

	)

361 
	#M_LN10
 2.30258509299404568402

	)

362 
	#M_PI
 3.14159265358979323846

	)

363 
	#M_PI_2
 1.57079632679489661923

	)

364 
	#M_PI_4
 0.78539816339744830962

	)

365 
	#M_1_PI
 0.31830988618379067154

	)

366 
	#M_2_PI
 0.63661977236758134308

	)

367 
	#M_2_SQRTPI
 1.12837916709551257390

	)

368 
	#M_SQRT2
 1.41421356237309504880

	)

369 
	#M_SQRT1_2
 0.70710678118654752440

	)

375 #ifde‡
__USE_GNU


376 
	#M_El
 2.7182818284590452353602874713526625L

	)

377 
	#M_LOG2El
 1.4426950408889634073599246810018921L

	)

378 
	#M_LOG10El
 0.4342944819032518276511289189166051L

	)

379 
	#M_LN2l
 0.6931471805599453094172321214581766L

	)

380 
	#M_LN10l
 2.3025850929940456840179914546843642L

	)

381 
	#M_PIl
 3.1415926535897932384626433832795029L

	)

382 
	#M_PI_2l
 1.5707963267948966192313216916397514L

	)

383 
	#M_PI_4l
 0.7853981633974483096156608458198757L

	)

384 
	#M_1_PIl
 0.3183098861837906715377675267450287L

	)

385 
	#M_2_PIl
 0.6366197723675813430755350534900574L

	)

386 
	#M_2_SQRTPIl
 1.1283791670955125738961589031215452L

	)

387 
	#M_SQRT2l
 1.4142135623730950488016887242096981L

	)

388 
	#M_SQRT1_2l
 0.7071067811865475244008443621048490L

	)

395 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


396 
	#__NO_MATH_INLINES
 1

	)

399 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

406 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

407 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

408 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

409 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

410 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

411 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

415 #ifde‡
__USE_EXTERN_INLINES


416 
	~<bôs/m©hölöe.h
>

419 #ifde‡
__USE_ISOC99


423 #i‚de‡
isgª©î


424 
	#isgª©î
(
x
, 
y
) \

425 (
__exãnsi⁄__
 \

426 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

427 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

431 #i‚de‡
isgª©îequÆ


432 
	#isgª©îequÆ
(
x
, 
y
) \

433 (
__exãnsi⁄__
 \

434 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

435 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

439 #i‚de‡
i¶ess


440 
	#i¶ess
(
x
, 
y
) \

441 (
__exãnsi⁄__
 \

442 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

443 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

447 #i‚de‡
i¶es£quÆ


448 
	#i¶es£quÆ
(
x
, 
y
) \

449 (
__exãnsi⁄__
 \

450 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

451 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

455 #i‚de‡
i¶essgª©î


456 
	#i¶essgª©î
(
x
, 
y
) \

457 (
__exãnsi⁄__
 \

458 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

459 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

463 #i‚de‡
isun‹dîed


464 
	#isun‹dîed
(
u
, 
v
) \

465 (
__exãnsi⁄__
 \

466 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

467 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

472 
	g__END_DECLS


	@/usr/include/netdb.h

23 #i‚def 
_NETDB_H


24 
	#_NETDB_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<√töë/ö.h
>

29 
	~<°döt.h
>

30 #ifde‡
__USE_MISC


33 
	~<Ωc/√tdb.h
>

36 #ifde‡
__USE_GNU


37 
	#__√ed_sigevít_t


	)

38 
	~<bôs/sigöfo.h
>

39 
	#__√ed_time•ec


	)

40 
	~<time.h
>

43 
	~<bôs/√tdb.h
>

46 
	#_PATH_HEQUIV
 "/ëc/ho°s.equiv"

	)

47 
	#_PATH_HOSTS
 "/ëc/ho°s"

	)

48 
	#_PATH_NETWORKS
 "/ëc/√tw‹ks"

	)

49 
	#_PATH_NSSWITCH_CONF
 "/ëc/nsswôch.c⁄f"

	)

50 
	#_PATH_PROTOCOLS
 "/ëc/¥Ÿocﬁs"

	)

51 
	#_PATH_SERVICES
 "/ëc/£rvi˚s"

	)

54 
	g__BEGIN_DECLS


56 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


59 
	#h_î∫o
 (*
	`__h_î∫o_loˇti⁄
 ())

	)

62 *
	$__h_î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

66 
	#HOST_NOT_FOUND
 1

	)

67 
	#TRY_AGAIN
 2

	)

69 
	#NO_RECOVERY
 3

	)

71 
	#NO_DATA
 4

	)

74 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


75 
	#NETDB_INTERNAL
 -1

	)

76 
	#NETDB_SUCCESS
 0

	)

77 
	#NO_ADDRESS
 
NO_DATA


	)

80 #ifde‡
__USE_XOPEN2K


82 
	#IPPORT_RESERVED
 1024

	)

85 #ifde‡
__USE_GNU


87 
	#SCOPE_DELIMITER
 '%'

	)

90 #ifde‡
__USE_MISC


93 
	$hîr‹
 (
__c⁄°
 *
__°r
Ë
__THROW
;

96 
__c⁄°
 *
	$h°ªº‹
 (
__îr_num
Ë
__THROW
;

101 
	sho°ít


103 *
h_«me
;

104 **
h_Æü£s
;

105 
h_addπy≥
;

106 
h_Àngth
;

107 **
h_addr_li°
;

108 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


109 
	#h_addr
 
h_addr_li°
[0]

	)

118 
	`£tho°ít
 (
__°ay_›í
);

124 
	`ídho°ít
 ();

131 
ho°ít
 *
	`gëho°ít
 ();

138 
ho°ít
 *
	`gëho°byaddr
 (
__c⁄°
 *
__addr
, 
__sockÀn_t
 
__Àn
,

139 
__ty≥
);

145 
ho°ít
 *
	`gëho°by«me
 (
__c⁄°
 *
__«me
);

147 #ifde‡
__USE_MISC


156 
ho°ít
 *
	`gëho°by«me2
 (
__c⁄°
 *
__«me
, 
__af
);

168 
	`gëho°ít_r
 (
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

169 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

170 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

171 *
__ª°ri˘
 
__h_î∫›
);

173 
	`gëho°byaddr_r
 (
__c⁄°
 *
__ª°ri˘
 
__addr
, 
__sockÀn_t
 
__Àn
,

174 
__ty≥
,

175 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

176 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

177 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

178 *
__ª°ri˘
 
__h_î∫›
);

180 
	`gëho°by«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

181 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

182 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

183 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

184 *
__ª°ri˘
 
__h_î∫›
);

186 
	`gëho°by«me2_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, 
__af
,

187 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

188 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

189 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

190 *
__ª°ri˘
 
__h_î∫›
);

199 
	`£äëít
 (
__°ay_›í
);

205 
	`íd√ã¡
 ();

212 
√ã¡
 *
	`gë√ã¡
 ();

219 
√ã¡
 *
	`gë√tbyaddr
 (
uöt32_t
 
__√t
, 
__ty≥
);

225 
√ã¡
 *
	`gë√tby«me
 (
__c⁄°
 *
__«me
);

227 #ifdef 
__USE_MISC


238 
	`gë√ã¡_r
 (
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

239 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

240 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

241 *
__ª°ri˘
 
__h_î∫›
);

243 
	`gë√tbyaddr_r
 (
uöt32_t
 
__√t
, 
__ty≥
,

244 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

245 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

246 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

247 *
__ª°ri˘
 
__h_î∫›
);

249 
	`gë√tby«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

250 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

251 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

252 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

253 *
__ª°ri˘
 
__h_î∫›
);

258 
	s£rvít


260 *
s_«me
;

261 **
s_Æü£s
;

262 
s_p‹t
;

263 *
s_¥Ÿo
;

271 
	`£t£rvít
 (
__°ay_›í
);

277 
	`íd£rvít
 ();

284 
£rvít
 *
	`gë£rvít
 ();

291 
£rvít
 *
	`gë£rvby«me
 (
__c⁄°
 *
__«me
,

292 
__c⁄°
 *
__¥Ÿo
);

299 
£rvít
 *
	`gë£rvbyp‹t
 (
__p‹t
, 
__c⁄°
 *
__¥Ÿo
);

302 #ifdef 
__USE_MISC


310 
	`gë£rvít_r
 (
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

311 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

312 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

314 
	`gë£rvby«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

315 
__c⁄°
 *
__ª°ri˘
 
__¥Ÿo
,

316 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

317 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

318 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

320 
	`gë£rvbyp‹t_r
 (
__p‹t
, 
__c⁄°
 *
__ª°ri˘
 
__¥Ÿo
,

321 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

322 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

323 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

328 
	s¥Ÿ€¡


330 *
p_«me
;

331 **
p_Æü£s
;

332 
p_¥Ÿo
;

340 
	`£çrŸ€¡
 (
__°ay_›í
);

346 
	`íd¥Ÿ€¡
 ();

353 
¥Ÿ€¡
 *
	`gë¥Ÿ€¡
 ();

359 
¥Ÿ€¡
 *
	`gë¥Ÿoby«me
 (
__c⁄°
 *
__«me
);

365 
¥Ÿ€¡
 *
	`gë¥Ÿobynumbî
 (
__¥Ÿo
);

368 #ifdef 
__USE_MISC


376 
	`gë¥Ÿ€¡_r
 (
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

377 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

378 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

380 
	`gë¥Ÿoby«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

381 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

382 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

383 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

385 
	`gë¥Ÿobynumbî_r
 (
__¥Ÿo
,

386 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

387 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

388 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

397 
	`£äëgª¡
 (
__c⁄°
 *
__√tgroup
);

405 
	`íd√tgª¡
 ();

414 
	`gë√tgª¡
 (**
__ª°ri˘
 
__ho°p
,

415 **
__ª°ri˘
 
__u£Ω
,

416 **
__ª°ri˘
 
__domaöp
);

425 
	`ö√tgr
 (
__c⁄°
 *
__√tgroup
, __c⁄° *
__ho°
,

426 
__c⁄°
 *
__u£r
, __c⁄° *
__domaö
);

434 
	`gë√tgª¡_r
 (**
__ª°ri˘
 
__ho°p
,

435 **
__ª°ri˘
 
__u£Ω
,

436 **
__ª°ri˘
 
__domaöp
,

437 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
);

441 #ifde‡
__USE_BSD


453 
	`rcmd
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

454 
__c⁄°
 *
__ª°ri˘
 
__locu£r
,

455 
__c⁄°
 *
__ª°ri˘
 
__ªmu£r
,

456 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

465 
	`rcmd_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

466 
__c⁄°
 *
__ª°ri˘
 
__locu£r
,

467 
__c⁄°
 *
__ª°ri˘
 
__ªmu£r
,

468 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

469 
ß_Ámûy_t
 
__af
);

481 
	`ªxec
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

482 
__c⁄°
 *
__ª°ri˘
 
__«me
,

483 
__c⁄°
 *
__ª°ri˘
 
__∑ss
,

484 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

493 
	`ªxec_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

494 
__c⁄°
 *
__ª°ri˘
 
__«me
,

495 
__c⁄°
 *
__ª°ri˘
 
__∑ss
,

496 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

497 
ß_Ámûy_t
 
__af
);

507 
	`ru£rok
 (
__c⁄°
 *
__rho°
, 
__su£r
,

508 
__c⁄°
 *
__ªmu£r
, __c⁄° *
__locu£r
);

517 
	`ru£rok_af
 (
__c⁄°
 *
__rho°
, 
__su£r
,

518 
__c⁄°
 *
__ªmu£r
, __c⁄° *
__locu£r
,

519 
ß_Ámûy_t
 
__af
);

530 
	`úu£rok
 (
uöt32_t
 
__øddr
, 
__su£r
,

531 
__c⁄°
 *
__ªmu£r
, __c⁄° *
__locu£r
);

541 
	`úu£rok_af
 (
__c⁄°
 *
__øddr
, 
__su£r
,

542 
__c⁄°
 *
__ªmu£r
, __c⁄° *
__locu£r
,

543 
ß_Ámûy_t
 
__af
);

553 
	`ºesvp‹t
 (*
__Æp‹t
);

562 
	`ºesvp‹t_af
 (*
__Æp‹t
, 
ß_Ámûy_t
 
__af
);

567 #ifdef 
__USE_POSIX


569 
	saddröfo


571 
ai_Êags
;

572 
ai_Ámûy
;

573 
ai_sockty≥
;

574 
ai_¥Ÿocﬁ
;

575 
sockÀn_t
 
ai_addæí
;

576 
sockaddr
 *
ai_addr
;

577 *
ai_ˇn⁄«me
;

578 
addröfo
 *
ai_√xt
;

581 #ifde‡
__USE_GNU


583 
	sgaicb


585 c⁄° *
¨_«me
;

586 c⁄° *
¨_£rvi˚
;

587 c⁄° 
addröfo
 *
¨_ªque°
;

588 
addröfo
 *
¨_ªsu…
;

590 
__ªtu∫
;

591 
__unu£d
[5];

595 
	#GAI_WAIT
 0

	)

596 
	#GAI_NOWAIT
 1

	)

600 
	#AI_PASSIVE
 0x0001

	)

601 
	#AI_CANONNAME
 0x0002

	)

602 
	#AI_NUMERICHOST
 0x0004

	)

603 
	#AI_V4MAPPED
 0x0008

	)

604 
	#AI_ALL
 0x0010

	)

605 
	#AI_ADDRCONFIG
 0x0020

	)

607 #ifde‡
__USE_GNU


608 
	#AI_IDN
 0x0040

	)

611 
	#AI_CANONIDN
 0x0080

	)

612 
	#AI_IDN_ALLOW_UNASSIGNED
 0x0100

	)

614 
	#AI_IDN_USE_STD3_ASCII_RULES
 0x0200

	)

617 
	#AI_NUMERICSERV
 0x0400

	)

620 
	#EAI_BADFLAGS
 -1

	)

621 
	#EAI_NONAME
 -2

	)

622 
	#EAI_AGAIN
 -3

	)

623 
	#EAI_FAIL
 -4

	)

624 
	#EAI_FAMILY
 -6

	)

625 
	#EAI_SOCKTYPE
 -7

	)

626 
	#EAI_SERVICE
 -8

	)

627 
	#EAI_MEMORY
 -10

	)

628 
	#EAI_SYSTEM
 -11

	)

629 
	#EAI_OVERFLOW
 -12

	)

630 #ifde‡
__USE_GNU


631 
	#EAI_NODATA
 -5

	)

632 
	#EAI_ADDRFAMILY
 -9

	)

633 
	#EAI_INPROGRESS
 -100

	)

634 
	#EAI_CANCELED
 -101

	)

635 
	#EAI_NOTCANCELED
 -102

	)

636 
	#EAI_ALLDONE
 -103

	)

637 
	#EAI_INTR
 -104

	)

638 
	#EAI_IDN_ENCODE
 -105

	)

641 #ifde‡
__USE_MISC


642 
	#NI_MAXHOST
 1025

	)

643 
	#NI_MAXSERV
 32

	)

646 
	#NI_NUMERICHOST
 1

	)

647 
	#NI_NUMERICSERV
 2

	)

648 
	#NI_NOFQDN
 4

	)

649 
	#NI_NAMEREQD
 8

	)

650 
	#NI_DGRAM
 16

	)

651 #ifde‡
__USE_GNU


652 
	#NI_IDN
 32

	)

653 
	#NI_IDN_ALLOW_UNASSIGNED
 64

	)

655 
	#NI_IDN_USE_STD3_ASCII_RULES
 128

	)

664 
	`gëaddröfo
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

665 
__c⁄°
 *
__ª°ri˘
 
__£rvi˚
,

666 
__c⁄°
 
addröfo
 *
__ª°ri˘
 
__ªq
,

667 
addröfo
 **
__ª°ri˘
 
__∑i
);

670 
	$‰ìaddröfo
 (
addröfo
 *
__ai
Ë
__THROW
;

673 
__c⁄°
 *
	$gai_°ªº‹
 (
__ecode
Ë
__THROW
;

679 
	`gë«meöfo
 (
__c⁄°
 
sockaddr
 *
__ª°ri˘
 
__ß
,

680 
sockÀn_t
 
__ßÀn
, *
__ª°ri˘
 
__ho°
,

681 
sockÀn_t
 
__ho°Àn
, *
__ª°ri˘
 
__£rv
,

682 
sockÀn_t
 
__£rvÀn
, 
__Êags
);

685 #ifde‡
__USE_GNU


694 
	`gëaddröfo_a
 (
__mode
, 
gaicb
 *
__li°
[
__ª°ri˘_¨r
],

695 
__ít
, 
sigevít
 *
__ª°ri˘
 
__sig
);

705 
	`gai_su•íd
 (
__c⁄°
 
gaicb
 *__c⁄° 
__li°
[], 
__ít
,

706 
__c⁄°
 
time•ec
 *
__timeout
);

709 
	$gai_îr‹
 (
gaicb
 *
__ªq
Ë
__THROW
;

712 
	$gai_ˇn˚l
 (
gaicb
 *
__gaicbp
Ë
__THROW
;

715 
__END_DECLS


	@/usr/include/netinet/in.h

20 #i‚def 
_NETINET_IN_H


21 
	#_NETINET_IN_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<°döt.h
>

25 
	~<sys/sockë.h
>

26 
	~<bôs/ty≥s.h
>

29 
__BEGIN_DECLS


34 
	mIPPROTO_IP
 = 0,

35 
	#IPPROTO_IP
 
IPPROTO_IP


	)

36 
	mIPPROTO_HOPOPTS
 = 0,

37 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

38 
	mIPPROTO_ICMP
 = 1,

39 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

40 
	mIPPROTO_IGMP
 = 2,

41 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

42 
	mIPPROTO_IPIP
 = 4,

43 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

44 
	mIPPROTO_TCP
 = 6,

45 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

46 
	mIPPROTO_EGP
 = 8,

47 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

48 
	mIPPROTO_PUP
 = 12,

49 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

50 
	mIPPROTO_UDP
 = 17,

51 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

52 
	mIPPROTO_IDP
 = 22,

53 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

54 
	mIPPROTO_TP
 = 29,

55 
	#IPPROTO_TP
 
IPPROTO_TP


	)

56 
	mIPPROTO_DCCP
 = 33,

57 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

58 
	mIPPROTO_IPV6
 = 41,

59 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

60 
	mIPPROTO_ROUTING
 = 43,

61 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

62 
	mIPPROTO_FRAGMENT
 = 44,

63 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

64 
	mIPPROTO_RSVP
 = 46,

65 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

66 
	mIPPROTO_GRE
 = 47,

67 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

68 
	mIPPROTO_ESP
 = 50,

69 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

70 
	mIPPROTO_AH
 = 51,

71 
	#IPPROTO_AH
 
IPPROTO_AH


	)

72 
	mIPPROTO_ICMPV6
 = 58,

73 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

74 
	mIPPROTO_NONE
 = 59,

75 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

76 
	mIPPROTO_DSTOPTS
 = 60,

77 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

78 
	mIPPROTO_MTP
 = 92,

79 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

80 
	mIPPROTO_ENCAP
 = 98,

81 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

82 
	mIPPROTO_PIM
 = 103,

83 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

84 
	mIPPROTO_COMP
 = 108,

85 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

86 
	mIPPROTO_SCTP
 = 132,

87 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

88 
	mIPPROTO_UDPLITE
 = 136,

89 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

90 
	mIPPROTO_RAW
 = 255,

91 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

92 
	mIPPROTO_MAX


97 
uöt16_t
 
	tö_p‹t_t
;

102 
	mIPPORT_ECHO
 = 7,

103 
	mIPPORT_DISCARD
 = 9,

104 
	mIPPORT_SYSTAT
 = 11,

105 
	mIPPORT_DAYTIME
 = 13,

106 
	mIPPORT_NETSTAT
 = 15,

107 
	mIPPORT_FTP
 = 21,

108 
	mIPPORT_TELNET
 = 23,

109 
	mIPPORT_SMTP
 = 25,

110 
	mIPPORT_TIMESERVER
 = 37,

111 
	mIPPORT_NAMESERVER
 = 42,

112 
	mIPPORT_WHOIS
 = 43,

113 
	mIPPORT_MTP
 = 57,

115 
	mIPPORT_TFTP
 = 69,

116 
	mIPPORT_RJE
 = 77,

117 
	mIPPORT_FINGER
 = 79,

118 
	mIPPORT_TTYLINK
 = 87,

119 
	mIPPORT_SUPDUP
 = 95,

122 
	mIPPORT_EXECSERVER
 = 512,

123 
	mIPPORT_LOGINSERVER
 = 513,

124 
	mIPPORT_CMDSERVER
 = 514,

125 
	mIPPORT_EFSSERVER
 = 520,

128 
	mIPPORT_BIFFUDP
 = 512,

129 
	mIPPORT_WHOSERVER
 = 513,

130 
	mIPPORT_ROUTESERVER
 = 520,

133 
	mIPPORT_RESERVED
 = 1024,

136 
	mIPPORT_USERRESERVED
 = 5000

141 
uöt32_t
 
	tö_addr_t
;

142 
	sö_addr


144 
ö_addr_t
 
	ms_addr
;

153 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

154 
	#IN_CLASSA_NET
 0xff000000

	)

155 
	#IN_CLASSA_NSHIFT
 24

	)

156 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

157 
	#IN_CLASSA_MAX
 128

	)

159 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

160 
	#IN_CLASSB_NET
 0xffff0000

	)

161 
	#IN_CLASSB_NSHIFT
 16

	)

162 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

163 
	#IN_CLASSB_MAX
 65536

	)

165 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

166 
	#IN_CLASSC_NET
 0xffffff00

	)

167 
	#IN_CLASSC_NSHIFT
 8

	)

168 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

170 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

171 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

173 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

174 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

177 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

179 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

181 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

184 
	#IN_LOOPBACKNET
 127

	)

186 #i‚de‡
INADDR_LOOPBACK


187 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

191 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

192 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

193 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

194 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

198 
	sö6_addr


202 
uöt8_t
 
	m__u6_addr8
[16];

203 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


204 
uöt16_t
 
	m__u6_addr16
[8];

205 
uöt32_t
 
	m__u6_addr32
[4];

207 } 
	m__ö6_u
;

208 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

209 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


210 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

211 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

215 c⁄° 
ö6_addr
 
ö6addr_™y
;

216 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

217 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

218 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

220 
	#INET_ADDRSTRLEN
 16

	)

221 
	#INET6_ADDRSTRLEN
 46

	)

225 
	ssockaddr_ö


227 
__SOCKADDR_COMMON
 (
sö_
);

228 
ö_p‹t_t
 
	msö_p‹t
;

229 
ö_addr
 
	msö_addr
;

232 
	msö_zîo
[ (
sockaddr
) -

233 
__SOCKADDR_COMMON_SIZE
 -

234  (
ö_p‹t_t
) -

235  (
ö_addr
)];

239 
	ssockaddr_ö6


241 
__SOCKADDR_COMMON
 (
sö6_
);

242 
ö_p‹t_t
 
	msö6_p‹t
;

243 
uöt32_t
 
	msö6_Êowöfo
;

244 
ö6_addr
 
	msö6_addr
;

245 
uöt32_t
 
	msö6_sc›e_id
;

249 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


251 
	sù_mªq


254 
ö_addr
 
	mimr_mu…üddr
;

257 
ö_addr
 
	mimr_öãrÁ˚
;

260 
	sù_mªq_sour˚


263 
ö_addr
 
	mimr_mu…üddr
;

266 
ö_addr
 
	mimr_öãrÁ˚
;

269 
ö_addr
 
	mimr_sour˚addr
;

275 
	sùv6_mªq


278 
ö6_addr
 
	mùv6mr_mu…üddr
;

281 
	mùv6mr_öãrÁ˚
;

285 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


287 
	sgroup_ªq


290 
uöt32_t
 
	mgr_öãrÁ˚
;

293 
sockaddr_°‹age
 
	mgr_group
;

296 
	sgroup_sour˚_ªq


299 
uöt32_t
 
	mg§_öãrÁ˚
;

302 
sockaddr_°‹age
 
	mg§_group
;

305 
sockaddr_°‹age
 
	mg§_sour˚
;

310 
	sù_msfûãr


313 
ö_addr
 
	mimsf_mu…üddr
;

316 
ö_addr
 
	mimsf_öãrÁ˚
;

319 
uöt32_t
 
	mimsf_fmode
;

322 
uöt32_t
 
	mimsf_num§c
;

324 
ö_addr
 
	mimsf_¶i°
[1];

327 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

328 -  (
ö_addr
) \

329 + (
num§c
Ë*  (
ö_addr
))

	)

331 
	sgroup_fûãr


334 
uöt32_t
 
	mgf_öãrÁ˚
;

337 
sockaddr_°‹age
 
	mgf_group
;

340 
uöt32_t
 
	mgf_fmode
;

343 
uöt32_t
 
	mgf_num§c
;

345 
sockaddr_°‹age
 
	mgf_¶i°
[1];

348 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

349 -  (
sockaddr_°‹age
) \

350 + ((
num§c
) \

351 *  (
sockaddr_°‹age
)))

	)

356 
	~<bôs/ö.h
>

365 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

366 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

367 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

368 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

369 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

370 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

371 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

373 
	~<ídün.h
>

376 
	~<bôs/byãsw≠.h
>

378 #ifde‡
__OPTIMIZE__


382 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


385 
	#¡ohl
(
x
Ë(x)

	)

386 
	#¡ohs
(
x
Ë(x)

	)

387 
	#ht⁄l
(
x
Ë(x)

	)

388 
	#ht⁄s
(
x
Ë(x)

	)

390 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


391 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

392 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

393 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

394 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

399 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

400 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

401 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

402 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

403 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =0)

	)

405 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

406 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

407 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

408 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

409 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

411 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((
__c⁄°
 
uöt8_t
 *Ë◊))[0] =0xff)

	)

413 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

414 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

415 =
	`ht⁄l
 (0x„800000))

	)

417 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

418 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

419 =
	`ht⁄l
 (0x„c00000))

	)

421 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

422 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

423 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

424 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

426 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

427 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

428 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

429 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0) \

430 && (
	`¡ohl
 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

432 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

433 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] =((__c⁄° uöt32_à*Ë(
b
))[0]) \

434 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] =((__c⁄° uöt32_à*Ë(
b
))[1]) \

435 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =((__c⁄° uöt32_à*Ë(
b
))[2]) \

436 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =((__c⁄° uöt32_à*Ë(
b
))[3]))

	)

438 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


440 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

443 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

444 
__THROW
;

448 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

449 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

450 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

452 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

453 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

454 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

456 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

457 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

458 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

460 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

461 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

462 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

464 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

465 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

466 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

469 #ifde‡
__USE_GNU


471 
	sö6_pktöfo


473 
ö6_addr
 
ùi6_addr
;

474 
ùi6_ifödex
;

478 
	sù6_mtuöfo


480 
sockaddr_ö6
 
ù6m_addr
;

481 
uöt32_t
 
ù6m_mtu
;

486 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

487 
__THROW
 
__©åibuã_dïªˇãd__
;

488 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

489 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

490 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

491 
__c⁄°
 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

492 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

493 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

494 
__mu…x
, 
__∂usy
)

495 
__THROW
 
__©åibuã_dïªˇãd__
;

496 
	$öë6_›ti⁄_√xt
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

497 
uöt8_t
 **
__çåp
)

498 
__THROW
 
__©åibuã_dïªˇãd__
;

499 
	$öë6_›ti⁄_föd
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

500 
uöt8_t
 **
__çåp
, 
__ty≥
)

501 
__THROW
 
__©åibuã_dïªˇãd__
;

505 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

506 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

507 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

508 **
__d©abuÂ
Ë
__THROW
;

509 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

510 
__THROW
;

511 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

512 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

513 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

514 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

515 **
__d©abuÂ
Ë
__THROW
;

516 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

517 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

518 **
__d©abuÂ
Ë
__THROW
;

519 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

520 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

524 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

525 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

526 
__£gmíts
Ë
__THROW
;

527 
	$öë6_πh_add
 (*
__bp
, 
__c⁄°
 
ö6_addr
 *
__addr
Ë
__THROW
;

528 
	$öë6_πh_ªvî£
 (
__c⁄°
 *
__ö
, *
__out
Ë
__THROW
;

529 
	$öë6_πh_£gmíts
 (
__c⁄°
 *
__bp
Ë
__THROW
;

530 
ö6_addr
 *
	$öë6_πh_gëaddr
 (
__c⁄°
 *
__bp
, 
__ödex
)

531 
__THROW
;

537 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

538 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

539 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

540 
__THROW
;

543 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

544 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

545 
uöt32_t
 
__num§c
,

546 
__c⁄°
 
ö_addr
 *
__¶i°
)

547 
__THROW
;

551 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

552 
__c⁄°
 
sockaddr
 *
__group
,

553 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

554 
uöt32_t
 *
__num§c
,

555 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

558 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

559 
__c⁄°
 
sockaddr
 *
__group
,

560 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

561 
uöt32_t
 
__num§c
,

562 
__c⁄°
 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

565 
__END_DECLS


	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	~<bôs/±hªadty≥s.h
>

29 
	~<bôs/£tjmp.h
>

30 
	~<bôs/w‹dsize.h
>

36 
	mPTHREAD_CREATE_JOINABLE
,

37 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

38 
	mPTHREAD_CREATE_DETACHED


39 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

46 
	mPTHREAD_MUTEX_TIMED_NP
,

47 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

48 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

49 
	mPTHREAD_MUTEX_ADAPTIVE_NP


50 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


52 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

53 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

54 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

55 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


57 #ifde‡
__USE_GNU


59 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


64 #ifde‡
__USE_XOPEN2K


68 
	mPTHREAD_MUTEX_STALLED
,

69 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

70 
	mPTHREAD_MUTEX_ROBUST
,

71 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


76 #ifde‡
__USE_UNIX98


80 
	mPTHREAD_PRIO_NONE
,

81 
	mPTHREAD_PRIO_INHERIT
,

82 
	mPTHREAD_PRIO_PROTECT


88 #i‡
__WORDSIZE
 == 64

89 
	#PTHREAD_MUTEX_INITIALIZER
 \

90 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

91 #ifde‡
__USE_GNU


92 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

100 
	#PTHREAD_MUTEX_INITIALIZER
 \

101 { { 0, 0, 0, 0, 0, { 0 } } }

	)

102 #ifde‡
__USE_GNU


103 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

114 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


117 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

119 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

120 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


124 
	#PTHREAD_RWLOCK_INITIALIZER
 \

125 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

126 #ifde‡
__USE_GNU


127 #i‡
__WORDSIZE
 == 64

128 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

130 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

132 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


133 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

134 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

135 0, 0, 0, 0 } }

	)

137 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

138 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

139 0 } }

	)

149 
	mPTHREAD_INHERIT_SCHED
,

150 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

151 
	mPTHREAD_EXPLICIT_SCHED


152 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

159 
	mPTHREAD_SCOPE_SYSTEM
,

160 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

161 
	mPTHREAD_SCOPE_PROCESS


162 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

169 
	mPTHREAD_PROCESS_PRIVATE
,

170 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

171 
	mPTHREAD_PROCESS_SHARED


172 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

178 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

182 
	s_±hªad_˛ónup_buf„r


184 (*
	m__routöe
) (*);

185 *
	m__¨g
;

186 
	m__ˇn˚…y≥
;

187 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

193 
	mPTHREAD_CANCEL_ENABLE
,

194 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

195 
	mPTHREAD_CANCEL_DISABLE


196 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

200 
	mPTHREAD_CANCEL_DEFERRED
,

201 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

202 
	mPTHREAD_CANCEL_ASYNCHRONOUS


203 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

205 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

209 
	#PTHREAD_ONCE_INIT
 0

	)

212 #ifde‡
__USE_XOPEN2K


216 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

220 
__BEGIN_DECLS


225 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

226 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

227 *(*
__°¨t_routöe
) (*),

228 *
__ª°ri˘
 
__¨g
Ë
__THROW
 
__n⁄nuŒ
 ((1, 3));

234 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

242 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

244 #ifde‡
__USE_GNU


247 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

255 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

256 
__c⁄°
 
time•ec
 *
__ab°ime
);

263 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

267 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

270 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

278 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

281 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

282 
__THROW
 
	`__n⁄nuŒ
 ((1));

285 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

286 *
__dëach°©e
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

290 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

291 
__dëach°©e
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

297 
size_t
 *
__gu¨dsize
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

301 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

302 
size_t
 
__gu¨dsize
)

303 
__THROW
 
	`__n⁄nuŒ
 ((1));

307 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


308 
__©å
,

309 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

310 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

313 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

314 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


315 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

318 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


319 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

323 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


328 
__©å
, *
__ª°ri˘
 
__öhîô
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

333 
__öhîô
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

338 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

339 *
__ª°ri˘
 
__sc›e
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

343 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

344 
__THROW
 
	`__n⁄nuŒ
 ((1));

347 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


348 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

349 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

355 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

356 *
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

360 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


361 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

367 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

368 
size_t
 
__°acksize
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1));

371 #ifde‡
__USE_XOPEN2K


373 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

374 **
__ª°ri˘
 
__°ackaddr
,

375 
size_t
 *
__ª°ri˘
 
__°acksize
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

381 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

382 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

385 #ifde‡
__USE_GNU


388 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

389 
size_t
 
__˝u£tsize
,

390 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

395 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

396 
size_t
 
__˝u£tsize
,

397 
˝u_£t_t
 *
__˝u£t
)

398 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

404 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

405 
__THROW
 
	`__n⁄nuŒ
 ((2));

413 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

414 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

415 
__THROW
 
	`__n⁄nuŒ
 ((3));

418 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

419 *
__ª°ri˘
 
__pﬁicy
,

420 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

424 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

425 
__THROW
;

428 #ifde‡
__USE_GNU


430 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

431 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

435 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, 
__c⁄°
 *
__«me
)

436 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 #ifde‡
__USE_UNIX98


442 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

445 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

448 #ifde‡
__USE_GNU


453 
	$±hªad_yõld
 (Ë
__THROW
;

458 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

459 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

460 
__THROW
 
	`__n⁄nuŒ
 ((3));

463 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

464 
˝u_£t_t
 *
__˝u£t
)

465 
__THROW
 
	`__n⁄nuŒ
 ((3));

478 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

479 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

490 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

494 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

497 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

502 
	`±hªad_ã°ˇn˚l
 ();

511 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

512 
__mask_was_ßved
;

513 } 
__ˇn˚l_jmp_buf
[1];

514 *
__∑d
[4];

515 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

518 #i‚de‡
__˛ónup_f˘_©åibuã


519 
	#__˛ónup_f˘_©åibuã


	)

524 
	s__±hªad_˛ónup_‰ame


526 (*
__ˇn˚l_routöe
) (*);

527 *
__ˇn˚l_¨g
;

528 
__do_ô
;

529 
__ˇn˚l_ty≥
;

532 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


533 #ifde‡
__˝lu•lus


535 ˛as†
	c__±hªad_˛ónup_˛ass


537 (*
__ˇn˚l_routöe
) (*);

538 *
__ˇn˚l_¨g
;

539 
__do_ô
;

540 
__ˇn˚l_ty≥
;

542 
public
:

543 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

544 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

545 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

546 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

547 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

548 &
__ˇn˚l_ty≥
); 
	}
}

549 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

559 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

561 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

565 
	#±hªad_˛ónup_p›
(
execuã
) \

566 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

567 } 0)

	)

569 #ifde‡
__USE_GNU


573 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

575 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

576 
__˛‰ame
.
	`__de„r
 ()

	)

581 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

582 
__˛‰ame
.
	`__ª°‹e
 (); \

583 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

584 } 0)

	)

591 
__exã∫_ölöe
 

592 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

594 i‡(
__‰ame
->
__do_ô
)

595 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

596 
	}
}

605 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

607 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

608 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

609 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

610 .
__do_ô
 = 1 };

	)

614 
	#±hªad_˛ónup_p›
(
execuã
) \

615 
__˛‰ame
.
__do_ô
 = (
execuã
); \

616 } 0)

	)

618 #ifde‡
__USE_GNU


622 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

624 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

625 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

626 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

627 .
__do_ô
 = 1 }; \

628 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

629 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

634 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

635 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

636 
__˛‰ame
.
__do_ô
 = (
execuã
); \

637 } 0)

	)

648 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

650 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

651 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

652 *
__ˇn˚l_¨g
 = (
¨g
); \

653 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

654 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

655 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

657 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

658 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

662 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

663 dÿ{

	)

664 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

665 
__˛ónup_f˘_©åibuã
;

669 
	#±hªad_˛ónup_p›
(
execuã
) \

672 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

673 i‡(
execuã
) \

674 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

675 } 0)

	)

676 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

677 
__˛ónup_f˘_©åibuã
;

679 #ifde‡
__USE_GNU


683 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

685 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

686 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

687 *
__ˇn˚l_¨g
 = (
¨g
); \

688 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

689 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

690 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

692 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

693 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

697 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

698 dÿ{

	)

699 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

700 
__˛ónup_f˘_©åibuã
;

705 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

708 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

709 i‡(
execuã
) \

710 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

711 
	}
} 0)

	)

712 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

713 
__˛ónup_f˘_©åibuã
;

717 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

718 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

719 #i‚de‡
SHARED


720 
	`__©åibuã__
 ((
__wók__
))

726 
__jmp_buf_èg
;

727 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

733 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

734 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

735 
__THROW
 
	`__n⁄nuŒ
 ((1));

738 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

739 
__THROW
 
	`__n⁄nuŒ
 ((1));

742 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

743 
__THROW
 
	`__n⁄nuŒ
 ((1));

746 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

747 
__THROW
 
	`__n⁄nuŒ
 ((1));

749 #ifde‡
__USE_XOPEN2K


751 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

752 
__c⁄°
 
time•ec
 *
__ª°ri˘


753 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

757 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

758 
__THROW
 
	`__n⁄nuŒ
 ((1));

762 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

763 
__ª°ri˘
 
__muãx
,

764 *
__ª°ri˘
 
__¥io˚ûög
)

765 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

769 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

770 
__¥io˚ûög
,

771 *
__ª°ri˘
 
__ﬁd_˚ûög
)

772 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

775 #ifde‡
__USE_XOPEN2K8


777 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

778 
__THROW
 
	`__n⁄nuŒ
 ((1));

779 #ifde‡
__USE_GNU


780 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

781 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1));

794 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

795 
__THROW
 
	`__n⁄nuŒ
 ((1));

798 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

799 
__ª°ri˘
 
__©å
,

800 *
__ª°ri˘
 
__psh¨ed
)

801 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

804 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

805 
__psh¨ed
)

806 
__THROW
 
	`__n⁄nuŒ
 ((1));

808 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


810 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


811 
__©å
, *
__ª°ri˘
 
__köd
)

812 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

817 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

822 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

823 
__ª°ri˘
 
__©å
,

824 *
__ª°ri˘
 
__¥Ÿocﬁ
)

825 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

829 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

830 
__¥Ÿocﬁ
)

831 
__THROW
 
	`__n⁄nuŒ
 ((1));

834 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

835 
__ª°ri˘
 
__©å
,

836 *
__ª°ri˘
 
__¥io˚ûög
)

837 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

840 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

841 
__¥io˚ûög
)

842 
__THROW
 
	`__n⁄nuŒ
 ((1));

844 #ifde‡
__USE_XOPEN2K


846 
	$±hªad_muãx©å_gërobu°
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

847 *
__robu°√ss
)

848 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

849 #ifde‡
__USE_GNU


850 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

851 *
__robu°√ss
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__robu°√ss
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 #ifde‡
__USE_GNU


860 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

861 
__robu°√ss
)

862 
__THROW
 
	`__n⁄nuŒ
 ((1));

867 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


872 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

873 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


874 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

877 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

881 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

882 
__THROW
 
	`__n⁄nuŒ
 ((1));

885 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

886 
__THROW
 
	`__n⁄nuŒ
 ((1));

888 #ifde‡
__USE_XOPEN2K


890 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

891 
__c⁄°
 
time•ec
 *
__ª°ri˘


892 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

896 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

897 
__THROW
 
	`__n⁄nuŒ
 ((1));

900 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1));

903 #ifde‡
__USE_XOPEN2K


905 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

906 
__c⁄°
 
time•ec
 *
__ª°ri˘


907 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

911 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

912 
__THROW
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

922 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1));

926 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

927 
__ª°ri˘
 
__©å
,

928 *
__ª°ri˘
 
__psh¨ed
)

929 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

932 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

933 
__psh¨ed
)

934 
__THROW
 
	`__n⁄nuŒ
 ((1));

937 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

938 
__ª°ri˘
 
__©å
,

939 *
__ª°ri˘
 
__¥ef
)

940 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

943 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

944 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

952 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

953 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


954 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

957 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1));

961 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

962 
__THROW
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

966 
__THROW
 
	`__n⁄nuŒ
 ((1));

973 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

974 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

975 
	`__n⁄nuŒ
 ((1, 2));

984 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

985 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

986 
__c⁄°
 
time•ec
 *
__ª°ri˘


987 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

992 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

993 
__THROW
 
	`__n⁄nuŒ
 ((1));

996 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

997 
__THROW
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1001 
__ª°ri˘
 
__©å
,

1002 *
__ª°ri˘
 
__psh¨ed
)

1003 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1006 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1007 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1009 #ifde‡
__USE_XOPEN2K


1011 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1012 
__ª°ri˘
 
__©å
,

1013 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1014 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1017 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1018 
__˛ockid_t
 
__˛ock_id
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 #ifde‡
__USE_XOPEN2K


1028 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1037 
__THROW
 
	`__n⁄nuŒ
 ((1));

1040 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1041 
__THROW
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1045 
__THROW
 
	`__n⁄nuŒ
 ((1));

1052 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1053 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1054 
__©å
, 
__cou¡
)

1055 
__THROW
 
	`__n⁄nuŒ
 ((1));

1058 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1059 
__THROW
 
	`__n⁄nuŒ
 ((1));

1062 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1063 
__THROW
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1068 
__THROW
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1072 
__THROW
 
	`__n⁄nuŒ
 ((1));

1075 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1076 
__ª°ri˘
 
__©å
,

1077 *
__ª°ri˘
 
__psh¨ed
)

1078 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1081 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1082 
__psh¨ed
)

1083 
__THROW
 
	`__n⁄nuŒ
 ((1));

1095 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1096 (*
__de°r_fun˘i⁄
) (*))

1097 
__THROW
 
	`__n⁄nuŒ
 ((1));

1100 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1103 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1106 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1107 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1110 #ifde‡
__USE_XOPEN2K


1112 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1113 
__˛ockid_t
 *
__˛ock_id
)

1114 
__THROW
 
	`__n⁄nuŒ
 ((2));

1129 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1130 (*
__∑ª¡
) (),

1131 (*
__chûd
Ë()Ë
__THROW
;

1134 #ifde‡
__USE_EXTERN_INLINES


1136 
__exã∫_ölöe
 

1137 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1139  
__thªad1
 =
__thªad2
;

1140 
	}
}

1143 
	g__END_DECLS


	@/usr/include/regex.h

22 #i‚de‡
_REGEX_H


23 
	#_REGEX_H
 1

	)

25 
	~<sys/ty≥s.h
>

28 #ifde‡
__˝lu•lus


36 
	ts_ªg_t
;

37 
	ta˘ive_ªg_t
;

44 
	tªg_sy¡ax_t
;

46 #ifde‡
__USE_GNU


49 
	#RE_BACKSLASH_ESCAPE_IN_LISTS
 ((Ë1)

	)

54 
	#RE_BK_PLUS_QM
 (
RE_BACKSLASH_ESCAPE_IN_LISTS
 << 1)

	)

60 
	#RE_CHAR_CLASSES
 (
RE_BK_PLUS_QM
 << 1)

	)

74 
	#RE_CONTEXT_INDEP_ANCHORS
 (
RE_CHAR_CLASSES
 << 1)

	)

82 
	#RE_CONTEXT_INDEP_OPS
 (
RE_CONTEXT_INDEP_ANCHORS
 << 1)

	)

86 
	#RE_CONTEXT_INVALID_OPS
 (
RE_CONTEXT_INDEP_OPS
 << 1)

	)

90 
	#RE_DOT_NEWLINE
 (
RE_CONTEXT_INVALID_OPS
 << 1)

	)

94 
	#RE_DOT_NOT_NULL
 (
RE_DOT_NEWLINE
 << 1)

	)

98 
	#RE_HAT_LISTS_NOT_NEWLINE
 (
RE_DOT_NOT_NULL
 << 1)

	)

103 
	#RE_INTERVALS
 (
RE_HAT_LISTS_NOT_NEWLINE
 << 1)

	)

107 
	#RE_LIMITED_OPS
 (
RE_INTERVALS
 << 1)

	)

111 
	#RE_NEWLINE_ALT
 (
RE_LIMITED_OPS
 << 1)

	)

116 
	#RE_NO_BK_BRACES
 (
RE_NEWLINE_ALT
 << 1)

	)

120 
	#RE_NO_BK_PARENS
 (
RE_NO_BK_BRACES
 << 1)

	)

124 
	#RE_NO_BK_REFS
 (
RE_NO_BK_PARENS
 << 1)

	)

128 
	#RE_NO_BK_VBAR
 (
RE_NO_BK_REFS
 << 1)

	)

134 
	#RE_NO_EMPTY_RANGES
 (
RE_NO_BK_VBAR
 << 1)

	)

138 
	#RE_UNMATCHED_RIGHT_PAREN_ORD
 (
RE_NO_EMPTY_RANGES
 << 1)

	)

142 
	#RE_NO_POSIX_BACKTRACKING
 (
RE_UNMATCHED_RIGHT_PAREN_ORD
 << 1)

	)

146 
	#RE_NO_GNU_OPS
 (
RE_NO_POSIX_BACKTRACKING
 << 1)

	)

154 
	#RE_DEBUG
 (
RE_NO_GNU_OPS
 << 1)

	)

159 
	#RE_INVALID_INTERVAL_ORD
 (
RE_DEBUG
 << 1)

	)

163 
	#RE_ICASE
 (
RE_INVALID_INTERVAL_ORD
 << 1)

	)

168 
	#RE_CARET_ANCHORS_HERE
 (
RE_ICASE
 << 1)

	)

172 
	#RE_CONTEXT_INVALID_DUP
 (
RE_CARET_ANCHORS_HERE
 << 1)

	)

176 
	#RE_NO_SUB
 (
RE_CONTEXT_INVALID_DUP
 << 1)

	)

183 
ªg_sy¡ax_t
 
ª_sy¡ax_›ti⁄s
;

185 #ifde‡
__USE_GNU


190 
	#RE_SYNTAX_EMACS
 0

	)

192 
	#RE_SYNTAX_AWK
 \

193 (
RE_BACKSLASH_ESCAPE_IN_LISTS
 | 
RE_DOT_NOT_NULL
 \

194 | 
RE_NO_BK_PARENS
 | 
RE_NO_BK_REFS
 \

195 | 
RE_NO_BK_VBAR
 | 
RE_NO_EMPTY_RANGES
 \

196 | 
RE_DOT_NEWLINE
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

197 | 
RE_UNMATCHED_RIGHT_PAREN_ORD
 | 
RE_NO_GNU_OPS
)

	)

199 
	#RE_SYNTAX_GNU_AWK
 \

200 ((
RE_SYNTAX_POSIX_EXTENDED
 | 
RE_BACKSLASH_ESCAPE_IN_LISTS
 | 
RE_DEBUG
) \

201 & ~(
RE_DOT_NOT_NULL
 | 
RE_INTERVALS
 | 
RE_CONTEXT_INDEP_OPS
 \

202 | 
RE_CONTEXT_INVALID_OPS
 ))

	)

204 
	#RE_SYNTAX_POSIX_AWK
 \

205 (
RE_SYNTAX_POSIX_EXTENDED
 | 
RE_BACKSLASH_ESCAPE_IN_LISTS
 \

206 | 
RE_INTERVALS
 | 
RE_NO_GNU_OPS
)

	)

208 
	#RE_SYNTAX_GREP
 \

209 (
RE_BK_PLUS_QM
 | 
RE_CHAR_CLASSES
 \

210 | 
RE_HAT_LISTS_NOT_NEWLINE
 | 
RE_INTERVALS
 \

211 | 
RE_NEWLINE_ALT
)

	)

213 
	#RE_SYNTAX_EGREP
 \

214 (
RE_CHAR_CLASSES
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

215 | 
RE_CONTEXT_INDEP_OPS
 | 
RE_HAT_LISTS_NOT_NEWLINE
 \

216 | 
RE_NEWLINE_ALT
 | 
RE_NO_BK_PARENS
 \

217 | 
RE_NO_BK_VBAR
)

	)

219 
	#RE_SYNTAX_POSIX_EGREP
 \

220 (
RE_SYNTAX_EGREP
 | 
RE_INTERVALS
 | 
RE_NO_BK_BRACES
 \

221 | 
RE_INVALID_INTERVAL_ORD
)

	)

224 
	#RE_SYNTAX_ED
 
RE_SYNTAX_POSIX_BASIC


	)

226 
	#RE_SYNTAX_SED
 
RE_SYNTAX_POSIX_BASIC


	)

229 
	#_RE_SYNTAX_POSIX_COMMON
 \

230 (
RE_CHAR_CLASSES
 | 
RE_DOT_NEWLINE
 | 
RE_DOT_NOT_NULL
 \

231 | 
RE_INTERVALS
 | 
RE_NO_EMPTY_RANGES
)

	)

233 
	#RE_SYNTAX_POSIX_BASIC
 \

234 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_BK_PLUS_QM
 | 
RE_CONTEXT_INVALID_DUP
)

	)

239 
	#RE_SYNTAX_POSIX_MINIMAL_BASIC
 \

240 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_LIMITED_OPS
)

	)

242 
	#RE_SYNTAX_POSIX_EXTENDED
 \

243 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

244 | 
RE_CONTEXT_INDEP_OPS
 | 
RE_NO_BK_BRACES
 \

245 | 
RE_NO_BK_PARENS
 | 
RE_NO_BK_VBAR
 \

246 | 
RE_CONTEXT_INVALID_OPS
 | 
RE_UNMATCHED_RIGHT_PAREN_ORD
)

	)

250 
	#RE_SYNTAX_POSIX_MINIMAL_EXTENDED
 \

251 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

252 | 
RE_CONTEXT_INVALID_OPS
 | 
RE_NO_BK_BRACES
 \

253 | 
RE_NO_BK_PARENS
 | 
RE_NO_BK_REFS
 \

254 | 
RE_NO_BK_VBAR
 | 
RE_UNMATCHED_RIGHT_PAREN_ORD
)

	)

260 #ifde‡
RE_DUP_MAX


261 #unde‡
RE_DUP_MAX


264 
	#RE_DUP_MAX
 (0x7fff)

	)

272 
	#REG_EXTENDED
 1

	)

276 
	#REG_ICASE
 (
REG_EXTENDED
 << 1)

	)

281 
	#REG_NEWLINE
 (
REG_ICASE
 << 1)

	)

285 
	#REG_NOSUB
 (
REG_NEWLINE
 << 1)

	)

295 
	#REG_NOTBOL
 1

	)

298 
	#REG_NOTEOL
 (1 << 1)

	)

302 
	#REG_STARTEND
 (1 << 2)

	)

309 #i‡
deföed
 
_XOPEN_SOURCE
 || deföed 
__USE_XOPEN2K


310 
	gREG_ENOSYS
 = -1,

313 
	gREG_NOERROR
 = 0,

314 
	gREG_NOMATCH
,

318 
	gREG_BADPAT
,

319 
	gREG_ECOLLATE
,

320 
	gREG_ECTYPE
,

321 
	gREG_EESCAPE
,

322 
	gREG_ESUBREG
,

323 
	gREG_EBRACK
,

324 
	gREG_EPAREN
,

325 
	gREG_EBRACE
,

326 
	gREG_BADBR
,

327 
	gREG_ERANGE
,

328 
	gREG_ESPACE
,

329 
	gREG_BADRPT
,

332 
	gREG_EEND
,

333 
	gREG_ESIZE
,

334 
	gREG_ERPAREN


335 } 
	tªg_îrcode_t
;

343 #i‚de‡
RE_TRANSLATE_TYPE


344 
	#__RE_TRANSLATE_TYPE
 *

	)

345 #ifde‡
__USE_GNU


346 
	#RE_TRANSLATE_TYPE
 
__RE_TRANSLATE_TYPE


	)

350 #ifde‡
__USE_GNU


351 
	#__REPB_PREFIX
(
«me
Ë
	)
name

353 
	#__REPB_PREFIX
(
«me
Ë
__
##
	)
name

356 
	sª_∑âîn_buf„r


361 *
__REPB_PREFIX
(
buf„r
);

364 
__REPB_PREFIX
(
Æloˇãd
);

367 
__REPB_PREFIX
(
u£d
);

370 
ªg_sy¡ax_t
 
__REPB_PREFIX
(
sy¡ax
);

375 *
__REPB_PREFIX
(
Á°m≠
);

381 
__RE_TRANSLATE_TYPE
 
__REPB_PREFIX
(
å™¶©e
);

384 
size_t
 
	gª_nsub
;

390 
__REPB_PREFIX
(
ˇn_be_nuŒ
) : 1;

396 #ifde‡
__USE_GNU


397 
	#REGS_UNALLOCATED
 0

	)

398 
	#REGS_REALLOCATE
 1

	)

399 
	#REGS_FIXED
 2

	)

401 
__REPB_PREFIX
(
ªgs_Æloˇãd
) : 2;

405 
__REPB_PREFIX
(
Á°m≠_accuøã
) : 1;

409 
__REPB_PREFIX
(
no_sub
) : 1;

413 
__REPB_PREFIX
(
nŸ_bﬁ
) : 1;

416 
__REPB_PREFIX
(
nŸ_eﬁ
) : 1;

419 
__REPB_PREFIX
(
√wlöe_™ch‹
) : 1;

422 
ª_∑âîn_buf„r
 
	tªgex_t
;

425 
	tªgoff_t
;

428 #ifde‡
__USE_GNU


431 
	sª_ªgi°îs


433 
	gnum_ªgs
;

434 
ªgoff_t
 *
	g°¨t
;

435 
ªgoff_t
 *
	gíd
;

442 #i‚de‡
RE_NREGS


443 
	#RE_NREGS
 30

	)

453 
ªgoff_t
 
	grm_so
;

454 
ªgoff_t
 
	grm_eo
;

455 } 
	tªgm©ch_t
;

459 #ifde‡
__USE_GNU


462 
ªg_sy¡ax_t
 
ª_£t_sy¡ax
 (ªg_sy¡ax_à
__sy¡ax
);

467 c⁄° *
ª_compûe_∑âîn
 (c⁄° *
__∑âîn
, 
size_t
 
__Àngth
,

468 
ª_∑âîn_buf„r
 *
__buf„r
);

474 
ª_compûe_Á°m≠
 (
ª_∑âîn_buf„r
 *
__buf„r
);

482 
ª_£¨ch
 (
ª_∑âîn_buf„r
 *
__buf„r
, c⁄° *
__°rög
,

483 
__Àngth
, 
__°¨t
, 
__ønge
,

484 
ª_ªgi°îs
 *
__ªgs
);

489 
ª_£¨ch_2
 (
ª_∑âîn_buf„r
 *
__buf„r
,

490 c⁄° *
__°rög1
, 
__Àngth1
,

491 c⁄° *
__°rög2
, 
__Àngth2
, 
__°¨t
,

492 
__ønge
, 
ª_ªgi°îs
 *
__ªgs
, 
__°›
);

497 
ª_m©ch
 (
ª_∑âîn_buf„r
 *
__buf„r
, c⁄° *
__°rög
,

498 
__Àngth
, 
__°¨t
, 
ª_ªgi°îs
 *
__ªgs
);

502 
ª_m©ch_2
 (
ª_∑âîn_buf„r
 *
__buf„r
,

503 c⁄° *
__°rög1
, 
__Àngth1
,

504 c⁄° *
__°rög2
, 
__Àngth2
, 
__°¨t
,

505 
ª_ªgi°îs
 *
__ªgs
, 
__°›
);

520 
ª_£t_ªgi°îs
 (
ª_∑âîn_buf„r
 *
__buf„r
,

521 
ª_ªgi°îs
 *
__ªgs
,

522 
__num_ªgs
,

523 
ªgoff_t
 *
__°¨ts
,Ñegoff_à*
__íds
);

526 #i‡
deföed
 
_REGEX_RE_COMP
 || (deföed 
_LIBC
 && deföed 
__USE_BSD
)

527 #i‚de‡
_CRAY


529 *
ª_comp
 (const *);

530 
ª_exec
 (const *);

536 #i‚de‡
__ª°ri˘


537 #i‡! (2 < 
__GNUC__
 || (2 =__GNUC__ && 95 <
__GNUC_MINOR__
))

538 #i‡
deföed
 
ª°ri˘
 || 199901L <
__STDC_VERSION__


539 
	#__ª°ri˘
 
ª°ri˘


	)

541 
	#__ª°ri˘


	)

546 #i‚de‡
__ª°ri˘_¨r


547 #i‡(
__GNUC__
 > 3 || (__GNUC__ =3 && 
__GNUC_MINOR__
 >= 1)) \

548 && !
deföed
 
	g__GNUG__


549 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

551 
	#__ª°ri˘_¨r


	)

556 
ªgcomp
 (
ªgex_t
 *
__ª°ri˘
 
__¥eg
,

557 c⁄° *
__ª°ri˘
 
__∑âîn
,

558 
__cÊags
);

560 
ªgexec
 (c⁄° 
ªgex_t
 *
__ª°ri˘
 
__¥eg
,

561 c⁄° *
__ª°ri˘
 
__°rög
, 
size_t
 
__nm©ch
,

562 
ªgm©ch_t
 
__pm©ch
[
__ª°ri˘_¨r
],

563 
__eÊags
);

565 
size_t
 
ªgîr‹
 (
__îrcode
, c⁄° 
ªgex_t
 *
__ª°ri˘
 
__¥eg
,

566 *
__ª°ri˘
 
__îrbuf
, 
size_t
 
__îrbuf_size
);

568 
ªg‰ì
 (
ªgex_t
 *
__¥eg
);

571 #ifde‡
__˝lu•lus


	@/usr/include/setjmp.h

23 #i‚def 
_SETJMP_H


24 
	#_SETJMP_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/£tjmp.h
>

31 
	~<bôs/sig£t.h
>

35 
	s__jmp_buf_èg


41 
__jmp_buf
 
	m__jmpbuf
;

42 
	m__mask_was_ßved
;

43 
__sig£t_t
 
	m__ßved_mask
;

47 
__BEGIN_NAMESPACE_STD


49 
__jmp_buf_èg
 
	tjmp_buf
[1];

53 
	$£tjmp
 (
jmp_buf
 
__ív
Ë
__THROW
;

55 
__END_NAMESPACE_STD


60 
	$__sig£tjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__ßvemask
Ë
__THROW
;

62 #i‚def 
__FAVOR_BSD


65 
	$_£tjmp
 (
__jmp_buf_èg
 
__ív
[1]Ë
__THROW
;

69 
	#£tjmp
(
ív
Ë
	`_£tjmp
 (ív)

	)

74 
	#£tjmp
(
ív
Ë
	`£tjmp
 (ív)

	)

78 
__BEGIN_NAMESPACE_STD


82 
	$l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

83 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_NAMESPACE_STD


87 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


91 
	$_l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

92 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

96 #ifdef 
__USE_POSIX


100 
__jmp_buf_èg
 
	tsigjmp_buf
[1];

104 
	#sig£tjmp
(
ív
, 
ßvemask
Ë
	`__sig£tjmp
 (ív, savemask)

	)

110 
	$sigl⁄gjmp
 (
sigjmp_buf
 
__ív
, 
__vÆ
)

111 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

116 #i‡
__USE_FORTIFY_LEVEL
 > 0

117 
	~<bôs/£tjmp2.h
>

120 
__END_DECLS


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

73 #ifde‡
__USE_POSIX199309


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

79 
	~<bôs/sigöfo.h
>

84 (*
	t__sigh™dÀr_t
) ();

89 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

90 
__THROW
;

91 #ifde‡
__USE_GNU


92 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

99 
__BEGIN_NAMESPACE_STD


100 #ifde‡
__USE_BSD


101 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

102 
__THROW
;

105 #ifde‡
__REDIRECT_NTH


106 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

107 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

108 
__sysv_sig«l
);

110 
	#sig«l
 
__sysv_sig«l


	)

113 
__END_NAMESPACE_STD


115 #ifde‡
__USE_XOPEN


118 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

119 
__THROW
;

125 #ifde‡
__USE_POSIX


126 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

129 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


133 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

136 
__BEGIN_NAMESPACE_STD


138 
	$øi£
 (
__sig
Ë
__THROW
;

139 
__END_NAMESPACE_STD


141 #ifde‡
__USE_SVID


143 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

144 
__THROW
;

145 
	$gsig«l
 (
__sig
Ë
__THROW
;

148 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


150 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 #ifde‡
__USE_XOPEN2K


155 
	`psigöfo
 (
__c⁄°
 
sigöfo_t
 *
__pöfo
, __c⁄° *
__s
);

168 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

170 #ifde‡
__FAVOR_BSD


173 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

175 #ifde‡
__USE_XOPEN


176 #ifde‡
__GNUC__


177 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

180 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

186 #ifde‡
__USE_BSD


193 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

196 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

202 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

206 #ifde‡
__USE_MISC


207 
	#NSIG
 
_NSIG


	)

210 #ifde‡
__USE_GNU


211 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

215 #ifde‡
__USE_BSD


216 
__sigh™dÀr_t
 
	tsig_t
;

219 #ifde‡
__USE_POSIX


222 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

231 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

234 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

235 
__THROW
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__USE_GNU


239 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

242 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

243 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

247 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

252 
	~<bôs/siga˘i⁄.h
>

255 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

256 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

263 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

266 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

267 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

270 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

277 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

278 
	`__n⁄nuŒ
 ((1, 2));

280 #ifde‡
__USE_POSIX199309


285 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

286 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

293 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

294 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

295 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

296 
	`__n⁄nuŒ
 ((1));

300 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

301 
__THROW
;

306 #ifde‡
__USE_BSD


310 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

311 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

314 
	ssigvec


316 
__sigh™dÀr_t
 
sv_h™dÀr
;

317 
sv_mask
;

319 
sv_Êags
;

320 
	#sv_⁄°ack
 
sv_Êags


	)

324 
	#SV_ONSTACK
 (1 << 0)

	)

325 
	#SV_INTERRUPT
 (1 << 1)

	)

326 
	#SV_RESETHAND
 (1 << 2)

	)

334 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

335 
sigvec
 *
__ovec
Ë
__THROW
;

339 
	~<bôs/sigc⁄ãxt.h
>

342 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

347 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


348 
	#__√ed_size_t


	)

349 
	~<°ddef.h
>

354 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

356 
	~<bôs/sig°ack.h
>

357 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


359 
	~<sys/uc⁄ãxt.h
>

365 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

366 
__THROW
 
__©åibuã_dïªˇãd__
;

370 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

371 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

375 #ifde‡
__USE_XOPEN_EXTENDED


379 
	$sighﬁd
 (
__sig
Ë
__THROW
;

382 
	$sigªl£
 (
__sig
Ë
__THROW
;

385 
	$sigign‹e
 (
__sig
Ë
__THROW
;

388 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

391 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


394 
	~<bôs/±hªadty≥s.h
>

395 
	~<bôs/sigthªad.h
>

402 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

404 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

408 
__END_DECLS


	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë
	)
c

301 
	#UINT16_C
(
c
Ë
	)
c

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

88 #ifde‡
__USE_XOPEN2K8


89 #i‚de‡
__off_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__off_t
 
	toff_t
;

93 
__off64_t
 
	toff_t
;

95 
	#__off_t_deföed


	)

97 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


98 
__off64_t
 
	toff64_t
;

99 
	#__off64_t_deföed


	)

102 #i‚de‡
__ssize_t_deföed


103 
__ssize_t
 
	tssize_t
;

104 
	#__ssize_t_deföed


	)

109 
__BEGIN_NAMESPACE_STD


110 #i‚de‡
__USE_FILE_OFFSET64


111 
_G_Âos_t
 
	tÂos_t
;

113 
_G_Âos64_t
 
	tÂos_t
;

115 
__END_NAMESPACE_STD


116 #ifde‡
__USE_LARGEFILE64


117 
_G_Âos64_t
 
	tÂos64_t
;

121 
	#_IOFBF
 0

	)

122 
	#_IOLBF
 1

	)

123 
	#_IONBF
 2

	)

127 #i‚de‡
BUFSIZ


128 
	#BUFSIZ
 
_IO_BUFSIZ


	)

134 #i‚de‡
EOF


135 
	#EOF
 (-1)

	)

141 
	#SEEK_SET
 0

	)

142 
	#SEEK_CUR
 1

	)

143 
	#SEEK_END
 2

	)

146 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


148 
	#P_tmpdú
 "/tmp"

	)

161 
	~<bôs/°dio_lim.h
>

165 
_IO_FILE
 *
°dö
;

166 
_IO_FILE
 *
°dout
;

167 
_IO_FILE
 *
°dîr
;

168 #ifde‡
__STDC__


170 
	#°dö
 
°dö


	)

171 
	#°dout
 
°dout


	)

172 
	#°dîr
 
°dîr


	)

175 
__BEGIN_NAMESPACE_STD


177 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

179 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

180 
__END_NAMESPACE_STD


182 #ifde‡
__USE_ATFILE


184 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

185 
__c⁄°
 *
__√w
Ë
__THROW
;

188 
__BEGIN_NAMESPACE_STD


193 #i‚de‡
__USE_FILE_OFFSET64


194 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

196 #ifde‡
__REDIRECT


197 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

199 
	#tmpfûe
 
tmpfûe64


	)

203 #ifde‡
__USE_LARGEFILE64


204 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

208 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

209 
__END_NAMESPACE_STD


211 #ifde‡
__USE_MISC


214 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

218 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


226 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

227 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

231 
__BEGIN_NAMESPACE_STD


236 
	`f˛o£
 (
FILE
 *
__°ªam
);

241 
	`fÊush
 (
FILE
 *
__°ªam
);

242 
__END_NAMESPACE_STD


244 #ifde‡
__USE_MISC


251 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

254 #ifde‡
__USE_GNU


261 
	`f˛o£Æl
 ();

265 
__BEGIN_NAMESPACE_STD


266 #i‚de‡
__USE_FILE_OFFSET64


271 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

272 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

277 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

278 
__c⁄°
 *
__ª°ri˘
 
__modes
,

279 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

281 #ifde‡
__REDIRECT


282 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

283 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

284 
__wur
;

285 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

286 
__c⁄°
 *
__ª°ri˘
 
__modes
,

287 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

288 
__wur
;

290 
	#f›í
 
f›í64


	)

291 
	#‰e›í
 
‰e›í64


	)

294 
__END_NAMESPACE_STD


295 #ifde‡
__USE_LARGEFILE64


296 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

297 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

298 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

299 
__c⁄°
 *
__ª°ri˘
 
__modes
,

300 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

303 #ifdef 
__USE_POSIX


305 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

308 #ifdef 
__USE_GNU


311 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

312 
__c⁄°
 *
__ª°ri˘
 
__modes
,

313 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

316 #ifde‡
__USE_XOPEN2K8


318 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

319 
__THROW
 
__wur
;

324 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

328 
__BEGIN_NAMESPACE_STD


331 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

335 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

336 
__modes
, 
size_t
 
__n
Ë
__THROW
;

337 
__END_NAMESPACE_STD


339 #ifdef 
__USE_BSD


342 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

343 
size_t
 
__size
Ë
__THROW
;

346 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

350 
__BEGIN_NAMESPACE_STD


355 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

356 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

361 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

363 
	$•rötf
 (*
__ª°ri˘
 
__s
,

364 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

370 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

371 
_G_va_li°
 
__¨g
);

376 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

378 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

379 
_G_va_li°
 
__¨g
Ë
__THROW
;

380 
__END_NAMESPACE_STD


382 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


383 
__BEGIN_NAMESPACE_C99


385 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

386 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

387 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

389 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

390 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

391 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

392 
__END_NAMESPACE_C99


395 #ifde‡
__USE_GNU


398 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

399 
_G_va_li°
 
__¨g
)

400 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

401 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

402 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

403 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

404 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

405 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

406 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

409 #ifde‡
__USE_XOPEN2K8


416 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

417 
_G_va_li°
 
__¨g
)

418 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

419 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

420 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

424 
__BEGIN_NAMESPACE_STD


429 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

430 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

435 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

437 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

438 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

440 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

441 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

442 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

443 #ifde‡
__REDIRECT


447 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

448 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

449 
__isoc99_fsˇnf
Ë
__wur
;

450 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

451 
__isoc99_sˇnf
Ë
__wur
;

452 
	`__REDIRECT
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

453 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

454 
__isoc99_ssˇnf
Ë
__THROW
;

456 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

457 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

458 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

459 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

460 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

461 
	#fsˇnf
 
__isoc99_fsˇnf


	)

462 
	#sˇnf
 
__isoc99_sˇnf


	)

463 
	#ssˇnf
 
__isoc99_ssˇnf


	)

467 
__END_NAMESPACE_STD


469 #ifdef 
__USE_ISOC99


470 
__BEGIN_NAMESPACE_C99


475 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

476 
_G_va_li°
 
__¨g
)

477 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

483 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

484 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

487 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

488 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

489 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

491 #i‡!
deföed
 
__USE_GNU
 \

492 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

493 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

494 #ifde‡
__REDIRECT


498 
	`__REDIRECT
 (
vfsˇnf
,

499 (
FILE
 *
__ª°ri˘
 
__s
,

500 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

501 
__isoc99_vfsˇnf
)

502 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

503 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

504 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

505 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

506 
	`__REDIRECT
 (
vssˇnf
,

507 (
__c⁄°
 *
__ª°ri˘
 
__s
,

508 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

509 
__isoc99_vssˇnf
)

510 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

512 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

513 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

514 
_G_va_li°
 
__¨g
Ë
__wur
;

515 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

516 
_G_va_li°
 
__¨g
Ë
__wur
;

517 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

518 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

519 
_G_va_li°
 
__¨g
Ë
__THROW
;

520 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

521 
	#vsˇnf
 
__isoc99_vsˇnf


	)

522 
	#vssˇnf
 
__isoc99_vssˇnf


	)

526 
__END_NAMESPACE_C99


530 
__BEGIN_NAMESPACE_STD


535 
	`fgëc
 (
FILE
 *
__°ªam
);

536 
	`gëc
 (
FILE
 *
__°ªam
);

542 
	`gëch¨
 ();

543 
__END_NAMESPACE_STD


547 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

549 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


554 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

555 
	`gëch¨_u∆ocked
 ();

558 #ifde‡
__USE_MISC


565 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

569 
__BEGIN_NAMESPACE_STD


577 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

578 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

584 
	`putch¨
 (
__c
);

585 
__END_NAMESPACE_STD


589 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

591 #ifde‡
__USE_MISC


598 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

601 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


606 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

607 
	`putch¨_u∆ocked
 (
__c
);

611 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

612 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

614 
	`gëw
 (
FILE
 *
__°ªam
);

617 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

621 
__BEGIN_NAMESPACE_STD


626 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

627 
__wur
;

634 *
	$gës
 (*
__s
Ë
__wur
;

635 
__END_NAMESPACE_STD


637 #ifde‡
__USE_GNU


644 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

645 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

649 #ifdef 
__USE_XOPEN2K8


660 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

661 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

662 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

663 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

664 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

665 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

673 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

674 
size_t
 *
__ª°ri˘
 
__n
,

675 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

679 
__BEGIN_NAMESPACE_STD


684 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

690 
	`puts
 (
__c⁄°
 *
__s
);

697 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

704 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

705 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

710 
size_t
 
	$fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

711 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
Ë
__wur
;

712 
__END_NAMESPACE_STD


714 #ifde‡
__USE_GNU


721 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

722 
FILE
 *
__ª°ri˘
 
__°ªam
);

725 #ifde‡
__USE_MISC


732 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

733 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

734 
size_t
 
	$fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

735 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
__BEGIN_NAMESPACE_STD


744 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

749 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

754 
	`ªwöd
 (
FILE
 *
__°ªam
);

755 
__END_NAMESPACE_STD


762 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


763 #i‚de‡
__USE_FILE_OFFSET64


768 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

773 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

775 #ifde‡
__REDIRECT


776 
	`__REDIRECT
 (
f£eko
,

777 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

778 
f£eko64
);

779 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

781 
	#f£eko
 
f£eko64


	)

782 
	#·ñlo
 
·ñlo64


	)

787 
__BEGIN_NAMESPACE_STD


788 #i‚de‡
__USE_FILE_OFFSET64


793 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

798 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

800 #ifde‡
__REDIRECT


801 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

802 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

803 
	`__REDIRECT
 (
f£ços
,

804 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

806 
	#fgëpos
 
fgëpos64


	)

807 
	#f£ços
 
f£ços64


	)

810 
__END_NAMESPACE_STD


812 #ifde‡
__USE_LARGEFILE64


813 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

814 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

815 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

816 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

819 
__BEGIN_NAMESPACE_STD


821 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

823 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

825 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

826 
__END_NAMESPACE_STD


828 #ifde‡
__USE_MISC


830 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

831 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

832 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

836 
__BEGIN_NAMESPACE_STD


841 
	`≥º‹
 (
__c⁄°
 *
__s
);

842 
__END_NAMESPACE_STD


848 
	~<bôs/sys_îæi°.h
>

851 #ifdef 
__USE_POSIX


853 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

856 #ifde‡
__USE_MISC


858 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

862 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

863 
deföed
 
__USE_MISC
)

868 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

874 
	`p˛o£
 (
FILE
 *
__°ªam
);

878 #ifdef 
__USE_POSIX


880 *
	$˘îmid
 (*
__s
Ë
__THROW
;

884 #ifde‡
__USE_XOPEN


886 *
	`cu£rid
 (*
__s
);

890 #ifdef 
__USE_GNU


891 
ob°ack
;

894 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

895 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

896 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

897 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

898 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

899 
_G_va_li°
 
__¨gs
)

900 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

904 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


908 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

912 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

915 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

918 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


922 
	#__√ed_gë›t


	)

923 
	~<gë›t.h
>

928 #ifde‡
__USE_EXTERN_INLINES


929 
	~<bôs/°dio.h
>

931 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


932 
	~<bôs/°dio2.h
>

934 #ifde‡
__LDBL_COMPAT


935 
	~<bôs/°dio-ldbl.h
>

938 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

501 || 
deföed
 
__USE_BSD


503 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

506 #ifde‡
__USE_XOPEN2K


508 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #ifde‡
__USE_GNU


524 #ifde‡
__˝lu•lus


525 "C++" 
	`©_quick_exô
 ((*
__func
) ())

526 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

528 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

531 
__END_NAMESPACE_STD


533 #ifdef 
__USE_MISC


536 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

537 
__THROW
 
	`__n⁄nuŒ
 ((1));

540 
__BEGIN_NAMESPACE_STD


544 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

546 #ifde‡
__USE_GNU


552 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

554 
__END_NAMESPACE_STD


556 #ifde‡
__USE_ISOC99


557 
__BEGIN_NAMESPACE_C99


560 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

561 
__END_NAMESPACE_C99


565 
__BEGIN_NAMESPACE_STD


567 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

568 
__END_NAMESPACE_STD


572 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

573 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

575 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


579 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


585 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

586 
__THROW
 
	`__n⁄nuŒ
 ((2));

589 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

592 #ifdef 
__USE_MISC


596 
	$˛óªnv
 (Ë
__THROW
;

600 #i‡
deföed
 
__USE_MISC
 \

601 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

761 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

762 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

763 #ifde‡
__USE_GNU


764 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

766 
	`__n⁄nuŒ
 ((1, 4));

771 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

773 
__END_NAMESPACE_STD


775 #ifde‡
__USE_ISOC99


776 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

777 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

781 
__BEGIN_NAMESPACE_STD


785 
div_t
 
	$div
 (
__numî
, 
__díom
)

786 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

788 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

789 
__END_NAMESPACE_STD


791 #ifde‡
__USE_ISOC99


792 
__BEGIN_NAMESPACE_C99


793 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

794 
__díom
)

795 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

796 
__END_NAMESPACE_C99


800 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

801 || 
deföed
 
__USE_SVID


808 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

815 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

820 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

821 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

824 #ifde‡
__USE_MISC


826 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

827 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

828 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

829 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

833 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

838 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

839 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

840 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

841 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

846 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

847 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

848 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

857 
__BEGIN_NAMESPACE_STD


860 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

863 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

864 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

867 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

871 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

872 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

874 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

875 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

876 
__THROW
;

877 
__END_NAMESPACE_STD


880 #ifde‡
__USE_SVID


885 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


896 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

897 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

898 **
__ª°ri˘
 
__vÆuï
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

903 #ifde‡
__USE_XOPEN


905 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

911 #ifde‡
__USE_XOPEN2KXSI


913 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

916 #ifde‡
__USE_XOPEN


921 
	$gø¡±
 (
__fd
Ë
__THROW
;

925 
	$u∆ock±
 (
__fd
Ë
__THROW
;

930 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

933 #ifde‡
__USE_GNU


937 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

938 
__THROW
 
	`__n⁄nuŒ
 ((2));

941 
	`gë±
 ();

944 #ifde‡
__USE_BSD


948 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

949 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/string.h

24 #i‚def 
_STRING_H


25 
	#_STRING_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

42 
__BEGIN_NAMESPACE_STD


44 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

45 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

46 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

50 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

51 
__END_NAMESPACE_STD


56 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


57 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

58 
__c
, 
size_t
 
__n
)

59 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

63 
__BEGIN_NAMESPACE_STD


65 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

68 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

72 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


75 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

76 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

80 #ifde‡
__OPTIMIZE__


81 
__exã∫_Æways_ölöe
 *

82 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


84  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

87 
__exã∫_Æways_ölöe
 
__c⁄°
 *

88 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


90  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

93 
	}
}

95 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

96 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

98 
__END_NAMESPACE_STD


100 #ifde‡
__USE_GNU


103 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


104 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

105 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

107 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

110 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

126 
__BEGIN_NAMESPACE_STD


128 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

131 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

132 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

133 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

139 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

140 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

146 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

147 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

153 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

154 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

155 
__THROW
 
	`__n⁄nuŒ
 ((2));

156 
__END_NAMESPACE_STD


158 #ifde‡
__USE_XOPEN2K8


162 
	~<xloˇÀ.h
>

165 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

166 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

168 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

169 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

172 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

173 || 
deföed
 
__USE_XOPEN2K8


175 *
	$°rdup
 (
__c⁄°
 *
__s
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

182 #i‡
deföed
 
__USE_XOPEN2K8


183 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

184 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

187 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


189 
	#°rdu∑
(
s
) \

190 (
__exãnsi⁄__
 \

192 
__c⁄°
 *
__ﬁd
 = (
s
); \

193 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

194 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

195 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

196 
	}
}))

	)

199 
	#°∫du∑
(
s
, 
n
) \

200 (
__exãnsi⁄__
 \

202 
__c⁄°
 *
__ﬁd
 = (
s
); \

203 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

204 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

205 
__√w
[
__Àn
] = '\0'; \

206 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

207 }))

	)

210 
	g__BEGIN_NAMESPACE_STD


212 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


215 *
°rchr
 (*
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

218 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

220 #ifde‡
__OPTIMIZE__


221 
__exã∫_Æways_ölöe
 *

222 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


224  
__buûtö_°rchr
 (
__s
, 
__c
);

227 
__exã∫_Æways_ölöe
 
__c⁄°
 *

228 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


230  
__buûtö_°rchr
 (
__s
, 
__c
);

235 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

236 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

239 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


242 *
	`°ºchr
 (*
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

245 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__OPTIMIZE__


248 
__exã∫_Æways_ölöe
 *

249 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


251  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

254 
__exã∫_Æways_ölöe
 
__c⁄°
 *

255 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


257  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

260 
	}
}

262 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

263 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_GNU


270 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


271 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

274 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

276 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

281 
__BEGIN_NAMESPACE_STD


284 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

289 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

291 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


294 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

297 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

299 #ifde‡
__OPTIMIZE__


300 
__exã∫_Æways_ölöe
 *

301 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


303  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

306 
__exã∫_Æways_ölöe
 
__c⁄°
 *

307 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


309  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

312 
	}
}

314 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

318 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


321 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

322 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

324 
__c⁄°
 *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 
__c⁄°
 *

335 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

370 
__c⁄°
 *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 
__c⁄°
 *

482 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 
__c⁄°
 *

510 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 #ifde‡
__GNUC__


530 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

531 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

536 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

541 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

544 #ifdef 
__USE_GNU


547 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

548 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

551 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

552 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

556 #ifdef 
__USE_BSD


559 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

560 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 #ifdef 
__USE_XOPEN2K8


566 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

569 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

577 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

580 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifdef 
__USE_GNU


586 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

587 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

590 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

595 #i‚de‡
ba£«me


600 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


601 "C++" *
	$ba£«me
 (*
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

603 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

604 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

606 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

612 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

613 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

614 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


634 
	~<bôs/°rög.h
>

637 
	~<bôs/°rög2.h
>

640 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


642 
	~<bôs/°rög3.h
>

646 
__END_DECLS


	@/usr/include/sys/fcntl.h

1 
	~<f˙é.h
>

	@/usr/include/sys/ioctl.h

19 #i‚def 
_SYS_IOCTL_H


20 
	#_SYS_IOCTL_H
 1

	)

22 
	~<„©uªs.h
>

24 
	g__BEGIN_DECLS


27 
	~<bôs/io˘ls.h
>

30 
	~<bôs/io˘l-ty≥s.h
>

37 
	~<sys/âydeÁu…s.h
>

42 
	$io˘l
 (
__fd
, 
__ªque°
, ...Ë
__THROW
;

44 
__END_DECLS


	@/usr/include/sys/mman.h

20 #i‚def 
_SYS_MMAN_H


21 
	#_SYS_MMAN_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<bôs/ty≥s.h
>

25 
	#__√ed_size_t


	)

26 
	~<°ddef.h
>

28 #i‚de‡
__off_t_deföed


29 #i‚de‡
__USE_FILE_OFFSET64


30 
__off_t
 
	toff_t
;

32 
__off64_t
 
	toff_t
;

34 
	#__off_t_deföed


	)

37 #i‚de‡
__mode_t_deföed


38 
__mode_t
 
	tmode_t
;

39 
	#__mode_t_deföed


	)

42 
	~<bôs/mm™.h
>

45 
	#MAP_FAILED
 ((*Ë-1)

	)

47 
	g__BEGIN_DECLS


57 #i‚de‡
__USE_FILE_OFFSET64


58 *
	$mm≠
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

59 
__Êags
, 
__fd
, 
__off_t
 
__off£t
Ë
__THROW
;

61 #ifde‡
__REDIRECT_NTH


62 * 
	`__REDIRECT_NTH
 (
mm≠
,

63 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

64 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
),

65 
mm≠64
);

67 
	#mm≠
 
mm≠64


	)

70 #ifde‡
__USE_LARGEFILE64


71 *
	$mm≠64
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

72 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
Ë
__THROW
;

77 
	$munm≠
 (*
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

82 
	$m¥Ÿe˘
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
Ë
__THROW
;

90 
	`msync
 (*
__addr
, 
size_t
 
__Àn
, 
__Êags
);

92 #ifde‡
__USE_BSD


95 
	$madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

97 #ifde‡
__USE_XOPEN2K


99 
	$posix_madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

104 
	$mlock
 (
__c⁄°
 *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

107 
	$mu∆ock
 (
__c⁄°
 *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

112 
	$mlockÆl
 (
__Êags
Ë
__THROW
;

116 
	$mu∆ockÆl
 (Ë
__THROW
;

118 #ifde‡
__USE_MISC


124 
	$möc‹e
 (*
__°¨t
, 
size_t
 
__Àn
, *
__vec
)

125 
__THROW
;

128 #ifde‡
__USE_GNU


134 *
	$mªm≠
 (*
__addr
, 
size_t
 
__ﬁd_Àn
, size_à
__√w_Àn
,

135 
__Êags
, ...Ë
__THROW
;

139 
	$ªm≠_fûe_∑ges
 (*
__°¨t
, 
size_t
 
__size
, 
__¥Ÿ
,

140 
size_t
 
__pgoff
, 
__Êags
Ë
__THROW
;

145 
	`shm_›í
 (
__c⁄°
 *
__«me
, 
__oÊag
, 
mode_t
 
__mode
);

148 
	`shm_u∆ök
 (
__c⁄°
 *
__«me
);

150 
__END_DECLS


	@/usr/include/sys/param.h

19 #i‚de‡
_SYS_PARAM_H


20 
	#_SYS_PARAM_H
 1

	)

22 #i‚de‡
ARG_MAX


23 
	#__undef_ARG_MAX


	)

26 
	~<limôs.h
>

27 
	~<löux/limôs.h
>

28 
	~<löux/∑øm.h
>

31 #i‚de‡
__undef_ARG_MAX


32 #unde‡
ARG_MAX


33 #unde‡
__undef_ARG_MAX


38 
	#NBBY
 
CHAR_BIT


	)

39 #i‚def 
NGROUPS


40 
	#NGROUPS
 
NGROUPS_MAX


	)

42 
	#MAXSYMLINKS
 20

	)

43 
	#CANBSIZ
 
MAX_CANON


	)

44 
	#MAXPATHLEN
 
PATH_MAX


	)

48 
	#NOFILE
 256

	)

49 
	#NCARGS
 131072

	)

52 
	~<sys/ty≥s.h
>

55 
	#£tbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] |1<<((i)%NBBY))

	)

56 
	#˛rbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] &~(1<<((i)%NBBY)))

	)

57 
	#is£t
(
a
,
i
Ë(◊)[(i)/
NBBY
] & (1<<((i)%NBBY)))

	)

58 
	#is˛r
(
a
,
i
Ë((◊)[(i)/
NBBY
] & (1<<((i)%NBBY))Ë=0)

	)

61 #i‚de‡
howm™y


62 
	#howm™y
(
x
, 
y
Ë(((xË+ ((yË- 1)Ë/ (y))

	)

64 #ifde‡
__GNUC__


65 
	#roundup
(
x
, 
y
Ë(
	`__buûtö_c⁄°™t_p
 (yË&& 
	`powîof2
 (y) \

66 ? (((
x
Ë+ (
y
) - 1) & ~((y) - 1)) \

67 : ((((
x
Ë+ ((
y
Ë- 1)Ë/ (y)Ë* (y)))

	)

69 
	#roundup
(
x
, 
y
Ë((((xË+ ((yË- 1)Ë/ (y)Ë* (y))

	)

71 
	#powîof2
(
x
Ë((((xË- 1Ë& (x)Ë=0)

	)

74 
	#MIN
(
a
,
b
Ë((◊)<(b))?◊):(b))

	)

75 
	#MAX
(
a
,
b
Ë((◊)>(b))?◊):(b))

	)

79 
	#DEV_BSIZE
 512

	)

	@/usr/include/sys/socket.h

21 #i‚def 
_SYS_SOCKET_H


22 
	#_SYS_SOCKET_H
 1

	)

24 
	~<„©uªs.h
>

26 
	g__BEGIN_DECLS


28 
	~<sys/uio.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

31 #ifde‡
__USE_GNU


33 
	~<bôs/sig£t.h
>

40 
	~<bôs/sockë.h
>

42 #ifde‡
__USE_BSD


45 
	sosockaddr


47 
	mß_Ámûy
;

48 
	mß_d©a
[14];

56 
	mSHUT_RD
 = 0,

57 
	#SHUT_RD
 
SHUT_RD


	)

58 
	mSHUT_WR
,

59 
	#SHUT_WR
 
SHUT_WR


	)

60 
	mSHUT_RDWR


61 
	#SHUT_RDWR
 
SHUT_RDWR


	)

70 #i‡
deföed
 
__˝lu•lus
 || !
__GNUC_PREREQ
 (2, 7Ë|| !deföed 
__USE_GNU


71 
	#__SOCKADDR_ARG
 
sockaddr
 *
__ª°ri˘


	)

72 
	#__CONST_SOCKADDR_ARG
 
__c⁄°
 
sockaddr
 *

	)

76 
	#__SOCKADDR_ALLTYPES
 \

77 
	`__SOCKADDR_ONETYPE
 (
sockaddr
) \

78 
	`__SOCKADDR_ONETYPE
 (
sockaddr_©
) \

79 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ax25
) \

80 
	`__SOCKADDR_ONETYPE
 (
sockaddr_dl
) \

81 
	`__SOCKADDR_ONETYPE
 (
sockaddr_e⁄
) \

82 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö
) \

83 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö6
) \

84 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö¨p
) \

85 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ùx
) \

86 
	`__SOCKADDR_ONETYPE
 (
sockaddr_iso
) \

87 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ns
) \

88 
	`__SOCKADDR_ONETYPE
 (
sockaddr_un
) \

89 
	`__SOCKADDR_ONETYPE
 (
sockaddr_x25
)

	)

91 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

92 uni⁄ { 
	m__SOCKADDR_ALLTYPES


93 } 
	t__SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

94 #unde‡
__SOCKADDR_ONETYPE


95 
	#__SOCKADDR_ONETYPE
(
ty≥
Ë
__c⁄°
 ty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

96 uni⁄ { 
	m__SOCKADDR_ALLTYPES


97 } 
	t__CONST_SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

98 #unde‡
__SOCKADDR_ONETYPE


105 
	$sockë
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
Ë
__THROW
;

111 
	$sockë∑ú
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
,

112 
__fds
[2]Ë
__THROW
;

115 
	$böd
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
)

116 
__THROW
;

119 
	$gësock«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

120 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

129 
	`c⁄√˘
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
);

133 
	$gë≥î«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

134 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

141 
ssize_t
 
	`£nd
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
, 
__Êags
);

148 
ssize_t
 
	`ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
);

155 
ssize_t
 
	`£ndto
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

156 
__Êags
, 
__CONST_SOCKADDR_ARG
 
__addr
,

157 
sockÀn_t
 
__addr_Àn
);

166 
ssize_t
 
	`ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

167 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

168 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

176 
ssize_t
 
	`£ndmsg
 (
__fd
, 
__c⁄°
 
msghdr
 *
__mesßge
,

177 
__Êags
);

184 
ssize_t
 
	`ªcvmsg
 (
__fd
, 
msghdr
 *
__mesßge
, 
__Êags
);

190 
	$gësock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

191 *
__ª°ri˘
 
__›tvÆ
,

192 
sockÀn_t
 *
__ª°ri˘
 
__›éí
Ë
__THROW
;

197 
	$£tsock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

198 
__c⁄°
 *
__›tvÆ
, 
sockÀn_t
 
__›éí
Ë
__THROW
;

204 
	$li°í
 (
__fd
, 
__n
Ë
__THROW
;

214 
	`ac˚±
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

215 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

217 #ifde‡
__USE_GNU


222 
	`ac˚±4
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

223 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
, 
__Êags
);

232 
	$shutdown
 (
__fd
, 
__how
Ë
__THROW
;

235 #ifde‡
__USE_XOPEN2K


237 
	$sock©m¨k
 (
__fd
Ë
__THROW
;

241 #ifde‡
__USE_MISC


245 
	$isfdty≥
 (
__fd
, 
__fdty≥
Ë
__THROW
;

250 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


251 
	~<bôs/sockë2.h
>

254 
__END_DECLS


	@/usr/include/sys/stat.h

24 #i‚def 
_SYS_STAT_H


25 
	#_SYS_STAT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	~<bôs/ty≥s.h
>

31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
 || deföed 
__USE_MISC
 \

32 || 
deföed
 
	g__USE_ATFILE


33 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_time_t


	)

36 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ATFILE


37 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


45 #i‚de‡
__dev_t_deföed


46 
__dev_t
 
	tdev_t
;

47 
	#__dev_t_deföed


	)

50 #i‚de‡
__gid_t_deföed


51 
__gid_t
 
	tgid_t
;

52 
	#__gid_t_deföed


	)

55 #i‚de‡
__öo_t_deföed


56 #i‚de‡
__USE_FILE_OFFSET64


57 
__öo_t
 
	töo_t
;

59 
__öo64_t
 
	töo_t
;

61 
	#__öo_t_deföed


	)

64 #i‚de‡
__mode_t_deföed


65 
__mode_t
 
	tmode_t
;

66 
	#__mode_t_deföed


	)

69 #i‚de‡
__∆ök_t_deföed


70 
__∆ök_t
 
	t∆ök_t
;

71 
	#__∆ök_t_deföed


	)

74 #i‚de‡
__off_t_deföed


75 #i‚de‡
__USE_FILE_OFFSET64


76 
__off_t
 
	toff_t
;

78 
__off64_t
 
	toff_t
;

80 
	#__off_t_deföed


	)

83 #i‚de‡
__uid_t_deföed


84 
__uid_t
 
	tuid_t
;

85 
	#__uid_t_deföed


	)

89 #ifde‡
__USE_UNIX98


90 #i‚de‡
__blk˙t_t_deföed


91 #i‚de‡
__USE_FILE_OFFSET64


92 
__blk˙t_t
 
	tblk˙t_t
;

94 
__blk˙t64_t
 
	tblk˙t_t
;

96 
	#__blk˙t_t_deföed


	)

99 #i‚de‡
__blksize_t_deföed


100 
__blksize_t
 
	tblksize_t
;

101 
	#__blksize_t_deföed


	)

105 
	g__BEGIN_DECLS


107 
	~<bôs/°©.h
>

109 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


110 
	#S_IFMT
 
__S_IFMT


	)

111 
	#S_IFDIR
 
__S_IFDIR


	)

112 
	#S_IFCHR
 
__S_IFCHR


	)

113 
	#S_IFBLK
 
__S_IFBLK


	)

114 
	#S_IFREG
 
__S_IFREG


	)

115 #ifde‡
__S_IFIFO


116 
	#S_IFIFO
 
__S_IFIFO


	)

118 #ifde‡
__S_IFLNK


119 
	#S_IFLNK
 
__S_IFLNK


	)

121 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

122 && 
deföed
 
	g__S_IFSOCK


123 
	#S_IFSOCK
 
__S_IFSOCK


	)

129 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

131 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

132 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

133 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

134 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

135 #ifde‡
__S_IFIFO


136 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

138 #ifde‡
__S_IFLNK


139 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

142 #i‡
deföed
 
__USE_BSD
 && !deföed 
__S_IFLNK


143 
	#S_ISLNK
(
mode
Ë0

	)

146 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K
) \

147 && 
deföed
 
	g__S_IFSOCK


148 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

149 #ñi‡
deföed
 
__USE_XOPEN2K


150 
	#S_ISSOCK
(
mode
Ë0

	)

157 #ifdef 
__USE_POSIX199309


158 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

159 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

160 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

166 
	#S_ISUID
 
__S_ISUID


	)

167 
	#S_ISGID
 
__S_ISGID


	)

169 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


171 
	#S_ISVTX
 
__S_ISVTX


	)

174 
	#S_IRUSR
 
__S_IREAD


	)

175 
	#S_IWUSR
 
__S_IWRITE


	)

176 
	#S_IXUSR
 
__S_IEXEC


	)

178 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

180 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


181 
	#S_IREAD
 
S_IRUSR


	)

182 
	#S_IWRITE
 
S_IWUSR


	)

183 
	#S_IEXEC
 
S_IXUSR


	)

186 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

187 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

188 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

190 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

192 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

193 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

194 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

196 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

199 #ifdef 
__USE_BSD


201 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

202 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

203 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

205 
	#S_BLKSIZE
 512

	)

209 #i‚de‡
__USE_FILE_OFFSET64


211 
	$°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

212 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

216 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

218 #ifde‡
__REDIRECT_NTH


219 
	`__REDIRECT_NTH
 (
°©
, (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

220 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

221 
	`__n⁄nuŒ
 ((1, 2));

222 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

223 
	`__n⁄nuŒ
 ((2));

225 
	#°©
 
°©64


	)

226 
	#f°©
 
f°©64


	)

229 #ifde‡
__USE_LARGEFILE64


230 
	$°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

231 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

232 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

235 #ifde‡
__USE_ATFILE


239 #i‚de‡
__USE_FILE_OFFSET64


240 
	$f°©©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

241 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

242 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

244 #ifde‡
__REDIRECT_NTH


245 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

246 
°©
 *
__ª°ri˘
 
__buf
,

247 
__Êag
),

248 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

250 
	#f°©©
 
f°©©64


	)

254 #ifde‡
__USE_LARGEFILE64


255 
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

256 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

257 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

261 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


262 #i‚de‡
__USE_FILE_OFFSET64


265 
	$l°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

266 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

268 #ifde‡
__REDIRECT_NTH


269 
	`__REDIRECT_NTH
 (
l°©
,

270 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

271 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

272 
	`__n⁄nuŒ
 ((1, 2));

274 
	#l°©
 
l°©64


	)

277 #ifde‡
__USE_LARGEFILE64


278 
	$l°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

279 
°©64
 *
__ª°ri˘
 
__buf
)

280 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

286 
	$chmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_BSD


293 
	$lchmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

298 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


299 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

302 #ifde‡
__USE_ATFILE


305 
	$fchmod©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
,

306 
__Êag
)

307 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

314 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

316 #ifdef 
__USE_GNU


319 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

323 
	$mkdú
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

326 #ifde‡
__USE_ATFILE


330 
	$mkdú©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

331 
__THROW
 
	`__n⁄nuŒ
 ((2));

337 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


338 
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

339 
__THROW
 
	`__n⁄nuŒ
 ((1));

341 #ifde‡
__USE_ATFILE


345 
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

346 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

352 
	$mkfifo
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

353 
__THROW
 
	`__n⁄nuŒ
 ((1));

355 #ifde‡
__USE_ATFILE


359 
	$mkfifﬂt
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

360 
__THROW
 
	`__n⁄nuŒ
 ((2));

363 #ifde‡
__USE_ATFILE


366 
	$utimíßt
 (
__fd
, 
__c⁄°
 *
__∑th
,

367 
__c⁄°
 
time•ec
 
__times
[2],

368 
__Êags
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2));

372 #ifde‡
__USE_XOPEN2K8


374 
	$futimís
 (
__fd
, 
__c⁄°
 
time•ec
 
__times
[2]Ë
__THROW
;

392 #i‚de‡
_STAT_VER


393 
	#_STAT_VER
 0

	)

395 #i‚de‡
_MKNOD_VER


396 
	#_MKNOD_VER
 0

	)

400 #i‚de‡
__USE_FILE_OFFSET64


401 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

402 
__THROW
 
	`__n⁄nuŒ
 ((3));

403 
	$__x°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

404 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

405 
	$__lx°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

406 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

407 
	$__fx°©©
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

408 
°©
 *
__°©_buf
, 
__Êag
)

409 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

411 #ifde‡
__REDIRECT_NTH


412 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

413 
°©
 *
__°©_buf
), 
__fx°©64
)

414 
	`__n⁄nuŒ
 ((3));

415 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

416 
°©
 *
__°©_buf
), 
__x°©64
)

417 
	`__n⁄nuŒ
 ((2, 3));

418 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

419 
°©
 *
__°©_buf
), 
__lx°©64
)

420 
	`__n⁄nuŒ
 ((2, 3));

421 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

422 
__c⁄°
 *
__fûíame
,

423 
°©
 *
__°©_buf
, 
__Êag
),

424 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

427 
	#__fx°©
 
__fx°©64


	)

428 
	#__x°©
 
__x°©64


	)

429 
	#__lx°©
 
__lx°©64


	)

433 #ifde‡
__USE_LARGEFILE64


434 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

435 
__THROW
 
	`__n⁄nuŒ
 ((3));

436 
	$__x°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

437 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

438 
	$__lx°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

439 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

440 
	$__fx°©©64
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

441 
°©64
 *
__°©_buf
, 
__Êag
)

442 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

444 
	$__xmknod
 (
__vî
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

445 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

447 
	$__xmknod©
 (
__vî
, 
__fd
, 
__c⁄°
 *
__∑th
,

448 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

449 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

451 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


454 
__exã∫_ölöe
 

455 
	`__NTH
 (
	$°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

457  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

458 
	}
}

460 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


461 
__exã∫_ölöe
 

462 
__NTH
 (
	$l°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

464  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

465 
	}
}

468 
__exã∫_ölöe
 

469 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

471  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

472 
	}
}

474 #ifde‡
__USE_ATFILE


475 
__exã∫_ölöe
 

476 
__NTH
 (
	$f°©©
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©
 *
__°©buf
,

477 
__Êag
))

479  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

480 
	}
}

483 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


484 
__exã∫_ölöe
 

485 
__NTH
 (
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

487  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

488 
	}
}

491 #ifde‡
__USE_ATFILE


492 
__exã∫_ölöe
 

493 
__NTH
 (
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

494 
__dev_t
 
__dev
))

496  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

497 
	}
}

500 #i‡
deföed
 
__USE_LARGEFILE64
 \

501 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

502 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

503 
__exã∫_ölöe
 

504 
__NTH
 (
	$°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

506  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

507 
	}
}

509 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


510 
__exã∫_ölöe
 

511 
__NTH
 (
	$l°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

513  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

514 
	}
}

517 
__exã∫_ölöe
 

518 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

520  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

521 
	}
}

523 #ifde‡
__USE_ATFILE


524 
__exã∫_ölöe
 

525 
__NTH
 (
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©64
 *
__°©buf
,

526 
__Êag
))

528  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

529 
	}
}

536 
	g__END_DECLS


	@/usr/include/sys/time.h

20 #i‚de‡
_SYS_TIME_H


21 
	#_SYS_TIME_H
 1

	)

23 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

26 
	#__√ed_time_t


	)

27 
	~<time.h
>

28 
	#__√ed_timevÆ


	)

29 
	~<bôs/time.h
>

31 
	~<sys/£À˘.h
>

33 #i‚de‡
__su£c⁄ds_t_deföed


34 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

35 
	#__su£c⁄ds_t_deföed


	)

39 
	g__BEGIN_DECLS


41 #ifde‡
__USE_GNU


43 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

44 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

45 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

46 }

	)

47 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

48 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

49 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

50 }

	)

54 #ifde‡
__USE_BSD


57 
	stimez⁄e


59 
	mtz_möuãswe°
;

60 
	mtz_d°time
;

63 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

65 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

73 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

74 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

76 #ifde‡
__USE_BSD


79 
	$£âimeofday
 (
__c⁄°
 
timevÆ
 *
__tv
,

80 
__c⁄°
 
timez⁄e
 *
__tz
)

81 
__THROW
 
	`__n⁄nuŒ
 ((1));

87 
	$adjtime
 (
__c⁄°
 
timevÆ
 *
__dñè
,

88 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

93 
	e__ôimî_which


96 
ITIMER_REAL
 = 0,

97 
	#ITIMER_REAL
 
ITIMER_REAL


	)

99 
ITIMER_VIRTUAL
 = 1,

100 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

103 
ITIMER_PROF
 = 2

104 
	#ITIMER_PROF
 
ITIMER_PROF


	)

109 
	sôimîvÆ


112 
timevÆ
 
ô_öãrvÆ
;

114 
timevÆ
 
ô_vÆue
;

117 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


120 
__ôimî_which
 
	t__ôimî_which_t
;

122 
	t__ôimî_which_t
;

127 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

128 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

133 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

134 
__c⁄°
 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

135 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

140 
	$utimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

141 
__THROW
 
	`__n⁄nuŒ
 ((1));

143 #ifde‡
__USE_BSD


145 
	$lutimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

146 
__THROW
 
	`__n⁄nuŒ
 ((1));

149 
	$futimes
 (
__fd
, 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

152 #ifde‡
__USE_GNU


156 
	$futimeßt
 (
__fd
, 
__c⁄°
 *
__fûe
,

157 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

161 #ifde‡
__USE_BSD


164 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

165 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

166 
	#timîcmp
(
a
, 
b
, 
CMP
) \

167 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

168 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

169 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

170 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

172 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

173 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

174 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

176 ++(
ªsu…
)->
tv_£c
; \

177 (
ªsu…
)->
tv_u£c
 -= 1000000; \

179 
	}
} 0)

	)

180 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

182 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

183 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

184 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

185 --(
ªsu…
)->
tv_£c
; \

186 (
ªsu…
)->
tv_u£c
 += 1000000; \

188 } 0)

	)

191 
	g__END_DECLS


	@/usr/include/sys/types.h

23 #i‚def 
_SYS_TYPES_H


24 
	#_SYS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifdef 
__USE_BSD


33 #i‚de‡
__u_ch¨_deföed


34 
__u_ch¨
 
	tu_ch¨
;

35 
__u_sh‹t
 
	tu_sh‹t
;

36 
__u_öt
 
	tu_öt
;

37 
__u_l⁄g
 
	tu_l⁄g
;

38 
__quad_t
 
	tquad_t
;

39 
__u_quad_t
 
	tu_quad_t
;

40 
__fsid_t
 
	tfsid_t
;

41 
	#__u_ch¨_deföed


	)

45 
__loff_t
 
	tloff_t
;

47 #i‚de‡
__öo_t_deföed


48 #i‚de‡
__USE_FILE_OFFSET64


49 
__öo_t
 
	töo_t
;

51 
__öo64_t
 
	töo_t
;

53 
	#__öo_t_deföed


	)

55 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


56 
__öo64_t
 
	töo64_t
;

57 
	#__öo64_t_deföed


	)

60 #i‚de‡
__dev_t_deföed


61 
__dev_t
 
	tdev_t
;

62 
	#__dev_t_deföed


	)

65 #i‚de‡
__gid_t_deföed


66 
__gid_t
 
	tgid_t
;

67 
	#__gid_t_deföed


	)

70 #i‚de‡
__mode_t_deföed


71 
__mode_t
 
	tmode_t
;

72 
	#__mode_t_deföed


	)

75 #i‚de‡
__∆ök_t_deföed


76 
__∆ök_t
 
	t∆ök_t
;

77 
	#__∆ök_t_deföed


	)

80 #i‚de‡
__uid_t_deföed


81 
__uid_t
 
	tuid_t
;

82 
	#__uid_t_deföed


	)

85 #i‚de‡
__off_t_deföed


86 #i‚de‡
__USE_FILE_OFFSET64


87 
__off_t
 
	toff_t
;

89 
__off64_t
 
	toff_t
;

91 
	#__off_t_deföed


	)

93 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


94 
__off64_t
 
	toff64_t
;

95 
	#__off64_t_deföed


	)

98 #i‚de‡
__pid_t_deföed


99 
__pid_t
 
	tpid_t
;

100 
	#__pid_t_deföed


	)

103 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

104 && !
deföed
 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

228 && !
deföed
 
__blksize_t_deföed


229 
__blksize_t
 
	tblksize_t
;

230 
	#__blksize_t_deföed


	)

234 #i‚de‡
__USE_FILE_OFFSET64


235 #i‚de‡
__blk˙t_t_deföed


236 
__blk˙t_t
 
	tblk˙t_t
;

237 
	#__blk˙t_t_deföed


	)

239 #i‚de‡
__fsblk˙t_t_deföed


240 
__fsblk˙t_t
 
	tfsblk˙t_t
;

241 
	#__fsblk˙t_t_deföed


	)

243 #i‚de‡
__fsfû˙t_t_deföed


244 
__fsfû˙t_t
 
	tfsfû˙t_t
;

245 
	#__fsfû˙t_t_deföed


	)

248 #i‚de‡
__blk˙t_t_deföed


249 
__blk˙t64_t
 
	tblk˙t_t
;

250 
	#__blk˙t_t_deföed


	)

252 #i‚de‡
__fsblk˙t_t_deföed


253 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

254 
	#__fsblk˙t_t_deföed


	)

256 #i‚de‡
__fsfû˙t_t_deföed


257 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

258 
	#__fsfû˙t_t_deföed


	)

262 #ifde‡
__USE_LARGEFILE64


263 
__blk˙t64_t
 
	tblk˙t64_t
;

264 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

265 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

270 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


271 
	~<bôs/±hªadty≥s.h
>

274 
	g__END_DECLS


	@/usr/include/sys/utsname.h

23 #i‚def 
_SYS_UTSNAME_H


24 
	#_SYS_UTSNAME_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ut¢ame.h
>

32 #i‚de‡
_UTSNAME_SYSNAME_LENGTH


33 
	#_UTSNAME_SYSNAME_LENGTH
 
_UTSNAME_LENGTH


	)

35 #i‚de‡
_UTSNAME_NODENAME_LENGTH


36 
	#_UTSNAME_NODENAME_LENGTH
 
_UTSNAME_LENGTH


	)

38 #i‚de‡
_UTSNAME_RELEASE_LENGTH


39 
	#_UTSNAME_RELEASE_LENGTH
 
_UTSNAME_LENGTH


	)

41 #i‚de‡
_UTSNAME_VERSION_LENGTH


42 
	#_UTSNAME_VERSION_LENGTH
 
_UTSNAME_LENGTH


	)

44 #i‚de‡
_UTSNAME_MACHINE_LENGTH


45 
	#_UTSNAME_MACHINE_LENGTH
 
_UTSNAME_LENGTH


	)

49 
	sut¢ame


52 
	msy¢ame
[
_UTSNAME_SYSNAME_LENGTH
];

55 
	mnodíame
[
_UTSNAME_NODENAME_LENGTH
];

58 
	mªÀa£
[
_UTSNAME_RELEASE_LENGTH
];

60 
	mvîsi⁄
[
_UTSNAME_VERSION_LENGTH
];

63 
	mmachöe
[
_UTSNAME_MACHINE_LENGTH
];

65 #i‡
_UTSNAME_DOMAIN_LENGTH
 - 0

67 #ifde‡
__USE_GNU


68 
	mdomaö«me
[
_UTSNAME_DOMAIN_LENGTH
];

70 
	m__domaö«me
[
_UTSNAME_DOMAIN_LENGTH
];

75 #ifde‡
__USE_SVID


77 
	#SYS_NMLN
 
_UTSNAME_LENGTH


	)

82 
	$u«me
 (
ut¢ame
 *
__«me
Ë
__THROW
;

85 
__END_DECLS


	@/usr/include/sys/wait.h

24 #i‚def 
_SYS_WAIT_H


25 
	#_SYS_WAIT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<sig«l.h
>

32 
	~<sys/ªsour˚.h
>

35 #i‡!
deföed
 
_STDLIB_H
 || (!deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K8
)

38 
	~<bôs/waôÊags.h
>

40 #ifdef 
__USE_BSD


45 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


46 
	#__WAIT_INT
(
°©us
) \

47 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

48 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

50 
	#__WAIT_INT
(
°©us
Ë(*(
__c⁄°
 *Ë&(°©us))

	)

58 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


59 
	#__WAIT_STATUS
 *

	)

60 
	#__WAIT_STATUS_DEFN
 *

	)

65 
waô
 *
	m__u±r
;

66 *
	m__ùå
;

67 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

68 
	#__WAIT_STATUS_DEFN
 *

	)

73 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

74 
	#__WAIT_STATUS
 *

	)

75 
	#__WAIT_STATUS_DEFN
 *

	)

80 
	~<bôs/waô°©us.h
>

82 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

83 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

84 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

88 #ifde‡
__WIFCONTINUED


89 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

93 #ifdef 
__USE_BSD


94 
	#WCOREFLAG
 
__WCOREFLAG


	)

95 
	#WCOREDUMP
(
°©us
Ë
	`__WCOREDUMP
 (
	`__WAIT_INT
 (°©us))

	)

96 
	#W_EXITCODE
(
ªt
, 
sig
Ë
	`__W_EXITCODE
 (ªt, sig)

	)

97 
	#W_STOPCODE
(
sig
Ë
	`__W_STOPCODE
 (sig)

	)

101 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


104 
	mP_ALL
,

105 
	mP_PID
,

106 
	mP_PGID


107 } 
	tidty≥_t
;

116 
__pid_t
 
waô
 (
__WAIT_STATUS
 
__°©_loc
);

118 #ifdef 
__USE_BSD


120 
	#WAIT_ANY
 (-1Ë

	)

121 
	#WAIT_MYPGRP
 0

	)

139 
__pid_t
 
waôpid
 (__pid_à
__pid
, *
__°©_loc
, 
__›ti⁄s
);

141 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


142 
	#__√ed_sigöfo_t


	)

143 
	~<bôs/sigöfo.h
>

155 
waôid
 (
idty≥_t
 
__idty≥
, 
__id_t
 
__id
, 
sigöfo_t
 *
__öf›
,

156 
__›ti⁄s
);

159 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


162 
	grußge
;

169 
__pid_t
 
	$waô3
 (
__WAIT_STATUS
 
__°©_loc
, 
__›ti⁄s
,

170 
rußge
 * 
__ußge
Ë
__THROW
;

173 #ifde‡
__USE_BSD


175 
__pid_t
 
	$waô4
 (
__pid_t
 
__pid
, 
__WAIT_STATUS
 
__°©_loc
, 
__›ti⁄s
,

176 
rußge
 *
__ußge
Ë
__THROW
;

180 
__END_DECLS


	@/usr/include/syslog.h

1 
	~<sys/sy¶og.h
>

	@/usr/include/termios.h

23 #i‚def 
_TERMIOS_H


24 
	#_TERMIOS_H
 1

	)

26 
	~<„©uªs.h
>

27 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


29 
	~<bôs/ty≥s.h
>

30 #i‚de‡
__pid_t_deföed


31 
__pid_t
 
	tpid_t
;

32 
	#__pid_t_deföed


	)

36 
	g__BEGIN_DECLS


40 
	~<bôs/ãrmios.h
>

42 #ifde‡
__USE_BSD


45 
	#CCEQ
(
vÆ
, 
c
Ë((cË=(vÆË&& (vÆË!
_POSIX_VDISABLE
)

	)

49 
•ìd_t
 
	$cfgëo•ìd
 (
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

52 
•ìd_t
 
	$cfgëi•ìd
 (
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

55 
	$cf£to•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

58 
	$cf£ti•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

60 #ifdef 
__USE_BSD


62 
	$cf£t•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

67 
	$tcgë©å
 (
__fd
, 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

71 
	$tc£èâr
 (
__fd
, 
__›ti⁄Æ_a˘i⁄s
,

72 
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

75 #ifdef 
__USE_BSD


77 
	$cfmakîaw
 (
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

81 
	$tc£ndbªak
 (
__fd
, 
__duøti⁄
Ë
__THROW
;

87 
	`tcdøö
 (
__fd
);

91 
	$tcÊush
 (
__fd
, 
__queue_£À˘‹
Ë
__THROW
;

95 
	$tcÊow
 (
__fd
, 
__a˘i⁄
Ë
__THROW
;

98 #ifde‡
__USE_UNIX98


100 
__pid_t
 
	$tcgësid
 (
__fd
Ë
__THROW
;

104 #ifde‡
__USE_BSD


105 
	~<sys/âydeÁu…s.h
>

108 
__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


33 #ifde‡
__USE_XOPEN2K8


35 
	#_POSIX_VERSION
 200809L

	)

36 #ñi‡
deföed
 
__USE_XOPEN2K


38 
	#_POSIX_VERSION
 200112L

	)

39 #ñi‡
deföed
 
__USE_POSIX199506


41 
	#_POSIX_VERSION
 199506L

	)

42 #ñi‡
deföed
 
__USE_POSIX199309


44 
	#_POSIX_VERSION
 199309L

	)

47 
	#_POSIX_VERSION
 199009L

	)

53 #ifde‡
__USE_XOPEN2K8


54 
	#__POSIX2_THIS_VERSION
 200809L

	)

56 #ñi‡
deföed
 
__USE_XOPEN2K


58 
	#__POSIX2_THIS_VERSION
 200112L

	)

59 #ñi‡
deföed
 
__USE_POSIX199506


61 
	#__POSIX2_THIS_VERSION
 199506L

	)

64 
	#__POSIX2_THIS_VERSION
 199209L

	)

68 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

72 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

76 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

80 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

84 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

87 #ifde‡
__USE_XOPEN2K8


88 
	#_XOPEN_VERSION
 700

	)

89 #ñi‡
deföed
 
__USE_XOPEN2K


90 
	#_XOPEN_VERSION
 600

	)

91 #ñi‡
deföed
 
__USE_UNIX98


92 
	#_XOPEN_VERSION
 500

	)

94 
	#_XOPEN_VERSION
 4

	)

98 
	#_XOPEN_XCU_VERSION
 4

	)

101 
	#_XOPEN_XPG2
 1

	)

102 
	#_XOPEN_XPG3
 1

	)

103 
	#_XOPEN_XPG4
 1

	)

106 
	#_XOPEN_UNIX
 1

	)

109 
	#_XOPEN_CRYPT
 1

	)

113 
	#_XOPEN_ENH_I18N
 1

	)

116 
	#_XOPEN_LEGACY
 1

	)

203 
	~<bôs/posix_›t.h
>

206 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


207 
	~<bôs/ívú⁄míts.h
>

211 
	#STDIN_FILENO
 0

	)

212 
	#STDOUT_FILENO
 1

	)

213 
	#STDERR_FILENO
 2

	)

218 
	~<bôs/ty≥s.h
>

220 #i‚def 
__ssize_t_deföed


221 
__ssize_t
 
	tssize_t
;

222 
	#__ssize_t_deföed


	)

225 
	#__√ed_size_t


	)

226 
	#__√ed_NULL


	)

227 
	~<°ddef.h
>

229 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


232 #i‚de‡
__gid_t_deföed


233 
__gid_t
 
	tgid_t
;

234 
	#__gid_t_deföed


	)

237 #i‚de‡
__uid_t_deföed


238 
__uid_t
 
	tuid_t
;

239 
	#__uid_t_deföed


	)

242 #i‚de‡
__off_t_deföed


243 #i‚de‡
__USE_FILE_OFFSET64


244 
__off_t
 
	toff_t
;

246 
__off64_t
 
	toff_t
;

248 
	#__off_t_deföed


	)

250 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


251 
__off64_t
 
	toff64_t
;

252 
	#__off64_t_deföed


	)

255 #i‚de‡
__u£c⁄ds_t_deföed


256 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

257 
	#__u£c⁄ds_t_deföed


	)

260 #i‚de‡
__pid_t_deföed


261 
__pid_t
 
	tpid_t
;

262 
	#__pid_t_deföed


	)

266 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


267 #i‚de‡
__öçå_t_deföed


268 
__öçå_t
 
	töçå_t
;

269 
	#__öçå_t_deföed


	)

273 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


274 #i‚de‡
__sockÀn_t_deföed


275 
__sockÀn_t
 
	tsockÀn_t
;

276 
	#__sockÀn_t_deföed


	)

282 
	#R_OK
 4

	)

283 
	#W_OK
 2

	)

284 
	#X_OK
 1

	)

285 
	#F_OK
 0

	)

288 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_GNU


293 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1));

301 #ifde‡
__USE_ATFILE


305 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 #i‚def 
_STDIO_H


312 
	#SEEK_SET
 0

	)

313 
	#SEEK_CUR
 1

	)

314 
	#SEEK_END
 2

	)

317 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


319 
	#L_SET
 
SEEK_SET


	)

320 
	#L_INCR
 
SEEK_CUR


	)

321 
	#L_XTND
 
SEEK_END


	)

330 #i‚de‡
__USE_FILE_OFFSET64


331 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

333 #ifde‡
__REDIRECT_NTH


334 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

335 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

336 
l£ek64
);

338 
	#l£ek
 
l£ek64


	)

341 #ifde‡
__USE_LARGEFILE64


342 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

343 
__THROW
;

350 
	`˛o£
 (
__fd
);

357 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

363 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

365 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


366 #i‚de‡
__USE_FILE_OFFSET64


373 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

374 
__off_t
 
__off£t
Ë
__wur
;

381 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

382 
__off_t
 
__off£t
Ë
__wur
;

384 #ifde‡
__REDIRECT


385 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

386 
__off64_t
 
__off£t
),

387 
¥ód64
Ë
__wur
;

388 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

389 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

390 
pwrôe64
Ë
__wur
;

392 
	#¥ód
 
¥ód64


	)

393 
	#pwrôe
 
pwrôe64


	)

397 #ifde‡
__USE_LARGEFILE64


401 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

402 
__off64_t
 
__off£t
Ë
__wur
;

405 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

406 
__off64_t
 
__off£t
Ë
__wur
;

414 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

416 #ifde‡
__USE_GNU


419 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

429 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

441 
	`¶ìp
 (
__£c⁄ds
);

443 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

444 || 
deföed
 
__USE_BSD


449 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

450 
__THROW
;

457 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

466 
	`∑u£
 ();

470 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

471 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

473 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


475 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

480 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

481 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

485 #ifde‡
__USE_ATFILE


488 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

489 
__gid_t
 
__group
, 
__Êag
)

490 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

494 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

496 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


498 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

508 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

510 #ifdef 
__USE_GNU


514 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

517 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

518 || 
deföed
 
__USE_BSD


522 *
	$gëwd
 (*
__buf
)

523 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

528 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

531 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

533 #ifde‡
__USE_GNU


536 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

540 **
__ívú⁄
;

541 #ifde‡
__USE_GNU


542 **
ívú⁄
;

548 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

549 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

551 #ifde‡
__USE_XOPEN2K8


554 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

555 
__THROW
 
	`__n⁄nuŒ
 ((2));

560 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

565 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

566 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

570 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

571 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

575 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

581 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

582 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifde‡
__USE_GNU


587 
	$execv≥
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[],

588 *
__c⁄°
 
__ívp
[])

589 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

593 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


595 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

600 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

606 
	~<bôs/c⁄‚ame.h
>

609 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

610 
__THROW
 
	`__n⁄nuŒ
 ((1));

613 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

616 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

618 #ifdef 
__USE_POSIX2


620 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

625 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

628 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

632 #i‚de‡
__FAVOR_BSD


633 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

635 #ifde‡
__REDIRECT_NTH


636 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

638 
	#gëpgΩ
 
__gëpgid


	)

643 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

644 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


645 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

652 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

654 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


665 #i‚de‡
__FAVOR_BSD


669 
	$£çgΩ
 (Ë
__THROW
;

674 #ifde‡
__REDIRECT_NTH


675 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

677 
	#£çgΩ
 
£çgid


	)

686 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

688 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


690 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

694 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

697 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

700 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

703 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

708 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

710 #ifdef 
__USE_GNU


712 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

719 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

721 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


724 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

727 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


729 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

736 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

738 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


741 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

744 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


746 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

749 #ifde‡
__USE_GNU


752 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

753 
__THROW
;

757 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

758 
__THROW
;

762 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

763 
__THROW
;

767 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

768 
__THROW
;

775 
__pid_t
 
	$f‹k
 (Ë
__THROW
;

777 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

778 || 
deföed
 
__USE_BSD


783 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

789 *
	$ây«me
 (
__fd
Ë
__THROW
;

793 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

794 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

798 
	$ißây
 (
__fd
Ë
__THROW
;

800 #i‡
deföed
 
__USE_BSD
 \

801 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

804 
	$ây¶Ÿ
 (Ë
__THROW
;

809 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

810 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

812 #ifde‡
__USE_ATFILE


815 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

816 
__c⁄°
 *
__to
, 
__Êags
)

817 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

820 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


822 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

823 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

828 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

829 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

830 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

833 #ifde‡
__USE_ATFILE


835 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

836 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

839 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

840 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

841 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

845 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

847 #ifde‡
__USE_ATFILE


849 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

850 
__THROW
 
	`__n⁄nuŒ
 ((2));

854 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

858 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

861 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

868 *
	`gëlogö
 ();

869 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


876 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

879 #ifdef 
__USE_BSD


881 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

885 #ifdef 
__USE_POSIX2


889 
	#__√ed_gë›t


	)

890 
	~<gë›t.h
>

894 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


898 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

902 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

905 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

906 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

910 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

916 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

917 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

918 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

925 
	$vh™gup
 (Ë
__THROW
;

928 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

936 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

937 
size_t
 
__off£t
, 
__sˇÀ
)

938 
__THROW
 
	`__n⁄nuŒ
 ((1));

944 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

948 *
	$gëu£rshñl
 (Ë
__THROW
;

949 
	$ídu£rshñl
 (Ë
__THROW
;

950 
	$£tu£rshñl
 (Ë
__THROW
;

956 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

960 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

963 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

967 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

971 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


976 
	`fsync
 (
__fd
);

980 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


983 
	`gëho°id
 ();

986 
	$sync
 (Ë
__THROW
;

989 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


992 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

997 
	$gëdèbÀsize
 (Ë
__THROW
;

1003 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1006 #i‚de‡
__USE_FILE_OFFSET64


1007 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

1008 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1010 #ifde‡
__REDIRECT_NTH


1011 
	`__REDIRECT_NTH
 (
åunˇã
,

1012 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

1013 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1015 
	#åunˇã
 
åunˇã64


	)

1018 #ifde‡
__USE_LARGEFILE64


1019 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

1020 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1025 #i‚de‡
__USE_FILE_OFFSET64


1026 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1028 #ifde‡
__REDIRECT_NTH


1029 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1030 
·runˇã64
Ë
__wur
;

1032 
	#·runˇã
 
·runˇã64


	)

1035 #ifde‡
__USE_LARGEFILE64


1036 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1042 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1043 || 
deföed
 
__USE_MISC


1047 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1053 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1057 #ifde‡
__USE_MISC


1068 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1073 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1085 
	#F_ULOCK
 0

	)

1086 
	#F_LOCK
 1

	)

1087 
	#F_TLOCK
 2

	)

1088 
	#F_TEST
 3

	)

1090 #i‚de‡
__USE_FILE_OFFSET64


1091 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1093 #ifde‡
__REDIRECT


1094 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1095 
lockf64
Ë
__wur
;

1097 
	#lockf
 
lockf64


	)

1100 #ifde‡
__USE_LARGEFILE64


1101 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1106 #ifde‡
__USE_GNU


1111 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1112 (
__exãnsi⁄__
 \

1113 ({ 
__ªsu…
; \

1114 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1115 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1116 
__ªsu…
; 
	}
}))

	)

1119 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1122 
fd©async
 (
__fûdes
);

1128 #ifdef 
__USE_XOPEN


1130 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1131 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1135 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1142 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1143 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1149 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


1151 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1156 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1157 
	~<bôs/uni°d.h
>

1160 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/asm/types.h

1 #i‚de‡
_ASM_X86_TYPES_H


2 
	#_ASM_X86_TYPES_H


	)

4 
	~<asm-gíîic/ty≥s.h
>

	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

34 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

35 
	#__bsw≠_16
(
x
) \

36 (
__exãnsi⁄__
 \

37 ({ 
__v
, 
__x
 = (Ë(
x
); \

38 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

39 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

41 
	`__asm__
 ("rorw $8, %w0" \

42 : "Ù" (
__v
) \

43 : "0" (
__x
) \

45 
__v
; }))

	)

48 
	#__bsw≠_16
(
x
) \

49 (
__exãnsi⁄__
 \

50 ({ 
__x
 = (Ë(
x
); \

51 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

56 
	#__bsw≠_c⁄°™t_32
(
x
) \

57 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

58 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

60 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

61 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

62 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

63 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

64 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

65 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

66 || 
deföed
 
	g__amdÁm10__
)

69 
	#__bsw≠_32
(
x
) \

70 (
__exãnsi⁄__
 \

71 ({ 
__v
, 
__x
 = (
x
); \

72 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

73 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

75 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

76 
__v
; }))

	)

78 
	#__bsw≠_32
(
x
) \

79 (
__exãnsi⁄__
 \

80 ({ 
__v
, 
__x
 = (
x
); \

81 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

82 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

84 
	`__asm__
 ("rorw $8, %w0;" \

87 : "Ù" (
__v
) \

88 : "0" (
__x
) \

90 
__v
; }))

	)

93 
	#__bsw≠_32
(
x
) \

94 (
__exãnsi⁄__
 \

95 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

99 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

101 
	#__bsw≠_c⁄°™t_64
(
x
) \

102 ((((
x
) & 0xff00000000000000ull) >> 56) \

103 | (((
x
) & 0x00ff000000000000ull) >> 40) \

104 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

105 | (((
x
) & 0x000000ff00000000ull) >> 8) \

106 | (((
x
) & 0x00000000ff000000ull) << 8) \

107 | (((
x
) & 0x0000000000ff0000ull) << 24) \

108 | (((
x
) & 0x000000000000ff00ull) << 40) \

109 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

111 #i‡
__WORDSIZE
 == 64

112 
	#__bsw≠_64
(
x
) \

113 (
__exãnsi⁄__
 \

114 ({ 
__v
, 
__x
 = (
x
); \

115 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

116 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

118 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

119 
__v
; }))

	)

121 
	#__bsw≠_64
(
x
) \

122 (
__exãnsi⁄__
 \

123 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

124 
__l
[2]; } 
__w
, 
__r
; \

125 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

126 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

129 
__w
.
__Œ
 = (
x
); \

130 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

131 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

133 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/confname.h

21 #i‚de‡
_UNISTD_H


28 
	m_PC_LINK_MAX
,

29 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

30 
	m_PC_MAX_CANON
,

31 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

32 
	m_PC_MAX_INPUT
,

33 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

34 
	m_PC_NAME_MAX
,

35 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

36 
	m_PC_PATH_MAX
,

37 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

38 
	m_PC_PIPE_BUF
,

39 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

40 
	m_PC_CHOWN_RESTRICTED
,

41 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

42 
	m_PC_NO_TRUNC
,

43 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

44 
	m_PC_VDISABLE
,

45 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

46 
	m_PC_SYNC_IO
,

47 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

48 
	m_PC_ASYNC_IO
,

49 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

50 
	m_PC_PRIO_IO
,

51 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

52 
	m_PC_SOCK_MAXBUF
,

53 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

54 
	m_PC_FILESIZEBITS
,

55 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

56 
	m_PC_REC_INCR_XFER_SIZE
,

57 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

58 
	m_PC_REC_MAX_XFER_SIZE
,

59 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

60 
	m_PC_REC_MIN_XFER_SIZE
,

61 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

62 
	m_PC_REC_XFER_ALIGN
,

63 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

64 
	m_PC_ALLOC_SIZE_MIN
,

65 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

66 
	m_PC_SYMLINK_MAX
,

67 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

68 
	m_PC_2_SYMLINKS


69 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

75 
	m_SC_ARG_MAX
,

76 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

77 
	m_SC_CHILD_MAX
,

78 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

79 
	m_SC_CLK_TCK
,

80 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

81 
	m_SC_NGROUPS_MAX
,

82 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

83 
	m_SC_OPEN_MAX
,

84 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

85 
	m_SC_STREAM_MAX
,

86 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

87 
	m_SC_TZNAME_MAX
,

88 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

89 
	m_SC_JOB_CONTROL
,

90 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

91 
	m_SC_SAVED_IDS
,

92 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

93 
	m_SC_REALTIME_SIGNALS
,

94 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

95 
	m_SC_PRIORITY_SCHEDULING
,

96 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

97 
	m_SC_TIMERS
,

98 
	#_SC_TIMERS
 
_SC_TIMERS


	)

99 
	m_SC_ASYNCHRONOUS_IO
,

100 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

101 
	m_SC_PRIORITIZED_IO
,

102 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

103 
	m_SC_SYNCHRONIZED_IO
,

104 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

105 
	m_SC_FSYNC
,

106 
	#_SC_FSYNC
 
_SC_FSYNC


	)

107 
	m_SC_MAPPED_FILES
,

108 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

109 
	m_SC_MEMLOCK
,

110 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

111 
	m_SC_MEMLOCK_RANGE
,

112 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

113 
	m_SC_MEMORY_PROTECTION
,

114 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

115 
	m_SC_MESSAGE_PASSING
,

116 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

117 
	m_SC_SEMAPHORES
,

118 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

119 
	m_SC_SHARED_MEMORY_OBJECTS
,

120 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

121 
	m_SC_AIO_LISTIO_MAX
,

122 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

123 
	m_SC_AIO_MAX
,

124 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

125 
	m_SC_AIO_PRIO_DELTA_MAX
,

126 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

127 
	m_SC_DELAYTIMER_MAX
,

128 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

129 
	m_SC_MQ_OPEN_MAX
,

130 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

131 
	m_SC_MQ_PRIO_MAX
,

132 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

133 
	m_SC_VERSION
,

134 
	#_SC_VERSION
 
_SC_VERSION


	)

135 
	m_SC_PAGESIZE
,

136 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

137 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

138 
	m_SC_RTSIG_MAX
,

139 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

140 
	m_SC_SEM_NSEMS_MAX
,

141 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

142 
	m_SC_SEM_VALUE_MAX
,

143 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

144 
	m_SC_SIGQUEUE_MAX
,

145 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

146 
	m_SC_TIMER_MAX
,

147 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

151 
	m_SC_BC_BASE_MAX
,

152 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

153 
	m_SC_BC_DIM_MAX
,

154 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

155 
	m_SC_BC_SCALE_MAX
,

156 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

157 
	m_SC_BC_STRING_MAX
,

158 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

159 
	m_SC_COLL_WEIGHTS_MAX
,

160 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

161 
	m_SC_EQUIV_CLASS_MAX
,

162 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

163 
	m_SC_EXPR_NEST_MAX
,

164 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

165 
	m_SC_LINE_MAX
,

166 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

167 
	m_SC_RE_DUP_MAX
,

168 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

169 
	m_SC_CHARCLASS_NAME_MAX
,

170 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

172 
	m_SC_2_VERSION
,

173 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

174 
	m_SC_2_C_BIND
,

175 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

176 
	m_SC_2_C_DEV
,

177 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

178 
	m_SC_2_FORT_DEV
,

179 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

180 
	m_SC_2_FORT_RUN
,

181 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

182 
	m_SC_2_SW_DEV
,

183 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

184 
	m_SC_2_LOCALEDEF
,

185 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

187 
	m_SC_PII
,

188 
	#_SC_PII
 
_SC_PII


	)

189 
	m_SC_PII_XTI
,

190 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

191 
	m_SC_PII_SOCKET
,

192 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

193 
	m_SC_PII_INTERNET
,

194 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

195 
	m_SC_PII_OSI
,

196 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

197 
	m_SC_POLL
,

198 
	#_SC_POLL
 
_SC_POLL


	)

199 
	m_SC_SELECT
,

200 
	#_SC_SELECT
 
_SC_SELECT


	)

201 
	m_SC_UIO_MAXIOV
,

202 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

203 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

204 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

205 
	m_SC_PII_INTERNET_STREAM
,

206 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

207 
	m_SC_PII_INTERNET_DGRAM
,

208 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

209 
	m_SC_PII_OSI_COTS
,

210 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

211 
	m_SC_PII_OSI_CLTS
,

212 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

213 
	m_SC_PII_OSI_M
,

214 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

215 
	m_SC_T_IOV_MAX
,

216 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

219 
	m_SC_THREADS
,

220 
	#_SC_THREADS
 
_SC_THREADS


	)

221 
	m_SC_THREAD_SAFE_FUNCTIONS
,

222 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

223 
	m_SC_GETGR_R_SIZE_MAX
,

224 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

225 
	m_SC_GETPW_R_SIZE_MAX
,

226 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

227 
	m_SC_LOGIN_NAME_MAX
,

228 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

229 
	m_SC_TTY_NAME_MAX
,

230 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

231 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

232 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

233 
	m_SC_THREAD_KEYS_MAX
,

234 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

235 
	m_SC_THREAD_STACK_MIN
,

236 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

237 
	m_SC_THREAD_THREADS_MAX
,

238 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

239 
	m_SC_THREAD_ATTR_STACKADDR
,

240 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

241 
	m_SC_THREAD_ATTR_STACKSIZE
,

242 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

243 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

244 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

245 
	m_SC_THREAD_PRIO_INHERIT
,

246 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

247 
	m_SC_THREAD_PRIO_PROTECT
,

248 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

249 
	m_SC_THREAD_PROCESS_SHARED
,

250 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

252 
	m_SC_NPROCESSORS_CONF
,

253 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

254 
	m_SC_NPROCESSORS_ONLN
,

255 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

256 
	m_SC_PHYS_PAGES
,

257 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

258 
	m_SC_AVPHYS_PAGES
,

259 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

260 
	m_SC_ATEXIT_MAX
,

261 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

262 
	m_SC_PASS_MAX
,

263 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

265 
	m_SC_XOPEN_VERSION
,

266 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

267 
	m_SC_XOPEN_XCU_VERSION
,

268 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

269 
	m_SC_XOPEN_UNIX
,

270 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

271 
	m_SC_XOPEN_CRYPT
,

272 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

273 
	m_SC_XOPEN_ENH_I18N
,

274 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

275 
	m_SC_XOPEN_SHM
,

276 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

278 
	m_SC_2_CHAR_TERM
,

279 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

280 
	m_SC_2_C_VERSION
,

281 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

282 
	m_SC_2_UPE
,

283 
	#_SC_2_UPE
 
_SC_2_UPE


	)

285 
	m_SC_XOPEN_XPG2
,

286 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

287 
	m_SC_XOPEN_XPG3
,

288 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

289 
	m_SC_XOPEN_XPG4
,

290 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

292 
	m_SC_CHAR_BIT
,

293 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

294 
	m_SC_CHAR_MAX
,

295 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

296 
	m_SC_CHAR_MIN
,

297 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

298 
	m_SC_INT_MAX
,

299 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

300 
	m_SC_INT_MIN
,

301 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

302 
	m_SC_LONG_BIT
,

303 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

304 
	m_SC_WORD_BIT
,

305 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

306 
	m_SC_MB_LEN_MAX
,

307 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

308 
	m_SC_NZERO
,

309 
	#_SC_NZERO
 
_SC_NZERO


	)

310 
	m_SC_SSIZE_MAX
,

311 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

312 
	m_SC_SCHAR_MAX
,

313 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

314 
	m_SC_SCHAR_MIN
,

315 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

316 
	m_SC_SHRT_MAX
,

317 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

318 
	m_SC_SHRT_MIN
,

319 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

320 
	m_SC_UCHAR_MAX
,

321 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

322 
	m_SC_UINT_MAX
,

323 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

324 
	m_SC_ULONG_MAX
,

325 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

326 
	m_SC_USHRT_MAX
,

327 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

329 
	m_SC_NL_ARGMAX
,

330 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

331 
	m_SC_NL_LANGMAX
,

332 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

333 
	m_SC_NL_MSGMAX
,

334 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

335 
	m_SC_NL_NMAX
,

336 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

337 
	m_SC_NL_SETMAX
,

338 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

339 
	m_SC_NL_TEXTMAX
,

340 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

342 
	m_SC_XBS5_ILP32_OFF32
,

343 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

344 
	m_SC_XBS5_ILP32_OFFBIG
,

345 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

346 
	m_SC_XBS5_LP64_OFF64
,

347 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

348 
	m_SC_XBS5_LPBIG_OFFBIG
,

349 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

351 
	m_SC_XOPEN_LEGACY
,

352 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

353 
	m_SC_XOPEN_REALTIME
,

354 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

355 
	m_SC_XOPEN_REALTIME_THREADS
,

356 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

358 
	m_SC_ADVISORY_INFO
,

359 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

360 
	m_SC_BARRIERS
,

361 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

362 
	m_SC_BASE
,

363 
	#_SC_BASE
 
_SC_BASE


	)

364 
	m_SC_C_LANG_SUPPORT
,

365 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

366 
	m_SC_C_LANG_SUPPORT_R
,

367 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

368 
	m_SC_CLOCK_SELECTION
,

369 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

370 
	m_SC_CPUTIME
,

371 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

372 
	m_SC_THREAD_CPUTIME
,

373 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

374 
	m_SC_DEVICE_IO
,

375 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

376 
	m_SC_DEVICE_SPECIFIC
,

377 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

378 
	m_SC_DEVICE_SPECIFIC_R
,

379 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

380 
	m_SC_FD_MGMT
,

381 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

382 
	m_SC_FIFO
,

383 
	#_SC_FIFO
 
_SC_FIFO


	)

384 
	m_SC_PIPE
,

385 
	#_SC_PIPE
 
_SC_PIPE


	)

386 
	m_SC_FILE_ATTRIBUTES
,

387 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

388 
	m_SC_FILE_LOCKING
,

389 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

390 
	m_SC_FILE_SYSTEM
,

391 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

392 
	m_SC_MONOTONIC_CLOCK
,

393 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

394 
	m_SC_MULTI_PROCESS
,

395 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

396 
	m_SC_SINGLE_PROCESS
,

397 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

398 
	m_SC_NETWORKING
,

399 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

400 
	m_SC_READER_WRITER_LOCKS
,

401 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

402 
	m_SC_SPIN_LOCKS
,

403 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

404 
	m_SC_REGEXP
,

405 
	#_SC_REGEXP
 
_SC_REGEXP


	)

406 
	m_SC_REGEX_VERSION
,

407 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

408 
	m_SC_SHELL
,

409 
	#_SC_SHELL
 
_SC_SHELL


	)

410 
	m_SC_SIGNALS
,

411 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

412 
	m_SC_SPAWN
,

413 
	#_SC_SPAWN
 
_SC_SPAWN


	)

414 
	m_SC_SPORADIC_SERVER
,

415 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

416 
	m_SC_THREAD_SPORADIC_SERVER
,

417 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

418 
	m_SC_SYSTEM_DATABASE
,

419 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

420 
	m_SC_SYSTEM_DATABASE_R
,

421 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

422 
	m_SC_TIMEOUTS
,

423 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

424 
	m_SC_TYPED_MEMORY_OBJECTS
,

425 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

426 
	m_SC_USER_GROUPS
,

427 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

428 
	m_SC_USER_GROUPS_R
,

429 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

430 
	m_SC_2_PBS
,

431 
	#_SC_2_PBS
 
_SC_2_PBS


	)

432 
	m_SC_2_PBS_ACCOUNTING
,

433 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

434 
	m_SC_2_PBS_LOCATE
,

435 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

436 
	m_SC_2_PBS_MESSAGE
,

437 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

438 
	m_SC_2_PBS_TRACK
,

439 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

440 
	m_SC_SYMLOOP_MAX
,

441 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

442 
	m_SC_STREAMS
,

443 
	#_SC_STREAMS
 
_SC_STREAMS


	)

444 
	m_SC_2_PBS_CHECKPOINT
,

445 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

447 
	m_SC_V6_ILP32_OFF32
,

448 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

449 
	m_SC_V6_ILP32_OFFBIG
,

450 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

451 
	m_SC_V6_LP64_OFF64
,

452 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

453 
	m_SC_V6_LPBIG_OFFBIG
,

454 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

456 
	m_SC_HOST_NAME_MAX
,

457 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

458 
	m_SC_TRACE
,

459 
	#_SC_TRACE
 
_SC_TRACE


	)

460 
	m_SC_TRACE_EVENT_FILTER
,

461 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

462 
	m_SC_TRACE_INHERIT
,

463 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

464 
	m_SC_TRACE_LOG
,

465 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

467 
	m_SC_LEVEL1_ICACHE_SIZE
,

468 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

469 
	m_SC_LEVEL1_ICACHE_ASSOC
,

470 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

471 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

472 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

473 
	m_SC_LEVEL1_DCACHE_SIZE
,

474 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

475 
	m_SC_LEVEL1_DCACHE_ASSOC
,

476 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

477 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

478 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

479 
	m_SC_LEVEL2_CACHE_SIZE
,

480 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

481 
	m_SC_LEVEL2_CACHE_ASSOC
,

482 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

483 
	m_SC_LEVEL2_CACHE_LINESIZE
,

484 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

485 
	m_SC_LEVEL3_CACHE_SIZE
,

486 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

487 
	m_SC_LEVEL3_CACHE_ASSOC
,

488 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

489 
	m_SC_LEVEL3_CACHE_LINESIZE
,

490 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

491 
	m_SC_LEVEL4_CACHE_SIZE
,

492 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

493 
	m_SC_LEVEL4_CACHE_ASSOC
,

494 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

495 
	m_SC_LEVEL4_CACHE_LINESIZE
,

496 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

499 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

500 
	#_SC_IPV6
 
_SC_IPV6


	)

501 
	m_SC_RAW_SOCKETS
,

502 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

504 
	m_SC_V7_ILP32_OFF32
,

505 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

506 
	m_SC_V7_ILP32_OFFBIG
,

507 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

508 
	m_SC_V7_LP64_OFF64
,

509 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

510 
	m_SC_V7_LPBIG_OFFBIG
,

511 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

513 
	m_SC_SS_REPL_MAX
,

514 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

516 
	m_SC_TRACE_EVENT_NAME_MAX
,

517 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

518 
	m_SC_TRACE_NAME_MAX
,

519 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

520 
	m_SC_TRACE_SYS_MAX
,

521 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

522 
	m_SC_TRACE_USER_EVENT_MAX
,

523 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

525 
	m_SC_XOPEN_STREAMS
,

526 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

528 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

529 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

530 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


531 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

537 
	m_CS_PATH
,

538 
	#_CS_PATH
 
_CS_PATH


	)

540 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

541 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

544 
	m_CS_GNU_LIBC_VERSION
,

545 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

546 
	m_CS_GNU_LIBPTHREAD_VERSION
,

547 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

549 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

550 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

553 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

554 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

557 
	m_CS_LFS_CFLAGS
 = 1000,

558 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

559 
	m_CS_LFS_LDFLAGS
,

560 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

561 
	m_CS_LFS_LIBS
,

562 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

563 
	m_CS_LFS_LINTFLAGS
,

564 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

565 
	m_CS_LFS64_CFLAGS
,

566 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

567 
	m_CS_LFS64_LDFLAGS
,

568 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

569 
	m_CS_LFS64_LIBS
,

570 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

571 
	m_CS_LFS64_LINTFLAGS
,

572 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

575 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

577 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

579 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

580 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

581 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

588 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

589 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

593 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

594 
	m_CS_XBS5_LP64_OFF64_LIBS
,

595 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

596 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

597 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

604 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

605 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

613 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

621 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

622 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

629 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

630 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

637 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

638 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

646 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

654 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

655 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

662 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

663 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

670 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

671 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

673 
	m_CS_V6_ENV
,

674 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

675 
	m_CS_V7_ENV


676 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/dirent.h

19 #i‚de‡
_DIRENT_H


23 
	sdúít


25 #i‚de‡
__USE_FILE_OFFSET64


26 
__öo_t
 
	md_öo
;

27 
__off_t
 
	md_off
;

29 
__öo64_t
 
	md_öo
;

30 
__off64_t
 
	md_off
;

32 
	md_ª˛í
;

33 
	md_ty≥
;

34 
	md_«me
[256];

37 #ifde‡
__USE_LARGEFILE64


38 
	sdúít64


40 
__öo64_t
 
	md_öo
;

41 
__off64_t
 
	md_off
;

42 
	md_ª˛í
;

43 
	md_ty≥
;

44 
	md_«me
[256];

48 
	#d_fûío
 
d_öo


	)

50 #unde‡
_DIRENT_HAVE_D_NAMLEN


51 
	#_DIRENT_HAVE_D_RECLEN


	)

52 
	#_DIRENT_HAVE_D_OFF


	)

53 
	#_DIRENT_HAVE_D_TYPE


	)

	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


23 
	~<bôs/w‹dsize.h
>

43 #i‡
__WORDSIZE
 == 64

57 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

58 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

59 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

62 
	#_POSIX_V7_LP64_OFF64
 1

	)

63 
	#_POSIX_V6_LP64_OFF64
 1

	)

64 
	#_XBS5_LP64_OFF64
 1

	)

70 
	#_POSIX_V7_ILP32_OFF32
 1

	)

71 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

72 
	#_POSIX_V6_ILP32_OFF32
 1

	)

73 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

74 
	#_XBS5_ILP32_OFF32
 1

	)

75 
	#_XBS5_ILP32_OFFBIG
 1

	)

92 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

93 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

94 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

95 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

96 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

97 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
ERFKILL


42 
	#ERFKILL
 132

	)

45 #i‚de‡
__ASSEMBLER__


47 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

49 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


51 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

56 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


60 
	#EDOM
 33

	)

61 
	#EILSEQ
 84

	)

62 
	#ERANGE
 34

	)

	@/usr/include/bits/fcntl.h

21 #i‚def 
_FCNTL_H


25 
	~<sys/ty≥s.h
>

26 
	~<bôs/w‹dsize.h
>

27 #ifde‡
__USE_GNU


28 
	~<bôs/uio.h
>

34 
	#O_ACCMODE
 0003

	)

35 
	#O_RDONLY
 00

	)

36 
	#O_WRONLY
 01

	)

37 
	#O_RDWR
 02

	)

38 
	#O_CREAT
 0100

	)

39 
	#O_EXCL
 0200

	)

40 
	#O_NOCTTY
 0400

	)

41 
	#O_TRUNC
 01000

	)

42 
	#O_APPEND
 02000

	)

43 
	#O_NONBLOCK
 04000

	)

44 
	#O_NDELAY
 
O_NONBLOCK


	)

45 
	#O_SYNC
 04010000

	)

46 
	#O_FSYNC
 
O_SYNC


	)

47 
	#O_ASYNC
 020000

	)

49 #ifde‡
__USE_XOPEN2K8


50 
	#O_DIRECTORY
 0200000

	)

51 
	#O_NOFOLLOW
 0400000

	)

52 
	#O_CLOEXEC
 02000000

	)

54 #ifde‡
__USE_GNU


55 
	#O_DIRECT
 040000

	)

56 
	#O_NOATIME
 01000000

	)

62 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


63 
	#O_DSYNC
 010000

	)

64 
	#O_RSYNC
 
O_SYNC


	)

67 #ifde‡
__USE_LARGEFILE64


68 #i‡
__WORDSIZE
 == 64

69 
	#O_LARGEFILE
 0

	)

71 
	#O_LARGEFILE
 0100000

	)

76 
	#F_DUPFD
 0

	)

77 
	#F_GETFD
 1

	)

78 
	#F_SETFD
 2

	)

79 
	#F_GETFL
 3

	)

80 
	#F_SETFL
 4

	)

81 #i‡
__WORDSIZE
 == 64

82 
	#F_GETLK
 5

	)

83 
	#F_SETLK
 6

	)

84 
	#F_SETLKW
 7

	)

86 
	#F_GETLK64
 5

	)

87 
	#F_SETLK64
 6

	)

88 
	#F_SETLKW64
 7

	)

90 #i‚de‡
__USE_FILE_OFFSET64


91 
	#F_GETLK
 5

	)

92 
	#F_SETLK
 6

	)

93 
	#F_SETLKW
 7

	)

95 
	#F_GETLK
 
F_GETLK64


	)

96 
	#F_SETLK
 
F_SETLK64


	)

97 
	#F_SETLKW
 
F_SETLKW64


	)

99 
	#F_GETLK64
 12

	)

100 
	#F_SETLK64
 13

	)

101 
	#F_SETLKW64
 14

	)

104 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


105 
	#F_SETOWN
 8

	)

106 
	#F_GETOWN
 9

	)

109 #ifde‡
__USE_GNU


110 
	#F_SETSIG
 10

	)

111 
	#F_GETSIG
 11

	)

112 
	#F_SETOWN_EX
 15

	)

113 
	#F_GETOWN_EX
 16

	)

116 #ifde‡
__USE_GNU


117 
	#F_SETLEASE
 1024

	)

118 
	#F_GETLEASE
 1025

	)

119 
	#F_NOTIFY
 1026

	)

121 #ifde‡
__USE_XOPEN2K8


122 
	#F_DUPFD_CLOEXEC
 1030

	)

127 
	#FD_CLOEXEC
 1

	)

130 
	#F_RDLCK
 0

	)

131 
	#F_WRLCK
 1

	)

132 
	#F_UNLCK
 2

	)

135 
	#F_EXLCK
 4

	)

136 
	#F_SHLCK
 8

	)

138 #ifde‡
__USE_BSD


140 
	#LOCK_SH
 1

	)

141 
	#LOCK_EX
 2

	)

142 
	#LOCK_NB
 4

	)

144 
	#LOCK_UN
 8

	)

147 #ifde‡
__USE_GNU


148 
	#LOCK_MAND
 32

	)

149 
	#LOCK_READ
 64

	)

150 
	#LOCK_WRITE
 128

	)

151 
	#LOCK_RW
 192

	)

154 #ifde‡
__USE_GNU


156 
	#DN_ACCESS
 0x00000001

	)

157 
	#DN_MODIFY
 0x00000002

	)

158 
	#DN_CREATE
 0x00000004

	)

159 
	#DN_DELETE
 0x00000008

	)

160 
	#DN_RENAME
 0x00000010

	)

161 
	#DN_ATTRIB
 0x00000020

	)

162 
	#DN_MULTISHOT
 0x80000000

	)

165 
	sÊock


167 
	ml_ty≥
;

168 
	ml_whí˚
;

169 #i‚de‡
__USE_FILE_OFFSET64


170 
__off_t
 
	ml_°¨t
;

171 
__off_t
 
	ml_Àn
;

173 
__off64_t
 
	ml_°¨t
;

174 
__off64_t
 
	ml_Àn
;

176 
__pid_t
 
	ml_pid
;

179 #ifde‡
__USE_LARGEFILE64


180 
	sÊock64


182 
	ml_ty≥
;

183 
	ml_whí˚
;

184 
__off64_t
 
	ml_°¨t
;

185 
__off64_t
 
	ml_Àn
;

186 
__pid_t
 
	ml_pid
;

190 #ifde‡
__USE_GNU


192 
	e__pid_ty≥


194 
	mF_OWNER_TID
 = 0,

195 
	mF_OWNER_PID
,

196 
	mF_OWNER_PGRP
,

197 
	mF_OWNER_GID
 = 
F_OWNER_PGRP


201 
	sf_ow√r_ex


203 
__pid_ty≥
 
	mty≥
;

204 
__pid_t
 
	mpid
;

210 #ifdef 
__USE_BSD


211 
	#FAPPEND
 
O_APPEND


	)

212 
	#FFSYNC
 
O_FSYNC


	)

213 
	#FASYNC
 
O_ASYNC


	)

214 
	#FNONBLOCK
 
O_NONBLOCK


	)

215 
	#FNDELAY
 
O_NDELAY


	)

219 #ifde‡
__USE_XOPEN2K


220 
	#POSIX_FADV_NORMAL
 0

	)

221 
	#POSIX_FADV_RANDOM
 1

	)

222 
	#POSIX_FADV_SEQUENTIAL
 2

	)

223 
	#POSIX_FADV_WILLNEED
 3

	)

224 
	#POSIX_FADV_DONTNEED
 4

	)

225 
	#POSIX_FADV_NOREUSE
 5

	)

229 #ifde‡
__USE_GNU


231 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

234 
	#SYNC_FILE_RANGE_WRITE
 2

	)

237 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

242 
	#SPLICE_F_MOVE
 1

	)

243 
	#SPLICE_F_NONBLOCK
 2

	)

246 
	#SPLICE_F_MORE
 4

	)

247 
	#SPLICE_F_GIFT
 8

	)

250 
	g__BEGIN_DECLS


252 #ifde‡
__USE_GNU


255 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

256 
__THROW
;

260 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__cou¡
,

261 
__Êags
);

265 
ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

266 
size_t
 
__cou¡
, 
__Êags
);

269 
ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

270 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

271 
__Êags
);

274 
ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

275 
__Êags
);

278 #i‚de‡
__USE_FILE_OFFSET64


279 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

281 #ifde‡
__REDIRECT


282 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

283 
__off64_t
 
__Àn
),

284 
ÁŒoˇã64
);

286 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

289 #ifde‡
__USE_LARGEFILE64


290 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

291 
__off64_t
 
__Àn
);

295 
__END_DECLS


	@/usr/include/bits/fcntl2.h

20 #i‚def 
_FCNTL_H


26 #i‚de‡
__USE_FILE_OFFSET64


27 
	$__›í_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

28 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

29 
›í
Ë
	`__n⁄nuŒ
 ((1));

31 
	`__REDIRECT
 (
__›í_2
, (
__c⁄°
 *
__∑th
, 
__oÊag
),

32 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

33 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

34 
›í64
Ë
	`__n⁄nuŒ
 ((1));

36 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

38 
	`__îr‹de˛
 (
__›í_missög_mode
,

41 
__exã∫_Æways_ölöe
 

42 
	$›í
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

44 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

45 
	`__›í_too_m™y_¨gs
 ();

47 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

49 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

51 
	`__›í_missög_mode
 ();

52  
	`__›í_2
 (
__∑th
, 
__oÊag
);

54  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

57 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

58  
	`__›í_2
 (
__∑th
, 
__oÊag
);

60  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

61 
	}
}

64 #ifde‡
__USE_LARGEFILE64


65 
	$__›í64_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

66 
	`__REDIRECT
 (
__›í64_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
,

67 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

68 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

70 
	`__îr‹de˛
 (
__›í64_missög_mode
,

73 
__exã∫_Æways_ölöe
 

74 
	$›í64
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

76 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

77 
	`__›í64_too_m™y_¨gs
 ();

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

81 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

83 
	`__›í64_missög_mode
 ();

84  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

86  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

89 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

90  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

92  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

93 
	}
}

97 #ifde‡
__USE_ATFILE


98 #i‚de‡
__USE_FILE_OFFSET64


99 
	$__›í©_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

100 
	`__n⁄nuŒ
 ((2));

101 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

102 
__oÊag
, ...), 
›í©
)

103 
	`__n⁄nuŒ
 ((2));

105 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, 
__c⁄°
 *
__∑th
,

106 
__oÊag
), 
__›í©64_2
)

107 
	`__n⁄nuŒ
 ((2));

108 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

109 
__oÊag
, ...), 
›í©64
)

110 
	`__n⁄nuŒ
 ((2));

112 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

114 
	`__îr‹de˛
 (
__›í©_missög_mode
,

117 
__exã∫_Æways_ölöe
 

118 
	$›í©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

120 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

121 
	`__›í©_too_m™y_¨gs
 ();

123 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

125 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

127 
	`__›í©_missög_mode
 ();

128  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

130  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

133 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

134  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

136  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

137 
	}
}

140 #ifde‡
__USE_LARGEFILE64


141 
	$__›í©64_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

142 
	`__n⁄nuŒ
 ((2));

143 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

144 
__oÊag
, ...), 
›í©64
)

145 
	`__n⁄nuŒ
 ((2));

146 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

148 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

151 
__exã∫_Æways_ölöe
 

152 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

154 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

155 
	`__›í©64_too_m™y_¨gs
 ();

157 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

159 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

161 
	`__›í©64_missög_mode
 ();

162  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

164  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

167 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

168  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

170  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

171 
	}
}

	@/usr/include/bits/huge_val.h

22 #i‚de‡
_MATH_H


28 #i‡
__GNUC_PREREQ
(3,3)

29 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
())

	)

30 #ñi‡
__GNUC_PREREQ
(2,96)

31 
	#HUGE_VAL
 (
__exãnsi⁄__
 0x1.0
p2047
)

	)

32 #ñi‡
deföed
 
__GNUC__


34 
	#HUGE_VAL
 \

35 (
__exãnsi⁄__
 \

36 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__DI__
))); 
__d
; }) \

37 { 
__l
: 0x7ff0000000000000ULL }).
__d
)

	)

41 
	~<ídün.h
>

43 uni⁄ { 
	m__c
[8]; 
	m__d
; } 
	t__huge_vÆ_t
;

45 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


46 
	#__HUGE_VAL_byãs
 { 0x7f, 0xf0, 0, 0, 0, 0, 0, 0 }

	)

48 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


49 
	#__HUGE_VAL_byãs
 { 0, 0, 0, 0, 0, 0, 0xf0, 0x7‡}

	)

52 
__huge_vÆ_t
 
	g__huge_vÆ
 = { 
__HUGE_VAL_byãs
 };

53 
	#HUGE_VAL
 (
__huge_vÆ
.
__d
)

	)

	@/usr/include/bits/huge_valf.h

22 #i‚de‡
_MATH_H


28 #i‡
__GNUC_PREREQ
(3,3)

29 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
())

	)

30 #ñi‡
__GNUC_PREREQ
(2,96)

31 
	#HUGE_VALF
 (
__exãnsi⁄__
 0x1.0
p255f
)

	)

32 #ñi‡
deföed
 
__GNUC__


34 
	#HUGE_VALF
 \

35 (
__exãnsi⁄__
 \

36 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__SI__
))); 
__d
; }) \

37 { 
__l
: 0x7f800000UL }).
__d
)

	)

41 uni⁄ { 
	m__c
[4]; 
	m__f
; } 
	t__huge_vÆf_t
;

43 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


44 
	#__HUGE_VALF_byãs
 { 0x7f, 0x80, 0, 0 }

	)

46 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


47 
	#__HUGE_VALF_byãs
 { 0, 0, 0x80, 0x7‡}

	)

50 
__huge_vÆf_t
 
	g__huge_vÆf
 = { 
__HUGE_VALF_byãs
 };

51 
	#HUGE_VALF
 (
__huge_vÆf
.
__f
)

	)

	@/usr/include/bits/huge_vall.h

21 #i‚de‡
_MATH_H


25 #i‡
__GNUC_PREREQ
(3,3)

26 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
())

	)

28 
	#HUGE_VALL
 ((Ë
HUGE_VAL
)

	)

	@/usr/include/bits/in.h

21 #i‚de‡
_NETINET_IN_H


28 
	#IP_OPTIONS
 4

	)

29 
	#IP_HDRINCL
 3

	)

30 
	#IP_TOS
 1

	)

31 
	#IP_TTL
 2

	)

32 
	#IP_RECVOPTS
 6

	)

34 
	#IP_RECVRETOPTS
 
IP_RETOPTS


	)

35 
	#IP_RETOPTS
 7

	)

36 
	#IP_MULTICAST_IF
 32

	)

37 
	#IP_MULTICAST_TTL
 33

	)

38 
	#IP_MULTICAST_LOOP
 34

	)

39 
	#IP_ADD_MEMBERSHIP
 35

	)

40 
	#IP_DROP_MEMBERSHIP
 36

	)

41 
	#IP_UNBLOCK_SOURCE
 37

	)

42 
	#IP_BLOCK_SOURCE
 38

	)

43 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

44 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

45 
	#IP_MSFILTER
 41

	)

46 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


47 
	#MCAST_JOIN_GROUP
 42

	)

48 
	#MCAST_BLOCK_SOURCE
 43

	)

49 
	#MCAST_UNBLOCK_SOURCE
 44

	)

50 
	#MCAST_LEAVE_GROUP
 45

	)

51 
	#MCAST_JOIN_SOURCE_GROUP
 46

	)

52 
	#MCAST_LEAVE_SOURCE_GROUP
 47

	)

53 
	#MCAST_MSFILTER
 48

	)

55 
	#MCAST_EXCLUDE
 0

	)

56 
	#MCAST_INCLUDE
 1

	)

59 
	#IP_ROUTER_ALERT
 5

	)

60 
	#IP_PKTINFO
 8

	)

61 
	#IP_PKTOPTIONS
 9

	)

62 
	#IP_PMTUDISC
 10

	)

63 
	#IP_MTU_DISCOVER
 10

	)

64 
	#IP_RECVERR
 11

	)

65 
	#IP_RECVTTL
 12

	)

66 
	#IP_RECVTOS
 13

	)

67 
	#IP_MTU
 14

	)

68 
	#IP_FREEBIND
 15

	)

69 
	#IP_IPSEC_POLICY
 16

	)

70 
	#IP_XFRM_POLICY
 17

	)

71 
	#IP_PASSSEC
 18

	)

72 
	#IP_TRANSPARENT
 19

	)

73 
	#IP_MULTICAST_ALL
 49

	)

76 
	#IP_ORIGDSTADDR
 20

	)

77 
	#IP_RECVORIGDSTADDR
 
IP_ORIGDSTADDR


	)

79 
	#IP_MINTTL
 21

	)

83 
	#IP_PMTUDISC_DONT
 0

	)

84 
	#IP_PMTUDISC_WANT
 1

	)

85 
	#IP_PMTUDISC_DO
 2

	)

86 
	#IP_PMTUDISC_PROBE
 3

	)

89 
	#SOL_IP
 0

	)

91 
	#IP_DEFAULT_MULTICAST_TTL
 1

	)

92 
	#IP_DEFAULT_MULTICAST_LOOP
 1

	)

93 
	#IP_MAX_MEMBERSHIPS
 20

	)

95 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


99 
	sù_›ts


101 
ö_addr
 
	mù_d°
;

102 
	mù_›ts
[40];

106 
	sù_mªqn


108 
ö_addr
 
	mimr_mu…üddr
;

109 
ö_addr
 
	mimr_addªss
;

110 
	mimr_ifödex
;

114 
	sö_pktöfo


116 
	mùi_ifödex
;

117 
ö_addr
 
	mùi_•ec_d°
;

118 
ö_addr
 
	mùi_addr
;

125 
	#IPV6_ADDRFORM
 1

	)

126 
	#IPV6_2292PKTINFO
 2

	)

127 
	#IPV6_2292HOPOPTS
 3

	)

128 
	#IPV6_2292DSTOPTS
 4

	)

129 
	#IPV6_2292RTHDR
 5

	)

130 
	#IPV6_2292PKTOPTIONS
 6

	)

131 
	#IPV6_CHECKSUM
 7

	)

132 
	#IPV6_2292HOPLIMIT
 8

	)

134 
	#SCM_SRCRT
 
IPV6_RXSRCRT


	)

136 
	#IPV6_NEXTHOP
 9

	)

137 
	#IPV6_AUTHHDR
 10

	)

138 
	#IPV6_UNICAST_HOPS
 16

	)

139 
	#IPV6_MULTICAST_IF
 17

	)

140 
	#IPV6_MULTICAST_HOPS
 18

	)

141 
	#IPV6_MULTICAST_LOOP
 19

	)

142 
	#IPV6_JOIN_GROUP
 20

	)

143 
	#IPV6_LEAVE_GROUP
 21

	)

144 
	#IPV6_ROUTER_ALERT
 22

	)

145 
	#IPV6_MTU_DISCOVER
 23

	)

146 
	#IPV6_MTU
 24

	)

147 
	#IPV6_RECVERR
 25

	)

148 
	#IPV6_V6ONLY
 26

	)

149 
	#IPV6_JOIN_ANYCAST
 27

	)

150 
	#IPV6_LEAVE_ANYCAST
 28

	)

151 
	#IPV6_IPSEC_POLICY
 34

	)

152 
	#IPV6_XFRM_POLICY
 35

	)

154 
	#IPV6_RECVPKTINFO
 49

	)

155 
	#IPV6_PKTINFO
 50

	)

156 
	#IPV6_RECVHOPLIMIT
 51

	)

157 
	#IPV6_HOPLIMIT
 52

	)

158 
	#IPV6_RECVHOPOPTS
 53

	)

159 
	#IPV6_HOPOPTS
 54

	)

160 
	#IPV6_RTHDRDSTOPTS
 55

	)

161 
	#IPV6_RECVRTHDR
 56

	)

162 
	#IPV6_RTHDR
 57

	)

163 
	#IPV6_RECVDSTOPTS
 58

	)

164 
	#IPV6_DSTOPTS
 59

	)

166 
	#IPV6_RECVTCLASS
 66

	)

167 
	#IPV6_TCLASS
 67

	)

170 
	#IPV6_ADD_MEMBERSHIP
 
IPV6_JOIN_GROUP


	)

171 
	#IPV6_DROP_MEMBERSHIP
 
IPV6_LEAVE_GROUP


	)

172 
	#IPV6_RXHOPOPTS
 
IPV6_HOPOPTS


	)

173 
	#IPV6_RXDSTOPTS
 
IPV6_DSTOPTS


	)

176 
	#IPV6_PMTUDISC_DONT
 0

	)

177 
	#IPV6_PMTUDISC_WANT
 1

	)

178 
	#IPV6_PMTUDISC_DO
 2

	)

179 
	#IPV6_PMTUDISC_PROBE
 3

	)

182 
	#SOL_IPV6
 41

	)

183 
	#SOL_ICMPV6
 58

	)

186 
	#IPV6_RTHDR_LOOSE
 0

	)

187 
	#IPV6_RTHDR_STRICT
 1

	)

189 
	#IPV6_RTHDR_TYPE_0
 0

	)

	@/usr/include/bits/inf.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#INFINITY
 (
	`__buûtö_öff
())

	)

29 
	#INFINITY
 
HUGE_VALF


	)

	@/usr/include/bits/ioctl-types.h

20 #i‚de‡
_SYS_IOCTL_H


25 
	~<asm/io˘ls.h
>

28 
	swösize


30 
	mws_row
;

31 
	mws_cﬁ
;

32 
	mws_xpixñ
;

33 
	mws_ypixñ
;

36 
	#NCC
 8

	)

37 
	sãrmio


39 
	mc_iÊag
;

40 
	mc_oÊag
;

41 
	mc_cÊag
;

42 
	mc_lÊag
;

43 
	mc_löe
;

44 
	mc_cc
[
NCC
];

48 
	#TIOCM_LE
 0x001

	)

49 
	#TIOCM_DTR
 0x002

	)

50 
	#TIOCM_RTS
 0x004

	)

51 
	#TIOCM_ST
 0x008

	)

52 
	#TIOCM_SR
 0x010

	)

53 
	#TIOCM_CTS
 0x020

	)

54 
	#TIOCM_CAR
 0x040

	)

55 
	#TIOCM_RNG
 0x080

	)

56 
	#TIOCM_DSR
 0x100

	)

57 
	#TIOCM_CD
 
TIOCM_CAR


	)

58 
	#TIOCM_RI
 
TIOCM_RNG


	)

63 
	#N_TTY
 0

	)

64 
	#N_SLIP
 1

	)

65 
	#N_MOUSE
 2

	)

66 
	#N_PPP
 3

	)

67 
	#N_STRIP
 4

	)

68 
	#N_AX25
 5

	)

69 
	#N_X25
 6

	)

70 
	#N_6PACK
 7

	)

71 
	#N_MASC
 8

	)

72 
	#N_R3964
 9

	)

73 
	#N_PROFIBUS_FDL
 10

	)

74 
	#N_IRDA
 11

	)

75 
	#N_SMSBLOCK
 12

	)

76 
	#N_HDLC
 13

	)

77 
	#N_SYNC_PPP
 14

	)

78 
	#N_HCI
 15

	)

	@/usr/include/bits/ioctls.h

19 #i‚de‡
_SYS_IOCTL_H


24 
	~<asm/io˘ls.h
>

27 
	#SIOCADDRT
 0x890B

	)

28 
	#SIOCDELRT
 0x890C

	)

29 
	#SIOCRTMSG
 0x890D

	)

32 
	#SIOCGIFNAME
 0x8910

	)

33 
	#SIOCSIFLINK
 0x8911

	)

34 
	#SIOCGIFCONF
 0x8912

	)

35 
	#SIOCGIFFLAGS
 0x8913

	)

36 
	#SIOCSIFFLAGS
 0x8914

	)

37 
	#SIOCGIFADDR
 0x8915

	)

38 
	#SIOCSIFADDR
 0x8916

	)

39 
	#SIOCGIFDSTADDR
 0x8917

	)

40 
	#SIOCSIFDSTADDR
 0x8918

	)

41 
	#SIOCGIFBRDADDR
 0x8919

	)

42 
	#SIOCSIFBRDADDR
 0x891®

	)

43 
	#SIOCGIFNETMASK
 0x891b

	)

44 
	#SIOCSIFNETMASK
 0x891¯

	)

45 
	#SIOCGIFMETRIC
 0x891d

	)

46 
	#SIOCSIFMETRIC
 0x891ê

	)

47 
	#SIOCGIFMEM
 0x891‡

	)

48 
	#SIOCSIFMEM
 0x8920

	)

49 
	#SIOCGIFMTU
 0x8921

	)

50 
	#SIOCSIFMTU
 0x8922

	)

51 
	#SIOCSIFNAME
 0x8923

	)

52 
	#SIOCSIFHWADDR
 0x8924

	)

53 
	#SIOCGIFENCAP
 0x8925

	)

54 
	#SIOCSIFENCAP
 0x8926

	)

55 
	#SIOCGIFHWADDR
 0x8927

	)

56 
	#SIOCGIFSLAVE
 0x8929

	)

57 
	#SIOCSIFSLAVE
 0x8930

	)

58 
	#SIOCADDMULTI
 0x8931

	)

59 
	#SIOCDELMULTI
 0x8932

	)

60 
	#SIOCGIFINDEX
 0x8933

	)

61 
	#SIOGIFINDEX
 
SIOCGIFINDEX


	)

62 
	#SIOCSIFPFLAGS
 0x8934

	)

63 
	#SIOCGIFPFLAGS
 0x8935

	)

64 
	#SIOCDIFADDR
 0x8936

	)

65 
	#SIOCSIFHWBROADCAST
 0x8937

	)

66 
	#SIOCGIFCOUNT
 0x8938

	)

68 
	#SIOCGIFBR
 0x8940

	)

69 
	#SIOCSIFBR
 0x8941

	)

71 
	#SIOCGIFTXQLEN
 0x8942

	)

72 
	#SIOCSIFTXQLEN
 0x8943

	)

77 
	#SIOCDARP
 0x8953

	)

78 
	#SIOCGARP
 0x8954

	)

79 
	#SIOCSARP
 0x8955

	)

82 
	#SIOCDRARP
 0x8960

	)

83 
	#SIOCGRARP
 0x8961

	)

84 
	#SIOCSRARP
 0x8962

	)

88 
	#SIOCGIFMAP
 0x8970

	)

89 
	#SIOCSIFMAP
 0x8971

	)

93 
	#SIOCADDDLCI
 0x8980

	)

94 
	#SIOCDELDLCI
 0x8981

	)

103 
	#SIOCDEVPRIVATE
 0x89F0

	)

109 
	#SIOCPROTOPRIVATE
 0x89E0

	)

	@/usr/include/bits/mathcalls.h

46 #i‚de‡
_MATH_H


53 
_MdoubÀ_BEGIN_NAMESPACE


55 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

57 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

59 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

61 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

64 
__MATHCALL
 (
cos
,, (
_MdoubÀ_
 
__x
));

66 
__MATHCALL
 (
sö
,, (
_MdoubÀ_
 
__x
));

68 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

73 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

75 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

77 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

78 
	g_MdoubÀ_END_NAMESPACE


80 #ifde‡
__USE_GNU


82 
__MATHDECL
 (,
söcos
,,

83 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

86 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


87 
__BEGIN_NAMESPACE_C99


89 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

91 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

93 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

94 
	g__END_NAMESPACE_C99


99 
_MdoubÀ_BEGIN_NAMESPACE


101 
__MATHCALL
 (
exp
,, (
_MdoubÀ_
 
__x
));

104 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

107 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

110 
__MATHCALL
 (
log
,, (
_MdoubÀ_
 
__x
));

113 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

116 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
));

117 
	g_MdoubÀ_END_NAMESPACE


119 #ifde‡
__USE_GNU


121 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

123 
__MATHCALL
 (
pow10
,, (
_MdoubÀ_
 
__x
));

126 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


127 
__BEGIN_NAMESPACE_C99


129 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

132 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

135 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

136 
	g__END_NAMESPACE_C99


139 #ifde‡
__USE_ISOC99


140 
__BEGIN_NAMESPACE_C99


142 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

145 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

146 
	g__END_NAMESPACE_C99


152 
_MdoubÀ_BEGIN_NAMESPACE


154 
__MATHCALL
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

157 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

158 
	g_MdoubÀ_END_NAMESPACE


160 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


161 
__BEGIN_NAMESPACE_C99


163 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

164 
	g__END_NAMESPACE_C99


167 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


168 
__BEGIN_NAMESPACE_C99


170 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

171 
	g__END_NAMESPACE_C99


177 
_MdoubÀ_BEGIN_NAMESPACE


179 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

182 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

185 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

188 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

193 
__MATHDECL_1
 (,
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

196 
__MATHDECL_1
 (,
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

197 
	g_MdoubÀ_END_NAMESPACE


199 #ifde‡
__USE_MISC


202 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

205 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

208 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

212 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

215 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


216 
__BEGIN_NAMESPACE_C99


218 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

219 
	g__END_NAMESPACE_C99


222 #ifde‡
__USE_ISOC99


223 
__BEGIN_NAMESPACE_C99


225 
__MATHCALLX
 (
«n
,, (
__c⁄°
 *
__ègb
), (
__c⁄°__
));

226 
	g__END_NAMESPACE_C99


231 
__MATHDECL_1
 (,
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

233 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

238 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

239 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

240 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

241 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

242 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

243 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

247 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


248 
__BEGIN_NAMESPACE_C99


250 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

251 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

252 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

253 
	g__END_NAMESPACE_C99


256 #ifde‡
__USE_ISOC99


257 
__BEGIN_NAMESPACE_C99


259 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

260 
	g__END_NAMESPACE_C99


263 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


265 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

268 #ifde‡
__USE_MISC


272 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

276 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


277 
__BEGIN_NAMESPACE_C99


280 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

283 
__MATHCALLX
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

284 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT


285 
__MATHCALLX
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
), (
__c⁄°__
));

289 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

291 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


293 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

297 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

300 #ifde‡
__USE_ISOC99


302 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

306 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

310 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

314 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

319 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

326 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

327 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

331 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

332 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

336 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

339 
__MATHCALL
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

342 
__MATHCALL
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

346 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

347 
__©åibuã__
 ((
__c⁄°__
));

350 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

351 
__©åibuã__
 ((
__c⁄°__
));

355 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

358 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


359 
	g__END_NAMESPACE_C99


362 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


364 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathdef.h

19 #i‡!
deföed
 
_MATH_H
 && !deföed 
_COMPLEX_H


23 #i‡
deföed
 
__USE_ISOC99
 && deföed 
_MATH_H
 && !deföed 
_MATH_H_MATHDEF


24 
	#_MATH_H_MATHDEF
 1

	)

26 
	~<bôs/w‹dsize.h
>

28 #i‡
__WORDSIZE
 =64 || (
deföed
 
__FLT_EVAL_METHOD__
 && __FLT_EVAL_METHOD__ == 0)

31 
	tÊﬂt_t
;

32 
	tdoubÀ_t
;

38 
	tÊﬂt_t
;

40 
	tdoubÀ_t
;

45 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

46 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

	@/usr/include/bits/mathinline.h

21 #i‚de‡
_MATH_H


25 
	~<bôs/w‹dsize.h
>

27 #i‚de‡
__exã∫_ölöe


28 
	#__MATH_INLINE
 
__ölöe


	)

30 
	#__MATH_INLINE
 
__exã∫_ölöe


	)

34 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__
 && __GNUC__ >= 2

37 
__MATH_INLINE
 

38 
__NTH
 (
	$__signbôf
 (
__x
))

40 #i‡
__WORDSIZE
 == 32

41 
__exãnsi⁄__
 uni⁄ { 
__f
; 
__i
; } 
__u
 = { __f: 
__x
 };

42  
__u
.
__i
 < 0;

44 
__m
;

45 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

46  
__m
 & 0x8;

48 
	}
}

49 
__MATH_INLINE
 

50 
__NTH
 (
	$__signbô
 (
__x
))

52 #i‡
__WORDSIZE
 == 32

53 
__exãnsi⁄__
 uni⁄ { 
__d
; 
__i
[2]; } 
__u
 = { __d: 
__x
 };

54  
__u
.
__i
[1] < 0;

56 
__m
;

57 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

58  
__m
 & 0x80;

60 
	}
}

61 
__MATH_INLINE
 

62 
__NTH
 (
	$__signbôl
 (
__x
))

64 
__exãnsi⁄__
 uni⁄ { 
__l
; 
__i
[3]; } 
__u
 = { __l: 
__x
 };

65  (
__u
.
__i
[2] & 0x8000) != 0;

66 
	}
}

	@/usr/include/bits/mman.h

20 #i‚de‡
_SYS_MMAN_H


33 
	#PROT_READ
 0x1

	)

34 
	#PROT_WRITE
 0x2

	)

35 
	#PROT_EXEC
 0x4

	)

36 
	#PROT_NONE
 0x0

	)

37 
	#PROT_GROWSDOWN
 0x01000000

	)

39 
	#PROT_GROWSUP
 0x02000000

	)

43 
	#MAP_SHARED
 0x01

	)

44 
	#MAP_PRIVATE
 0x02

	)

45 #ifde‡
__USE_MISC


46 
	#MAP_TYPE
 0x0‡

	)

50 
	#MAP_FIXED
 0x10

	)

51 #ifde‡
__USE_MISC


52 
	#MAP_FILE
 0

	)

53 
	#MAP_ANONYMOUS
 0x20

	)

54 
	#MAP_ANON
 
MAP_ANONYMOUS


	)

55 
	#MAP_32BIT
 0x40

	)

59 #ifde‡
__USE_MISC


60 
	#MAP_GROWSDOWN
 0x00100

	)

61 
	#MAP_DENYWRITE
 0x00800

	)

62 
	#MAP_EXECUTABLE
 0x01000

	)

63 
	#MAP_LOCKED
 0x02000

	)

64 
	#MAP_NORESERVE
 0x04000

	)

65 
	#MAP_POPULATE
 0x08000

	)

66 
	#MAP_NONBLOCK
 0x10000

	)

67 
	#MAP_STACK
 0x20000

	)

68 
	#MAP_HUGETLB
 0x40000

	)

72 
	#MS_ASYNC
 1

	)

73 
	#MS_SYNC
 4

	)

74 
	#MS_INVALIDATE
 2

	)

77 
	#MCL_CURRENT
 1

	)

78 
	#MCL_FUTURE
 2

	)

82 #ifde‡
__USE_GNU


83 
	#MREMAP_MAYMOVE
 1

	)

84 
	#MREMAP_FIXED
 2

	)

88 #ifde‡
__USE_BSD


89 
	#MADV_NORMAL
 0

	)

90 
	#MADV_RANDOM
 1

	)

91 
	#MADV_SEQUENTIAL
 2

	)

92 
	#MADV_WILLNEED
 3

	)

93 
	#MADV_DONTNEED
 4

	)

94 
	#MADV_REMOVE
 9

	)

95 
	#MADV_DONTFORK
 10

	)

96 
	#MADV_DOFORK
 11

	)

97 
	#MADV_MERGEABLE
 12

	)

98 
	#MADV_UNMERGEABLE
 13

	)

99 
	#MADV_DONTDUMP
 16

	)

101 
	#MADV_DODUMP
 17

	)

102 
	#MADV_HWPOISON
 100

	)

106 #ifde‡
__USE_XOPEN2K


107 
	#POSIX_MADV_NORMAL
 0

	)

108 
	#POSIX_MADV_RANDOM
 1

	)

109 
	#POSIX_MADV_SEQUENTIAL
 2

	)

110 
	#POSIX_MADV_WILLNEED
 3

	)

111 
	#POSIX_MADV_DONTNEED
 4

	)

	@/usr/include/bits/nan.h

20 #i‚de‡
_MATH_H


27 #i‡
__GNUC_PREREQ
(3,3)

29 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

31 #ñi‡
deföed
 
__GNUC__


33 
	#NAN
 \

34 (
__exãnsi⁄__
 \

35 ((uni⁄ { 
__l
 
	`__©åibuã__
 ((
	`__mode__
 (
__SI__
))); 
__d
; }) \

36 { 
__l
: 0x7fc00000UL }).
__d
)

	)

40 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#__«n_byãs
 { 0x7f, 0xc0, 0, 0 }

	)

45 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


46 
	#__«n_byãs
 { 0, 0, 0xc0, 0x7‡}

	)

49 uni⁄ { 
	m__c
[4]; 
	m__d
; } 
__«n_uni⁄


50 
	g__©åibuã_u£d__
 = { 
__«n_byãs
 };

51 
	#NAN
 (
__«n_uni⁄
.
__d
)

	)

	@/usr/include/bits/netdb.h

19 #i‚de‡
_NETDB_H


27 
	s√ã¡


29 *
	mn_«me
;

30 **
	mn_Æü£s
;

31 
	mn_addπy≥
;

32 
uöt32_t
 
	mn_√t
;

	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

90 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


93 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

97 
	#_POSIX_PATH_MAX
 256

	)

100 
	#_POSIX_PIPE_BUF
 512

	)

104 
	#_POSIX_RE_DUP_MAX
 255

	)

107 
	#_POSIX_RTSIG_MAX
 8

	)

110 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

113 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

116 
	#_POSIX_SIGQUEUE_MAX
 32

	)

119 
	#_POSIX_SSIZE_MAX
 32767

	)

122 
	#_POSIX_STREAM_MAX
 8

	)

125 
	#_POSIX_SYMLINK_MAX
 255

	)

129 
	#_POSIX_SYMLOOP_MAX
 8

	)

132 
	#_POSIX_TIMER_MAX
 32

	)

135 
	#_POSIX_TTY_NAME_MAX
 9

	)

138 
	#_POSIX_TZNAME_MAX
 6

	)

140 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


142 
	#_POSIX_QLIMIT
 1

	)

146 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

149 
	#_POSIX_UIO_MAXIOV
 16

	)

153 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

157 
	~<bôs/loˇl_lim.h
>

160 #i‚def 
SSIZE_MAX


161 
	#SSIZE_MAX
 
LONG_MAX


	)

168 #i‚def 
NGROUPS_MAX


169 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

23 #i‚def 
_BITS_POSIX2_LIM_H


24 
	#_BITS_POSIX2_LIM_H
 1

	)

28 
	#_POSIX2_BC_BASE_MAX
 99

	)

31 
	#_POSIX2_BC_DIM_MAX
 2048

	)

34 
	#_POSIX2_BC_SCALE_MAX
 99

	)

37 
	#_POSIX2_BC_STRING_MAX
 1000

	)

41 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

45 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

48 
	#_POSIX2_LINE_MAX
 2048

	)

52 
	#_POSIX2_RE_DUP_MAX
 255

	)

56 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

63 #i‚def 
BC_BASE_MAX


64 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

66 #i‚def 
BC_DIM_MAX


67 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

69 #i‚def 
BC_SCALE_MAX


70 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

72 #i‚def 
BC_STRING_MAX


73 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

75 #i‚def 
COLL_WEIGHTS_MAX


76 
	#COLL_WEIGHTS_MAX
 255

	)

78 #i‚def 
EXPR_NEST_MAX


79 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

81 #i‚def 
LINE_MAX


82 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

84 #i‚def 
CHARCLASS_NAME_MAX


85 
	#CHARCLASS_NAME_MAX
 2048

	)

89 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_BITS_POSIX_OPT_H


21 
	#_BITS_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

36 
	#_POSIX_FSYNC
 200809L

	)

39 
	#_POSIX_MAPPED_FILES
 200809L

	)

42 
	#_POSIX_MEMLOCK
 200809L

	)

45 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

48 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

51 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

55 
	#_POSIX_VDISABLE
 '\0'

	)

58 
	#_POSIX_NO_TRUNC
 1

	)

61 
	#_XOPEN_REALTIME
 1

	)

64 
	#_XOPEN_REALTIME_THREADS
 1

	)

67 
	#_XOPEN_SHM
 1

	)

70 
	#_POSIX_THREADS
 200809L

	)

73 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

74 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

77 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

80 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

83 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

86 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

90 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

92 #ifde‡
__USE_XOPEN2K8


94 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

97 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

101 
	#_POSIX_SEMAPHORES
 200809L

	)

104 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

107 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

108 
	#_POSIX_ASYNC_IO
 1

	)

110 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

112 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

115 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

118 
	#_LFS_LARGEFILE
 1

	)

119 
	#_LFS64_LARGEFILE
 1

	)

120 
	#_LFS64_STDIO
 1

	)

123 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

126 
	#_POSIX_CPUTIME
 0

	)

129 
	#_POSIX_THREAD_CPUTIME
 0

	)

132 
	#_POSIX_REGEXP
 1

	)

135 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

138 
	#_POSIX_SHELL
 1

	)

141 
	#_POSIX_TIMEOUTS
 200809L

	)

144 
	#_POSIX_SPIN_LOCKS
 200809L

	)

147 
	#_POSIX_SPAWN
 200809L

	)

150 
	#_POSIX_TIMERS
 200809L

	)

153 
	#_POSIX_BARRIERS
 200809L

	)

156 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

159 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

162 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

165 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

168 
	#_POSIX_ADVISORY_INFO
 200809L

	)

171 
	#_POSIX_IPV6
 200809L

	)

174 
	#_POSIX_RAW_SOCKETS
 200809L

	)

177 
	#_POSIX2_CHAR_TERM
 200809L

	)

180 
	#_POSIX_SPORADIC_SERVER
 -1

	)

181 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

184 
	#_POSIX_TRACE
 -1

	)

185 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

186 
	#_POSIX_TRACE_INHERIT
 -1

	)

187 
	#_POSIX_TRACE_LOG
 -1

	)

190 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

193 
	#_XOPEN_STREAMS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/w‹dsize.h
>

29 #i‚de‡
_ASM


31 #i‡
__WORDSIZE
 == 64

32 
	t__jmp_buf
[8];

34 
	t__jmp_buf
[6];

	@/usr/include/bits/setjmp2.h

20 #i‚de‡
_SETJMP_H


25 #ifde‡
__REDIRECT_NTH


26 
__REDIRECT_NTH
 (
l⁄gjmp
,

27 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

28 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

29 
__REDIRECT_NTH
 (
_l⁄gjmp
,

30 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

31 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

32 
__REDIRECT_NTH
 (
sigl⁄gjmp
,

33 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

34 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

36 
__l⁄gjmp_chk
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

37 
__THROW
 
__©åibuã__
 ((
__n‹ëu∫__
));

38 
	#l⁄gjmp
 
__l⁄gjmp_chk


	)

39 
	#_l⁄gjmp
 
__l⁄gjmp_chk


	)

40 
	#sigl⁄gjmp
 
__l⁄gjmp_chk


	)

	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

61 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


62 
	#SA_RESTART
 0x10000000

	)

63 
	#SA_NODEFER
 0x40000000

	)

65 
	#SA_RESETHAND
 0x80000000

	)

67 #ifde‡
__USE_MISC


68 
	#SA_INTERRUPT
 0x20000000

	)

71 
	#SA_NOMASK
 
SA_NODEFER


	)

72 
	#SA_ONESHOT
 
SA_RESETHAND


	)

73 
	#SA_STACK
 
SA_ONSTACK


	)

77 
	#SIG_BLOCK
 0

	)

78 
	#SIG_UNBLOCK
 1

	)

79 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‚de‡
_BITS_SIGCONTEXT_H


20 
	#_BITS_SIGCONTEXT_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


26 
	~<bôs/w‹dsize.h
>

28 
	s_Âªg


30 
	msignifiˇnd
[4];

31 
	mexp⁄ít
;

34 
	s_Âxªg


36 
	msignifiˇnd
[4];

37 
	mexp⁄ít
;

38 
	m∑ddög
[3];

41 
	s_xmmªg


43 
__uöt32_t
 
	mñemít
[4];

48 #i‡
__WORDSIZE
 == 32

50 
	s_Â°©e


53 
__uöt32_t
 
	mcw
;

54 
__uöt32_t
 
	msw
;

55 
__uöt32_t
 
	mèg
;

56 
__uöt32_t
 
	mùoff
;

57 
__uöt32_t
 
	mcs£l
;

58 
__uöt32_t
 
	md©aoff
;

59 
__uöt32_t
 
	md©a£l
;

60 
_Âªg
 
	m_°
[8];

61 
	m°©us
;

62 
	mmagic
;

65 
__uöt32_t
 
	m_fx§_ív
[6];

66 
__uöt32_t
 
	mmxc§
;

67 
__uöt32_t
 
	mª£rved
;

68 
_Âxªg
 
	m_fx§_°
[8];

69 
_xmmªg
 
	m_xmm
[8];

70 
__uöt32_t
 
	m∑ddög
[56];

73 #i‚de‡
sigc⁄ãxt_°ru˘


78 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

81 
	ssigc⁄ãxt


83 
	mgs
, 
	m__gsh
;

84 
	mfs
, 
	m__fsh
;

85 
	mes
, 
	m__esh
;

86 
	mds
, 
	m__dsh
;

87 
	medi
;

88 
	mesi
;

89 
	mebp
;

90 
	me•
;

91 
	mebx
;

92 
	medx
;

93 
	mecx
;

94 
	móx
;

95 
	må≠no
;

96 
	mîr
;

97 
	meù
;

98 
	mcs
, 
	m__csh
;

99 
	meÊags
;

100 
	me•_©_sig«l
;

101 
	mss
, 
	m__ssh
;

102 
_Â°©e
 * 
	mÂ°©e
;

103 
	mﬁdmask
;

104 
	m¸2
;

109 
	s_Â°©e


112 
__uöt16_t
 
	mcwd
;

113 
__uöt16_t
 
	mswd
;

114 
__uöt16_t
 
	m·w
;

115 
__uöt16_t
 
	mf›
;

116 
__uöt64_t
 
	mrù
;

117 
__uöt64_t
 
	mrdp
;

118 
__uöt32_t
 
	mmxc§
;

119 
__uöt32_t
 
	mmx¸_mask
;

120 
_Âxªg
 
	m_°
[8];

121 
_xmmªg
 
	m_xmm
[16];

122 
__uöt32_t
 
	m∑ddög
[24];

125 
	ssigc⁄ãxt


127 
	mr8
;

128 
	mr9
;

129 
	mr10
;

130 
	mr11
;

131 
	mr12
;

132 
	mr13
;

133 
	mr14
;

134 
	mr15
;

135 
	mrdi
;

136 
	mrsi
;

137 
	mrbp
;

138 
	mrbx
;

139 
	mrdx
;

140 
	møx
;

141 
	mrcx
;

142 
	mr•
;

143 
	mrù
;

144 
	meÊags
;

145 
	mcs
;

146 
	mgs
;

147 
	mfs
;

148 
	m__∑d0
;

149 
	mîr
;

150 
	må≠no
;

151 
	mﬁdmask
;

152 
	m¸2
;

153 
_Â°©e
 * 
	mÂ°©e
;

154 
	m__ª£rved1
 [8];

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

38 #ifde‡
__USE_GNU


40 
	$±hªad_sigqueue
 (
±hªad_t
 
__thªadid
, 
__signo
,

41 c⁄° 
sigvÆ
 
__vÆue
Ë
__THROW
;

	@/usr/include/bits/socket.h

21 #i‚de‡
__BITS_SOCKET_H


22 
	#__BITS_SOCKET_H


	)

24 #i‚de‡
_SYS_SOCKET_H


28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
	~<sys/ty≥s.h
>

34 #i‚de‡
__sockÀn_t_deföed


35 
__sockÀn_t
 
	tsockÀn_t
;

36 
	#__sockÀn_t_deföed


	)

40 
	e__sockë_ty≥


42 
	mSOCK_STREAM
 = 1,

44 
	#SOCK_STREAM
 
SOCK_STREAM


	)

45 
	mSOCK_DGRAM
 = 2,

47 
	#SOCK_DGRAM
 
SOCK_DGRAM


	)

48 
	mSOCK_RAW
 = 3,

49 
	#SOCK_RAW
 
SOCK_RAW


	)

50 
	mSOCK_RDM
 = 4,

51 
	#SOCK_RDM
 
SOCK_RDM


	)

52 
	mSOCK_SEQPACKET
 = 5,

54 
	#SOCK_SEQPACKET
 
SOCK_SEQPACKET


	)

55 
	mSOCK_DCCP
 = 6,

56 
	#SOCK_DCCP
 
SOCK_DCCP


	)

57 
	mSOCK_PACKET
 = 10,

60 
	#SOCK_PACKET
 
SOCK_PACKET


	)

65 
	mSOCK_CLOEXEC
 = 02000000,

67 
	#SOCK_CLOEXEC
 
SOCK_CLOEXEC


	)

68 
	mSOCK_NONBLOCK
 = 04000

70 
	#SOCK_NONBLOCK
 
SOCK_NONBLOCK


	)

74 
	#PF_UNSPEC
 0

	)

75 
	#PF_LOCAL
 1

	)

76 
	#PF_UNIX
 
PF_LOCAL


	)

77 
	#PF_FILE
 
PF_LOCAL


	)

78 
	#PF_INET
 2

	)

79 
	#PF_AX25
 3

	)

80 
	#PF_IPX
 4

	)

81 
	#PF_APPLETALK
 5

	)

82 
	#PF_NETROM
 6

	)

83 
	#PF_BRIDGE
 7

	)

84 
	#PF_ATMPVC
 8

	)

85 
	#PF_X25
 9

	)

86 
	#PF_INET6
 10

	)

87 
	#PF_ROSE
 11

	)

88 
	#PF_DEC√t
 12

	)

89 
	#PF_NETBEUI
 13

	)

90 
	#PF_SECURITY
 14

	)

91 
	#PF_KEY
 15

	)

92 
	#PF_NETLINK
 16

	)

93 
	#PF_ROUTE
 
PF_NETLINK


	)

94 
	#PF_PACKET
 17

	)

95 
	#PF_ASH
 18

	)

96 
	#PF_ECONET
 19

	)

97 
	#PF_ATMSVC
 20

	)

98 
	#PF_RDS
 21

	)

99 
	#PF_SNA
 22

	)

100 
	#PF_IRDA
 23

	)

101 
	#PF_PPPOX
 24

	)

102 
	#PF_WANPIPE
 25

	)

103 
	#PF_LLC
 26

	)

104 
	#PF_CAN
 29

	)

105 
	#PF_TIPC
 30

	)

106 
	#PF_BLUETOOTH
 31

	)

107 
	#PF_IUCV
 32

	)

108 
	#PF_RXRPC
 33

	)

109 
	#PF_ISDN
 34

	)

110 
	#PF_PHONET
 35

	)

111 
	#PF_IEEE802154
 36

	)

112 
	#PF_MAX
 37

	)

115 
	#AF_UNSPEC
 
PF_UNSPEC


	)

116 
	#AF_LOCAL
 
PF_LOCAL


	)

117 
	#AF_UNIX
 
PF_UNIX


	)

118 
	#AF_FILE
 
PF_FILE


	)

119 
	#AF_INET
 
PF_INET


	)

120 
	#AF_AX25
 
PF_AX25


	)

121 
	#AF_IPX
 
PF_IPX


	)

122 
	#AF_APPLETALK
 
PF_APPLETALK


	)

123 
	#AF_NETROM
 
PF_NETROM


	)

124 
	#AF_BRIDGE
 
PF_BRIDGE


	)

125 
	#AF_ATMPVC
 
PF_ATMPVC


	)

126 
	#AF_X25
 
PF_X25


	)

127 
	#AF_INET6
 
PF_INET6


	)

128 
	#AF_ROSE
 
PF_ROSE


	)

129 
	#AF_DEC√t
 
PF_DEC√t


	)

130 
	#AF_NETBEUI
 
PF_NETBEUI


	)

131 
	#AF_SECURITY
 
PF_SECURITY


	)

132 
	#AF_KEY
 
PF_KEY


	)

133 
	#AF_NETLINK
 
PF_NETLINK


	)

134 
	#AF_ROUTE
 
PF_ROUTE


	)

135 
	#AF_PACKET
 
PF_PACKET


	)

136 
	#AF_ASH
 
PF_ASH


	)

137 
	#AF_ECONET
 
PF_ECONET


	)

138 
	#AF_ATMSVC
 
PF_ATMSVC


	)

139 
	#AF_RDS
 
PF_RDS


	)

140 
	#AF_SNA
 
PF_SNA


	)

141 
	#AF_IRDA
 
PF_IRDA


	)

142 
	#AF_PPPOX
 
PF_PPPOX


	)

143 
	#AF_WANPIPE
 
PF_WANPIPE


	)

144 
	#AF_LLC
 
PF_LLC


	)

145 
	#AF_CAN
 
PF_CAN


	)

146 
	#AF_TIPC
 
PF_TIPC


	)

147 
	#AF_BLUETOOTH
 
PF_BLUETOOTH


	)

148 
	#AF_IUCV
 
PF_IUCV


	)

149 
	#AF_RXRPC
 
PF_RXRPC


	)

150 
	#AF_ISDN
 
PF_ISDN


	)

151 
	#AF_PHONET
 
PF_PHONET


	)

152 
	#AF_IEEE802154
 
PF_IEEE802154


	)

153 
	#AF_MAX
 
PF_MAX


	)

159 
	#SOL_RAW
 255

	)

160 
	#SOL_DECNET
 261

	)

161 
	#SOL_X25
 262

	)

162 
	#SOL_PACKET
 263

	)

163 
	#SOL_ATM
 264

	)

164 
	#SOL_AAL
 265

	)

165 
	#SOL_IRDA
 266

	)

168 
	#SOMAXCONN
 128

	)

171 
	~<bôs/sockaddr.h
>

174 
	ssockaddr


176 
__SOCKADDR_COMMON
 (
ß_
);

177 
	mß_d©a
[14];

183 
	#__ss_Æig¡y≥
 

	)

184 
	#_SS_SIZE
 128

	)

185 
	#_SS_PADSIZE
 (
_SS_SIZE
 - (2 *  (
__ss_Æig¡y≥
)))

	)

187 
	ssockaddr_°‹age


189 
__SOCKADDR_COMMON
 (
ss_
);

190 
__ss_Æig¡y≥
 
	m__ss_Æign
;

191 
	m__ss_∑ddög
[
_SS_PADSIZE
];

198 
	mMSG_OOB
 = 0x01,

199 
	#MSG_OOB
 
MSG_OOB


	)

200 
	mMSG_PEEK
 = 0x02,

201 
	#MSG_PEEK
 
MSG_PEEK


	)

202 
	mMSG_DONTROUTE
 = 0x04,

203 
	#MSG_DONTROUTE
 
MSG_DONTROUTE


	)

204 #ifde‡
__USE_GNU


206 
	mMSG_TRYHARD
 = 
MSG_DONTROUTE
,

207 
	#MSG_TRYHARD
 
MSG_DONTROUTE


	)

209 
	mMSG_CTRUNC
 = 0x08,

210 
	#MSG_CTRUNC
 
MSG_CTRUNC


	)

211 
	mMSG_PROXY
 = 0x10,

212 
	#MSG_PROXY
 
MSG_PROXY


	)

213 
	mMSG_TRUNC
 = 0x20,

214 
	#MSG_TRUNC
 
MSG_TRUNC


	)

215 
	mMSG_DONTWAIT
 = 0x40,

216 
	#MSG_DONTWAIT
 
MSG_DONTWAIT


	)

217 
	mMSG_EOR
 = 0x80,

218 
	#MSG_EOR
 
MSG_EOR


	)

219 
	mMSG_WAITALL
 = 0x100,

220 
	#MSG_WAITALL
 
MSG_WAITALL


	)

221 
	mMSG_FIN
 = 0x200,

222 
	#MSG_FIN
 
MSG_FIN


	)

223 
	mMSG_SYN
 = 0x400,

224 
	#MSG_SYN
 
MSG_SYN


	)

225 
	mMSG_CONFIRM
 = 0x800,

226 
	#MSG_CONFIRM
 
MSG_CONFIRM


	)

227 
	mMSG_RST
 = 0x1000,

228 
	#MSG_RST
 
MSG_RST


	)

229 
	mMSG_ERRQUEUE
 = 0x2000,

230 
	#MSG_ERRQUEUE
 
MSG_ERRQUEUE


	)

231 
	mMSG_NOSIGNAL
 = 0x4000,

232 
	#MSG_NOSIGNAL
 
MSG_NOSIGNAL


	)

233 
	mMSG_MORE
 = 0x8000,

234 
	#MSG_MORE
 
MSG_MORE


	)

235 
	mMSG_WAITFORONE
 = 0x10000,

236 
	#MSG_WAITFORONE
 
MSG_WAITFORONE


	)

238 
	mMSG_CMSG_CLOEXEC
 = 0x40000000

241 
	#MSG_CMSG_CLOEXEC
 
MSG_CMSG_CLOEXEC


	)

247 
	smsghdr


249 *
	mmsg_«me
;

250 
sockÀn_t
 
	mmsg_«mñí
;

252 
iovec
 *
	mmsg_iov
;

253 
size_t
 
	mmsg_iovÀn
;

255 *
	mmsg_c⁄åﬁ
;

256 
size_t
 
	mmsg_c⁄åﬁÀn
;

261 
	mmsg_Êags
;

264 #ifde‡
__USE_GNU


266 
	smmsghdr


268 
msghdr
 
	mmsg_hdr
;

269 
	mmsg_Àn
;

274 
	scmsghdr


276 
size_t
 
	mcmsg_Àn
;

281 
	mcmsg_Àvñ
;

282 
	mcmsg_ty≥
;

283 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

284 
__exãnsi⁄__
 
__cmsg_d©a
 
	m__Êex¨r
;

289 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

290 
	#CMSG_DATA
(
cmsg
Ë((cmsg)->
__cmsg_d©a
)

	)

292 
	#CMSG_DATA
(
cmsg
Ë((*Ë((
cmsghdr
 *Ë(cmsgË+ 1))

	)

294 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
Ë
	`__cmsg_nxthdr
 (mhdr, cmsg)

	)

295 
	#CMSG_FIRSTHDR
(
mhdr
) \

296 ((
size_t
Ë(
mhdr
)->
msg_c⁄åﬁÀn
 > (
cmsghdr
) \

297 ? (
cmsghdr
 *Ë(
mhdr
)->
msg_c⁄åﬁ
 : (cmsghd∏*Ë0)

	)

298 
	#CMSG_ALIGN
(
Àn
Ë((÷íË+  (
size_t
) - 1) \

299 & (
size_t
Ë~( (size_tË- 1))

	)

300 
	#CMSG_SPACE
(
Àn
Ë(
	`CMSG_ALIGN
 (len) \

301 + 
	`CMSG_ALIGN
 ( (
cmsghdr
)))

	)

302 
	#CMSG_LEN
(
Àn
Ë(
	`CMSG_ALIGN
 ( (
cmsghdr
)Ë+ (Àn))

	)

304 
cmsghdr
 *
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
,

305 
cmsghdr
 *
__cmsg
Ë
__THROW
;

306 #ifde‡
__USE_EXTERN_INLINES


307 #i‚de‡
_EXTERN_INLINE


308 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

310 
_EXTERN_INLINE
 
cmsghdr
 *

311 
	`__NTH
 (
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
, 
cmsghdr
 *
__cmsg
))

313 i‡((
size_t
Ë
__cmsg
->
cmsg_Àn
 <  (
cmsghdr
))

317 
__cmsg
 = (
cmsghdr
 *) ((*) __cmsg

318 + 
	`CMSG_ALIGN
 (
__cmsg
->
cmsg_Àn
));

319 i‡((*Ë(
__cmsg
 + 1Ë> ((*Ë
__mhdr
->
msg_c⁄åﬁ


320 + 
__mhdr
->
msg_c⁄åﬁÀn
)

321 || ((*Ë
__cmsg
 + 
	`CMSG_ALIGN
 (__cmsg->
cmsg_Àn
)

322 > ((*Ë
__mhdr
->
msg_c⁄åﬁ
 + __mhdr->
msg_c⁄åﬁÀn
)))

325  
__cmsg
;

326 
	}
}

333 
	mSCM_RIGHTS
 = 0x01

334 
	#SCM_RIGHTS
 
SCM_RIGHTS


	)

335 #ifde‡
__USE_GNU


336 , 
	mSCM_CREDENTIALS
 = 0x02

337 
	#SCM_CREDENTIALS
 
SCM_CREDENTIALS


	)

341 #ifde‡
__USE_GNU


343 
	su¸ed


345 
pid_t
 
	mpid
;

346 
uid_t
 
	muid
;

347 
gid_t
 
	mgid
;

352 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


353 #i‚de‡
FIOGETOWN


354 
	#__SYS_SOCKET_H_undef_FIOGETOWN


	)

356 #i‚de‡
FIOSETOWN


357 
	#__SYS_SOCKET_H_undef_FIOSETOWN


	)

359 #i‚de‡
SIOCATMARK


360 
	#__SYS_SOCKET_H_undef_SIOCATMARK


	)

362 #i‚de‡
SIOCGPGRP


363 
	#__SYS_SOCKET_H_undef_SIOCGPGRP


	)

365 #i‚de‡
SIOCGSTAMP


366 
	#__SYS_SOCKET_H_undef_SIOCGSTAMP


	)

368 #i‚de‡
SIOCGSTAMPNS


369 
	#__SYS_SOCKET_H_undef_SIOCGSTAMPNS


	)

371 #i‚de‡
SIOCSPGRP


372 
	#__SYS_SOCKET_H_undef_SIOCSPGRP


	)

377 
	~<asm/sockë.h
>

379 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


380 #ifde‡
__SYS_SOCKET_H_undef_FIOGETOWN


381 #unde‡
__SYS_SOCKET_H_undef_FIOGETOWN


382 #unde‡
FIOGETOWN


384 #ifde‡
__SYS_SOCKET_H_undef_FIOSETOWN


385 #unde‡
__SYS_SOCKET_H_undef_FIOSETOWN


386 #unde‡
FIOSETOWN


388 #ifde‡
__SYS_SOCKET_H_undef_SIOCATMARK


389 #unde‡
__SYS_SOCKET_H_undef_SIOCATMARK


390 #unde‡
SIOCATMARK


392 #ifde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


393 #unde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


394 #unde‡
SIOCGPGRP


396 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


397 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


398 #unde‡
SIOCGSTAMP


400 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


401 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


402 #unde‡
SIOCGSTAMPNS


404 #ifde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


405 #unde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


406 #unde‡
SIOCSPGRP


411 
	slögî


413 
	ml_⁄off
;

414 
	ml_lögî
;

418 
__BEGIN_DECLS


425 
ªcvmmsg
 (
__fd
, 
mmsghdr
 *
__vmesßges
,

426 
__vÀn
, 
__Êags
,

427 
__c⁄°
 
time•ec
 *
__tmo
);

429 
	g__END_DECLS


	@/usr/include/bits/socket2.h

20 #i‚de‡
_SYS_SOCKET_H


24 
ssize_t
 
__ªcv_chk
 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

25 
__Êags
);

26 
ssize_t
 
__REDIRECT
 (
__ªcv_Æüs
, (
__fd
, *
__buf
, 
size_t
 
__n
,

27 
__Êags
), 
ªcv
);

28 
ssize_t
 
__REDIRECT
 (
__ªcv_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

30 
__Êags
), 
__ªcv_chk
)

31 
__w¨«âr
 ("recv called with biggerÜengthÅhan size of destination "

34 
__exã∫_Æways_ölöe
 
ssize_t


35 
	$ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

40  
	`__ªcv_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

42 i‡(
__n
 > 
	`__bos0
 (
__buf
))

43  
	`__ªcv_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

45  
	`__ªcv_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
);

46 
	}
}

48 
ssize_t
 
__ªcv‰om_chk
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

49 
size_t
 
__buÊí
, 
__Êags
,

50 
__SOCKADDR_ARG
 
__addr
,

51 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

52 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_Æüs
,

53 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

54 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

55 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
ªcv‰om
);

56 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_chk_w¨n
,

57 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

58 
size_t
 
__buÊí
, 
__Êags
,

59 
__SOCKADDR_ARG
 
__addr
,

60 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
__ªcv‰om_chk
)

61 
__w¨«âr
 ("recvfrom called with biggerÜengthÅhan size of "

64 
__exã∫_Æways_ölöe
 
ssize_t


65 
	$ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
, 
__Êags
,

66 
__SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
)

68 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

70 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

71  
	`__ªcv‰om_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

72 
__addr
, 
__addr_Àn
);

73 i‡(
__n
 > 
	`__bos0
 (
__buf
))

74  
	`__ªcv‰om_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

75 
__addr
, 
__addr_Àn
);

77  
	`__ªcv‰om_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
, 
__addr
, 
__addr_Àn
);

78 
	}
}

	@/usr/include/bits/stat.h

19 #i‡!
deföed
 
_SYS_STAT_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_STAT_H


24 
	#_BITS_STAT_H
 1

	)

27 
	#_STAT_VER_KERNEL
 0

	)

29 #i‡
__WORDSIZE
 == 32

30 
	#_STAT_VER_SVR4
 2

	)

31 
	#_STAT_VER_LINUX
 3

	)

34 
	#_MKNOD_VER_LINUX
 1

	)

35 
	#_MKNOD_VER_SVR4
 2

	)

36 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

38 
	#_STAT_VER_LINUX
 1

	)

41 
	#_MKNOD_VER_LINUX
 0

	)

44 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

46 
	s°©


48 
__dev_t
 
	m°_dev
;

49 #i‡
__WORDSIZE
 == 32

50 
	m__∑d1
;

52 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


53 
__öo_t
 
	m°_öo
;

55 
__öo_t
 
	m__°_öo
;

57 #i‡
__WORDSIZE
 == 32

58 
__mode_t
 
	m°_mode
;

59 
__∆ök_t
 
	m°_∆ök
;

61 
__∆ök_t
 
	m°_∆ök
;

62 
__mode_t
 
	m°_mode
;

64 
__uid_t
 
	m°_uid
;

65 
__gid_t
 
	m°_gid
;

66 #i‡
__WORDSIZE
 == 64

67 
	m__∑d0
;

69 
__dev_t
 
	m°_rdev
;

70 #i‡
__WORDSIZE
 == 32

71 
	m__∑d2
;

73 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


74 
__off_t
 
	m°_size
;

76 
__off64_t
 
	m°_size
;

78 
__blksize_t
 
	m°_blksize
;

79 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


80 
__blk˙t_t
 
	m°_blocks
;

82 
__blk˙t64_t
 
	m°_blocks
;

84 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


91 
time•ec
 
	m°_©im
;

92 
time•ec
 
	m°_mtim
;

93 
time•ec
 
	m°_˘im
;

94 
	#°_©ime
 
°_©im
.
tv_£c


	)

95 
	#°_mtime
 
°_mtim
.
tv_£c


	)

96 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

98 
__time_t
 
	m°_©ime
;

99 
	m°_©imí£c
;

100 
__time_t
 
	m°_mtime
;

101 
	m°_mtimí£c
;

102 
__time_t
 
	m°_˘ime
;

103 
	m°_˘imí£c
;

105 #i‡
__WORDSIZE
 == 64

106 
	m__unu£d
[3];

108 #i‚de‡
__USE_FILE_OFFSET64


109 
	m__unu£d4
;

110 
	m__unu£d5
;

112 
__öo64_t
 
	m°_öo
;

117 #ifde‡
__USE_LARGEFILE64


119 
	s°©64


121 
__dev_t
 
	m°_dev
;

122 #i‡
__WORDSIZE
 == 64

123 
__öo64_t
 
	m°_öo
;

124 
__∆ök_t
 
	m°_∆ök
;

125 
__mode_t
 
	m°_mode
;

127 
	m__∑d1
;

128 
__öo_t
 
	m__°_öo
;

129 
__mode_t
 
	m°_mode
;

130 
__∆ök_t
 
	m°_∆ök
;

132 
__uid_t
 
	m°_uid
;

133 
__gid_t
 
	m°_gid
;

134 #i‡
__WORDSIZE
 == 64

135 
	m__∑d0
;

136 
__dev_t
 
	m°_rdev
;

137 
__off_t
 
	m°_size
;

139 
__dev_t
 
	m°_rdev
;

140 
	m__∑d2
;

141 
__off64_t
 
	m°_size
;

143 
__blksize_t
 
	m°_blksize
;

144 
__blk˙t64_t
 
	m°_blocks
;

145 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


152 
time•ec
 
	m°_©im
;

153 
time•ec
 
	m°_mtim
;

154 
time•ec
 
	m°_˘im
;

155 
	#°_©ime
 
°_©im
.
tv_£c


	)

156 
	#°_mtime
 
°_mtim
.
tv_£c


	)

157 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

159 
__time_t
 
	m°_©ime
;

160 
	m°_©imí£c
;

161 
__time_t
 
	m°_mtime
;

162 
	m°_mtimí£c
;

163 
__time_t
 
	m°_˘ime
;

164 
	m°_˘imí£c
;

166 #i‡
__WORDSIZE
 == 64

167 
	m__unu£d
[3];

169 
__öo64_t
 
	m°_öo
;

175 
	#_STATBUF_ST_BLKSIZE


	)

176 
	#_STATBUF_ST_RDEV


	)

178 
	#_STATBUF_ST_NSEC


	)

182 
	#__S_IFMT
 0170000

	)

185 
	#__S_IFDIR
 0040000

	)

186 
	#__S_IFCHR
 0020000

	)

187 
	#__S_IFBLK
 0060000

	)

188 
	#__S_IFREG
 0100000

	)

189 
	#__S_IFIFO
 0010000

	)

190 
	#__S_IFLNK
 0120000

	)

191 
	#__S_IFSOCK
 0140000

	)

195 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

196 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

197 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

201 
	#__S_ISUID
 04000

	)

202 
	#__S_ISGID
 02000

	)

203 
	#__S_ISVTX
 01000

	)

204 
	#__S_IREAD
 0400

	)

205 
	#__S_IWRITE
 0200

	)

206 
	#__S_IEXEC
 0100

	)

208 #ifde‡
__USE_ATFILE


209 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

210 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

88 #ifde‡
__USE_GNU


89 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

90 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

93 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

94 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

131 #ifde‡
__USE_GNU


133 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

134 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

135 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

136 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

137 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

138 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

139 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

140 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

141 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

142 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

143 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

144 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

145 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

147 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

148 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

149 
__Êag
,

150 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

151 
_G_va_li°
 
__¨gs
)

152 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

154 #ifde‡
__va_¨g_∑ck


155 
__exã∫_Æways_ölöe
 

156 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

158  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

159 
	`__va_¨g_∑ck
 ());

160 
	}
}

162 
__exã∫_Æways_ölöe
 

163 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

166  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

167 
	`__va_¨g_∑ck
 ());

168 
	}
}

170 
__exã∫_Æways_ölöe
 

171 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

173  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

174 
	`__va_¨g_∑ck
 ());

175 
	}
}

177 
__exã∫_Æways_ölöe
 

178 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

179 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

181  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

184 #ñi‡!
deföed
 
__˝lu•lus


185 
	#a•rötf
(
±r
, ...) \

186 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

187 
	#__a•rötf
(
±r
, ...) \

188 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

189 
	#d¥ötf
(
fd
, ...) \

190 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

191 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

192 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

195 
__exã∫_Æways_ölöe
 

196 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

197 
_G_va_li°
 
__≠
))

199  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

200 
	}
}

202 
__exã∫_Æways_ölöe
 

203 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

205  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

206 
	}
}

208 
__exã∫_Æways_ölöe
 

209 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

210 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

212  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

213 
__≠
);

214 
	}
}

220 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

221 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

222 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

225 
__exã∫_Æways_ölöe
 
__wur
 *

226 
	$gës
 (*
__°r
)

228 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

229  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

230  
	`__gës_w¨n
 (
__°r
);

231 
	}
}

233 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 *
	`__REDIRECT
 (
__fgës_Æüs
,

236 (*
__ª°ri˘
 
__s
, 
__n
,

237 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

238 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

239 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

241 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

244 
__exã∫_Æways_ölöe
 
__wur
 *

245 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

247 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

249 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

250  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

252 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

253  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

259 
size_t
 
__size
, size_à
__n
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

261 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

262 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

263 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

264 
‰ód
Ë
__wur
;

265 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

266 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
),

269 
__‰ód_chk
)

270 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

273 
__exã∫_Æways_ölöe
 
__wur
 
size_t


274 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
)

277 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

279 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

280 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

281 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

282  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

284 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

285  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

287  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

288 
	}
}

290 #ifde‡
__USE_GNU


291 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

292 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

293 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

294 (*
__ª°ri˘
 
__s
, 
__n
,

295 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

296 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

297 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

299 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

302 
__exã∫_Æways_ölöe
 
__wur
 *

303 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

305 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

307 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

308  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

310 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

311  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

313  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

314 
	}
}

317 #ifde‡
__USE_MISC


318 #unde‡
‰ód_u∆ocked


319 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

320 
size_t
 
__size
, size_à
__n
,

321 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

322 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

323 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

324 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

325 
‰ód_u∆ocked
Ë
__wur
;

326 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

327 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
),

330 
__‰ód_u∆ocked_chk
)

331 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

334 
__exã∫_Æways_ölöe
 
__wur
 
size_t


335 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

336 
FILE
 *
__ª°ri˘
 
__°ªam
)

338 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

340 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

341 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

342 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

343  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

344 
__°ªam
);

346 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

347  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

348 
__°ªam
);

351 #ifde‡
__USE_EXTERN_INLINES


352 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

353 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

354 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

355 && 
__size
 * 
__n
 <= 8)

357 
size_t
 
__˙t
 = 
__size
 * 
__n
;

358 *
__˝å
 = (*Ë
__±r
;

359 i‡(
__˙t
 == 0)

362 ; 
__˙t
 > 0; --__cnt)

364 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

365 i‡(
__c
 =
EOF
)

367 *
__˝å
++ = 
__c
;

369  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

372  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

373 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


31 
	#L_cu£rid
 9

	)

36 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


37 #unde‡
FOPEN_MAX


38 
	#FOPEN_MAX
 16

	)

41 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


42 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 && ((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1172 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1173 
__STRING_INLINE
 *

1174 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1176 *
__ªsu…
;

1177 i‡(
__s
 =
NULL
)

1178 
__s
 = *
__√xç
;

1179 *
__s
 =
__£p
)

1180 ++
__s
;

1181 
__ªsu…
 = 
NULL
;

1182 i‡(*
__s
 != '\0')

1184 
__ªsu…
 = 
__s
++;

1185 *
__s
 != '\0')

1186 i‡(*
__s
++ =
__£p
)

1188 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1193  
__ªsu…
;

1194 
	}
}

1195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1196 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1201 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1202 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1204 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1205 
	#__°r£p
(
s
, 
ªje˘
) \

1206 
__exãnsi⁄__
 \

1207 ({ 
__r0
, 
__r1
, 
__r2
; \

1208 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1209 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1210 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1211 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1212 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1213 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1214 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1215 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1216 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1217 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1218 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1222 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1223 
__STRING_INLINE
 *

1224 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1226 *
__ªtvÆ
 = *
__s
;

1227 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1228 *(*
__s
)++ = '\0';

1229  
__ªtvÆ
;

1230 
	}
}

1232 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1233 
__STRING_INLINE
 *

1234 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1236 *
__ªtvÆ
 = *
__s
;

1237 i‡(
__ªtvÆ
 !
NULL
)

1239 *
__˝
 = 
__ªtvÆ
;

1242 i‡(*
__˝
 == '\0')

1244 
__˝
 = 
NULL
;

1247 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1249 *
__˝
++ = '\0';

1252 ++
__˝
;

1254 *
__s
 = 
__˝
;

1256  
__ªtvÆ
;

1257 
	}
}

1259 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1260 
__ªje˘3
);

1261 
__STRING_INLINE
 *

1262 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1264 *
__ªtvÆ
 = *
__s
;

1265 i‡(
__ªtvÆ
 !
NULL
)

1267 *
__˝
 = 
__ªtvÆ
;

1270 i‡(*
__˝
 == '\0')

1272 
__˝
 = 
NULL
;

1275 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1277 *
__˝
++ = '\0';

1280 ++
__˝
;

1282 *
__s
 = 
__˝
;

1284  
__ªtvÆ
;

1285 
	}
}

1286 #ifde‡
__USE_BSD


1287 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1294 #ifde‡
__USE_MISC


1296 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1297 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1298 
	~<°dlib.h
>

1301 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1303 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1304 
	#__°rdup
(
s
) \

1305 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1306 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1307 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1308 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1309 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1310 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1312 
__ªtvÆ
; 
	}
})) \

1313 : 
	`__°rdup
 (
s
)))

	)

1315 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1316 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1320 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1322 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1323 
__THROW
 
__©åibuã_mÆloc__
;

1324 
	#__°∫dup
(
s
, 
n
) \

1325 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1326 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1327 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1328 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1329 
size_t
 
__n
 = (
n
); \

1330 *
__ªtvÆ
; \

1331 i‡(
__n
 < 
__Àn
) \

1332 
__Àn
 = 
__n
 + 1; \

1333 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1334 i‡(
__ªtvÆ
 !
NULL
) \

1336 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1337 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1338 
__Àn
 - 1); \

1340 
__ªtvÆ
; 
	}
})) \

1341 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1343 #ifde‡
__USE_GNU


1344 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1350 #i‚de‡
_FORCE_INLINES


1351 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__Àn
))

58  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

59 
	}
}

61 #ifde‡
__USE_GNU


62 
__exã∫_Æways_ölöe
 *

63 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

64 
size_t
 
__Àn
))

66  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

67 
	}
}

76 
__exã∫_Æways_ölöe
 *

77 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

80 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

82 
	`__w¨n_mem£t_zîo_Àn
 ();

83  
__de°
;

85  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

86 
	}
}

88 #ifde‡
__USE_BSD


89 
__exã∫_Æways_ölöe
 

90 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__Àn
))

92 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

93 
	}
}

95 
__exã∫_Æways_ölöe
 

96 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

98 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

99 
	}
}

102 
__exã∫_Æways_ölöe
 *

103 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

105  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

106 
	}
}

108 #ifde‡
__USE_GNU


109 
__exã∫_Æways_ölöe
 *

110 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

112  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

113 
	}
}

117 
__exã∫_Æways_ölöe
 *

118 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

119 
size_t
 
__Àn
))

121  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

122 
	}
}

125 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

126 
size_t
 
__de°Àn
Ë
__THROW
;

127 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

128 
__c⁄°
 *
__§c
,

129 
size_t
 
__n
), 
°≤˝y
);

131 
__exã∫_Æways_ölöe
 *

132 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

134 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

135 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

136  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

137  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

138 
	}
}

141 
__exã∫_Æways_ölöe
 *

142 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

144  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

145 
	}
}

148 
__exã∫_Æways_ölöe
 *

149 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

150 
size_t
 
__Àn
))

152  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

153 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/termios.h

21 #i‚de‡
_TERMIOS_H


25 
	tcc_t
;

26 
	t•ìd_t
;

27 
	ttcÊag_t
;

29 
	#NCCS
 32

	)

30 
	sãrmios


32 
tcÊag_t
 
	mc_iÊag
;

33 
tcÊag_t
 
	mc_oÊag
;

34 
tcÊag_t
 
	mc_cÊag
;

35 
tcÊag_t
 
	mc_lÊag
;

36 
cc_t
 
	mc_löe
;

37 
cc_t
 
	mc_cc
[
NCCS
];

38 
•ìd_t
 
	mc_i•ìd
;

39 
•ìd_t
 
	mc_o•ìd
;

40 
	#_HAVE_STRUCT_TERMIOS_C_ISPEED
 1

	)

41 
	#_HAVE_STRUCT_TERMIOS_C_OSPEED
 1

	)

45 
	#VINTR
 0

	)

46 
	#VQUIT
 1

	)

47 
	#VERASE
 2

	)

48 
	#VKILL
 3

	)

49 
	#VEOF
 4

	)

50 
	#VTIME
 5

	)

51 
	#VMIN
 6

	)

52 
	#VSWTC
 7

	)

53 
	#VSTART
 8

	)

54 
	#VSTOP
 9

	)

55 
	#VSUSP
 10

	)

56 
	#VEOL
 11

	)

57 
	#VREPRINT
 12

	)

58 
	#VDISCARD
 13

	)

59 
	#VWERASE
 14

	)

60 
	#VLNEXT
 15

	)

61 
	#VEOL2
 16

	)

64 
	#IGNBRK
 0000001

	)

65 
	#BRKINT
 0000002

	)

66 
	#IGNPAR
 0000004

	)

67 
	#PARMRK
 0000010

	)

68 
	#INPCK
 0000020

	)

69 
	#ISTRIP
 0000040

	)

70 
	#INLCR
 0000100

	)

71 
	#IGNCR
 0000200

	)

72 
	#ICRNL
 0000400

	)

73 
	#IUCLC
 0001000

	)

74 
	#IXON
 0002000

	)

75 
	#IXANY
 0004000

	)

76 
	#IXOFF
 0010000

	)

77 
	#IMAXBEL
 0020000

	)

78 
	#IUTF8
 0040000

	)

81 
	#OPOST
 0000001

	)

82 
	#OLCUC
 0000002

	)

83 
	#ONLCR
 0000004

	)

84 
	#OCRNL
 0000010

	)

85 
	#ONOCR
 0000020

	)

86 
	#ONLRET
 0000040

	)

87 
	#OFILL
 0000100

	)

88 
	#OFDEL
 0000200

	)

89 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


90 
	#NLDLY
 0000400

	)

91 
	#NL0
 0000000

	)

92 
	#NL1
 0000400

	)

93 
	#CRDLY
 0003000

	)

94 
	#CR0
 0000000

	)

95 
	#CR1
 0001000

	)

96 
	#CR2
 0002000

	)

97 
	#CR3
 0003000

	)

98 
	#TABDLY
 0014000

	)

99 
	#TAB0
 0000000

	)

100 
	#TAB1
 0004000

	)

101 
	#TAB2
 0010000

	)

102 
	#TAB3
 0014000

	)

103 
	#BSDLY
 0020000

	)

104 
	#BS0
 0000000

	)

105 
	#BS1
 0020000

	)

106 
	#FFDLY
 0100000

	)

107 
	#FF0
 0000000

	)

108 
	#FF1
 0100000

	)

111 
	#VTDLY
 0040000

	)

112 
	#VT0
 0000000

	)

113 
	#VT1
 0040000

	)

115 #ifde‡
__USE_MISC


116 
	#XTABS
 0014000

	)

120 #ifde‡
__USE_MISC


121 
	#CBAUD
 0010017

	)

123 
	#B0
 0000000

	)

124 
	#B50
 0000001

	)

125 
	#B75
 0000002

	)

126 
	#B110
 0000003

	)

127 
	#B134
 0000004

	)

128 
	#B150
 0000005

	)

129 
	#B200
 0000006

	)

130 
	#B300
 0000007

	)

131 
	#B600
 0000010

	)

132 
	#B1200
 0000011

	)

133 
	#B1800
 0000012

	)

134 
	#B2400
 0000013

	)

135 
	#B4800
 0000014

	)

136 
	#B9600
 0000015

	)

137 
	#B19200
 0000016

	)

138 
	#B38400
 0000017

	)

139 #ifde‡
__USE_MISC


140 
	#EXTA
 
B19200


	)

141 
	#EXTB
 
B38400


	)

143 
	#CSIZE
 0000060

	)

144 
	#CS5
 0000000

	)

145 
	#CS6
 0000020

	)

146 
	#CS7
 0000040

	)

147 
	#CS8
 0000060

	)

148 
	#CSTOPB
 0000100

	)

149 
	#CREAD
 0000200

	)

150 
	#PARENB
 0000400

	)

151 
	#PARODD
 0001000

	)

152 
	#HUPCL
 0002000

	)

153 
	#CLOCAL
 0004000

	)

154 #ifde‡
__USE_MISC


155 
	#CBAUDEX
 0010000

	)

157 
	#B57600
 0010001

	)

158 
	#B115200
 0010002

	)

159 
	#B230400
 0010003

	)

160 
	#B460800
 0010004

	)

161 
	#B500000
 0010005

	)

162 
	#B576000
 0010006

	)

163 
	#B921600
 0010007

	)

164 
	#B1000000
 0010010

	)

165 
	#B1152000
 0010011

	)

166 
	#B1500000
 0010012

	)

167 
	#B2000000
 0010013

	)

168 
	#B2500000
 0010014

	)

169 
	#B3000000
 0010015

	)

170 
	#B3500000
 0010016

	)

171 
	#B4000000
 0010017

	)

172 
	#__MAX_BAUD
 
B4000000


	)

173 #ifde‡
__USE_MISC


174 
	#CIBAUD
 002003600000

	)

175 
	#CMSPAR
 010000000000

	)

176 
	#CRTSCTS
 020000000000

	)

180 
	#ISIG
 0000001

	)

181 
	#ICANON
 0000002

	)

182 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


183 
	#XCASE
 0000004

	)

185 
	#ECHO
 0000010

	)

186 
	#ECHOE
 0000020

	)

187 
	#ECHOK
 0000040

	)

188 
	#ECHONL
 0000100

	)

189 
	#NOFLSH
 0000200

	)

190 
	#TOSTOP
 0000400

	)

191 #ifde‡
__USE_MISC


192 
	#ECHOCTL
 0001000

	)

193 
	#ECHOPRT
 0002000

	)

194 
	#ECHOKE
 0004000

	)

195 
	#FLUSHO
 0010000

	)

196 
	#PENDIN
 0040000

	)

198 
	#IEXTEN
 0100000

	)

201 
	#TCOOFF
 0

	)

202 
	#TCOON
 1

	)

203 
	#TCIOFF
 2

	)

204 
	#TCION
 3

	)

207 
	#TCIFLUSH
 0

	)

208 
	#TCOFLUSH
 1

	)

209 
	#TCIOFLUSH
 2

	)

212 
	#TCSANOW
 0

	)

213 
	#TCSADRAIN
 1

	)

214 
	#TCSAFLUSH
 2

	)

217 
	#_IOT_ãrmios
 \

218 
	`_IOT
 (
	`_IOTS
 (
cÊag_t
), 4, _IOTS (
cc_t
), 
NCCS
, _IOTS (
•ìd_t
), 2)

	)

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

54 
	#CLOCK_MONOTONIC_RAW
 4

	)

56 
	#CLOCK_REALTIME_COARSE
 5

	)

58 
	#CLOCK_MONOTONIC_COARSE
 6

	)

61 
	#TIMER_ABSTIME
 1

	)

67 #ifde‡
__√ed_timevÆ


68 #unde‡
__√ed_timevÆ


69 #i‚de‡
_STRUCT_TIMEVAL


70 
	#_STRUCT_TIMEVAL
 1

	)

71 
	~<bôs/ty≥s.h
>

75 
	stimevÆ


77 
__time_t
 
	mtv_£c
;

78 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

20 #i‚de‡
_UNISTD_H


24 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

25 
size_t
 
__buÊí
Ë
__wur
;

26 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

27 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

28 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

30 
size_t
 
__buÊí
), 
__ªad_chk
)

31 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

34 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


35 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

40  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

42 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

43  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

45  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

46 
	}
}

48 #ifde‡
__USE_UNIX98


49 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

50 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

51 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

52 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

53 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

54 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

55 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

56 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

57 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

58 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

59 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

60 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

61 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

62 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

64 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

65 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

66 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

67 
__¥ód64_chk
)

68 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

71 #i‚de‡
__USE_FILE_OFFSET64


72 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


73 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

75 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

77 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

78  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

80 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

81  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

82 
	`__bos0
 (
__buf
));

84  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

85 
	}
}

87 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


88 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

90 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

92 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

93  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

95 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

96  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

97 
	`__bos0
 (
__buf
));

100  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

101 
	}
}

104 #ifde‡
__USE_LARGEFILE64


105 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


106 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

108 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

110 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

111  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

113 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

114  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

115 
	`__bos0
 (
__buf
));

118  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

119 
	}
}

123 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


124 
ssize_t
 
	$__ªadlök_chk
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

125 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

126 
size_t
 
__buÊí
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

128 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

129 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

130 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

131 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

132 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

133 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

134 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

135 
size_t
 
__buÊí
), 
__ªadlök_chk
)

136 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

139 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


140 
	`__NTH
 (
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

141 
size_t
 
__Àn
))

143 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

145 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

146  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

148 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

149  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

151  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

152 
	}
}

155 #ifde‡
__USE_ATFILE


156 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

157 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

158 
size_t
 
__buÊí
)

159 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

160 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

161 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

162 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

163 
ªadlök©
)

164 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

165 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

166 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

167 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

168 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

169 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

173 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


174 
	`__NTH
 (
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

177 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

179 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

180  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

182 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

183  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

184 
	`__bos
 (
__buf
));

186  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

187 
	}
}

190 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

191 
__THROW
 
__wur
;

192 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

193 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

194 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

195 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

196 
__gëcwd_chk
)

197 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

200 
__exã∫_Æways_ölöe
 
__wur
 *

201 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

203 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

205 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

206  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

208 i‡(
__size
 > 
	`__bos
 (
__buf
))

209  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

211  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

212 
	}
}

214 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


215 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

217 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

218 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

221 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

222 
	`__NTH
 (
	$gëwd
 (*
__buf
))

224 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

225  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

226  
	`__gëwd_w¨n
 (
__buf
);

227 
	}
}

230 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

231 
size_t
 
__buÊí
Ë
__THROW
;

232 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

233 
size_t
 
__Àn
), 
c⁄f°r
);

234 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

235 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

236 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

237 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

240 
__exã∫_Æways_ölöe
 
size_t


241 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

243 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

245 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

246  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

248 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

249  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

251  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

252 
	}
}

255 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

256 
__THROW
 
__wur
;

257 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

258 
gëgroups
Ë
__wur
;

259 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

260 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

261 
__gëgroups_chk
)

262 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

265 
__exã∫_Æways_ölöe
 

266 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

268 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

270 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

271  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

273 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

274  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

276  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

277 
	}
}

280 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

281 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

282 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

283 
size_t
 
__buÊí
), 
ây«me_r
)

284 
	`__n⁄nuŒ
 ((2));

285 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

286 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

287 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

288 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

291 
__exã∫_Æways_ölöe
 

292 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

294 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

296 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

297  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

299 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

300  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

302  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

303 
	}
}

306 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


307 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

308 
	`__n⁄nuŒ
 ((1));

309 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

310 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

311 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

312 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

313 
__gëlogö_r_chk
)

314 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

317 
__exã∫_Æways_ölöe
 

318 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

320 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

322 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

323  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

325 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

326  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

328  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

329 
	}
}

333 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


334 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

335 
__THROW
 
	`__n⁄nuŒ
 ((1));

336 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

337 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

338 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

339 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

340 
__gëho°«me_chk
)

341 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

344 
__exã∫_Æways_ölöe
 

345 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

347 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

349 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

350  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

352 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

353  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

355  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

356 
	}
}

360 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

361 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

363 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

364 
size_t
 
__buÊí
),

365 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

366 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

367 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

368 
__gëdomaö«me_chk
)

369 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

373 
__exã∫_Æways_ölöe
 

374 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

376 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

378 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

379  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

381 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

382  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

384  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

385 
	}
}

	@/usr/include/bits/utsname.h

19 #i‚de‡
_SYS_UTSNAME_H


24 
	#_UTSNAME_LENGTH
 65

	)

29 
	#_UTSNAME_DOMAIN_LENGTH
 
_UTSNAME_LENGTH


	)

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

23 
	#__WCHAR_MIN
 (-2147483647 - 1)

	)

24 
	#__WCHAR_MAX
 (2147483647)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/bits/xopen_lim.h

30 #i‚de‡
_XOPEN_LIM_H


31 
	#_XOPEN_LIM_H
 1

	)

33 
	#__√ed_IOV_MAX


	)

34 
	~<bôs/°dio_lim.h
>

66 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

71 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

74 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

77 
	#NL_MSGMAX
 
INT_MAX


	)

81 
	#NL_NMAX
 
INT_MAX


	)

84 
	#NL_SETMAX
 
INT_MAX


	)

87 
	#NL_TEXTMAX
 
INT_MAX


	)

90 
	#NZERO
 20

	)

94 #ifde‡
INT_MAX


95 #i‡
INT_MAX
 == 32767

96 
	#WORD_BIT
 16

	)

98 #i‡
INT_MAX
 == 2147483647

99 
	#WORD_BIT
 32

	)

102 
	#WORD_BIT
 64

	)

105 #ñi‡
deföed
 
__INT_MAX__


106 #i‡
__INT_MAX__
 == 32767

107 
	#WORD_BIT
 16

	)

109 #i‡
__INT_MAX__
 == 2147483647

110 
	#WORD_BIT
 32

	)

113 
	#WORD_BIT
 64

	)

117 
	#WORD_BIT
 32

	)

121 #ifde‡
LONG_MAX


122 #i‡
LONG_MAX
 == 2147483647

123 
	#LONG_BIT
 32

	)

126 
	#LONG_BIT
 64

	)

128 #ñi‡
deföed
 
__LONG_MAX__


129 #i‡
__LONG_MAX__
 == 2147483647

130 
	#LONG_BIT
 32

	)

133 
	#LONG_BIT
 64

	)

136 
	~<bôs/w‹dsize.h
>

137 #i‡
__WORDSIZE
 == 64

138 
	#LONG_BIT
 64

	)

140 
	#LONG_BIT
 32

	)

	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

19 #i‚def 
_FEATURES_H


20 
	#_FEATURES_H
 1

	)

96 #unde‡
__USE_ISOC99


97 #unde‡
__USE_ISOC95


98 #unde‡
__USE_POSIX


99 #unde‡
__USE_POSIX2


100 #unde‡
__USE_POSIX199309


101 #unde‡
__USE_POSIX199506


102 #unde‡
__USE_XOPEN


103 #unde‡
__USE_XOPEN_EXTENDED


104 #unde‡
__USE_UNIX98


105 #unde‡
__USE_XOPEN2K


106 #unde‡
__USE_XOPEN2KXSI


107 #unde‡
__USE_XOPEN2K8


108 #unde‡
__USE_XOPEN2K8XSI


109 #unde‡
__USE_LARGEFILE


110 #unde‡
__USE_LARGEFILE64


111 #unde‡
__USE_FILE_OFFSET64


112 #unde‡
__USE_BSD


113 #unde‡
__USE_SVID


114 #unde‡
__USE_MISC


115 #unde‡
__USE_ATFILE


116 #unde‡
__USE_GNU


117 #unde‡
__USE_REENTRANT


118 #unde‡
__USE_FORTIFY_LEVEL


119 #unde‡
__FAVOR_BSD


120 #unde‡
__KERNEL_STRICT_NAMES


124 #i‚de‡
_LOOSE_KERNEL_NAMES


125 
	#__KERNEL_STRICT_NAMES


	)

129 
	#__USE_ANSI
 1

	)

138 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


139 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

140 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

142 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

147 #i‡
deföed
 
_BSD_SOURCE
 && \

148 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

149 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

150 
	#__FAVOR_BSD
 1

	)

154 #ifde‡
_GNU_SOURCE


155 #unde‡
_ISOC95_SOURCE


156 
	#_ISOC95_SOURCE
 1

	)

157 #unde‡
_ISOC99_SOURCE


158 
	#_ISOC99_SOURCE
 1

	)

159 #unde‡
_POSIX_SOURCE


160 
	#_POSIX_SOURCE
 1

	)

161 #unde‡
_POSIX_C_SOURCE


162 
	#_POSIX_C_SOURCE
 200809L

	)

163 #unde‡
_XOPEN_SOURCE


164 
	#_XOPEN_SOURCE
 700

	)

165 #unde‡
_XOPEN_SOURCE_EXTENDED


166 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

167 #unde‡
_LARGEFILE64_SOURCE


168 
	#_LARGEFILE64_SOURCE
 1

	)

169 #unde‡
_BSD_SOURCE


170 
	#_BSD_SOURCE
 1

	)

171 #unde‡
_SVID_SOURCE


172 
	#_SVID_SOURCE
 1

	)

173 #unde‡
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

180 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

181 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

182 
	#_BSD_SOURCE
 1

	)

183 
	#_SVID_SOURCE
 1

	)

190 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

191 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

192 
	#__USE_ISOC99
 1

	)

196 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

197 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

198 
	#__USE_ISOC95
 1

	)

203 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

204 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

205 
	#_POSIX_SOURCE
 1

	)

206 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

207 
	#_POSIX_C_SOURCE
 2

	)

208 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

209 
	#_POSIX_C_SOURCE
 199506L

	)

210 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

211 
	#_POSIX_C_SOURCE
 200112L

	)

213 
	#_POSIX_C_SOURCE
 200809L

	)

215 
	#__USE_POSIX_IMPLICITLY
 1

	)

218 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


219 
	#__USE_POSIX
 1

	)

222 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


223 
	#__USE_POSIX2
 1

	)

226 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

227 
	#__USE_POSIX199309
 1

	)

230 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

231 
	#__USE_POSIX199506
 1

	)

234 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

235 
	#__USE_XOPEN2K
 1

	)

236 #unde‡
__USE_ISOC95


237 
	#__USE_ISOC95
 1

	)

238 #unde‡
__USE_ISOC99


239 
	#__USE_ISOC99
 1

	)

242 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

243 
	#__USE_XOPEN2K8
 1

	)

244 #unde‡
_ATFILE_SOURCE


245 
	#_ATFILE_SOURCE
 1

	)

248 #ifdef 
_XOPEN_SOURCE


249 
	#__USE_XOPEN
 1

	)

250 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

251 
	#__USE_XOPEN_EXTENDED
 1

	)

252 
	#__USE_UNIX98
 1

	)

253 #unde‡
_LARGEFILE_SOURCE


254 
	#_LARGEFILE_SOURCE
 1

	)

255 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

256 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

257 
	#__USE_XOPEN2K8
 1

	)

258 
	#__USE_XOPEN2K8XSI
 1

	)

260 
	#__USE_XOPEN2K
 1

	)

261 
	#__USE_XOPEN2KXSI
 1

	)

262 #unde‡
__USE_ISOC95


263 
	#__USE_ISOC95
 1

	)

264 #unde‡
__USE_ISOC99


265 
	#__USE_ISOC99
 1

	)

268 #ifde‡
_XOPEN_SOURCE_EXTENDED


269 
	#__USE_XOPEN_EXTENDED
 1

	)

274 #ifde‡
_LARGEFILE_SOURCE


275 
	#__USE_LARGEFILE
 1

	)

278 #ifde‡
_LARGEFILE64_SOURCE


279 
	#__USE_LARGEFILE64
 1

	)

282 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

283 
	#__USE_FILE_OFFSET64
 1

	)

286 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


287 
	#__USE_MISC
 1

	)

290 #ifdef 
_BSD_SOURCE


291 
	#__USE_BSD
 1

	)

294 #ifdef 
_SVID_SOURCE


295 
	#__USE_SVID
 1

	)

298 #ifdef 
_ATFILE_SOURCE


299 
	#__USE_ATFILE
 1

	)

302 #ifdef 
_GNU_SOURCE


303 
	#__USE_GNU
 1

	)

306 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


307 
	#__USE_REENTRANT
 1

	)

310 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

311 && 
deföed
 
__OPTIMIZE__
 && __OPTIMIZE__ > 0

312 #i‡!
__GNUC_PREREQ
 (4, 1)

313 #ifde‡
__GNUC_RH_RELEASE__


314 #w¨nög 
_FORTIFY_SOURCE
 
suµ‹ãd
 
⁄ly
 
wôh
 
GCC
 4.1 
™d
 
œãr


316 
	#__USE_FORTIFY_LEVEL
 0

	)

317 #ñi‡
_FORTIFY_SOURCE
 > 1

318 
	#__USE_FORTIFY_LEVEL
 2

	)

320 
	#__USE_FORTIFY_LEVEL
 1

	)

323 
	#__USE_FORTIFY_LEVEL
 0

	)

327 
	#__STDC_IEC_559__
 1

	)

328 
	#__STDC_IEC_559_COMPLEX__
 1

	)

331 
	#__STDC_ISO_10646__
 200009L

	)

339 #unde‡
__GNU_LIBRARY__


340 
	#__GNU_LIBRARY__
 6

	)

344 
	#__GLIBC__
 2

	)

345 
	#__GLIBC_MINOR__
 12

	)

347 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

348 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

351 #i‡
deföed
 
__GNUC__
 \

352 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

353 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

354 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

355 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

359 #i‚de‡
__ASSEMBLER__


360 #i‚de‡
_SYS_CDEFS_H


361 
	~<sys/cdefs.h
>

366 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


367 
	#__USE_LARGEFILE
 1

	)

368 
	#__USE_LARGEFILE64
 1

	)

374 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

375 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

376 && 
deföed
 
	g__exã∫_ölöe


377 
	#__USE_EXTERN_INLINES
 1

	)

385 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
Ë
__THROW
;

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/jconfig.h

5 
	#JPEG_LIB_VERSION
 62

	)

8 
	#LIBJPEG_TURBO_VERSION
 1.2.1

	)

11 
	#C_ARITH_CODING_SUPPORTED
 1

	)

14 
	#D_ARITH_CODING_SUPPORTED
 1

	)

17 
	#HAVE_PROTOTYPES
 1

	)

20 
	#HAVE_STDDEF_H
 1

	)

23 
	#HAVE_STDLIB_H
 1

	)

26 
	#HAVE_UNSIGNED_CHAR
 1

	)

29 
	#HAVE_UNSIGNED_SHORT
 1

	)

41 
	#NEED_SYS_TYPES_H
 1

	)

47 
	#WITH_SIMD
 1

	)

50 #i‚de‡
__CHAR_UNSIGNED__


	@/usr/include/jmorecfg.h

24 
	#BITS_IN_JSAMPLE
 8

	)

36 
	#MAX_COMPONENTS
 10

	)

53 #i‡
BITS_IN_JSAMPLE
 == 8

58 #ifde‡
HAVE_UNSIGNED_CHAR


60 
	tJSAMPLE
;

61 
	#GETJSAMPLE
(
vÆue
Ë((Ë(vÆue))

	)

65 
	tJSAMPLE
;

66 #ifde‡
__CHAR_UNSIGNED__


67 
	#GETJSAMPLE
(
vÆue
Ë((Ë(vÆue))

	)

69 
	#GETJSAMPLE
(
vÆue
Ë((Ë(vÆueË& 0xFF)

	)

74 
	#MAXJSAMPLE
 255

	)

75 
	#CENTERJSAMPLE
 128

	)

80 #i‡
BITS_IN_JSAMPLE
 == 12

85 
	tJSAMPLE
;

86 
	#GETJSAMPLE
(
vÆue
Ë((Ë(vÆue))

	)

88 
	#MAXJSAMPLE
 4095

	)

89 
	#CENTERJSAMPLE
 2048

	)

100 
	tJCOEF
;

109 #ifde‡
HAVE_UNSIGNED_CHAR


111 
	tJOCTET
;

112 
	#GETJOCTET
(
vÆue
Ë(vÆue)

	)

116 
	tJOCTET
;

117 #ifde‡
__CHAR_UNSIGNED__


118 
	#GETJOCTET
(
vÆue
Ë(vÆue)

	)

120 
	#GETJOCTET
(
vÆue
Ë((vÆueË& 0xFF)

	)

135 #ifde‡
HAVE_UNSIGNED_CHAR


136 
	tUINT8
;

138 #ifde‡
__CHAR_UNSIGNED__


139 
	tUINT8
;

141 
	tUINT8
;

147 #ifde‡
HAVE_UNSIGNED_SHORT


148 
	tUINT16
;

150 
	tUINT16
;

155 #i‚de‡
XMD_H


156 
	tINT16
;

161 #i‚de‡
XMD_H


162 
	tINT32
;

172 
	tJDIMENSION
;

174 
	#JPEG_MAX_DIMENSION
 65500L

	)

185 
	#METHODDEF
(
ty≥
Ë
	)
type

187 
	#LOCAL
(
ty≥
Ë
	)
type

189 
	#GLOBAL
(
ty≥
Ë
	)
type

191 
	#EXTERN
(
ty≥
Ë
	)
type

200 #ifde‡
HAVE_PROTOTYPES


201 
	#JMETHOD
(
ty≥
,
mëhod«me
,
¨gli°
Ë
	`ty≥
 (*mëhod«meË
	)
arglist

203 
	#JMETHOD
(
ty≥
,
mëhod«me
,
¨gli°
Ë
	`ty≥
 (*mëhod«meË()

	)

213 #ifde‡
NEED_FAR_POINTERS


214 
	#FAR
 
Ár


	)

216 
	#FAR


	)

227 #i‚de‡
HAVE_BOOLEAN


228 
	tboﬁón
;

230 #i‚de‡
FALSE


231 
	#FALSE
 0

	)

233 #i‚de‡
TRUE


234 
	#TRUE
 1

	)

245 #ifde‡
JPEG_INTERNALS


246 
	#JPEG_INTERNAL_OPTIONS


	)

249 #ifde‡
JPEG_INTERNAL_OPTIONS


262 
	#DCT_ISLOW_SUPPORTED


	)

263 
	#DCT_IFAST_SUPPORTED


	)

264 
	#DCT_FLOAT_SUPPORTED


	)

268 
	#C_MULTISCAN_FILES_SUPPORTED


	)

269 
	#C_PROGRESSIVE_SUPPORTED


	)

270 
	#ENTROPY_OPT_SUPPORTED


	)

279 
	#INPUT_SMOOTHING_SUPPORTED


	)

283 
	#D_MULTISCAN_FILES_SUPPORTED


	)

284 
	#D_PROGRESSIVE_SUPPORTED


	)

285 
	#SAVE_MARKERS_SUPPORTED


	)

286 
	#BLOCK_SMOOTHING_SUPPORTED


	)

287 
	#IDCT_SCALING_SUPPORTED


	)

288 #unde‡
UPSAMPLE_SCALING_SUPPORTED


289 
	#UPSAMPLE_MERGING_SUPPORTED


	)

290 
	#QUANT_1PASS_SUPPORTED


	)

291 
	#QUANT_2PASS_SUPPORTED


	)

311 
	#RGB_RED
 0

	)

312 
	#RGB_GREEN
 1

	)

313 
	#RGB_BLUE
 2

	)

314 
	#RGB_PIXELSIZE
 3

	)

316 
	#JPEG_NUMCS
 16

	)

318 
	#EXT_RGB_RED
 0

	)

319 
	#EXT_RGB_GREEN
 1

	)

320 
	#EXT_RGB_BLUE
 2

	)

321 
	#EXT_RGB_PIXELSIZE
 3

	)

323 
	#EXT_RGBX_RED
 0

	)

324 
	#EXT_RGBX_GREEN
 1

	)

325 
	#EXT_RGBX_BLUE
 2

	)

326 
	#EXT_RGBX_PIXELSIZE
 4

	)

328 
	#EXT_BGR_RED
 2

	)

329 
	#EXT_BGR_GREEN
 1

	)

330 
	#EXT_BGR_BLUE
 0

	)

331 
	#EXT_BGR_PIXELSIZE
 3

	)

333 
	#EXT_BGRX_RED
 2

	)

334 
	#EXT_BGRX_GREEN
 1

	)

335 
	#EXT_BGRX_BLUE
 0

	)

336 
	#EXT_BGRX_PIXELSIZE
 4

	)

338 
	#EXT_XBGR_RED
 3

	)

339 
	#EXT_XBGR_GREEN
 2

	)

340 
	#EXT_XBGR_BLUE
 1

	)

341 
	#EXT_XBGR_PIXELSIZE
 4

	)

343 
	#EXT_XRGB_RED
 1

	)

344 
	#EXT_XRGB_GREEN
 2

	)

345 
	#EXT_XRGB_BLUE
 3

	)

346 
	#EXT_XRGB_PIXELSIZE
 4

	)

348 c⁄° 
	grgb_ªd
[
JPEG_NUMCS
] = {

349 -1, -1, 
RGB_RED
, -1, -1, -1, 
EXT_RGB_RED
, 
EXT_RGBX_RED
,

350 
EXT_BGR_RED
, 
EXT_BGRX_RED
, 
EXT_XBGR_RED
, 
EXT_XRGB_RED
,

351 
EXT_RGBX_RED
, 
EXT_BGRX_RED
, 
EXT_XBGR_RED
, 
EXT_XRGB_RED


354 c⁄° 
	grgb_gªí
[
JPEG_NUMCS
] = {

355 -1, -1, 
RGB_GREEN
, -1, -1, -1, 
EXT_RGB_GREEN
, 
EXT_RGBX_GREEN
,

356 
EXT_BGR_GREEN
, 
EXT_BGRX_GREEN
, 
EXT_XBGR_GREEN
, 
EXT_XRGB_GREEN
,

357 
EXT_RGBX_GREEN
, 
EXT_BGRX_GREEN
, 
EXT_XBGR_GREEN
, 
EXT_XRGB_GREEN


360 c⁄° 
	grgb_blue
[
JPEG_NUMCS
] = {

361 -1, -1, 
RGB_BLUE
, -1, -1, -1, 
EXT_RGB_BLUE
, 
EXT_RGBX_BLUE
,

362 
EXT_BGR_BLUE
, 
EXT_BGRX_BLUE
, 
EXT_XBGR_BLUE
, 
EXT_XRGB_BLUE
,

363 
EXT_RGBX_BLUE
, 
EXT_BGRX_BLUE
, 
EXT_XBGR_BLUE
, 
EXT_XRGB_BLUE


366 c⁄° 
	grgb_pixñsize
[
JPEG_NUMCS
] = {

367 -1, -1, 
RGB_PIXELSIZE
, -1, -1, -1, 
EXT_RGB_PIXELSIZE
, 
EXT_RGBX_PIXELSIZE
,

368 
EXT_BGR_PIXELSIZE
, 
EXT_BGRX_PIXELSIZE
, 
EXT_XBGR_PIXELSIZE
, 
EXT_XRGB_PIXELSIZE
,

369 
EXT_RGBX_PIXELSIZE
, 
EXT_BGRX_PIXELSIZE
, 
EXT_XBGR_PIXELSIZE
, 
EXT_XRGB_PIXELSIZE


379 #i‚de‡
MULTIPLIER


380 #i‚de‡
WITH_SIMD


381 
	#MULTIPLIER
 

	)

383 
	#MULTIPLIER
 

	)

396 #i‚de‡
FAST_FLOAT


397 #ifde‡
HAVE_PROTOTYPES


398 
	#FAST_FLOAT
 

	)

400 
	#FAST_FLOAT
 

	)

	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

151 
	#_IO_SKIPWS
 01

	)

152 
	#_IO_LEFT
 02

	)

153 
	#_IO_RIGHT
 04

	)

154 
	#_IO_INTERNAL
 010

	)

155 
	#_IO_DEC
 020

	)

156 
	#_IO_OCT
 040

	)

157 
	#_IO_HEX
 0100

	)

158 
	#_IO_SHOWBASE
 0200

	)

159 
	#_IO_SHOWPOINT
 0400

	)

160 
	#_IO_UPPERCASE
 01000

	)

161 
	#_IO_SHOWPOS
 02000

	)

162 
	#_IO_SCIENTIFIC
 04000

	)

163 
	#_IO_FIXED
 010000

	)

164 
	#_IO_UNITBUF
 020000

	)

165 
	#_IO_STDIO
 040000

	)

166 
	#_IO_DONT_CLOSE
 0100000

	)

167 
	#_IO_BOOLALPHA
 0200000

	)

170 
_IO_jump_t
; 
	g_IO_FILE
;

173 #ifde‡
_IO_MTSAFE_IO


174 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

175 
	~<bôs/°dio-lock.h
>

180 
	t_IO_lock_t
;

186 
	s_IO_m¨kî
 {

187 
_IO_m¨kî
 *
	m_√xt
;

188 
_IO_FILE
 *
	m_sbuf
;

192 
	m_pos
;

194 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

195 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

196 
	mpublic
:

197 
°ªamm¨kî
(
°ªambuf
 *
sb
);

198 ~
°ªamm¨kî
();

199 
ßvög
(Ë{  
	m_•os
 == -2; }

200 
dñè
(
°ªamm¨kî
&);

201 
dñè
();

206 
	e__codecvt_ªsu…


208 
	m__codecvt_ok
,

209 
	m__codecvt_∑πül
,

210 
	m__codecvt_îr‹
,

211 
	m__codecvt_noc⁄v


214 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


217 
	s_IO_codecvt


219 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

220 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

221 
	m__mb°©e_t
 *,

222 c⁄° 
	mwch¨_t
 *,

223 c⁄° 
	mwch¨_t
 *,

224 c⁄° 
	mwch¨_t
 **, *,

226 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

227 
	m__mb°©e_t
 *, *,

229 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

230 
	m__mb°©e_t
 *,

232 c⁄° **, 
	mwch¨_t
 *,

233 
	mwch¨_t
 *, wchar_t **);

234 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

235 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

236 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

237 c⁄° *, c⁄° *, 
	m_IO_size_t
);

238 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

240 
_IO_ic⁄v_t
 
	m__cd_ö
;

241 
_IO_ic⁄v_t
 
	m__cd_out
;

245 
	s_IO_wide_d©a


247 
wch¨_t
 *
	m_IO_ªad_±r
;

248 
wch¨_t
 *
	m_IO_ªad_íd
;

249 
wch¨_t
 *
	m_IO_ªad_ba£
;

250 
wch¨_t
 *
	m_IO_wrôe_ba£
;

251 
wch¨_t
 *
	m_IO_wrôe_±r
;

252 
wch¨_t
 *
	m_IO_wrôe_íd
;

253 
wch¨_t
 *
	m_IO_buf_ba£
;

254 
wch¨_t
 *
	m_IO_buf_íd
;

256 
wch¨_t
 *
	m_IO_ßve_ba£
;

257 
wch¨_t
 *
	m_IO_backup_ba£
;

259 
wch¨_t
 *
	m_IO_ßve_íd
;

261 
__mb°©e_t
 
	m_IO_°©e
;

262 
__mb°©e_t
 
	m_IO_œ°_°©e
;

263 
_IO_codecvt
 
	m_codecvt
;

265 
wch¨_t
 
	m_sh‹tbuf
[1];

267 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

271 
	s_IO_FILE
 {

272 
	m_Êags
;

273 
	#_IO_fûe_Êags
 
_Êags


	)

277 * 
	m_IO_ªad_±r
;

278 * 
	m_IO_ªad_íd
;

279 * 
	m_IO_ªad_ba£
;

280 * 
	m_IO_wrôe_ba£
;

281 * 
	m_IO_wrôe_±r
;

282 * 
	m_IO_wrôe_íd
;

283 * 
	m_IO_buf_ba£
;

284 * 
	m_IO_buf_íd
;

286 *
	m_IO_ßve_ba£
;

287 *
	m_IO_backup_ba£
;

288 *
	m_IO_ßve_íd
;

290 
_IO_m¨kî
 *
	m_m¨kîs
;

292 
_IO_FILE
 *
	m_chaö
;

294 
	m_fûío
;

296 
	m_blksize
;

298 
	m_Êags2
;

300 
_IO_off_t
 
	m_ﬁd_off£t
;

302 
	#__HAVE_COLUMN


	)

304 
	m_cur_cﬁumn
;

305 sig√d 
	m_vèbÀ_off£t
;

306 
	m_sh‹tbuf
[1];

310 
_IO_lock_t
 *
	m_lock
;

311 #ifde‡
_IO_USE_OLD_IO_FILE


314 
	s_IO_FILE_com∂ëe


316 
_IO_FILE
 
	m_fûe
;

318 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

319 
_IO_off64_t
 
	m_off£t
;

320 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


322 
_IO_codecvt
 *
	m_codecvt
;

323 
_IO_wide_d©a
 *
	m_wide_d©a
;

324 
_IO_FILE
 *
	m_‰ìªs_li°
;

325 *
	m_‰ìªs_buf
;

326 
size_t
 
	m_‰ìªs_size
;

328 *
	m__∑d1
;

329 *
	m__∑d2
;

330 *
	m__∑d3
;

331 *
	m__∑d4
;

332 
size_t
 
	m__∑d5
;

334 
	m_mode
;

336 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

340 #i‚de‡
__˝lu•lus


341 
_IO_FILE
 
	t_IO_FILE
;

344 
	g_IO_FILE_∂us
;

346 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

347 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

349 #i‚de‡
_LIBC


350 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

351 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

352 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

354 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

355 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

356 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

364 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

372 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

373 
	tsize_t
 
	t__n
);

381 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

384 
	t__io_˛o£_‚
 (*
	t__cookõ
);

387 #ifde‡
_GNU_SOURCE


389 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

390 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

391 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

392 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

397 
__io_ªad_‚
 *
	mªad
;

398 
__io_wrôe_‚
 *
	mwrôe
;

399 
__io_£ek_‚
 *
	m£ek
;

400 
__io_˛o£_‚
 *
	m˛o£
;

401 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

402 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

404 
	g_IO_cookõ_fûe
;

407 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

408 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

412 #ifde‡
__˝lu•lus


416 
__undîÊow
 (
_IO_FILE
 *);

417 
__uÊow
 (
_IO_FILE
 *);

418 
__ovîÊow
 (
_IO_FILE
 *, );

419 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


420 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

421 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

422 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

425 #i‡ 
__GNUC__
 >= 3

426 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

431 
	#_IO_gëc_u∆ocked
(
_Â
) \

432 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

433 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

434 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

435 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

436 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

437 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

438 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

439 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

440 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

441 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

443 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


444 
	#_IO_gëwc_u∆ocked
(
_Â
) \

445 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

446 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

447 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

448 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

449 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

450 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

451 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

452 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

453 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

454 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

457 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

458 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

460 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

461 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

462 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

463 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

468 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

469 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

471 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

472 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

473 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 #ifde‡
_IO_MTSAFE_IO


476 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

477 
	#_IO_Êockfûe
(
_Â
) \

478 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

479 
	#_IO_fu∆ockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

482 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

483 
	#_IO_Êockfûe
(
_Â
Ë

	)

484 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

485 
	#_IO_·rylockfûe
(
_Â
Ë

	)

486 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

487 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

490 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

491 
_IO_va_li°
, *
__ª°ri˘
);

492 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

493 
_IO_va_li°
);

494 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

495 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

497 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

498 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

500 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

502 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


503 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

504 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

505 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

506 #i‡
__GNUC__
 >= 2

509 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


510 
	~<shlib-com∑t.h
>

511 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

512 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

513 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

514 c⁄° 
_IO_°dö_u£d
;

515 
wók_exã∫
 (
_IO_°dö_u£d
);

518 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


519 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

523 
	#_IO_fwide
(
__Â
, 
__mode
) \

524 ({ 
__ªsu…
 = (
__mode
); \

525 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

527 i‡((
__Â
)->
_mode
 == 0) \

529 (
__Â
)->
_mode
 = -1; \

530 
__ªsu…
 = (
__Â
)->
_mode
; \

532 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

533 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

535 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

536 
__ªsu…
; })

	)

539 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

540 
_IO_va_li°
, *
__ª°ri˘
);

541 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

542 
_IO_va_li°
);

543 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

544 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

547 #ifde‡
__LDBL_COMPAT


548 
	~<bôs/libio-ldbl.h
>

551 #ifde‡
__˝lu•lus


	@/usr/include/linux/ioctl.h

1 #i‚de‡
_LINUX_IOCTL_H


2 
	#_LINUX_IOCTL_H


	)

4 
	~<asm/io˘l.h
>

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/param.h

1 #i‚de‡
_LINUX_PARAM_H


2 
	#_LINUX_PARAM_H


	)

4 
	~<asm/∑øm.h
>

	@/usr/include/linux/posix_types.h

1 #i‚de‡
_LINUX_POSIX_TYPES_H


2 
	#_LINUX_POSIX_TYPES_H


	)

4 
	~<löux/°ddef.h
>

21 #unde‡
__NFDBITS


22 
	#__NFDBITS
 (8 * ())

	)

24 #unde‡
__FD_SETSIZE


25 
	#__FD_SETSIZE
 1024

	)

27 #unde‡
__FDSET_LONGS


28 
	#__FDSET_LONGS
 (
__FD_SETSIZE
/
__NFDBITS
)

	)

30 #unde‡
__FDELT


31 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

33 #unde‡
__FDMASK


34 
	#__FDMASK
(
d
Ë(1UL << ((dË% 
__NFDBITS
))

	)

37 
	mfds_bôs
 [
__FDSET_LONGS
];

38 } 
	t__kî√l_fd_£t
;

41 (*
	t__kî√l_sigh™dÀr_t
)();

44 
	t__kî√l_key_t
;

45 
	t__kî√l_mqd_t
;

47 
	~<asm/posix_ty≥s.h
>

	@/usr/include/rpc/netdb.h

36 #i‚de‡
_RPC_NETDB_H


37 
	#_RPC_NETDB_H
 1

	)

39 
	~<„©uªs.h
>

41 
	#__√ed_size_t


	)

42 
	~<°ddef.h
>

44 
__BEGIN_DECLS


46 
	sΩ˚¡


48 *
	mr_«me
;

49 **
	mr_Æü£s
;

50 
	mr_numbî
;

53 
	$£åp˚¡
 (
__°ay›í
Ë
__THROW
;

54 
	$ídΩ˚¡
 (Ë
__THROW
;

55 
Ω˚¡
 *
	$gëΩcby«me
 (
__c⁄°
 *
__«me
Ë
__THROW
;

56 
Ω˚¡
 *
	$gëΩcbynumbî
 (
__numbî
Ë
__THROW
;

57 
Ω˚¡
 *
	$gëΩ˚¡
 (Ë
__THROW
;

59 #ifde‡
__USE_MISC


60 
	$gëΩcby«me_r
 (
__c⁄°
 *
__«me
, 
Ω˚¡
 *
__ªsu…_buf
,

61 *
__buf„r
, 
size_t
 
__buÊí
,

62 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

64 
	$gëΩcbynumbî_r
 (
__numbî
, 
Ω˚¡
 *
__ªsu…_buf
,

65 *
__buf„r
, 
size_t
 
__buÊí
,

66 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

68 
	$gëΩ˚¡_r
 (
Ω˚¡
 *
__ªsu…_buf
, *
__buf„r
,

69 
size_t
 
__buÊí
, 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

72 
__END_DECLS


	@/usr/include/sched.h

21 #i‚def 
_SCHED_H


22 
	#_SCHED_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

32 
	#__√ed_time_t


	)

33 
	#__√ed_time•ec


	)

34 
	~<time.h
>

36 #i‚de‡
__pid_t_deföed


37 
__pid_t
 
	tpid_t
;

38 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

45 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

48 
__BEGIN_DECLS


51 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

52 
__THROW
;

55 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

58 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

59 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

62 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

65 
	$sched_yõld
 (Ë
__THROW
;

68 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

77 #ifde‡
__USE_GNU


79 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

80 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

82 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

83 
˝u£ç
)

	)

84 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

87 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

89 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

90 
˝u£ç
)

	)

91 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

94 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

96 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

97 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

99 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

101 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

103 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

105 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

107 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

109 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

110 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

112 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

113 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

114 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

118 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

119 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

122 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

123 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

126 
__END_DECLS


	@/usr/include/sys/resource.h

19 #i‚def 
_SYS_RESOURCE_H


20 
	#_SYS_RESOURCE_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ªsour˚.h
>

27 #i‚de‡
__id_t_deföed


28 
__id_t
 
	tid_t
;

29 
	#__id_t_deföed


	)

32 
	g__BEGIN_DECLS


38 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


39 
__æimô_ªsour˚
 
	t__æimô_ªsour˚_t
;

40 
__rußge_who
 
	t__rußge_who_t
;

41 
__¥i‹ôy_which
 
	t__¥i‹ôy_which_t
;

43 
	t__æimô_ªsour˚_t
;

44 
	t__rußge_who_t
;

45 
	t__¥i‹ôy_which_t
;

50 #i‚de‡
__USE_FILE_OFFSET64


51 
	$gëæimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

52 
æimô
 *
__æimôs
Ë
__THROW
;

54 #ifde‡
__REDIRECT_NTH


55 
	`__REDIRECT_NTH
 (
gëæimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

56 
æimô
 *
__æimôs
), 
gëæimô64
);

58 
	#gëæimô
 
gëæimô64


	)

61 #ifde‡
__USE_LARGEFILE64


62 
	$gëæimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

63 
æimô64
 *
__æimôs
Ë
__THROW
;

69 #i‚de‡
__USE_FILE_OFFSET64


70 
	$£ålimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

71 
__c⁄°
 
æimô
 *
__æimôs
Ë
__THROW
;

73 #ifde‡
__REDIRECT_NTH


74 
	`__REDIRECT_NTH
 (
£ålimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

75 
__c⁄°
 
æimô
 *
__æimôs
),

76 
£ålimô64
);

78 
	#£ålimô
 
£ålimô64


	)

81 #ifde‡
__USE_LARGEFILE64


82 
	$£ålimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

83 
__c⁄°
 
æimô64
 *
__æimôs
Ë
__THROW
;

88 
	$gërußge
 (
__rußge_who_t
 
__who
, 
rußge
 *
__ußge
Ë
__THROW
;

94 
	$gë¥i‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
Ë
__THROW
;

98 
	$£çri‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
, 
__¥io
)

99 
__THROW
;

101 
__END_DECLS


	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/syslog.h

32 #i‚de‡
_SYS_SYSLOG_H


33 
	#_SYS_SYSLOG_H
 1

	)

35 
	~<„©uªs.h
>

36 
	#__√ed___va_li°


	)

37 
	~<°d¨g.h
>

40 
	~<bôs/sy¶og-∑th.h
>

51 
	#LOG_EMERG
 0

	)

52 
	#LOG_ALERT
 1

	)

53 
	#LOG_CRIT
 2

	)

54 
	#LOG_ERR
 3

	)

55 
	#LOG_WARNING
 4

	)

56 
	#LOG_NOTICE
 5

	)

57 
	#LOG_INFO
 6

	)

58 
	#LOG_DEBUG
 7

	)

60 
	#LOG_PRIMASK
 0x07

	)

62 
	#LOG_PRI
(
p
Ë(’Ë& 
LOG_PRIMASK
)

	)

63 
	#LOG_MAKEPRI
(
Ác
, 
¥i
Ë(((ÁcË<< 3Ë| (¥i))

	)

65 #ifde‡
SYSLOG_NAMES


66 
	#INTERNAL_NOPRI
 0x10

	)

68 
	#INTERNAL_MARK
 
	`LOG_MAKEPRI
(
LOG_NFACILITIES
, 0)

	)

69 
	s_code
 {

70 *
	mc_«me
;

71 
	mc_vÆ
;

72 } 
	tCODE
;

74 
CODE
 
	g¥i‹ôy«mes
[] =

76 { "Æît", 
LOG_ALERT
 },

77 { "¸ô", 
LOG_CRIT
 },

78 { "debug", 
LOG_DEBUG
 },

79 { "emîg", 
LOG_EMERG
 },

80 { "îr", 
LOG_ERR
 },

81 { "îr‹", 
LOG_ERR
 },

82 { "öfo", 
LOG_INFO
 },

83 { "n⁄e", 
INTERNAL_NOPRI
 },

84 { "nŸi˚", 
LOG_NOTICE
 },

85 { "∑nic", 
LOG_EMERG
 },

86 { "w¨n", 
LOG_WARNING
 },

87 { "w¨nög", 
LOG_WARNING
 },

88 { 
NULL
, -1 }

93 
	#LOG_KERN
 (0<<3Ë

	)

94 
	#LOG_USER
 (1<<3Ë

	)

95 
	#LOG_MAIL
 (2<<3Ë

	)

96 
	#LOG_DAEMON
 (3<<3Ë

	)

97 
	#LOG_AUTH
 (4<<3Ë

	)

98 
	#LOG_SYSLOG
 (5<<3Ë

	)

99 
	#LOG_LPR
 (6<<3Ë

	)

100 
	#LOG_NEWS
 (7<<3Ë

	)

101 
	#LOG_UUCP
 (8<<3Ë

	)

102 
	#LOG_CRON
 (9<<3Ë

	)

103 
	#LOG_AUTHPRIV
 (10<<3Ë

	)

104 
	#LOG_FTP
 (11<<3Ë

	)

107 
	#LOG_LOCAL0
 (16<<3Ë

	)

108 
	#LOG_LOCAL1
 (17<<3Ë

	)

109 
	#LOG_LOCAL2
 (18<<3Ë

	)

110 
	#LOG_LOCAL3
 (19<<3Ë

	)

111 
	#LOG_LOCAL4
 (20<<3Ë

	)

112 
	#LOG_LOCAL5
 (21<<3Ë

	)

113 
	#LOG_LOCAL6
 (22<<3Ë

	)

114 
	#LOG_LOCAL7
 (23<<3Ë

	)

116 
	#LOG_NFACILITIES
 24

	)

117 
	#LOG_FACMASK
 0x03f8

	)

119 
	#LOG_FAC
(
p
Ë((’Ë& 
LOG_FACMASK
Ë>> 3)

	)

121 #ifde‡
SYSLOG_NAMES


122 
CODE
 
	gÁcûôy«mes
[] =

124 { "auth", 
LOG_AUTH
 },

125 { "auth¥iv", 
LOG_AUTHPRIV
 },

126 { "¸⁄", 
LOG_CRON
 },

127 { "d´m⁄", 
LOG_DAEMON
 },

128 { "·p", 
LOG_FTP
 },

129 { "kîn", 
LOG_KERN
 },

130 { "Õr", 
LOG_LPR
 },

131 { "maû", 
LOG_MAIL
 },

132 { "m¨k", 
INTERNAL_MARK
 },

133 { "√ws", 
LOG_NEWS
 },

134 { "£curôy", 
LOG_AUTH
 },

135 { "sy¶og", 
LOG_SYSLOG
 },

136 { "u£r", 
LOG_USER
 },

137 { "uu˝", 
LOG_UUCP
 },

138 { "loˇl0", 
LOG_LOCAL0
 },

139 { "loˇl1", 
LOG_LOCAL1
 },

140 { "loˇl2", 
LOG_LOCAL2
 },

141 { "loˇl3", 
LOG_LOCAL3
 },

142 { "loˇl4", 
LOG_LOCAL4
 },

143 { "loˇl5", 
LOG_LOCAL5
 },

144 { "loˇl6", 
LOG_LOCAL6
 },

145 { "loˇl7", 
LOG_LOCAL7
 },

146 { 
NULL
, -1 }

153 
	#LOG_MASK
(
¥i
Ë(1 << (¥i)Ë

	)

154 
	#LOG_UPTO
(
¥i
Ë((1 << (’ri)+1)Ë- 1Ë

	)

162 
	#LOG_PID
 0x01

	)

163 
	#LOG_CONS
 0x02

	)

164 
	#LOG_ODELAY
 0x04

	)

165 
	#LOG_NDELAY
 0x08

	)

166 
	#LOG_NOWAIT
 0x10

	)

167 
	#LOG_PERROR
 0x20

	)

169 
__BEGIN_DECLS


175 
˛o£log
 ();

181 
›ílog
 (
__c⁄°
 *
__idít
, 
__›ti⁄
, 
__Ácûôy
);

184 
	$£éogmask
 (
__mask
Ë
__THROW
;

190 
	$sy¶og
 (
__¥i
, 
__c⁄°
 *
__fmt
, ...)

191 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

193 #ifde‡
__USE_BSD


200 
	$vsy¶og
 (
__¥i
, 
__c⁄°
 *
__fmt
, 
__gnuc_va_li°
 
__≠
)

201 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

206 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


207 
	~<bôs/sy¶og.h
>

209 #ifde‡
__LDBL_COMPAT


210 
	~<bôs/sy¶og-ldbl.h
>

213 
__END_DECLS


	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__exãnsi⁄__


31 
	$gnu_dev_maj‹
 (
__dev
)

32 
__THROW
;

33 
__exãnsi⁄__


34 
	$gnu_dev_mö‹
 (
__dev
)

35 
__THROW
;

36 
__exãnsi⁄__


37 
	$gnu_dev_makedev
 (
__maj‹
,

38 
__mö‹
)

39 
__THROW
;

41 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


42 
__exãnsi⁄__
 
__exã∫_ölöe
 

43 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

45  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

46 
	}
}

48 
__exãnsi⁄__
 
__exã∫_ölöe
 

49 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

51  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

52 
	}
}

54 
__exãnsi⁄__
 
__exã∫_ölöe
 

55 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

57  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

58 | (((Ë(
__mö‹
 & ~0xff)) << 12)

59 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

60 
	}
}

65 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

66 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

67 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ttydefaults.h

40 #i‚de‡
_SYS_TTYDEFAULTS_H_


41 
	#_SYS_TTYDEFAULTS_H_


	)

46 
	#TTYDEF_IFLAG
 (
BRKINT
 | 
ISTRIP
 | 
ICRNL
 | 
IMAXBEL
 | 
IXON
 | 
IXANY
)

	)

47 
	#TTYDEF_OFLAG
 (
OPOST
 | 
ONLCR
 | 
XTABS
)

	)

48 
	#TTYDEF_LFLAG
 (
ECHO
 | 
ICANON
 | 
ISIG
 | 
IEXTEN
 | 
ECHOE
|
ECHOKE
|
ECHOCTL
)

	)

49 
	#TTYDEF_CFLAG
 (
CREAD
 | 
CS7
 | 
PARENB
 | 
HUPCL
)

	)

50 
	#TTYDEF_SPEED
 (
B9600
)

	)

55 
	#CTRL
(
x
Ë(x&037)

	)

56 
	#CEOF
 
	`CTRL
('d')

	)

57 #ifde‡
_POSIX_VDISABLE


58 
	#CEOL
 
_POSIX_VDISABLE


	)

60 
	#CEOL
 '\0'

	)

62 
	#CERASE
 0177

	)

63 
	#CINTR
 
	`CTRL
('c')

	)

64 #ifde‡
_POSIX_VDISABLE


65 
	#CSTATUS
 
_POSIX_VDISABLE


	)

67 
	#CSTATUS
 '\0'

	)

69 
	#CKILL
 
	`CTRL
('u')

	)

70 
	#CMIN
 1

	)

71 
	#CQUIT
 034

	)

72 
	#CSUSP
 
	`CTRL
('z')

	)

73 
	#CTIME
 0

	)

74 
	#CDSUSP
 
	`CTRL
('y')

	)

75 
	#CSTART
 
	`CTRL
('q')

	)

76 
	#CSTOP
 
	`CTRL
('s')

	)

77 
	#CLNEXT
 
	`CTRL
('v')

	)

78 
	#CDISCARD
 
	`CTRL
('o')

	)

79 
	#CWERASE
 
	`CTRL
('w')

	)

80 
	#CREPRINT
 
	`CTRL
('r')

	)

81 
	#CEOT
 
CEOF


	)

83 
	#CBRK
 
CEOL


	)

84 
	#CRPRNT
 
CREPRINT


	)

85 
	#CFLUSH
 
CDISCARD


	)

93 #ifde‡
TTYDEFCHARS


94 
cc_t
 
	gâydefch¨s
[
NCCS
] = {

95 
CEOF
, 
CEOL
, CEOL, 
CERASE
, 
CWERASE
, 
CKILL
, 
CREPRINT
,

96 
_POSIX_VDISABLE
, 
CINTR
, 
CQUIT
, 
CSUSP
, 
CDSUSP
, 
CSTART
, 
CSTOP
, 
CLNEXT
,

97 
CDISCARD
, 
CMIN
, 
CTIME
, 
CSTATUS
, 
_POSIX_VDISABLE


99 #unde‡
TTYDEFCHARS


	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

24 
	~<bôs/w‹dsize.h
>

28 
	~<bôs/sigc⁄ãxt.h
>

30 #i‡
__WORDSIZE
 == 64

33 
	tgªg_t
;

36 
	#NGREG
 23

	)

39 
gªg_t
 
	tgªg£t_t
[
NGREG
];

41 #ifde‡
__USE_GNU


45 
	mREG_R8
 = 0,

46 
	#REG_R8
 
REG_R8


	)

47 
	mREG_R9
,

48 
	#REG_R9
 
REG_R9


	)

49 
	mREG_R10
,

50 
	#REG_R10
 
REG_R10


	)

51 
	mREG_R11
,

52 
	#REG_R11
 
REG_R11


	)

53 
	mREG_R12
,

54 
	#REG_R12
 
REG_R12


	)

55 
	mREG_R13
,

56 
	#REG_R13
 
REG_R13


	)

57 
	mREG_R14
,

58 
	#REG_R14
 
REG_R14


	)

59 
	mREG_R15
,

60 
	#REG_R15
 
REG_R15


	)

61 
	mREG_RDI
,

62 
	#REG_RDI
 
REG_RDI


	)

63 
	mREG_RSI
,

64 
	#REG_RSI
 
REG_RSI


	)

65 
	mREG_RBP
,

66 
	#REG_RBP
 
REG_RBP


	)

67 
	mREG_RBX
,

68 
	#REG_RBX
 
REG_RBX


	)

69 
	mREG_RDX
,

70 
	#REG_RDX
 
REG_RDX


	)

71 
	mREG_RAX
,

72 
	#REG_RAX
 
REG_RAX


	)

73 
	mREG_RCX
,

74 
	#REG_RCX
 
REG_RCX


	)

75 
	mREG_RSP
,

76 
	#REG_RSP
 
REG_RSP


	)

77 
	mREG_RIP
,

78 
	#REG_RIP
 
REG_RIP


	)

79 
	mREG_EFL
,

80 
	#REG_EFL
 
REG_EFL


	)

81 
	mREG_CSGSFS
,

82 
	#REG_CSGSFS
 
REG_CSGSFS


	)

83 
	mREG_ERR
,

84 
	#REG_ERR
 
REG_ERR


	)

85 
	mREG_TRAPNO
,

86 
	#REG_TRAPNO
 
REG_TRAPNO


	)

87 
	mREG_OLDMASK
,

88 
	#REG_OLDMASK
 
REG_OLDMASK


	)

89 
	mREG_CR2


90 
	#REG_CR2
 
REG_CR2


	)

94 
	s_libc_Âxªg


96 
	msignifiˇnd
[4];

97 
	mexp⁄ít
;

98 
	m∑ddög
[3];

101 
	s_libc_xmmªg


103 
__uöt32_t
 
	mñemít
[4];

106 
	s_libc_Â°©e


109 
__uöt16_t
 
	mcwd
;

110 
__uöt16_t
 
	mswd
;

111 
__uöt16_t
 
	m·w
;

112 
__uöt16_t
 
	mf›
;

113 
__uöt64_t
 
	mrù
;

114 
__uöt64_t
 
	mrdp
;

115 
__uöt32_t
 
	mmxc§
;

116 
__uöt32_t
 
	mmx¸_mask
;

117 
_libc_Âxªg
 
	m_°
[8];

118 
_libc_xmmªg
 
	m_xmm
[16];

119 
__uöt32_t
 
	m∑ddög
[24];

123 
_libc_Â°©e
 *
	tÂªg£t_t
;

128 
gªg£t_t
 
	mgªgs
;

130 
Âªg£t_t
 
	mÂªgs
;

131 
	m__ª£rved1
 [8];

132 } 
	tmc⁄ãxt_t
;

135 
	suc⁄ãxt


137 
	muc_Êags
;

138 
uc⁄ãxt
 *
	muc_lök
;

139 
°ack_t
 
	muc_°ack
;

140 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

141 
__sig£t_t
 
	muc_sigmask
;

142 
_libc_Â°©e
 
	m__Âªgs_mem
;

143 } 
	tuc⁄ãxt_t
;

148 
	tgªg_t
;

151 
	#NGREG
 19

	)

154 
gªg_t
 
	tgªg£t_t
[
NGREG
];

156 #ifde‡
__USE_GNU


160 
	mREG_GS
 = 0,

161 
	#REG_GS
 
REG_GS


	)

162 
	mREG_FS
,

163 
	#REG_FS
 
REG_FS


	)

164 
	mREG_ES
,

165 
	#REG_ES
 
REG_ES


	)

166 
	mREG_DS
,

167 
	#REG_DS
 
REG_DS


	)

168 
	mREG_EDI
,

169 
	#REG_EDI
 
REG_EDI


	)

170 
	mREG_ESI
,

171 
	#REG_ESI
 
REG_ESI


	)

172 
	mREG_EBP
,

173 
	#REG_EBP
 
REG_EBP


	)

174 
	mREG_ESP
,

175 
	#REG_ESP
 
REG_ESP


	)

176 
	mREG_EBX
,

177 
	#REG_EBX
 
REG_EBX


	)

178 
	mREG_EDX
,

179 
	#REG_EDX
 
REG_EDX


	)

180 
	mREG_ECX
,

181 
	#REG_ECX
 
REG_ECX


	)

182 
	mREG_EAX
,

183 
	#REG_EAX
 
REG_EAX


	)

184 
	mREG_TRAPNO
,

185 
	#REG_TRAPNO
 
REG_TRAPNO


	)

186 
	mREG_ERR
,

187 
	#REG_ERR
 
REG_ERR


	)

188 
	mREG_EIP
,

189 
	#REG_EIP
 
REG_EIP


	)

190 
	mREG_CS
,

191 
	#REG_CS
 
REG_CS


	)

192 
	mREG_EFL
,

193 
	#REG_EFL
 
REG_EFL


	)

194 
	mREG_UESP
,

195 
	#REG_UESP
 
REG_UESP


	)

196 
	mREG_SS


197 
	#REG_SS
 
REG_SS


	)

202 
	s_libc_Âªg


204 
	msignifiˇnd
[4];

205 
	mexp⁄ít
;

208 
	s_libc_Â°©e


210 
	mcw
;

211 
	msw
;

212 
	mèg
;

213 
	mùoff
;

214 
	mcs£l
;

215 
	md©aoff
;

216 
	md©a£l
;

217 
_libc_Âªg
 
	m_°
[8];

218 
	m°©us
;

222 
_libc_Â°©e
 *
	tÂªg£t_t
;

227 
gªg£t_t
 
	mgªgs
;

230 
Âªg£t_t
 
	mÂªgs
;

231 
	mﬁdmask
;

232 
	m¸2
;

233 } 
	tmc⁄ãxt_t
;

236 
	suc⁄ãxt


238 
	muc_Êags
;

239 
uc⁄ãxt
 *
	muc_lök
;

240 
°ack_t
 
	muc_°ack
;

241 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

242 
__sig£t_t
 
	muc_sigmask
;

243 
_libc_Â°©e
 
	m__Âªgs_mem
;

244 } 
	tuc⁄ãxt_t
;

	@/usr/include/sys/uio.h

19 #i‚de‡
_SYS_UIO_H


20 
	#_SYS_UIO_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<sys/ty≥s.h
>

26 
	g__BEGIN_DECLS


29 
	~<bôs/uio.h
>

40 
ssize_t
 
	$ªadv
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
)

41 
__wur
;

51 
ssize_t
 
	$wrôev
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
)

52 
__wur
;

55 #ifde‡
__USE_BSD


56 #i‚de‡
__USE_FILE_OFFSET64


66 
ssize_t
 
	$¥ódv
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

67 
__off_t
 
__off£t
Ë
__wur
;

78 
ssize_t
 
	$pwrôev
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

79 
__off_t
 
__off£t
Ë
__wur
;

81 #ifde‡
__REDIRECT


82 
ssize_t
 
	`__REDIRECT
 (
¥ódv
, (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
,

83 
__cou¡
, 
__off64_t
 
__off£t
),

84 
¥ódv64
Ë
__wur
;

85 
ssize_t
 
	`__REDIRECT
 (
pwrôev
, (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
,

86 
__cou¡
, 
__off64_t
 
__off£t
),

87 
pwrôev64
Ë
__wur
;

89 
	#¥ódv
 
¥ódv64


	)

90 
	#pwrôev
 
pwrôev64


	)

94 #ifde‡
__USE_LARGEFILE64


104 
ssize_t
 
	$¥ódv64
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

105 
__off64_t
 
__off£t
Ë
__wur
;

116 
ssize_t
 
	$pwrôev64
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

117 
__off64_t
 
__off£t
Ë
__wur
;

121 
__END_DECLS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/asm-generic/types.h

1 #i‚de‡
_ASM_GENERIC_TYPES_H


2 
	#_ASM_GENERIC_TYPES_H


	)

7 
	~<asm-gíîic/öt-Œ64.h
>

9 #i‚de‡
__ASSEMBLY__


11 
	tumode_t
;

	@/usr/include/asm/ioctl.h

1 
	~<asm-gíîic/io˘l.h
>

	@/usr/include/asm/ioctls.h

1 
	~<asm-gíîic/io˘ls.h
>

	@/usr/include/asm/param.h

1 
	~<asm-gíîic/∑øm.h
>

	@/usr/include/asm/posix_types.h

1 #ifde‡
__i386__


2 
	~"posix_ty≥s_32.h
"

4 
	~"posix_ty≥s_64.h
"

	@/usr/include/asm/socket.h

1 
	~<asm-gíîic/sockë.h
>

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

34 #i‚de‡
ARG_MAX


35 
	#__undef_ARG_MAX


	)

39 
	~<löux/limôs.h
>

42 #ifde‡
__undef_NR_OPEN


43 #unde‡
NR_OPEN


44 #unde‡
__undef_NR_OPEN


47 #ifde‡
__undef_LINK_MAX


48 #unde‡
LINK_MAX


49 #unde‡
__undef_LINK_MAX


52 #ifde‡
__undef_OPEN_MAX


53 #unde‡
OPEN_MAX


54 #unde‡
__undef_OPEN_MAX


57 #ifde‡
__undef_ARG_MAX


58 #unde‡
ARG_MAX


59 #unde‡
__undef_ARG_MAX


63 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

65 
	#PTHREAD_KEYS_MAX
 1024

	)

68 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

70 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

73 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

75 #unde‡
PTHREAD_THREADS_MAX


79 
	#AIO_PRIO_DELTA_MAX
 20

	)

82 
	#PTHREAD_STACK_MIN
 16384

	)

85 
	#DELAYTIMER_MAX
 2147483647

	)

88 
	#TTY_NAME_MAX
 32

	)

91 
	#LOGIN_NAME_MAX
 256

	)

94 
	#HOST_NAME_MAX
 64

	)

97 
	#MQ_PRIO_MAX
 32768

	)

100 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/resource.h

21 #i‚de‡
_SYS_RESOURCE_H


25 
	~<bôs/ty≥s.h
>

33 
	e__æimô_ªsour˚


36 
	mRLIMIT_CPU
 = 0,

37 
	#RLIMIT_CPU
 
RLIMIT_CPU


	)

40 
	mRLIMIT_FSIZE
 = 1,

41 
	#RLIMIT_FSIZE
 
RLIMIT_FSIZE


	)

44 
	mRLIMIT_DATA
 = 2,

45 
	#RLIMIT_DATA
 
RLIMIT_DATA


	)

48 
	mRLIMIT_STACK
 = 3,

49 
	#RLIMIT_STACK
 
RLIMIT_STACK


	)

52 
	mRLIMIT_CORE
 = 4,

53 
	#RLIMIT_CORE
 
RLIMIT_CORE


	)

59 
	m__RLIMIT_RSS
 = 5,

60 
	#RLIMIT_RSS
 
__RLIMIT_RSS


	)

63 
	mRLIMIT_NOFILE
 = 7,

64 
	m__RLIMIT_OFILE
 = 
RLIMIT_NOFILE
,

65 
	#RLIMIT_NOFILE
 
RLIMIT_NOFILE


	)

66 
	#RLIMIT_OFILE
 
__RLIMIT_OFILE


	)

69 
	mRLIMIT_AS
 = 9,

70 
	#RLIMIT_AS
 
RLIMIT_AS


	)

73 
	m__RLIMIT_NPROC
 = 6,

74 
	#RLIMIT_NPROC
 
__RLIMIT_NPROC


	)

77 
	m__RLIMIT_MEMLOCK
 = 8,

78 
	#RLIMIT_MEMLOCK
 
__RLIMIT_MEMLOCK


	)

81 
	m__RLIMIT_LOCKS
 = 10,

82 
	#RLIMIT_LOCKS
 
__RLIMIT_LOCKS


	)

85 
	m__RLIMIT_SIGPENDING
 = 11,

86 
	#RLIMIT_SIGPENDING
 
__RLIMIT_SIGPENDING


	)

89 
	m__RLIMIT_MSGQUEUE
 = 12,

90 
	#RLIMIT_MSGQUEUE
 
__RLIMIT_MSGQUEUE


	)

95 
	m__RLIMIT_NICE
 = 13,

96 
	#RLIMIT_NICE
 
__RLIMIT_NICE


	)

100 
	m__RLIMIT_RTPRIO
 = 14,

101 
	#RLIMIT_RTPRIO
 
__RLIMIT_RTPRIO


	)

103 
	m__RLIMIT_NLIMITS
 = 15,

104 
	m__RLIM_NLIMITS
 = 
__RLIMIT_NLIMITS


105 
	#RLIMIT_NLIMITS
 
__RLIMIT_NLIMITS


	)

106 
	#RLIM_NLIMITS
 
__RLIM_NLIMITS


	)

110 #i‚de‡
__USE_FILE_OFFSET64


111 
	#RLIM_INFINITY
 (()(~0UL))

	)

113 
	#RLIM_INFINITY
 0xffffffffffffffffuLL

	)

116 #ifde‡
__USE_LARGEFILE64


117 
	#RLIM64_INFINITY
 0xffffffffffffffffuLL

	)

121 
	#RLIM_SAVED_MAX
 
RLIM_INFINITY


	)

122 
	#RLIM_SAVED_CUR
 
RLIM_INFINITY


	)

126 #i‚de‡
__USE_FILE_OFFSET64


127 
__æim_t
 
	tæim_t
;

129 
__æim64_t
 
	tæim_t
;

131 #ifde‡
__USE_LARGEFILE64


132 
__æim64_t
 
	tæim64_t
;

135 
	sæimô


138 
æim_t
 
	mæim_cur
;

140 
æim_t
 
	mæim_max
;

143 #ifde‡
__USE_LARGEFILE64


144 
	sæimô64


147 
æim64_t
 
	mæim_cur
;

149 
æim64_t
 
	mæim_max
;

154 
	e__rußge_who


157 
	mRUSAGE_SELF
 = 0,

158 
	#RUSAGE_SELF
 
RUSAGE_SELF


	)

161 
	mRUSAGE_CHILDREN
 = -1

162 
	#RUSAGE_CHILDREN
 
RUSAGE_CHILDREN


	)

164 #ifde‡
__USE_GNU


167 
	mRUSAGE_THREAD
 = 1

168 
	#RUSAGE_THREAD
 
RUSAGE_THREAD


	)

170 
	#RUSAGE_LWP
 
RUSAGE_THREAD


	)

174 
	#__√ed_timevÆ


	)

175 
	~<bôs/time.h
>

178 
	srußge


181 
timevÆ
 
	mru_utime
;

183 
timevÆ
 
	mru_°ime
;

185 
	mru_maxrss
;

188 
	mru_ixrss
;

190 
	mru_idrss
;

192 
	mru_i§ss
;

195 
	mru_möÊt
;

197 
	mru_majÊt
;

199 
	mru_nsw≠
;

202 
	mru_öblock
;

204 
	mru_oublock
;

206 
	mru_msg¢d
;

208 
	mru_msgrcv
;

210 
	mru_nsig«ls
;

214 
	mru_nvcsw
;

217 
	mru_nivcsw
;

221 
	#PRIO_MIN
 -20

	)

222 
	#PRIO_MAX
 20

	)

226 
	e__¥i‹ôy_which


228 
	mPRIO_PROCESS
 = 0,

229 
	#PRIO_PROCESS
 
PRIO_PROCESS


	)

230 
	mPRIO_PGRP
 = 1,

231 
	#PRIO_PGRP
 
PRIO_PGRP


	)

232 
	mPRIO_USER
 = 2

233 
	#PRIO_USER
 
PRIO_USER


	)

	@/usr/include/bits/sched.h

22 #i‚de‡
__√ed_sched∑øm


24 #i‚de‡
_SCHED_H


30 
	#SCHED_OTHER
 0

	)

31 
	#SCHED_FIFO
 1

	)

32 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_GNU


34 
	#SCHED_BATCH
 3

	)

35 
	#SCHED_IDLE
 5

	)

37 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

40 #ifde‡
__USE_MISC


42 
	#CSIGNAL
 0x000000f‡

	)

43 
	#CLONE_VM
 0x00000100

	)

44 
	#CLONE_FS
 0x00000200

	)

45 
	#CLONE_FILES
 0x00000400

	)

46 
	#CLONE_SIGHAND
 0x00000800

	)

47 
	#CLONE_PTRACE
 0x00002000

	)

48 
	#CLONE_VFORK
 0x00004000

	)

50 
	#CLONE_PARENT
 0x00008000

	)

52 
	#CLONE_THREAD
 0x00010000

	)

53 
	#CLONE_NEWNS
 0x00020000

	)

54 
	#CLONE_SYSVSEM
 0x00040000

	)

55 
	#CLONE_SETTLS
 0x00080000

	)

56 
	#CLONE_PARENT_SETTID
 0x00100000

	)

58 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

60 
	#CLONE_DETACHED
 0x00400000

	)

61 
	#CLONE_UNTRACED
 0x00800000

	)

63 
	#CLONE_CHILD_SETTID
 0x01000000

	)

65 
	#CLONE_NEWUTS
 0x04000000

	)

66 
	#CLONE_NEWIPC
 0x08000000

	)

67 
	#CLONE_NEWUSER
 0x10000000

	)

68 
	#CLONE_NEWPID
 0x20000000

	)

69 
	#CLONE_NEWNET
 0x40000000

	)

70 
	#CLONE_IO
 0x80000000

	)

74 
	ssched_∑øm


76 
	m__sched_¥i‹ôy
;

79 
	g__BEGIN_DECLS


81 #ifde‡
__USE_MISC


83 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

84 
__Êags
, *
__¨g
, ...Ë
__THROW
;

87 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

90 
	$sched_gë˝u
 (Ë
__THROW
;

93 
__END_DECLS


97 #i‡!
deföed
 
__deföed_sched∑øm
 \

98 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

99 
	#__deföed_sched∑øm
 1

	)

101 
	s__sched_∑øm


103 
__sched_¥i‹ôy
;

105 #unde‡
__√ed_sched∑øm


109 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


110 
	#__˝u_£t_t_deföed


	)

112 
	#__CPU_SETSIZE
 1024

	)

113 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

116 
	t__˝u_mask
;

119 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

120 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

125 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

126 } 
	t˝u_£t_t
;

129 #i‡
	`__GNUC_PREREQ
 (2, 91)

130 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

131 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

133 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

135 
size_t
 
__i
; \

136 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

137 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

138 
__i
 = 0; __ò< 
__imax
; ++__i) \

139 
__bôs
[
__i
] = 0; \

140 
	}
} 0)

	)

142 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

143 (
__exãnsi⁄__
 \

144 ({ 
size_t
 
__˝u
 = (
˝u
); \

145 
__˝u
 < 8 * (
£tsize
) \

146 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

147 |
	`__CPUMASK
 (
__˝u
)) \

148 : 0; }))

	)

149 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

150 (
__exãnsi⁄__
 \

151 ({ 
size_t
 
__˝u
 = (
˝u
); \

152 
__˝u
 < 8 * (
£tsize
) \

153 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

154 &~
	`__CPUMASK
 (
__˝u
)) \

155 : 0; }))

	)

156 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

157 (
__exãnsi⁄__
 \

158 ({ 
size_t
 
__˝u
 = (
˝u
); \

159 
__˝u
 < 8 * (
£tsize
) \

160 ? ((((
__c⁄°
 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

161 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

162 : 0; }))

	)

164 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

165 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

167 #i‡
__GNUC_PREREQ
 (2, 91)

168 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

169 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

171 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

172 (
__exãnsi⁄__
 \

173 ({ 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

174 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

175 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

176 
size_t
 
__i
; \

177 
__i
 = 0; __ò< 
__imax
; ++__i) \

178 i‡(
__bôs
[
__i
] != __bits[__i]) \

180 
__i
 =
__imax
; }))

	)

183 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

184 (
__exãnsi⁄__
 \

185 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

186 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

187 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

188 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

189 
size_t
 
__i
; \

190 
__i
 = 0; __ò< 
__imax
; ++__i) \

191 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

192 
__de°
; }))

	)

194 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

195 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

196 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

197 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

199 
__BEGIN_DECLS


201 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

202 
__THROW
;

203 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

204 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

206 
__END_DECLS


	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


23 
	~<bôs/w‹dsize.h
>

26 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

28 #i‡
__WORDSIZE
 == 64

29 
	#__FD_ZERO_STOS
 "°osq"

	)

31 
	#__FD_ZERO_STOS
 "°o¶"

	)

34 
	#__FD_ZERO
(
fd•
) \

36 
__d0
, 
__d1
; \

37 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

38 : "=c" (
__d0
), "=D" (
__d1
) \

39 : "a" (0), "0" ( (
fd_£t
) \

40 /  (
__fd_mask
)), \

41 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

43 } 0)

	)

49 
	#__FD_ZERO
(
£t
) \

51 
__i
; \

52 
fd_£t
 *
__¨r
 = (
£t
); \

53 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

54 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

55 } 0)

	)

59 
	#__FD_SET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] |
	`__FDMASK
 (d))

	)

60 
	#__FD_CLR
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] &~
	`__FDMASK
 (d))

	)

61 
	#__FD_ISSET
(
d
, 
£t
) \

62 ((
	`__FDS_BITS
 (
£t
)[
	`__FDELT
 (
d
)] & 
	`__FDMASK
 (d)Ë!0)

	)

	@/usr/include/bits/sockaddr.h

24 #i‚de‡
_BITS_SOCKADDR_H


25 
	#_BITS_SOCKADDR_H
 1

	)

29 
	tß_Ámûy_t
;

35 
	#__SOCKADDR_COMMON
(
ß_¥efix
) \

36 
ß_Ámûy_t
 
ß_¥efix
##
Ámûy


	)

38 
	#__SOCKADDR_COMMON_SIZE
 ( ())

	)

	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

25 
	$__libc_lock_deföe_ªcursive
 (, 
_IO_lock_t
)

28 #ifde‡
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


29 
	t_IO_lock_öôülizî
 
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


	)

30 #ñi‡
	t_IO_MTSAFE_IO


31 #îr‹ 
	tlibio
 
	t√eds
 
	tªcursive
 
	tmuãxes
 
	t_IO_MTSAFE_IO


34 
	t_IO_lock_öô
(
	t_«me
Ë
	t__libc_lock_öô_ªcursive
 (_«me)

	)

35 
	t_IO_lock_föi
(
	t_«me
Ë
	t__libc_lock_föi_ªcursive
 (_«me)

	)

36 
	t_IO_lock_lock
(
	t_«me
Ë
	t__libc_lock_lock_ªcursive
 (_«me)

	)

37 
	t_IO_lock_åylock
(
	t_«me
Ë
	t__libc_lock_åylock_ªcursive
 (_«me)

	)

38 
	t_IO_lock_u∆ock
(
	t_«me
Ë
	t__libc_lock_u∆ock_ªcursive
 (_«me)

	)

41 
	t_IO_˛ónup_ªgi⁄_°¨t
(
	t_f˘
, 
	t_Â
) \

42 
	t__libc_˛ónup_ªgi⁄_°¨t
 (((
	t_Â
)->
	t_Êags
 & 
	t_IO_USER_LOCK
Ë=0, 
	t_f˘
, _Â)

	)

43 
	t_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
	t_f˘
) \

44 
	t__libc_˛ónup_ªgi⁄_°¨t
 (1, 
	t_f˘
, 
	tNULL
)

	)

45 
	t_IO_˛ónup_ªgi⁄_íd
(
	t_doô
) \

46 
	t__libc_˛ónup_ªgi⁄_íd
 (
	t_doô
)

	)

48 #i‡
	tdeföed
 
	t_LIBC
 && !deföed 
	tNOT_IN_libc


49 
	t_IO_acquúe_lock
(
	t_Â
) \

50 
	t_IO_˛ónup_ªgi⁄_°¨t
 (((*Ë(*)Ë
	t_IO_fu∆ockfûe
, (
	t_Â
)); \

51 
	`_IO_Êockfûe
 (
_Â
)

	)

53 
	#_IO_ªÀa£_lock
(
_Â
) \

54 
	`_IO_fu∆ockfûe
 (
_Â
); \

55 
	`_IO_˛ónup_ªgi⁄_íd
 (0)

	)

	@/usr/include/bits/syslog-ldbl.h

20 #i‚de‡
_SYS_SYSLOG_H


24 
	$__LDBL_REDIR_DECL
 (
sy¶og
)

26 #ifde‡
__USE_BSD


27 
	$__LDBL_REDIR_DECL
 (
vsy¶og
)

30 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


31 
	$__LDBL_REDIR_DECL
 (
__sy¶og_chk
)

33 #ifde‡
__USE_BSD


34 
	$__LDBL_REDIR_DECL
 (
__vsy¶og_chk
)

	@/usr/include/bits/syslog-path.h

20 #i‚de‡
_SYS_SYSLOG_H


24 #i‚de‡
_BITS_SYSLOG_PATH_H


25 
	#_BITS_SYSLOG_PATH_H
 1

	)

27 
	#_PATH_LOG
 "/dev/log"

	)

	@/usr/include/bits/syslog.h

20 #i‚de‡
_SYS_SYSLOG_H


25 
	$__sy¶og_chk
 (
__¥i
, 
__Êag
, 
__c⁄°
 *
__fmt
, ...)

26 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

28 #ifde‡
__va_¨g_∑ck


29 
__exã∫_Æways_ölöe
 

30 
	$sy¶og
 (
__¥i
, 
__c⁄°
 *
__fmt
, ...)

32 
	`__sy¶og_chk
 (
__¥i
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

33 
	}
}

34 #ñi‡!
deföed
 
__˝lu•lus


35 
	#sy¶og
(
¥i
, ...) \

36 
	`__sy¶og_chk
 (
¥i
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

40 #ifde‡
__USE_BSD


41 
	$__vsy¶og_chk
 (
__¥i
, 
__Êag
, 
__c⁄°
 *
__fmt
,

42 
__gnuc_va_li°
 
__≠
)

43 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

45 
__exã∫_Æways_ölöe
 

46 
	$vsy¶og
 (
__¥i
, 
__c⁄°
 *
__fmt
, 
__gnuc_va_li°
 
__≠
)

48 
	`__vsy¶og_chk
 (
__¥i
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

49 
	}
}

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uio.h

19 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_UIO_H


24 
	#_BITS_UIO_H
 1

	)

26 
	~<sys/ty≥s.h
>

40 
	#UIO_MAXIOV
 1024

	)

44 
	siovec


46 *
	miov_ba£
;

47 
size_t
 
	miov_Àn
;

	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/linux/stddef.h

1 #i‚de‡
_LINUX_STDDEF_H


2 
	#_LINUX_STDDEF_H


	)

6 #unde‡
NULL


7 #i‡
deföed
(
__˝lu•lus
)

8 
	#NULL
 0

	)

10 
	#NULL
 ((*)0)

	)

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
fct

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
fct

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
args

75 
	#__PMT
(
¨gs
Ë
	)
args

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3) \

136 || (
deföed
 
	g__GNUC_RH_RELEASE__
 && 
	g__GNUC__
 == 4 \

137 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

138 && 
__GNUC_RH_RELEASE__
 >= 31)

139 
	#__w¨nde˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

141 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

142 
	#__îr‹de˛
(
«me
, 
msg
) \

143 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

145 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

146 
	#__w¨«âr
(
msg
)

	)

147 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

151 #i‡
__GNUC_PREREQ
 (2,97)

153 
	#__Êex¨r
 []

	)

155 #ifde‡
__GNUC__


156 
	#__Êex¨r
 [0]

	)

158 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

159 
	#__Êex¨r
 []

	)

162 
	#__Êex¨r
 [1]

	)

178 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

180 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

181 #ifde‡
__˝lu•lus


182 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

185 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

186 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

188 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

189 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

202 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

203 
	#__©åibuã__
(
xyz
Ë

	)

209 #i‡
__GNUC_PREREQ
 (2,96)

210 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

212 
	#__©åibuã_mÆloc__


	)

218 #i‡
__GNUC_PREREQ
 (2,96)

219 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

221 
	#__©åibuã_puª__


	)

227 #i‡
__GNUC_PREREQ
 (3,1)

228 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

229 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

231 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

232 
	#__©åibuã_noölöe__


	)

236 #i‡
__GNUC_PREREQ
 (3,2)

237 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

239 
	#__©åibuã_dïªˇãd__


	)

248 #i‡
__GNUC_PREREQ
 (2,8)

249 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

251 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

258 #i‡
__GNUC_PREREQ
 (2,97)

259 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

260 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

262 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

267 #i‡
__GNUC_PREREQ
 (3,3)

268 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

270 
	#__n⁄nuŒ
(
∑øms
)

	)

275 #i‡
__GNUC_PREREQ
 (3,4)

276 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

277 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

278 #i‡
__USE_FORTIFY_LEVEL
 > 0

279 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

282 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

284 #i‚de‡
__wur


285 
	#__wur


	)

289 #i‡
__GNUC_PREREQ
 (3,2)

290 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

292 
	#__Æways_ölöe
 
__ölöe


	)

297 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3) \

298 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

299 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

300 && 
__GNUC_RH_RELEASE__
 >= 31)

301 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


302 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

303 #i‡
__GNUC_PREREQ
 (4,3) \

304 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

305 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

306 && 
__GNUC_RH_RELEASE__
 >= 31)

307 
	#__exã∫_Æways_ölöe
 \

308 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

310 
	#__exã∫_Æways_ölöe
 \

311 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

314 
	#__exã∫_ölöe
 
__ölöe


	)

315 #i‡
__GNUC_PREREQ
 (4,3)

316 
	#__exã∫_Æways_ölöe
 \

317 
__Æways_ölöe
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

319 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

326 #i‡
__GNUC_PREREQ
 (4,3) \

327 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

328 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

329 && 
__GNUC_RH_RELEASE__
 >= 31)

330 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

331 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

338 #i‡!
__GNUC_PREREQ
 (2,8)

339 
	#__exãnsi⁄__


	)

343 #i‡!
__GNUC_PREREQ
 (2,92)

344 
	#__ª°ri˘


	)

350 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


351 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

353 #ifde‡
__GNUC__


354 
	#__ª°ri˘_¨r


	)

356 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

357 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

360 
	#__ª°ri˘_¨r


	)

365 
	~<bôs/w‹dsize.h
>

367 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


368 
	#__LDBL_COMPAT
 1

	)

369 #ifde‡
__REDIRECT


370 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

371 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

372 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

373 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

374 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

375 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

376 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

377 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

378 
	#__LDBL_REDIR_DECL
(
«me
) \

379 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

380 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

381 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

382 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

383 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

386 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


387 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

388 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

389 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

390 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

391 
	#__LDBL_REDIR_DECL
(
«me
)

	)

392 #ifde‡
__REDIRECT


393 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

394 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

395 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/asm-generic/int-ll64.h

8 #i‚de‡
_ASM_GENERIC_INT_LL64_H


9 
	#_ASM_GENERIC_INT_LL64_H


	)

11 
	~<asm/bô•îl⁄g.h
>

13 #i‚de‡
__ASSEMBLY__


19 
__sig√d__
 
	t__s8
;

20 
	t__u8
;

22 
__sig√d__
 
	t__s16
;

23 
	t__u16
;

25 
__sig√d__
 
	t__s32
;

26 
	t__u32
;

28 #ifde‡
__GNUC__


29 
__exãnsi⁄__
 
__sig√d__
 
	t__s64
;

30 
__exãnsi⁄__
 
	t__u64
;

32 
__sig√d__
 
	t__s64
;

33 
	t__u64
;

	@/usr/include/asm-generic/ioctl.h

1 #i‚de‡
_ASM_GENERIC_IOCTL_H


2 
	#_ASM_GENERIC_IOCTL_H


	)

22 
	#_IOC_NRBITS
 8

	)

23 
	#_IOC_TYPEBITS
 8

	)

30 #i‚de‡
_IOC_SIZEBITS


31 
	#_IOC_SIZEBITS
 14

	)

34 #i‚de‡
_IOC_DIRBITS


35 
	#_IOC_DIRBITS
 2

	)

38 
	#_IOC_NRMASK
 ((1 << 
_IOC_NRBITS
)-1)

	)

39 
	#_IOC_TYPEMASK
 ((1 << 
_IOC_TYPEBITS
)-1)

	)

40 
	#_IOC_SIZEMASK
 ((1 << 
_IOC_SIZEBITS
)-1)

	)

41 
	#_IOC_DIRMASK
 ((1 << 
_IOC_DIRBITS
)-1)

	)

43 
	#_IOC_NRSHIFT
 0

	)

44 
	#_IOC_TYPESHIFT
 (
_IOC_NRSHIFT
+
_IOC_NRBITS
)

	)

45 
	#_IOC_SIZESHIFT
 (
_IOC_TYPESHIFT
+
_IOC_TYPEBITS
)

	)

46 
	#_IOC_DIRSHIFT
 (
_IOC_SIZESHIFT
+
_IOC_SIZEBITS
)

	)

53 #i‚de‡
_IOC_NONE


54 
	#_IOC_NONE
 0U

	)

57 #i‚de‡
_IOC_WRITE


58 
	#_IOC_WRITE
 1U

	)

61 #i‚de‡
_IOC_READ


62 
	#_IOC_READ
 2U

	)

65 
	#_IOC
(
dú
,
ty≥
,
ƒ
,
size
) \

66 (((
dú
Ë<< 
_IOC_DIRSHIFT
) | \

67 ((
ty≥
Ë<< 
_IOC_TYPESHIFT
) | \

68 ((
ƒ
Ë<< 
_IOC_NRSHIFT
) | \

69 ((
size
Ë<< 
_IOC_SIZESHIFT
))

	)

71 
	#_IOC_TYPECHECK
(
t
Ë(—))

	)

74 
	#_IO
(
ty≥
,
ƒ
Ë
	`_IOC
(
_IOC_NONE
,—y≥),“r),0)

	)

75 
	#_IOR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

76 
	#_IOW
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

77 
	#_IOWR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

78 
	#_IOR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(size))

	)

79 
	#_IOW_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(size))

	)

80 
	#_IOWR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(size))

	)

83 
	#_IOC_DIR
(
ƒ
Ë((“rË>> 
_IOC_DIRSHIFT
Ë& 
_IOC_DIRMASK
)

	)

84 
	#_IOC_TYPE
(
ƒ
Ë((“rË>> 
_IOC_TYPESHIFT
Ë& 
_IOC_TYPEMASK
)

	)

85 
	#_IOC_NR
(
ƒ
Ë((“rË>> 
_IOC_NRSHIFT
Ë& 
_IOC_NRMASK
)

	)

86 
	#_IOC_SIZE
(
ƒ
Ë((“rË>> 
_IOC_SIZESHIFT
Ë& 
_IOC_SIZEMASK
)

	)

90 
	#IOC_IN
 (
_IOC_WRITE
 << 
_IOC_DIRSHIFT
)

	)

91 
	#IOC_OUT
 (
_IOC_READ
 << 
_IOC_DIRSHIFT
)

	)

92 
	#IOC_INOUT
 ((
_IOC_WRITE
|
_IOC_READ
Ë<< 
_IOC_DIRSHIFT
)

	)

93 
	#IOCSIZE_MASK
 (
_IOC_SIZEMASK
 << 
_IOC_SIZESHIFT
)

	)

94 
	#IOCSIZE_SHIFT
 (
_IOC_SIZESHIFT
)

	)

	@/usr/include/asm-generic/ioctls.h

1 #i‚de‡
__ASM_GENERIC_IOCTLS_H


2 
	#__ASM_GENERIC_IOCTLS_H


	)

4 
	~<löux/io˘l.h
>

19 
	#TCGETS
 0x5401

	)

20 
	#TCSETS
 0x5402

	)

21 
	#TCSETSW
 0x5403

	)

22 
	#TCSETSF
 0x5404

	)

23 
	#TCGETA
 0x5405

	)

24 
	#TCSETA
 0x5406

	)

25 
	#TCSETAW
 0x5407

	)

26 
	#TCSETAF
 0x5408

	)

27 
	#TCSBRK
 0x5409

	)

28 
	#TCXONC
 0x540A

	)

29 
	#TCFLSH
 0x540B

	)

30 
	#TIOCEXCL
 0x540C

	)

31 
	#TIOCNXCL
 0x540D

	)

32 
	#TIOCSCTTY
 0x540E

	)

33 
	#TIOCGPGRP
 0x540F

	)

34 
	#TIOCSPGRP
 0x5410

	)

35 
	#TIOCOUTQ
 0x5411

	)

36 
	#TIOCSTI
 0x5412

	)

37 
	#TIOCGWINSZ
 0x5413

	)

38 
	#TIOCSWINSZ
 0x5414

	)

39 
	#TIOCMGET
 0x5415

	)

40 
	#TIOCMBIS
 0x5416

	)

41 
	#TIOCMBIC
 0x5417

	)

42 
	#TIOCMSET
 0x5418

	)

43 
	#TIOCGSOFTCAR
 0x5419

	)

44 
	#TIOCSSOFTCAR
 0x541A

	)

45 
	#FIONREAD
 0x541B

	)

46 
	#TIOCINQ
 
FIONREAD


	)

47 
	#TIOCLINUX
 0x541C

	)

48 
	#TIOCCONS
 0x541D

	)

49 
	#TIOCGSERIAL
 0x541E

	)

50 
	#TIOCSSERIAL
 0x541F

	)

51 
	#TIOCPKT
 0x5420

	)

52 
	#FIONBIO
 0x5421

	)

53 
	#TIOCNOTTY
 0x5422

	)

54 
	#TIOCSETD
 0x5423

	)

55 
	#TIOCGETD
 0x5424

	)

56 
	#TCSBRKP
 0x5425

	)

57 
	#TIOCSBRK
 0x5427

	)

58 
	#TIOCCBRK
 0x5428

	)

59 
	#TIOCGSID
 0x5429

	)

60 
	#TCGETS2
 
	`_IOR
('T', 0x2A, 
ãrmios2
)

	)

61 
	#TCSETS2
 
	`_IOW
('T', 0x2B, 
ãrmios2
)

	)

62 
	#TCSETSW2
 
	`_IOW
('T', 0x2C, 
ãrmios2
)

	)

63 
	#TCSETSF2
 
	`_IOW
('T', 0x2D, 
ãrmios2
)

	)

64 
	#TIOCGRS485
 0x542E

	)

65 
	#TIOCSRS485
 0x542F

	)

66 
	#TIOCGPTN
 
	`_IOR
('T', 0x30, Ë

	)

67 
	#TIOCSPTLCK
 
	`_IOW
('T', 0x31, Ë

	)

68 
	#TCGETX
 0x5432

	)

69 
	#TCSETX
 0x5433

	)

70 
	#TCSETXF
 0x5434

	)

71 
	#TCSETXW
 0x5435

	)

73 
	#FIONCLEX
 0x5450

	)

74 
	#FIOCLEX
 0x5451

	)

75 
	#FIOASYNC
 0x5452

	)

76 
	#TIOCSERCONFIG
 0x5453

	)

77 
	#TIOCSERGWILD
 0x5454

	)

78 
	#TIOCSERSWILD
 0x5455

	)

79 
	#TIOCGLCKTRMIOS
 0x5456

	)

80 
	#TIOCSLCKTRMIOS
 0x5457

	)

81 
	#TIOCSERGSTRUCT
 0x5458

	)

82 
	#TIOCSERGETLSR
 0x5459

	)

83 
	#TIOCSERGETMULTI
 0x545A

	)

84 
	#TIOCSERSETMULTI
 0x545B

	)

86 
	#TIOCMIWAIT
 0x545C

	)

87 
	#TIOCGICOUNT
 0x545D

	)

93 #i‚de‡
FIOQSIZE


94 
	#TIOCGHAYESESP
 0x545E

	)

95 
	#TIOCSHAYESESP
 0x545F

	)

96 
	#FIOQSIZE
 0x5460

	)

100 
	#TIOCPKT_DATA
 0

	)

101 
	#TIOCPKT_FLUSHREAD
 1

	)

102 
	#TIOCPKT_FLUSHWRITE
 2

	)

103 
	#TIOCPKT_STOP
 4

	)

104 
	#TIOCPKT_START
 8

	)

105 
	#TIOCPKT_NOSTOP
 16

	)

106 
	#TIOCPKT_DOSTOP
 32

	)

108 
	#TIOCSER_TEMT
 0x01

	)

	@/usr/include/asm-generic/param.h

1 #i‚de‡
__ASM_GENERIC_PARAM_H


2 
	#__ASM_GENERIC_PARAM_H


	)

5 #i‚de‡
HZ


6 
	#HZ
 100

	)

9 #i‚de‡
EXEC_PAGESIZE


10 
	#EXEC_PAGESIZE
 4096

	)

13 #i‚de‡
NOGROUP


14 
	#NOGROUP
 (-1)

	)

17 
	#MAXHOSTNAMELEN
 64

	)

	@/usr/include/asm-generic/socket.h

1 #i‚de‡
__ASM_GENERIC_SOCKET_H


2 
	#__ASM_GENERIC_SOCKET_H


	)

4 
	~<asm/sockios.h
>

7 
	#SOL_SOCKET
 1

	)

9 
	#SO_DEBUG
 1

	)

10 
	#SO_REUSEADDR
 2

	)

11 
	#SO_TYPE
 3

	)

12 
	#SO_ERROR
 4

	)

13 
	#SO_DONTROUTE
 5

	)

14 
	#SO_BROADCAST
 6

	)

15 
	#SO_SNDBUF
 7

	)

16 
	#SO_RCVBUF
 8

	)

17 
	#SO_SNDBUFFORCE
 32

	)

18 
	#SO_RCVBUFFORCE
 33

	)

19 
	#SO_KEEPALIVE
 9

	)

20 
	#SO_OOBINLINE
 10

	)

21 
	#SO_NO_CHECK
 11

	)

22 
	#SO_PRIORITY
 12

	)

23 
	#SO_LINGER
 13

	)

24 
	#SO_BSDCOMPAT
 14

	)

25 
	#SO_REUSEPORT
 15

	)

27 #i‚de‡
SO_PASSCRED


28 
	#SO_PASSCRED
 16

	)

29 
	#SO_PEERCRED
 17

	)

30 
	#SO_RCVLOWAT
 18

	)

31 
	#SO_SNDLOWAT
 19

	)

32 
	#SO_RCVTIMEO
 20

	)

33 
	#SO_SNDTIMEO
 21

	)

37 
	#SO_SECURITY_AUTHENTICATION
 22

	)

38 
	#SO_SECURITY_ENCRYPTION_TRANSPORT
 23

	)

39 
	#SO_SECURITY_ENCRYPTION_NETWORK
 24

	)

41 
	#SO_BINDTODEVICE
 25

	)

44 
	#SO_ATTACH_FILTER
 26

	)

45 
	#SO_DETACH_FILTER
 27

	)

47 
	#SO_PEERNAME
 28

	)

48 
	#SO_TIMESTAMP
 29

	)

49 
	#SCM_TIMESTAMP
 
SO_TIMESTAMP


	)

51 
	#SO_ACCEPTCONN
 30

	)

53 
	#SO_PEERSEC
 31

	)

54 
	#SO_PASSSEC
 34

	)

55 
	#SO_TIMESTAMPNS
 35

	)

56 
	#SCM_TIMESTAMPNS
 
SO_TIMESTAMPNS


	)

58 
	#SO_MARK
 36

	)

60 
	#SO_TIMESTAMPING
 37

	)

61 
	#SCM_TIMESTAMPING
 
SO_TIMESTAMPING


	)

63 
	#SO_PROTOCOL
 38

	)

64 
	#SO_DOMAIN
 39

	)

66 
	#SO_RXQ_OVFL
 40

	)

68 
	#SO_BPF_EXTENSIONS
 48

	)

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/bits/libc-lock.h

21 #i‚de‡
_BITS_LIBC_LOCK_H


22 
	#_BITS_LIBC_LOCK_H
 1

	)

24 
	~<±hªad.h
>

27 #ifde‡
_IO_MTSAFE_IO


28 
±hªad_muãx_t
 
	t__libc_lock_t
;

29 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

30 #ifde‡
__USE_UNIX98


31 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

33 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

35 
__libc_lock_ªcursive_t
 
	t__πld_lock_ªcursive_t
;

37 
__libc_lock_›aque__
 
	t__libc_lock_t
;

38 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

39 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

43 
±hªad_key_t
 
	t__libc_key_t
;

52 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

53 
CLASS
 
__libc_lock_t
 
NAME
;

	)

54 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

55 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

56 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

57 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

58 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

59 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

70 #i‡
__LT_SPINLOCK_INIT
 == 0

71 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

72 
CLASS
 
__libc_lock_t
 
NAME
;

	)

74 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

75 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

78 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

79 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

83 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

84 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

85 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

86 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

88 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

89 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

90 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

91 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

93 #i‡
deföed
 
__PIC__


94 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

95 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

96 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

98 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

99 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

101 
	#__libc_maybe_ˇŒ2
(
FUNC
, 
ARGS
, 
ELSE
Ë
	`__libc_maybe_ˇŒ
 (
__
##FUNC, ARGS, ELSE)

	)

105 
	#__libc_lock_öô
(
NAME
) \

106 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0))

	)

107 
	#__libc_rwlock_öô
(
NAME
) \

108 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0));

	)

111 
	#__libc_lock_öô_ªcursive
(
NAME
) \

113 i‡(
__±hªad_muãx_öô
 !
NULL
) \

115 
±hªad_muãx©å_t
 
__©å
; \

116 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

117 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

118 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

119 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

121 } 0);

	)

122 
	#__πld_lock_öô_ªcursive
(
NAME
) \

123 
	`__libc_lock_öô_ªcursive
 (
NAME
)

	)

128 
	#__libc_lock_föi
(
NAME
) \

129 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_de°roy
, (&(
NAME
)), 0));

	)

130 
	#__libc_rwlock_föi
(
NAME
) \

131 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0));

	)

134 
	#__libc_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi
 ((NAME).
muãx
)

	)

135 
	#__πld_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi_ªcursive
 (NAME)

	)

138 
	#__libc_lock_lock
(
NAME
) \

139 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_lock
, (&(
NAME
)), 0));

	)

140 
	#__libc_rwlock_rdlock
(
NAME
) \

141 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0));

	)

142 
	#__libc_rwlock_wæock
(
NAME
) \

143 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0));

	)

146 
	#__libc_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock
 ((NAME).
muãx
)

	)

149 
	#__libc_lock_åylock
(
NAME
) \

150 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_åylock
, (&(
NAME
)), 0))

	)

151 
	#__libc_rwlock_åyrdlock
(
NAME
) \

152 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0))

	)

153 
	#__libc_rwlock_åywæock
(
NAME
) \

154 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0))

	)

157 
	#__libc_lock_åylock_ªcursive
(
NAME
Ë
	`__libc_lock_åylock
 ((NAME).
muãx
)

	)

158 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

159 
	`__libc_lock_åylock_ªcursive
 (
NAME
)

	)

162 
	#__libc_lock_u∆ock
(
NAME
) \

163 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_u∆ock
, (&(
NAME
)), 0));

	)

164 
	#__libc_rwlock_u∆ock
(
NAME
) \

165 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0));

	)

168 
	#__libc_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock
 ((NAME).
muãx
)

	)

170 
	#__πld_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock_ªcursive
 (NAME)

	)

171 
	#__πld_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock_ªcursive
 (NAME)

	)

174 #i‡
PTHREAD_ONCE_INIT
 == 0

177 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

178 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

180 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

181 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

185 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

187 i‡(
__±hªad_⁄˚
 !
NULL
) \

188 
	`__±hªad_⁄˚
 (&(
ONCE_CONTROL
), (
INIT_FUNCTION
)); \

189 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

190 
	`INIT_FUNCTION
 (); \

191 (
ONCE_CONTROL
) = 2; \

193 } 0)

	)

197 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

198 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

199 
_avaû
 = (
DOIT
Ë&& 
_±hªad_˛ónup_push_de„r
 !
NULL
; \

200 i‡(
_avaû
) { \

201 
	`_±hªad_˛ónup_push_de„r
 (&
_buf„r
, (
FCT
), (
ARG
)); \

202 }

	)

205 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

206 i‡(
_avaû
) { \

207 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

209 }

	)

212 
	#__libc_˛ónup_íd
(
DOIT
) \

213 i‡(
_avaû
) { \

214 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

215 }

	)

217 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

218 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

219 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_push
, (&
_buf„r
, (
f˘
), (
¨g
)), 0)

	)

221 
	#__libc_˛ónup_p›
(
execuã
) \

222 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_p›
, (&
_buf„r
, 
execuã
), 0); \

223 }

	)

226 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

227 (
	`__libc_maybe_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1))

	)

230 
	#__libc_gë•ecific
(
KEY
) \

231 (
	`__libc_maybe_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
))

	)

234 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

235 (
	`__libc_maybe_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0))

	)

239 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

240 (
	`__libc_maybe_ˇŒ
 (
__±hªad_©f‹k
, (
PREPARE
, 
PARENT
, 
CHILD
), 0))

	)

242 
__BEGIN_DECLS


244 
_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

245 (*
__routöe
) (*),

246 *
__¨g
Ë
__THROW
;

248 
	$_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

249 
__execuã
Ë
__THROW
;

255 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

256 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

258 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

260 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

262 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

264 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

266 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

268 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

270 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

271 
__köd
);

273 #ifde‡
__USE_UNIX98


274 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

275 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

277 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

279 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

281 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

283 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

285 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

287 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

290 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

291 (*
__de°r_fun˘i⁄
) (*));

293 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

294 
__c⁄°
 *
__poöãr
);

296 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

298 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

299 (*
__öô_routöe
) ());

301 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

302 (*
__∑ª¡
) (),

303 (*
__chûd
) ());

305 
__END_DECLS


309 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


310 #¥agm®
wók
 
__±hªad_muãx_öô


311 #¥agm®
wók
 
__±hªad_muãx_de°roy


312 #¥agm®
wók
 
__±hªad_muãx_lock


313 #¥agm®
wók
 
__±hªad_muãx_åylock


314 #¥agm®
wók
 
__±hªad_muãx_u∆ock


315 #¥agm®
wók
 
__±hªad_muãx©å_öô


316 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


317 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


318 #¥agm®
wók
 
__±hªad_rwlock_de°roy


319 #¥agm®
wók
 
__±hªad_rwlock_rdlock


320 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


321 #¥agm®
wók
 
__±hªad_rwlock_wæock


322 #¥agm®
wók
 
__±hªad_rwlock_åywæock


323 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


324 #¥agm®
wók
 
__±hªad_key_¸óã


325 #¥agm®
wók
 
__±hªad_£t•ecific


326 #¥agm®
wók
 
__±hªad_gë•ecific


327 #¥agm®
wók
 
__±hªad_⁄˚


328 #¥agm®
wók
 
__±hªad_öôülize


329 #¥agm®
wók
 
__±hªad_©f‹k


330 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


331 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


332 #¥agm®
wók
 
_±hªad_˛ónup_push


333 #¥agm®
wók
 
_±hªad_˛ónup_p›


338 
	#__libc_muãx_u∆ock
 
__±hªad_muãx_u∆ock


	)

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

72 
	t__c⁄°
 **, __const *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

86 
	t__c⁄°
 *,

87 
	t__c⁄°
 **,

88 
	t__c⁄°
 *, **,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

93 
	t__c⁄°
 *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 
__c⁄°
 *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

76 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

323 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

327 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

328 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

332 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

333 
__THROW
;

336 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

337 
__END_NAMESPACE_STD


339 #ifde‡
__USE_GNU


342 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

343 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

344 
__THROW
;

348 
__BEGIN_NAMESPACE_STD


351 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

355 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

359 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

363 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

364 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

365 
mb°©e_t
 *
__p
Ë
__THROW
;

368 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

369 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

372 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

373 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
__END_NAMESPACE_STD


378 #ifde‡
__USE_EXTERN_INLINES


384 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

385 
__exã∫_ölöe
 
wöt_t


386 
	`__NTH
 (
	$btowc
 (
__c
))

387 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

388 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

390 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

391 
__exã∫_ölöe
 

392 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

393 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

394 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

396 
__exã∫_ölöe
 
size_t


397 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

398 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

399 {  (
__ps
 !
NULL


400 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

403 
__BEGIN_NAMESPACE_STD


406 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

407 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

408 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

412 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

413 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

414 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

415 
__END_NAMESPACE_STD


418 #ifdef 
__USE_XOPEN2K8


421 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

422 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

423 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

427 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

428 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

429 
size_t
 
__nwc
, size_à
__Àn
,

430 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

435 #ifde‡
__USE_XOPEN


437 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

441 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

445 
__BEGIN_NAMESPACE_STD


448 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

449 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

450 
__END_NAMESPACE_STD


452 #ifde‡
__USE_ISOC99


453 
__BEGIN_NAMESPACE_C99


455 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

456 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

457 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
__END_NAMESPACE_C99


463 
__BEGIN_NAMESPACE_STD


466 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

467 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

471 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

473 
__THROW
;

474 
__END_NAMESPACE_STD


476 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

477 
__BEGIN_NAMESPACE_C99


480 
__exãnsi⁄__


481 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

482 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

483 
__THROW
;

487 
__exãnsi⁄__


488 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

489 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

490 
__ba£
Ë
__THROW
;

491 
__END_NAMESPACE_C99


494 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


497 
__exãnsi⁄__


498 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

499 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

500 
__THROW
;

504 
__exãnsi⁄__


505 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

506 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

507 
__ba£
Ë
__THROW
;

510 #ifde‡
__USE_GNU


524 
	~<xloˇÀ.h
>

528 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

529 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

530 
__loˇÀ_t
 
__loc
Ë
__THROW
;

532 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

533 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

534 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

536 
__exãnsi⁄__


537 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
)

545 
__THROW
;

547 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

549 
__THROW
;

551 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

552 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
;

555 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

556 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

557 
__loˇÀ_t
 
__loc
Ë
__THROW
;

562 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

563 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

567 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

568 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

569 
__THROW
;

575 #ifdef 
__USE_XOPEN2K8


578 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

581 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


582 
__BEGIN_NAMESPACE_STD


585 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

592 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

593 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

599 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

602 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

603 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
__THROW
 ;

610 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

611 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

612 
__gnuc_va_li°
 
__¨g
)

618 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

619 
__gnuc_va_li°
 
__¨g
)

623 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

624 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

625 
__gnuc_va_li°
 
__¨g
)

626 
__THROW
 ;

633 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

634 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

640 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

643 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

644 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
__THROW
 ;

647 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

648 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

649 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

650 #ifde‡
__REDIRECT


654 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

655 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

656 
__isoc99_fwsˇnf
)

658 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

659 
__isoc99_wsˇnf
)

661 
	`__REDIRECT
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

662 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

663 
__isoc99_swsˇnf
)

664 
__THROW
 ;

666 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

667 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

669 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

670 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

671 
__THROW
;

672 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

673 
	#wsˇnf
 
__isoc99_wsˇnf


	)

674 
	#swsˇnf
 
__isoc99_swsˇnf


	)

678 
__END_NAMESPACE_STD


681 #ifde‡
__USE_ISOC99


682 
__BEGIN_NAMESPACE_C99


687 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

688 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

689 
__gnuc_va_li°
 
__¨g
)

695 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

696 
__gnuc_va_li°
 
__¨g
)

699 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

700 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

702 
__THROW
 ;

704 #i‡!
deföed
 
__USE_GNU
 \

705 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

706 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

707 #ifde‡
__REDIRECT


708 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

709 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

710 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

712 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

713 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

715 
	`__REDIRECT
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

716 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

717 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

718 
__THROW
 ;

720 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

721 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
);

723 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

726 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

728 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

729 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

730 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

734 
__END_NAMESPACE_C99


738 
__BEGIN_NAMESPACE_STD


743 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

744 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

750 
wöt_t
 
	`gëwch¨
 ();

757 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

758 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

764 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

772 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

773 
__FILE
 *
__ª°ri˘
 
__°ªam
);

779 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

780 
__FILE
 *
__ª°ri˘
 
__°ªam
);

787 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

788 
__END_NAMESPACE_STD


791 #ifde‡
__USE_GNU


799 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

800 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

808 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

816 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

826 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

835 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

836 
__FILE
 *
__ª°ri˘
 
__°ªam
);

844 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

845 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
__BEGIN_NAMESPACE_C99


853 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

854 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

855 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

856 
__END_NAMESPACE_C99


858 #ifde‡
__USE_GNU


859 
	~<xloˇÀ.h
>

863 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

864 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

865 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

866 
__loˇÀ_t
 
__loc
Ë
__THROW
;

875 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


876 
	#__√ed_iswxxx


	)

877 
	~<w˘y≥.h
>

881 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


882 
	~<bôs/wch¨2.h
>

885 #ifde‡
__LDBL_COMPAT


886 
	~<bôs/wch¨-ldbl.h
>

889 
__END_DECLS


897 #unde‡
__√ed_mb°©e_t


898 #unde‡
__√ed_wöt_t


	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

111 
	#EHWPOISON
 133

	)

	@/usr/include/asm/bitsperlong.h

1 #i‚de‡
__ASM_X86_BITSPERLONG_H


2 
	#__ASM_X86_BITSPERLONG_H


	)

4 #ifde‡
__x86_64__


5 
	#__BITS_PER_LONG
 64

	)

7 
	#__BITS_PER_LONG
 32

	)

10 
	~<asm-gíîic/bô•îl⁄g.h
>

	@/usr/include/asm/sockios.h

1 
	~<asm-gíîic/sockios.h
>

	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

64 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

65 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

68 
__exã∫_Æways_ölöe
 
wch¨_t
 *

69 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
))

71 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

73 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

74  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

75 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

77 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

78  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

79 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

81  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

82 
	}
}

85 #ifde‡
__USE_GNU


86 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

87 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

88 
size_t
 
__ns1
Ë
__THROW
;

89 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

90 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

91 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

92 
size_t
 
__n
), 
wmemp˝y
);

93 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

94 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

95 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

96 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

97 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

100 
__exã∫_Æways_ölöe
 
wch¨_t
 *

101 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

102 
size_t
 
__n
))

104 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

106 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

107  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

108 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

110 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

111  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

112 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

114  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

115 
	}
}

119 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

120 
size_t
 
__ns
Ë
__THROW
;

121 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

122 
size_t
 
__n
), 
wmem£t
);

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

124 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

125 
size_t
 
__ns
), 
__wmem£t_chk
)

126 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

129 
__exã∫_Æways_ölöe
 
wch¨_t
 *

130 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

132 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

134 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

135  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

137 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

138  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

139 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

141  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

142 
	}
}

145 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

146 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

147 
size_t
 
__n
Ë
__THROW
;

148 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

149 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

150 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

152 
__exã∫_Æways_ölöe
 
wch¨_t
 *

153 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

155 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

156  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

157  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

158 
	}
}

161 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

162 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

163 
size_t
 
__de°Àn
Ë
__THROW
;

164 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

165 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

168 
__exã∫_Æways_ölöe
 
wch¨_t
 *

169 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

171 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

172  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

173  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

174 
	}
}

177 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

178 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

179 
size_t
 
__de°Àn
Ë
__THROW
;

180 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

181 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

182 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

183 
size_t
 
__n
), 
wc¢˝y
);

184 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

185 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

186 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

187 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

188 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

191 
__exã∫_Æways_ölöe
 
wch¨_t
 *

192 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

193 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

224 
size_t
 
__n
))

226 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

228 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

229  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

230 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

231 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

232  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

233 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

235  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

236 
	}
}

239 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

240 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

241 
size_t
 
__de°Àn
Ë
__THROW
;

242 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

243 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

244 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

246 
__exã∫_Æways_ölöe
 
wch¨_t
 *

247 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

249 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

250  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

251  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

252 
	}
}

255 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

256 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

257 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

258 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

259 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

260 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

261 
size_t
 
__n
), 
wc¢ˇt
);

263 
__exã∫_Æways_ölöe
 
wch¨_t
 *

264 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

265 
size_t
 
__n
))

267 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

268  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

269 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

270  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

271 
	}
}

274 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

275 
__Êag
, 
size_t
 
__s_Àn
,

276 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

277 
__THROW
 ;

279 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

280 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

281 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

282 
sw¥ötf
);

284 #ifde‡
__va_¨g_∑ck


285 
__exã∫_Æways_ölöe
 

286 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

287 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

289 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

290  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

291 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

292 
__fmt
, 
	`__va_¨g_∑ck
 ());

293  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

294 
	}
}

295 #ñi‡!
deföed
 
__˝lu•lus


297 
	#sw¥ötf
(
s
, 
n
, ...) \

298 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

299 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

300 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

301 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

304 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

305 
__Êag
, 
size_t
 
__s_Àn
,

306 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

307 
__gnuc_va_li°
 
__¨g
)

308 
__THROW
 ;

310 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

311 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

312 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

313 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

315 
__exã∫_Æways_ölöe
 

316 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

317 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

319 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

320  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

321 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

322  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

323 
	}
}

326 #i‡
__USE_FORTIFY_LEVEL
 > 1

328 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

329 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

330 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

333 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

335 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

336 
__gnuc_va_li°
 
__≠
);

338 #ifde‡
__va_¨g_∑ck


339 
__exã∫_Æways_ölöe
 

340 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

342  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

343 
	}
}

345 
__exã∫_Æways_ölöe
 

346 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

348  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

349 
	`__va_¨g_∑ck
 ());

350 
	}
}

351 #ñi‡!
deföed
 
__˝lu•lus


352 
	#w¥ötf
(...) \

353 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

354 
	#fw¥ötf
(
°ªam
, ...) \

355 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

358 
__exã∫_Æways_ölöe
 

359 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

361  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

362 
	}
}

364 
__exã∫_Æways_ölöe
 

365 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

366 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

368  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

369 
	}
}

373 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

374 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

375 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

376 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

377 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

378 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

379 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

380 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

381 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

384 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

385 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

387 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

389 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

390  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

391 
__n
, 
__°ªam
);

393 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

394  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

395 
__n
, 
__°ªam
);

397  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

398 
	}
}

400 #ifde‡
__USE_GNU


401 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

402 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

403 
__wur
;

404 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

405 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

406 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

407 
__wur
;

408 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

409 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

410 
__FILE
 *
__ª°ri˘
 
__°ªam
),

411 
__fgëws_u∆ocked_chk
)

412 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

415 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

416 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

418 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

420 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

421  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

422 
__n
, 
__°ªam
);

424 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

425  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

426 
__n
, 
__°ªam
);

428  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

429 
	}
}

433 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

434 
mb°©e_t
 *
__ª°ri˘
 
__p
,

435 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

436 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

437 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

438 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

440 
__exã∫_Æways_ölöe
 
__wur
 
size_t


441 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

442 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

447 
	#__WCHAR_MB_LEN_MAX
 16

	)

448 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


451 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

452  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

453  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

454 
	}
}

457 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

458 
__c⁄°
 **
__ª°ri˘
 
__§c
,

459 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

460 
size_t
 
__d°Àn
Ë
__THROW
;

461 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

462 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

463 
__c⁄°
 **
__ª°ri˘
 
__§c
,

464 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

465 
mb§towcs
);

466 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

467 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

468 
__c⁄°
 **
__ª°ri˘
 
__§c
,

469 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

470 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

471 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

474 
__exã∫_Æways_ölöe
 
size_t


475 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

476 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

478 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

480 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

481  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

485  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

486 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

488  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

489 
	}
}

492 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

493 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

494 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

495 
size_t
 
__d°Àn
Ë
__THROW
;

496 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

497 (*
__ª°ri˘
 
__d°
,

498 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

499 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

500 
wc§tombs
);

501 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

502 (*
__ª°ri˘
 
__d°
,

503 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

504 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

505 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

506 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

508 
__exã∫_Æways_ölöe
 
size_t


509 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

510 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

512 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

514 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

515  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

517 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

518  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

520  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

521 
	}
}

524 #ifde‡
__USE_GNU


525 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

526 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

527 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

528 
size_t
 
__d°Àn
Ë
__THROW
;

529 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

530 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

531 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

532 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

533 
mb¢πowcs
);

534 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

535 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

536 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

537 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

538 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

539 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

542 
__exã∫_Æways_ölöe
 
size_t


543 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

544 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

546 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

548 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

549  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

553  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

554 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

556  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

557 
	}
}

560 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

561 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

562 
size_t
 
__nwc
, size_à
__Àn
,

563 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

564 
__THROW
;

565 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

566 (*
__ª°ri˘
 
__d°
,

567 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

568 
size_t
 
__nwc
, size_à
__Àn
,

569 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

570 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

571 (*
__ª°ri˘
 
__d°
,

572 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

573 
size_t
 
__nwc
, size_à
__Àn
,

574 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

575 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

576 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

578 
__exã∫_Æways_ölöe
 
size_t


579 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

580 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

582 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

584 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

585  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

589  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

590 
	`__bos
 (
__d°
));

592  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

593 
	}
}

	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@/usr/include/asm-generic/bitsperlong.h

1 #i‚de‡
__ASM_GENERIC_BITS_PER_LONG


2 
	#__ASM_GENERIC_BITS_PER_LONG


	)

11 #i‚de‡
__BITS_PER_LONG


12 
	#__BITS_PER_LONG
 32

	)

	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/asm-generic/sockios.h

1 #i‚de‡
__ASM_GENERIC_SOCKIOS_H


2 
	#__ASM_GENERIC_SOCKIOS_H


	)

5 
	#FIOSETOWN
 0x8901

	)

6 
	#SIOCSPGRP
 0x8902

	)

7 
	#FIOGETOWN
 0x8903

	)

8 
	#SIOCGPGRP
 0x8904

	)

9 
	#SIOCATMARK
 0x8905

	)

10 
	#SIOCGSTAMP
 0x8906

	)

11 
	#SIOCGSTAMPNS
 0x8907

	)

	@
1
.
1
/usr/include
199
4716
alg.c
alg.h
conf.c
conf.h
draw.c
event.c
event.h
ffmpeg.c
ffmpeg.h
jpegutils.c
jpegutils.h
mmx.h
motion.c
motion.h
netcam.c
netcam.h
netcam_ftp.c
netcam_ftp.h
netcam_jpeg.c
netcam_wget.c
netcam_wget.h
picture.c
picture.h
pwc-ioctl.h
rotate.c
rotate.h
track.c
track.h
video.c
video.h
video2.c
video_common.c
video_freebsd.c
video_freebsd.h
webcam.c
webcam.h
webhttpd.c
webhttpd.h
/usr/include/ansidecl.h
/usr/include/arpa/inet.h
/usr/include/assert.h
/usr/include/ctype.h
/usr/include/dirent.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/jerror.h
/usr/include/jpeglib.h
/usr/include/limits.h
/usr/include/linux/time.h
/usr/include/linux/types.h
/usr/include/linux/version.h
/usr/include/linux/videodev.h
/usr/include/linux/videodev2.h
/usr/include/math.h
/usr/include/netdb.h
/usr/include/netinet/in.h
/usr/include/pthread.h
/usr/include/regex.h
/usr/include/setjmp.h
/usr/include/signal.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/fcntl.h
/usr/include/sys/ioctl.h
/usr/include/sys/mman.h
/usr/include/sys/param.h
/usr/include/sys/socket.h
/usr/include/sys/stat.h
/usr/include/sys/time.h
/usr/include/sys/types.h
/usr/include/sys/utsname.h
/usr/include/sys/wait.h
/usr/include/syslog.h
/usr/include/termios.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/asm/types.h
/usr/include/bits/byteswap.h
/usr/include/bits/confname.h
/usr/include/bits/dirent.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/huge_val.h
/usr/include/bits/huge_valf.h
/usr/include/bits/huge_vall.h
/usr/include/bits/in.h
/usr/include/bits/inf.h
/usr/include/bits/ioctl-types.h
/usr/include/bits/ioctls.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathdef.h
/usr/include/bits/mathinline.h
/usr/include/bits/mman.h
/usr/include/bits/nan.h
/usr/include/bits/netdb.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/setjmp.h
/usr/include/bits/setjmp2.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/socket.h
/usr/include/bits/socket2.h
/usr/include/bits/stat.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/termios.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/utsname.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/jconfig.h
/usr/include/jmorecfg.h
/usr/include/libio.h
/usr/include/linux/ioctl.h
/usr/include/linux/limits.h
/usr/include/linux/param.h
/usr/include/linux/posix_types.h
/usr/include/rpc/netdb.h
/usr/include/sched.h
/usr/include/sys/resource.h
/usr/include/sys/select.h
/usr/include/sys/syslog.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ttydefaults.h
/usr/include/sys/ucontext.h
/usr/include/sys/uio.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/asm-generic/types.h
/usr/include/asm/ioctl.h
/usr/include/asm/ioctls.h
/usr/include/asm/param.h
/usr/include/asm/posix_types.h
/usr/include/asm/socket.h
/usr/include/bits/endian.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/local_lim.h
/usr/include/bits/resource.h
/usr/include/bits/sched.h
/usr/include/bits/select.h
/usr/include/bits/sockaddr.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/syslog-ldbl.h
/usr/include/bits/syslog-path.h
/usr/include/bits/syslog.h
/usr/include/bits/typesizes.h
/usr/include/bits/uio.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/linux/stddef.h
/usr/include/sys/cdefs.h
/usr/include/asm-generic/int-ll64.h
/usr/include/asm-generic/ioctl.h
/usr/include/asm-generic/ioctls.h
/usr/include/asm-generic/param.h
/usr/include/asm-generic/socket.h
/usr/include/asm/errno.h
/usr/include/bits/libc-lock.h
/usr/include/gconv.h
/usr/include/gnu/stubs-64.h
/usr/include/wchar.h
/usr/include/asm-generic/errno.h
/usr/include/asm/bitsperlong.h
/usr/include/asm/sockios.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/wctype.h
/usr/include/asm-generic/bitsperlong.h
/usr/include/asm-generic/errno-base.h
/usr/include/asm-generic/sockios.h
